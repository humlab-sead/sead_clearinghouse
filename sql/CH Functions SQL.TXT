

**CLEARING HOUSE sead_master_9_ceramics**

!Note!: Tbl_sample_descriptions wasn't marked in the metadata excel file as containing new data, which is why it was 
left out completely. This has been corrected, but a new XML file will have to be generated and loaded into CH. 



*Clearing House Functions SQL*

REVIEWS

**fn_clearinghouse_review_site_references_client_data(integer, integer)

--Adjust for new altered tbl_biblio fields. Changed 'author' field to 'authors' and added 'title'.

	Select
			LDB.local_db_id                     			As local_db_id,
			LDB.reference                               	As reference, 
			LDB.title				    					As title,
            LDB.public_db_id                            	As public_db_id,
			RDB.reference                               	As public_reference, 
   			RDB.title										As public_title,
			to_char(LDB.date_updated,'YYYY-MM-DD')			As date_updated,
			entity_type_id              					As entity_type_id
	From (
		Select 	s.source_id								As source_id,
				s.submission_id 						As submission_id,
				b.public_db_id							As public_db_id,
				b.biblio_id 							As biblio_id,
				sr.site_reference_id 					As local_db_id,
				s.site_id  	 							As site_id,
				b.authors || ' (' || b.year || ')' 		As reference,
        		b.title									As title,
				b.date_updated							As date_updated

		From 	clearing_house.view_sites s
				Join clearing_house.view_site_references sr
				  On sr.site_id = s.merged_db_id
				 And sr.submission_id In (0, $1)
				Join clearing_house.view_biblio b
				  On b.merged_db_id = sr.biblio_id
				 And b.submission_id In (0, $1)) As LDB 
	Left Join (
		Select 	b.biblio_id								As biblio_id,
				b.authors || ' (' || b.year || ')' 		As reference,
        		b.title									As title
		From 	public.tbl_biblio b) As RDB

	On RDB.biblio_id = LDB.public_db_id

	Where LDB.source_id = 1
	  And LDB.submission_id = $1
		  
**fn_clearinghouse_report_bibliographic_entries(integer)

--Adjust for new altered tbl_biblio fields. Changed 'author' to 'authors', and added title field. Also removed
--the fields no longer in the altered tbl_bilbio (e.g. publisher, collection).

	Select 
		LDB.local_db_id                           	As local_db_id,
		LDB.reference                              	As reference, 
		LDB.title									As title,  
		LDB.public_db_id                           	As public_db_id,
		RDB.reference                              	As public_reference, 
		RDB.title									As public_title,  
		to_char(LDB.date_updated,'YYYY-MM-DD')		As date_updated
		entity_type_id              				As entity_type_id

	From (
		Select	b.submission_id							As submission_id,
				b.source_id								As source_id,
				b.biblio_id								As local_db_id,
				b.public_db_id							As public_db_id,
				b.authors || ' (' || b.year || ')'		As reference, 					
				b.title									As title,
            	b.date_updated							As date_updated
				
		From clearing_house.view_biblio b) As LDB 

	Left Join (		
			Select	b.biblio_id								As biblio_id,
					b.authors || ' (' || b.year || ')'		As reference, 
					b.title									As title,
            		b.date_updated							As date_updated			
					
			From public.tbl_biblio b) As RDB

	On RDB.biblio_id = LDB.public_db_id	
  
	Where LDB.source_id = 1
	  And LDB.submission_id = 1
    Order by reference;



**Ceramic Values

--To create a function for the review of dataset ceramic values, first a view of the ceramic values have to be created (for both public and clearing house). Using the measured values one as a base,
the view down below is suggested for ceramic values. The only difference is this one contains ceramic lookup name and ceramic value. There are no prep methods, which is 
why they were left out.


*view_clearinghouse_dataset_ceramics_values*

CREATE OR REPLACE VIEW clearing_house.view_clearinghouse_dataset_ceramic_values AS
SELECT	d.submission_id,
		d.source_id,
    	d.local_db_id 			As local_dataset_id,
    	d.merged_db_id 			As merged_dataset_id,
    	d.public_db_id 			As public_dataset_id,
    	ps.sample_group_id,
    	ps.merged_db_id 		As physical_sample_id,
    	ps.local_db_id 			As local_physical_sample_id,
    	ps.public_db_id 		As public_physical_sample_id,
    	ps.sample_name,
    	m.method_id,
    	m.public_db_id 			As public_method_id,
    	m.method_name,
    	cl.name,
    	cv.measurement_value
FROM clearing_house.view_datasets d
     JOIN clearing_house.view_analysis_entities ae ON ae.dataset_id = d.merged_db_id AND (ae.submission_id = 0 OR ae.submission_id = d.submission_id)
     JOIN clearing_house.view_ceramics cv ON cv.analysis_entity_id = ae.merged_db_id AND (cv.submission_id = 0 OR cv.submission_id = d.submission_id)
     JOIN clearing_house.view_ceramics_lookup cl ON cl.ceramics_lookup_id = cv.ceramics_lookup_id AND (cl.submission_id = 0 OR cl.submission_id = d.submission_id)
     JOIN clearing_house.view_physical_samples ps ON ps.merged_db_id = ae.physical_sample_id AND (ps.submission_id = 0 OR ps.submission_id = d.submission_id)
     JOIN clearing_house.view_methods m ON m.merged_db_id = d.method_id AND (m.submission_id = 0 OR m.submission_id = d.submission_id)

ALTER TABLE clearing_house.view_clearinghouse_dataset_ceramic_values
    OWNER TO clearinghouse_worker;

GRANT ALL ON TABLE clearing_house.view_clearinghouse_dataset_ceramic_values TO clearinghouse_worker;
GRANT SELECT ON TABLE clearing_house.view_clearinghouse_dataset_ceramic_values TO mattias;


*fn_clearinghouse_review_ceramics_value(integer)*

--The only difference from the measured_values function is that this one uses the ceramic_values view and the addition of the lookup_name field. 


Select 
		LDB.physical_sample_id				            As local_db_id,
		LDB.sample_name									As sample_name,
		LDB.method_id									As method_id,
		LDB.method_name									As method_name,
		LDB.name										As lookup_name,
		LDB.measurement_value							As measurement_value,
		to_char(LDB.date_updated,'YYYY-MM-DD')			As date_updated,

		RDB.physical_sample_id				            As public_db_id,
		RDB.measurement_value							As public_measurement_value,
			
		entity_type_id									As entity_type_id

From	clearing_house.view_clearinghouse_dataset_ceramic_values LDB

Left Join 	clearing_house.view_dataset_ceramic_values RDB

On		RDB.dataset_id = LDB.public_dataset_id
And 	RDB.physical_sample_id = LDB.public_physical_sample_id
And 	RDB.method_id = LDB.public_method_id

Where LDB.source_id = 1
  And LDB.submission_id = $1

Order by LDB.physical_sample_id;



REPORTS

**fn_clearinghouse_report_relative_ages(integer)

--Adjust for new altered tbl_relative_dates where physical_sample_id has been swapped with analysis_entity_id (i.e. joining in tbl_analysis_entities). Also change the 'author' field to 'authors'
--for the reference part. Kept tbl_physical_samples in.

Note: SQL goes through but returns no results, need to check what goes wrong.

Select 
		
			LDB.local_db_id                             		As local_db_id,
			LDB.public_db_id                            		As public_db_id,
            LDB.analysis_entity_id								As analysis_entity_id,
            LDB.sample_name		                                As sample_name,
            LDB.abbreviation		                            As abbreviation,
            LDB.location_name		                            As location_name,
            LDB.uncertainty		                                As uncertainty,
            LDB.method_name		                                As method_name,
            LDB.C14_age_older		                            As C14_age_older,
            LDB.C14_age_younger		                            As C14_age_younger,
            LDB.CAL_age_older		                            As CAL_age_older,
            LDB.CAL_age_younger		                            As CAL_age_younger,
            LDB.relative_age_name		                        As relative_age_name,
            LDB.notes		                                 	As notes,
            LDB.reference		                                As reference,
			to_char(LDB.date_updated,'YYYY-MM-DD')				As date_updated,	
	
            RDB.analysis_entity_id								As public_analysis_entity_id,
            RDB.sample_name		                                As public_sample_name,
            RDB.abbreviation		                            As public_abbreviation,
            RDB.location_name		                            As public_location_name,
            RDB.uncertainty		                                As public_uncertainty,
            RDB.method_name		                                As public_method_name,
            RDB.C14_age_older		                            As public_C14_age_older,
            RDB.C14_age_younger		                            As public_C14_age_younger,
            RDB.CAL_age_older		                            As public_CAL_age_older,
            RDB.CAL_age_younger		                            As public_CAL_age_younger,
            RDB.relative_age_name		                        As public_relative_age_name,
            RDB.notes		                                 	As public_notes,
            RDB.reference		                                As public_reference,

            entity_type_id                             			As entity_type_id

From (                            

	Select  	ra.submission_id							As submission_id,
                ra.source_id								As source_id,
                ra.relative_age_id							As local_db_id,
                ra.public_db_id								As public_db_id,
				ae.analysis_entity_id						As analysis_entity_id,
                ps.sample_name                      		As sample_name,
                ''::character varying              			As abbreviation, /* NOTE! Missing in development schema */
                l.location_name								As location_name,
                du.uncertainty								As uncertainty,
                m.method_name								As method_name,
                ra.C14_age_older							As C14_age_older,
                ra.C14_age_younger							As C14_age_younger,
                ra.CAL_age_older							As CAL_age_older,
                ra.CAL_age_younger							As CAL_age_younger,
                ra.relative_age_name						As relative_age_name,
                ra.notes									As notes,
                b.authors || '(' || b.year::varchar || ')'	As reference,
                ra.date_updated								As date_updated

            From 	clearing_house.view_relative_dates rd
            		Join clearing_house.view_analysis_entities ae
              		  On ae.merged_db_id = rd.analysis_entity_id
             		 And ae.submission_id In (0, rd.submission_id)
            		Join clearing_house.view_physical_samples ps
              		  On ps.merged_db_id = ae.physical_sample_id
             		 And ps.submission_id In (0, ae.submission_id)
            		Join clearing_house.view_relative_ages ra
              		  On ra.merged_db_id = rd.relative_age_id
             		 And ra.submission_id In (0, rd.submission_id)
            		Join clearing_house.view_methods m
              		  On m.merged_db_id = rd.method_id
             		 And m.submission_id In (0, rd.submission_id)
            		Join clearing_house.view_dating_uncertainty du
              		  On du.merged_db_id = rd.dating_uncertainty_id
             		 And du.submission_id In (0, rd.submission_id)
            		Join clearing_house.view_relative_age_types rat
              		  On rat.merged_db_id = ra.relative_age_type_id
             		 And rat.submission_id In (0, rd.submission_id)
            		Join clearing_house.view_locations l
              		  On l.merged_db_id = ra.location_id
             		 And l.submission_id In (0, rd.submission_id)
            		Join clearing_house.view_relative_age_refs raf
              		  On raf.relative_age_id = ra.merged_db_id
             		 And raf.submission_id In (0, rd.submission_id)
            		Join clearing_house.view_biblio b
              		  On b.merged_db_id = raf.biblio_id
             		 And b.submission_id In (0, rd.submission_id)) As LDB 
Left Join (
		
           Select 		ra.relative_age_id							As relative_age_id,
						ae.analysis_entity_id						As analysis_entity_id,
						ps.sample_name								As sample_name,
                    	ra.Abbreviation        						As abbreviation,
                    	l.location_name								As location_name,
                    	du.uncertainty								As uncertainty,
                    	m.method_name								As method_name,
                    	ra.C14_age_older							As C14_age_older,
                    	ra.C14_age_younger							As C14_age_younger,
                    	ra.CAL_age_older							As CAL_age_older,
                    	ra.CAL_age_younger							As CAL_age_younger,
                    	ra.relative_age_name						As relative_age_name,
                    	ra.notes									As notes,
                    	b.authors || '(' || b.year::varchar || ')'	As reference
            
            From 	public.tbl_relative_dates rd
            		Join public.tbl_analysis_entities ae
              		  On ae.analysis_entity_id  = rd.analysis_entity_id
            		Join public.tbl_physical_samples ps
              		  On ps.physical_sample_id = ae.physical_sample_id
            		Join public.tbl_relative_ages ra
              		  On ra.relative_age_id = rd.relative_age_id
            		Join public.tbl_methods m
              		  On m.method_id = rd.method_id
            		Join public.tbl_dating_uncertainty du
              		  On du.dating_uncertainty_id = rd.dating_uncertainty_id
            		Join public.tbl_relative_age_types rat
              		  On rat.relative_age_type_id = ra.relative_age_type_id
           		Join public.tbl_locations l
              		  On l.location_id = ra.location_id
            		Join public.tbl_relative_age_refs raf
             		  On raf.relative_age_id = ra.relative_age_id
            		Join public.tbl_biblio b
              		  On b.biblio_id = raf.biblio_id) As RDB
					  
On RDB.relative_age_id = LDB.public_db_id
		
Where LDB.source_id = 1
  And LDB.submission_id = $-1
	
Order By LDB.sample_name;


*fn_clearinghouse_report_sample_group_descriptions

CREATE OR REPLACE FUNCTION clearing_house.fn_clearinghouse_report_sample_group_descriptions(
	integer)
RETURNS TABLE(local_db_id integer, sample_group_id integer, sample_group_name character varying, type_name character varying, description text, date_updated text, public_db_id integer, public_sample_group_id integer, public_sample_group_name character varying, public_type_name character varying public_description text, entity_type_id integer) 
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE 
    ROWS 1000
AS $BODY$

Declare
    entity_type_id int;

Begin

	entity_type_id := clearing_house.fn_get_entity_type_for('tbl_sample_group_descriptions');
	
	Return Query
		Select	LDB.local_db_id								As local_db_id,
				LDB.sample_group_id							As sample_group_id,
                LDB.sample_group_name						As sample_group_name,
                LDB.type_name								As type_name,
                LDB.group_description						As description,
				to_char(LDB.date_updated,'YYYY-MM-DD')		As date_updated,

				LDB.public_db_id							As public_db_id,

				RDB.sample_group_id							As public_sample_group_id,
				RDB.sample_group_name						As public_sample_group_name,
				RDB.type_name								As public_type_name,
				RDB.group_description						As public_description,

				entity_type_id								As entity_type_id

		From (	
		
				Select	sgd.submission_id			As submission_id,
              			sgd.local_db_id				As local_db_id,
              			sgd.public_db_id			As public_db_id,
              			sgd.source_id				As source_id,
              			sgd.sample_group_id			As sample_group_id,
              			sg.sample_group_name		As sample_group_name,
						sgdt.type_name				As type_name,
						sgd.group_description		As group_description,
              			sgd.date_updated			As date_updated
				

			From 	clearing_house.view_sample_group_descriptions sgd
					Join clearing_house.view_sample_group_description_types sgdt
					  On sgdt.merged_db_id = sgd.sample_group_description_type_id
					 And sgdt.submission_id In (0, sgdt.submission_id)
        			Join clearing_house.view_sample_groups sg
       	  	  	  	  On sg.merged_db_id = sgd.sample_group_id
         	 	 	 And sg.submission_id In (0, sg.submission_id)) As LDB

		Left Join (
			
			Select 	sg.sample_group_id					As sample_group_id, 
					sgd.sample_group_description_id		As sample_group_description_id,
					sg.sample_group_name 				As sample_group_name,
					sgdt.type_name						As type_name,
					sgd.group_description				As group_description

			From 	public.tbl_sample_groups sg
					Join public.tbl_sample_group_descriptions sgd
					  On sgd.sample_group_id = sg.sample_group_id
					Join public.tbl_sample_group_description_types sgdt
					  On sgdt.sample_group_description_type_id = sgd.sample_group_description_type_id) as RDB
					  
		On RDB.sample_group_description_id = LDB.public_db_id
		
		Where LDB.source_id = 1
		  And LDB.submission_id = $1

		Order by sample_group_id;

End 
$BODY$;

ALTER FUNCTION clearing_house.fn_clearinghouse_report_sample_group_descriptions(integer)
    OWNER TO clearinghouse_worker;



*fn_clearinghouse_report_sample_descriptions*

CREATE OR REPLACE FUNCTION clearing_house.fn_clearinghouse_report_sample_descriptions(
	integer)
RETURNS TABLE(local_db_id integer, physical_sample_id integer, sample_name character varying, type_name character varying, description text, date_updated text, public_db_id integer,  public_physical_sample_id integer, public_sample_name character varying, public_type_name character varying, public_description text, entity_type_id integer) 
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE 
    ROWS 1000
AS $BODY$

Declare
    entity_type_id int;

Begin

	entity_type_id := clearing_house.fn_get_entity_type_for('tbl_sample_descriptions');

	Return Query
		Select	
				LDB.local_db_id						                As local_db_id,
				LDB.physical_sample_id						        As physical_sample_id,
        		LDB.sample_name										As sample_name,
        		LDB.type_name										As type_name,
        		LDB.description										As description,
				to_char(LDB.date_updated,'YYYY-MM-DD')				As date_updated,

				LDB.public_db_id									As public_db_id,

				RDB.physical_sample_id						        As public_physical_sample_id,
				RDB.sample_name										As public_sample_name,
				RDB.type_name										As public_type_name,
				RDB.description										As public_description,

				entity_type_id						                As entity_type_id
		From (
			Select	sd.submission_id							As submission_id,
					sd.local_db_id								As local_db_id,
					sd.public_db_id								As public_db_id,
					sd.source_id								As source_id,
					sd.physical_sample_id						As physical_sample_id,
					ps.sample_name								As sample_name,
					sdt.type_name								As type_name,
					sd.description								As description,
            		sd.date_updated								As date_updated

			From 	clearing_house.view_sample_descriptions sd
					Join clearing_house.view_sample_description_types sdt
					  On sdt.merged_db_id = sd.sample_description_type_id
					 And sdt.submission_id In (0, sdt.submission_id)
         			Join clearing_house.view_physical_samples ps
       	  	  		  On ps.merged_db_id = sd.physical_sample_id
         	 		 And ps.submission_id In (0, ps.submission_id)) As LDB
		Left Join (
			Select 	sd.sample_description_id					As sample_description_id,
					sd.physical_sample_id						As physical_sample_id,			 
					ps.sample_name 								As sample_name,
					sdt.type_name 								As type_name,
					sd.description								As description

			From 	public.tbl_physical_samples ps
					Join public.tbl_sample_descriptions sd
					  On sd.physical_sample_id = ps.physical_sample_id
					Join public.tbl_sample_description_types sdt
					  On sdt.sample_description_type_id = sd.sample_description_type_id) As RDB

		   	  On 	RDB.sample_description_id = LDB.public_db_id

		Where	LDB.source_id = 1
		  And 	LDB.submission_id = $1

		Order by LDB.physical_sample_id;
End 
$BODY$;

ALTER FUNCTION clearing_house.fn_clearinghouse_report_sample_descriptions(integer)
    OWNER TO clearinghouse_worker;
		  

*fn_clearinghouse_report_sample_dimensions(integer)

sample dimensions******

Select	LDB.local_db_id						            As local_db_id,
		LDB.physical_sample_id						    As physical_sample_id,
        LDB.sample_name									As sample_name,
        LDB.dimension_name								As dimension_name,
        LDB.dimension_value								As dimension_value,
		to_char(LDB.date_updated,'YYYY-MM-DD')			As date_updated,

		LDB.public_db_id								As public_db_id,
		
		RDB.sample_dimension_id							As public_sample_dimension_id,
		RDB.physical_sample_id						    As public_physical_sample_id,
		RDB.sample_name									As public_sample_name,
        RDB.dimension_name								As public_dimension_name,
		RDB.dimension_value								As public_dimension_value,

		entity_type_id						            As entity_type_id
From (

	Select  sdm.submission_id					As submission_id,
			sdm.source_id						As source_id,		
			sdm.local_db_id						As local_db_id,
			sdm.public_db_id					As public_db_id,
			sdm.physical_sample_id				As physical_sample_id,
			ps.sample_name						As sample_name,
			dm.dimension_name					As dimension_name,
			sdm.dimension_value					As dimension_value,
			sdm.date_updated					As date_updated
			
	From 	clearing_house.view_sample_dimensions sdm
			Join clearing_house.view_dimensions dm
			  On dm.merged_db_id = sdm.dimension_id
			 And dm.submission_id In (0, dm.submission_id)
         	Join clearing_house.view_physical_samples ps
       	  	  On ps.merged_db_id = sdm.physical_sample_id
         	 And ps.submission_id In (0, ps.submission_id)) As LDB
Left Join (
		
	Select 	sdm.sample_dimension_id				As sample_dimension_id,
    		sdm.physical_sample_id				As physical_sample_id,
			ps.sample_name						As sample_name,
			dm.dimension_name					As dimension_name,
			sdm.dimension_value					As dimension_value
			
	From 	public.tbl_sample_descriptions sd
			Join public.tbl_physical_samples ps
			  On sd.physical_sample_id = ps.physical_sample_id
			Join public.tbl_sample_dimensions sdm
			  On sdm.physical_sample_id = ps.physical_sample_id
			Join public.tbl_dimensions dm
			  On dm.dimension_id = sdm.dimension_id) As RDB
		  
	On RDB.sample_dimension_id = LDB.public_db_id

	Where 	LDB.source_id = 1
	  And  	LDB.submission_id = 1

	Order by LDB.physical_sample_id;

	
	
sample group dimensions***

Select	LDB.local_db_id						            As local_db_id,
		LDB.local_db_id						            As dimension_id,
		LDB.sample_group_id					           	As sample_group_id,
        LDB.sample_group_name							As sample_group_name,
        LDB.dimension_name								As dimension_name,
        LDB.dimension_value								As dimension_value,
		to_char(LDB.date_updated,'YYYY-MM-DD')			As date_updated,

		RDB.sample_group_id						        As public_sample_group_id,
		RDB.sample_group_name							As public_sample_group_name,
        RDB.dimension_name								As dimension_name,
		RDB.dimension_value								As dimension_value,
		entity_type_id						            As entity_type_id

From (

	Select	sgdm.submission_id				As submission_id,
			sgdm.source_id					As source_id,
			sgdm.local_db_id				As local_db_id,
			sgdm.public_db_id				As public_db_id,
			sgdm.sample_group_id			As sample_group_id,
			sg.sample_group_name			As sample_group_name,
			dm.dimension_name				As dimension_name,
			sgdm.dimension_value			As dimension_value,
    		sgdm.date_updated				As date_updated
		


	From	clearing_house.view_sample_group_dimensions sgdm
			Join clearing_house.view_dimensions dm
			  On dm.merged_db_id = sgdm.dimension_id
			 And dm.submission_id In (0, dm.submission_id)
         	Join clearing_house.view_sample_groups sg
       	  	  On sg.merged_db_id = sgdm.sample_group_id
         	 And sg.submission_id In (0, sg.submission_id)) As LDB
        

Left Join (

	Select 	sgdm.sample_group_id				As sample_group_id,
			sg.sample_group_name				As sample_group_name,
			dm.dimension_name					As dimension_name,
			sgdm.dimension_value				As dimension_value
			

	From 	public.tbl_sample_group_dimensions as sgdm
			Join public.tbl_dimensions dm
			  On sgdm.dimension_id = dm.dimension_id
			Join public.tbl_sample_groups sg
			  On sg.sample_group_id = sgdm.sample_group_id) as RDB
	
	n RDB.sample_group_id = LDB.public_db_id
	
	Where LDB.source_id = 1
	  And LDB.submission_id = $1
	
	Order by LDB.sample_group_id;


feature_types****

Select 
		LDB.local_db_id                       	As local_db_id,
		LDB.type_name                           As type_name,
		LDB.description		                    As description,      
		LDB.public_db_id                        As public_db_id,
		to_char(LDB.date_updated,'YYYY-MM-DD')	As date_updated,

		RDB.type_name                           As type_name,
		RDB.description		                    As description,

		entity_type_id                          As entity_type_id

From (                            

	Select  	ft.submission_id                As submission_id,
                ft.source_id                    As source_id,
                ft.local_db_id					As local_db_id,
                ft.public_db_id					As public_db_id,
				ft.feature_type_name            As type_name,
				ft.feature_type_description		As description,
				ft.date_updated					As date_updated
	From clearing_house.view_feature_types ft) As LDB 
Left Join (
		
	Select  ft.feature_type_id                      As feature_type_id,
			ft.feature_type_name                    As type_name,
			ft.feature_type_description		        As description
	From 	tbl_feature_types ft) As RDB

	  On RDB.feature_type_id = LDB.public_db_id

Where LDB.source_id = 1
  And LDB.submission_id = $1

Order By LDB.type_name;




