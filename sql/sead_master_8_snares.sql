--
-- PostgreSQL database dump
--

-- Dumped from database version 9.4.13
-- Dumped by pg_dump version 10.0

-- Started on 2017-10-13 21:36:21

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- TOC entry 9 (class 2615 OID 16389)
-- Name: clearing_house; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA clearing_house;


--
-- TOC entry 10 (class 2615 OID 16390)
-- Name: metainformation; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA metainformation;


--
-- TOC entry 1 (class 3079 OID 11861)
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- TOC entry 6999 (class 0 OID 0)
-- Dependencies: 1
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: -
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- TOC entry 2 (class 3079 OID 71164)
-- Name: tablefunc; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS tablefunc WITH SCHEMA public;


--
-- TOC entry 7000 (class 0 OID 0)
-- Dependencies: 2
-- Name: EXTENSION tablefunc; Type: COMMENT; Schema: -; Owner: -
--

COMMENT ON EXTENSION tablefunc IS 'functions that manipulate whole tables, including crosstab';


SET search_path = public, pg_catalog;

--
-- TOC entry 1605 (class 1247 OID 16393)
-- Name: breakpoint; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE breakpoint AS (
	func oid,
	linenumber integer,
	targetname text
);


--
-- TOC entry 1608 (class 1247 OID 16396)
-- Name: dblink_pkey_results; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE dblink_pkey_results AS (
	"position" integer,
	colname text
);


--
-- TOC entry 1611 (class 1247 OID 16399)
-- Name: frame; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE frame AS (
	level integer,
	targetname text,
	func oid,
	linenumber integer,
	args text
);


--
-- TOC entry 1614 (class 1247 OID 16402)
-- Name: proxyinfo; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE proxyinfo AS (
	serverversionstr text,
	serverversionnum integer,
	proxyapiver integer,
	serverprocessid integer
);


--
-- TOC entry 1617 (class 1247 OID 16405)
-- Name: relative_age; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE relative_age AS (
	relative_age_id integer,
	relative_age_type_id integer,
	relative_age_name character varying(50),
	description text,
	c14_age_older numeric(20,5),
	c14_age_younger numeric(20,5),
	cal_age_older numeric(20,5),
	cal_age_younger numeric(20,5),
	notes text,
	date_updated timestamp with time zone,
	location_id integer,
	"Abbreviation" character varying
);


--
-- TOC entry 1620 (class 1247 OID 16408)
-- Name: relative_date; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE relative_date AS (
	relative_date_id integer,
	relative_age_id integer,
	physical_sample_id integer,
	method_id integer,
	notes text,
	date_updated timestamp with time zone,
	dating_uncertainty_id integer
);


--
-- TOC entry 1623 (class 1247 OID 16411)
-- Name: siteor; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE siteor AS (
	site_other_records_id integer,
	site_id integer,
	biblio_id integer,
	record_type_id integer,
	description text
);


--
-- TOC entry 1626 (class 1247 OID 16414)
-- Name: targetinfo; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE targetinfo AS (
	target oid,
	schema oid,
	nargs integer,
	argtypes oidvector,
	targetname name,
	argmodes character(1)[],
	argnames text[],
	targetlang oid,
	fqname text,
	returnsset boolean,
	returntype oid
);


--
-- TOC entry 1629 (class 1247 OID 16417)
-- Name: tbiblio; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE tbiblio AS (
	reference character varying(60),
	author character varying(255),
	title text,
	notes text
);


--
-- TOC entry 1632 (class 1247 OID 16420)
-- Name: tbiology; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE tbiology AS (
	code numeric(18,10),
	ref character varying(60),
	data text
);


--
-- TOC entry 1635 (class 1247 OID 16423)
-- Name: tcountsheet; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE tcountsheet AS (
	countsheetcode character varying(10),
	countsheetname character varying(100),
	sitecode character varying(10),
	sheetcontext character varying(25),
	sheettype character varying(25)
);


--
-- TOC entry 1638 (class 1247 OID 16426)
-- Name: tdatescalendar; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE tdatescalendar AS (
	samplecode character varying(10),
	uncertainty character varying(10),
	calendarcode character varying(10),
	calendardate character varying(50),
	bcadbp character varying(10),
	datingmethod character varying(50),
	notes text
);


--
-- TOC entry 1641 (class 1247 OID 16429)
-- Name: tdatesmethod; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE tdatesmethod AS (
	abbrev character varying(50),
	method character varying(50),
	datesmethodtype character varying(50),
	sortorder character varying(50)
);


--
-- TOC entry 1644 (class 1247 OID 16432)
-- Name: tdatesperiod; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE tdatesperiod AS (
	perioddatecode character varying(10),
	samplecode character varying(10),
	uncertainty character varying(10),
	periodcode character varying(20),
	datingmethod character varying(50),
	notes text
);


--
-- TOC entry 1647 (class 1247 OID 16435)
-- Name: tdatesradio; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE tdatesradio AS (
	datecode character varying(10),
	samplecode character varying(10),
	labnr character varying(20),
	uncertainty character varying(10),
	perioddate character varying(50),
	ageerrororpluserror character varying(50),
	ageerrorminus character varying(50),
	datingmethod character varying(15),
	materialtype character varying(50),
	labid character varying(10),
	notes text
);


--
-- TOC entry 1650 (class 1247 OID 16438)
-- Name: tdistrib; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE tdistrib AS (
	code numeric(18,10),
	ref character varying(60),
	data text
);


--
-- TOC entry 1653 (class 1247 OID 16441)
-- Name: tfossil; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE tfossil AS (
	fossilbugscode character varying(10),
	code numeric(18,10),
	samplecode character varying(10),
	abundance integer
);


--
-- TOC entry 1656 (class 1247 OID 16444)
-- Name: tgenus; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE tgenus AS (
	bugsfamily character varying(50),
	bugsgenus character varying(50)
);


--
-- TOC entry 1659 (class 1247 OID 16447)
-- Name: tindex; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE tindex AS (
	bugscode numeric(18,10),
	bugsfamily character varying(50),
	bugsgenus character varying(50),
	bugsspecies character varying(35),
	bugsauthority character varying(35)
);


--
-- TOC entry 1662 (class 1247 OID 16450)
-- Name: tkey; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE tkey AS (
	code numeric(18,10),
	ref character varying(60),
	data text
);


--
-- TOC entry 1665 (class 1247 OID 16453)
-- Name: tlab; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE tlab AS (
	labid character varying(10),
	labname character varying(100),
	address character varying(255),
	country character varying(30),
	telephone character varying(50),
	website text,
	email text
);


--
-- TOC entry 1668 (class 1247 OID 16456)
-- Name: tmcrdata; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE tmcrdata AS (
	field1 character varying(255),
	field2 character varying(255),
	field3 character varying(255),
	field4 character varying(255),
	field5 character varying(255),
	field6 character varying(255),
	field7 character varying(255),
	field8 character varying(255),
	field9 character varying(255),
	field10 character varying(255),
	field11 character varying(255),
	field12 character varying(255),
	field13 character varying(255),
	field14 character varying(255),
	field15 character varying(255),
	field16 character varying(255),
	field17 character varying(255),
	field18 character varying(255),
	field19 character varying(255),
	field20 character varying(255),
	field21 character varying(255),
	field22 character varying(255),
	field23 character varying(255),
	field24 character varying(255),
	field25 character varying(255),
	field26 character varying(255),
	field27 character varying(255),
	field28 character varying(255),
	field29 character varying(255),
	field30 character varying(255),
	field31 character varying(255),
	field32 character varying(255),
	field33 character varying(255),
	field34 character varying(255),
	field35 character varying(255),
	field36 character varying(255),
	field37 character varying(255),
	field38 character varying(255),
	field39 character varying(255),
	field40 character varying(255),
	field41 character varying(255),
	field42 character varying(255),
	field43 character varying(255),
	field44 character varying(255),
	field45 character varying(255),
	field46 character varying(255),
	field47 character varying(255),
	field48 character varying(255),
	field49 character varying(255),
	field50 character varying(255),
	field51 character varying(255),
	field52 character varying(255),
	field53 character varying(255),
	field54 character varying(255),
	field55 character varying(255),
	field56 character varying(255),
	field57 character varying(255),
	field58 character varying(255),
	field59 character varying(255),
	field60 character varying(255),
	mcrrow smallint,
	code numeric(18,10)
);


--
-- TOC entry 1671 (class 1247 OID 16459)
-- Name: tmcrname; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE tmcrname AS (
	mcrnametrim character varying(80),
	comparestatus character varying(255),
	code numeric(18,10),
	tempcode numeric(18,10),
	mcrnumber smallint,
	mcrname character varying(200)
);


--
-- TOC entry 1674 (class 1247 OID 16462)
-- Name: tmcrsummarydata; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE tmcrsummarydata AS (
	code numeric(18,10),
	tmaxlo smallint,
	tmaxhi smallint,
	tminlo smallint,
	tminhi smallint,
	trangelo smallint,
	trangehi smallint,
	cogmidtmax smallint,
	cogmidtrange smallint
);


--
-- TOC entry 1677 (class 1247 OID 16465)
-- Name: tmethodcheck; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE tmethodcheck AS (
	dm character varying(50),
	ytype character varying(13)
);


--
-- TOC entry 1680 (class 1247 OID 16468)
-- Name: tperiod; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE tperiod AS (
	periodcode character varying(20),
	periodname character varying(28),
	periodtype character varying(50),
	perioddesc character varying(255),
	periodref character varying(50),
	periodgeog character varying(100),
	periodbegin numeric(20,5),
	beginbcad character varying(4),
	periodend numeric(20,5),
	endbcad character varying(4),
	yearstype character varying(13)
);


--
-- TOC entry 1683 (class 1247 OID 16471)
-- Name: trdb; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE trdb AS (
	code numeric(18,10),
	countrycode character varying(50),
	rdbcode integer
);


--
-- TOC entry 1686 (class 1247 OID 16474)
-- Name: trdbcode; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE trdbcode AS (
	rdbcode integer,
	category character varying(4),
	rdbdef character varying(200),
	rdbsyscode integer
);


--
-- TOC entry 1689 (class 1247 OID 16477)
-- Name: trdbsystem; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE trdbsystem AS (
	rdbsyscode integer,
	rdbsys character varying(10),
	rdbversion character varying(10),
	rdbsysdate integer,
	rdbfirstpub smallint,
	bugsref character varying(60),
	countrycode character varying(50)
);


--
-- TOC entry 1692 (class 1247 OID 16480)
-- Name: tsample; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE tsample AS (
	samplecode character varying(10),
	sitecode character varying(10),
	x character varying(50),
	y character varying(50),
	zordepthtop numeric(18,10),
	zordepthbot numeric(18,10),
	refnrcontext character varying(50),
	countsheetcode character varying(10)
);


--
-- TOC entry 1695 (class 1247 OID 16483)
-- Name: tsite; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE tsite AS (
	sitecode character varying(10),
	sitename character varying(50),
	region character varying(40),
	country character varying(40),
	ngr character varying(10),
	latdd numeric(18,10),
	longdd numeric(18,10),
	alt numeric(18,10),
	idby character varying(255),
	interp character varying(255),
	specimens character varying(255)
);


--
-- TOC entry 1698 (class 1247 OID 16486)
-- Name: tsiteop; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE tsiteop AS (
	otherproxyid integer,
	sitecode character varying(10),
	haspollen character(1),
	hasplantmacro character(1),
	hasdiatoms character(1),
	haschironomids character(1),
	hassoilchemistry character(1),
	hasisotopes character(1),
	hasanimalbones character(1),
	hasarchaeology character(1),
	hasmolluscs character(1)
);


--
-- TOC entry 1701 (class 1247 OID 16489)
-- Name: tsiteref; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE tsiteref AS (
	sitecode character varying(10),
	bugsref character varying(60)
);


--
-- TOC entry 1704 (class 1247 OID 16492)
-- Name: tspeciesassociation; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE tspeciesassociation AS (
	speciesassociationid integer,
	code numeric(18,10),
	associatedspeciescode numeric(18,10),
	associatedtype character varying(50),
	bugsref character varying(60)
);


--
-- TOC entry 1707 (class 1247 OID 16495)
-- Name: ttaxo; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE ttaxo AS (
	code numeric(18,10),
	ref character varying(60),
	data text
);


--
-- TOC entry 1710 (class 1247 OID 16498)
-- Name: var; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE var AS (
	name text,
	varclass character(1),
	linenumber integer,
	isunique boolean,
	isconst boolean,
	isnotnull boolean,
	dtype oid,
	value text
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 960 (class 1255 OID 16499)
-- Name: fn_add_new_public_db_columns(integer, character varying); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_add_new_public_db_columns(integer, character varying) RETURNS void
    LANGUAGE plpgsql
    AS $_$

	Declare xml_columns character varying(255)[];
	Declare schema_columns character varying(255)[];
	Declare sql text;
	Declare x RECORD;
	
Begin

	xml_columns := clearing_house.fn_get_submission_table_column_names($1, $2);

	If array_length(xml_columns, 1) = 0 Then
		Raise Exception 'Fatal error. Table % has unknown fields.', $2;
		Return;
	End If;
	
	If Not clearing_house.fn_table_exists($2) Then
	
		sql := 'Create Table clearing_house.' || $2 || ' (
		
			submission_id int not null,
			source_id int not null,
			
			local_db_id int not null,
			public_db_id int null,

			Constraint pk_' || $2 || '_' || xml_columns[1] || ' Primary Key (submission_id, ' || xml_columns[1] || ')
			
		) ';

		Raise Notice '%', sql;
--		Execute sql;
		
	End If;

	For x In (
		Select t.table_name_underscored, c.column_name_underscored, c.data_type
		From clearing_house.tbl_clearinghouse_submission_tables t
		Join clearing_house.tbl_clearinghouse_submission_xml_content_columns c
		  On c.table_id = t.table_id
		Left Join INFORMATION_SCHEMA.columns ic
		  On ic.table_schema = 'clearing_house'
		 And ic.table_name = t.table_name_underscored
		 And ic.column_name = c.column_name_underscored
		Where c.submission_id = $1
		  And t.table_name_underscored = $2
		  And c.column_name_underscored <> 'cloned_id'
		  And ic.table_name Is Null
	) Loop

		sql := 'Alter Table clearing_house.' || $2 || ' Add Column ' || x.column_name_underscored || ' ' || clearing_house.fn_java_type_to_PostgreSQL(x.data_type) || ' null;';

		Execute sql;

		Raise Notice 'Added new column: % % % [%]', x.table_name_underscored,  x.column_name_underscored , clearing_house.fn_java_type_to_PostgreSQL(x.data_type), sql;

	End Loop;
	
End $_$;


--
-- TOC entry 961 (class 1255 OID 16500)
-- Name: fn_clearinghouse_info_references(); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_clearinghouse_info_references() RETURNS TABLE(info_reference_id integer, info_reference_type character varying, display_name character varying, href character varying)
    LANGUAGE plpgsql
    AS $$
Begin
	Return Query
		Select x.info_reference_id, x.info_reference_type, x.display_name, x.href
        From clearing_house.tbl_clearinghouse_info_references x
        Order By 1;
		
End $$;


--
-- TOC entry 962 (class 1255 OID 16501)
-- Name: fn_clearinghouse_latest_accepted_sites(); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_clearinghouse_latest_accepted_sites() RETURNS TABLE(last_updated_sites text)
    LANGUAGE plpgsql
    AS $$
Begin
	Return Query
		Select site
		From (
			Select Distinct s.site_name || ', ' || d.dataset_name || ', ' || m.method_name as site, d.date_updated
			From public.tbl_datasets d
			Join public.tbl_analysis_entities ae
			  On ae.dataset_id = d.dataset_id
			Join public.tbl_physical_samples ps
			  On ps.physical_sample_id = ae.physical_sample_id
			Join public.tbl_sample_groups sg
			  On sg.sample_group_id = ps.sample_group_id
			Join public.tbl_sites s
			  On s.site_id = sg.site_id
			Join public.tbl_methods m
			  On m.method_id = d.method_id
			Order By d.date_updated Desc
			Limit 10
		) as x;
		
End $$;


--
-- TOC entry 963 (class 1255 OID 16502)
-- Name: fn_clearinghouse_report_bibliographic_entries(integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_clearinghouse_report_bibliographic_entries(integer) RETURNS TABLE(local_db_id integer, reference text, collection character varying, publisher character varying, publisher_place character varying, public_db_id integer, public_reference text, public_collection character varying, public_publisher character varying, public_publisher_place character varying, date_updated text, entity_type_id integer)
    LANGUAGE plpgsql
    AS $_$

Declare
    entity_type_id int;

Begin

    entity_type_id := clearing_house.fn_get_entity_type_for('tbl_biblio');

	Return Query

		Select 
			LDB.local_db_id                            	As local_db_id,
			LDB.reference                               As reference, 
			LDB.collection                              As collection, 
			LDB.publisher                               As publisher, 
			LDB.publisher_place                         As publisher_place, 

			LDB.public_db_id                            As public_db_id,
			RDB.reference                               As public_reference, 
			RDB.collection                              As public_collection, 
			RDB.publisher                               As public_publisher, 
			RDB.publisher_place                         As public_publisher_place, 

			to_char(LDB.date_updated,'YYYY-MM-DD')		As date_updated,
			entity_type_id              				As entity_type_id
		From (
		
			Select	b.submission_id																			as submission_id,
					b.source_id																				as source_id,
					b.biblio_id																				as local_db_id,
					b.public_db_id																			as public_db_id,
					b.author || ' (' || b.year || ')'														as reference, 
					Coalesce(c.collection_or_journal_abbrev, c.collection_title_or_journal_name, '')		as collection,
					p.publisher_name 																		as publisher,
					p.place_of_publishing_house																as publisher_place,
					b.date_updated																			as date_updated
			From clearing_house.view_biblio b
			Join clearing_house.view_collections_or_journals c
			  On c.collection_or_journal_id = b.collection_or_journal_id
			 And c.submission_id In (0, b.submission_id)
			Join clearing_house.view_publishers p
			  On p.submission_id In (0, b.submission_id)
			 And p.publisher_id = c.publisher_id
		) As LDB Left Join (
			Select	b.biblio_id																				as biblio_id,
					b.author || ' (' || b.year || ')'														as reference, 
					Coalesce(c.collection_or_journal_abbrev, c.collection_title_or_journal_name, '')		as collection,
					p.publisher_name 																		as publisher,
					p.place_of_publishing_house																as publisher_place,
					b.date_updated																			as date_updated
			From public.tbl_biblio b
			Join public.tbl_collections_or_journals c
			  On c.collection_or_journal_id = b.collection_or_journal_id
			Join public.tbl_publishers p
			  On p.publisher_id = c.publisher_id
		) As RDB
		  On RDB.biblio_id = LDB.public_db_id
		Where LDB.source_id = 1
		  And LDB.submission_id = $1;
		  
End $_$;


--
-- TOC entry 964 (class 1255 OID 16503)
-- Name: fn_clearinghouse_report_datasets(integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_clearinghouse_report_datasets(integer) RETURNS TABLE(local_db_id integer, dataset_name character varying, method_name character varying, method_abbrev_or_alt_name character varying, description text, record_type_name character varying, public_db_id integer, public_dataset_name character varying, public_method_name character varying, public_method_abbrev_or_alt_name character varying, public_description text, public_record_type_name character varying, date_updated text, entity_type_id integer)
    LANGUAGE plpgsql
    AS $_$

Declare
    entity_type_id int;

Begin

    entity_type_id := clearing_house.fn_get_entity_type_for('tbl_datasets ');

	Return Query

		Select 
		
			LDB.local_db_id                             			As local_db_id,

            LDB.dataset_name		                                As dataset_name,
            LDB.method_name                                         As method_name,
            LDB.method_abbrev_or_alt_name		                    As method_abbrev_or_alt_name,
            LDB.description		                                 	As description,
            LDB.record_type_name		                            As record_type_name,

			LDB.public_db_id                            			As public_db_id,

            RDB.dataset_name		                                As public_dataset_name,
            RDB.method_name                                         As public_method_name,
            RDB.method_abbrev_or_alt_name		                    As public_method_abbrev_or_alt_name,
            RDB.description		                                 	As public_description,
            RDB.record_type_name		                            As public_record_type_name,

			to_char(LDB.date_updated,'YYYY-MM-DD')					As date_updated,
            entity_type_id                             				As entity_type_id

		From (                            

			Select  d.submission_id                                 As submission_id,
                    d.source_id                                     As source_id,
                    d.local_db_id									As local_db_id,
                    d.public_db_id									As public_db_id,
                    d.dataset_name                                  As dataset_name,
                    m.method_name                                   As method_name,
                    m.method_abbrev_or_alt_name                     As method_abbrev_or_alt_name,
                    m.description                                   As description,
                    rt.record_type_name                             As record_type_name,
                    d.date_updated                                 As date_updated
            From clearing_house.view_datasets d
            Left Join clearing_house.view_methods m
              On m.merged_db_id = d.method_id
             And m.submission_id In (0, d.method_id)
            Left Join clearing_house.view_record_types rt
              On rt.merged_db_id = rt.record_type_id
             And rt.submission_id In (0, d.method_id)

		) As LDB Left Join (
		
            select  d.dataset_id                                    As dataset_id,
                    d.dataset_name                                  As dataset_name,
                    m.method_name                                   As method_name,
                    m.method_abbrev_or_alt_name                     As method_abbrev_or_alt_name,
                    m.description                                   As description,
                    rt.record_type_name                             As record_type_name
            from tbl_datasets d
            left join tbl_methods m
              on d.method_id = m.method_id
            left join tbl_record_types rt
              on m.record_type_id = rt.record_type_id
            /*
            join ( -- Unique relation dataset -> sites (om sites data ska tas med)
                select distinct d.dataset_id, s.site_id
                from tbl_datasets d
                left join tbl_analysis_entities
                  on tbl_analysis_entities.dataset_id = d.dataset_id
                join tbl_physical_samples ps
                  on tbl_analysis_entities.physical_sample_id = ps.physical_sample_id
                left join tbl_sample_groups
                  on ps.sample_group_id = tbl_sample_groups.sample_group_id
                join tbl_sites s
                  on tbl_sample_groups.site_id = s.site_id
            ) as ds
              on ds.dataset_id =  d.dataset_id
            */
              
		) As RDB
		  On RDB.dataset_id = LDB.public_db_id
		Where LDB.source_id = 1
		  And LDB.submission_id = $1
		Order By LDB.dataset_name;
		
End $_$;


--
-- TOC entry 965 (class 1255 OID 16504)
-- Name: fn_clearinghouse_report_locations(integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_clearinghouse_report_locations(integer) RETURNS TABLE(local_db_id integer, entity_type_id integer, location_id integer, location_name character varying, default_lat_dd numeric, default_long_dd numeric, date_updated text, location_type_id integer, location_type character varying, description text, public_location_id integer, public_location_name character varying, public_default_lat_dd numeric, public_default_long_dd numeric, public_location_type_id integer, public_location_type character varying, public_description text)
    LANGUAGE plpgsql
    AS $_$

Declare
    entity_type_id int;

Begin

	entity_type_id := clearing_house.fn_get_entity_type_for('tbl_locations');
	
	Return Query
		Select	l.local_db_id						                            as local_db_id,
				entity_type_id						                            as entity_type_id,
				l.local_db_id						                            as location_id,
				l.location_name						                            as location_name,
				l.default_lat_dd                                                as default_lat_dd,
				l.default_long_dd                                               as default_long_dd,
				to_char(l.date_updated,'YYYY-MM-DD')                            as date_updated,
				l.location_type_id                                              as location_type_id, 
				Coalesce(t.location_type, p.location_type)						as location_type, 
				t.description						                            as description,

				p.location_id						                            as public_location_id,
				p.location_name						                            as public_location_name, 
				p.default_lat_dd					                            as public_default_lat_dd, 
				p.default_long_dd					                            as public_default_long_dd, 
				p.location_type_id					                            as public_location_type_id, 
				p.location_type						                            as public_location_type, 
				p.description						                            as public_description
				
		From clearing_house.view_locations l
		Join clearing_house.view_location_types t
		  On t.merged_db_id = l.location_type_id
		 And t.submission_id In (0, l.submission_id)
		Full Outer Join(
			Select l.location_id, l.location_name, l.default_lat_dd, l.default_long_dd, t.location_type_id, t.location_type, t.description
			From public.tbl_locations l
			Join public.tbl_location_types t
			  On t.location_type_id = l.location_type_id
		) as p
		  On p.location_id = l.public_db_id
		Where l.submission_id = $1;
	
End $_$;


--
-- TOC entry 967 (class 1255 OID 16505)
-- Name: fn_clearinghouse_report_methods(integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_clearinghouse_report_methods(integer) RETURNS TABLE(local_db_id integer, method_name character varying, method_abbrev_or_alt_name character varying, description text, record_type_name character varying, group_name character varying, group_description text, unit_name character varying, public_db_id integer, public_method_name character varying, public_method_abbrev_or_alt_name character varying, public_description text, public_record_type_name character varying, public_group_name character varying, public_group_description text, public_unit_name character varying, date_updated text, entity_type_id integer)
    LANGUAGE plpgsql
    AS $_$

Declare
    entity_type_id int;

Begin

    entity_type_id := clearing_house.fn_get_entity_type_for('tbl_datasets ');

	Return Query

		Select 
		
			LDB.local_db_id                             			As local_db_id,

            LDB.method_name                                         As method_name,
            LDB.method_abbrev_or_alt_name		                    As method_abbrev_or_alt_name,
            LDB.description		                                 	As description,
            LDB.record_type_name		                            As record_type_name,
            LDB.group_name		                           			As group_name,
            LDB.group_description		                            As group_description,
            LDB.unit_name		                            		As unit_name,

			LDB.public_db_id                            			As public_db_id,

            RDB.method_name                                         As method_name,
            RDB.method_abbrev_or_alt_name		                    As method_abbrev_or_alt_name,
            RDB.description		                                 	As description,
            RDB.record_type_name		                            As record_type_name,
            RDB.group_name		                           			As group_name,
            RDB.group_description		                            As group_description,
            RDB.unit_name		                            		As unit_name,

			to_char(LDB.date_updated,'YYYY-MM-DD')					As date_updated,
            entity_type_id                             				As entity_type_id

		From (                            

			Select  m.submission_id                                 As submission_id,
                    m.source_id                                     As source_id,
                    m.local_db_id									As local_db_id,
                    m.public_db_id									As public_db_id,
					m.method_name                                   As method_name,
					m.method_abbrev_or_alt_name                     As method_abbrev_or_alt_name,
					m.description                                   As description,
					rt.record_type_name                             As record_type_name,
					mg.group_name									As group_name,
					mg.description									As group_description,
					u.unit_name										As unit_name,
					m.date_updated									As date_updated
			From clearing_house.view_methods m
			Left Join clearing_house.view_record_types rt
			  on rt.merged_db_id = m.record_type_id
			 And rt.submission_id In (0, m.submission_id)
			Left Join clearing_house.view_method_groups mg
			  on mg.merged_db_id = m.method_group_id
			 And mg.submission_id In (0, m.submission_id)
			Left Join clearing_house.view_units u
			  On u.merged_db_id = m.unit_id
			 And u.submission_id In (0, m.submission_id)


		) As LDB Left Join (
		
			select  m.method_id                                    	As method_id,
					m.method_name                                   As method_name,
					m.method_abbrev_or_alt_name                     As method_abbrev_or_alt_name,
					m.description                                   As description,
					rt.record_type_name                             As record_type_name,
					mg.group_name									As group_name,
					mg.description									As group_description,
					u.unit_name										As unit_name
			from tbl_methods m
			left join tbl_record_types rt
			  on m.record_type_id = rt.record_type_id
			left join tbl_method_groups mg
			  on mg.method_group_id = m.method_group_id
			left join tbl_units u
			  on u.unit_id = m.unit_id
		) As RDB
		  On RDB.method_id = LDB.public_db_id
		Where LDB.source_id = 1
		  And LDB.submission_id = $1
		Order By LDB.method_name;
		
End $_$;


--
-- TOC entry 968 (class 1255 OID 16506)
-- Name: fn_clearinghouse_report_relative_ages(integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_clearinghouse_report_relative_ages(integer) RETURNS TABLE(local_db_id integer, sample_name character varying, abbreviation character varying, location_name character varying, uncertainty character varying, method_name character varying, c14_age_older numeric, c14_age_younger numeric, cal_age_older numeric, cal_age_younger numeric, relative_age_name character varying, notes text, reference text, public_db_id integer, public_sample_name character varying, public_abbreviation character varying, public_location_name character varying, public_uncertainty character varying, public_method_name character varying, public_c14_age_older numeric, public_c14_age_younger numeric, public_cal_age_older numeric, public_cal_age_younger numeric, public_relative_age_name character varying, public_notes text, public_reference text, date_updated text, entity_type_id integer)
    LANGUAGE plpgsql
    AS $_$

Declare
    entity_type_id int;

Begin

    entity_type_id := clearing_house.fn_get_entity_type_for('tbl_relative_ages ');

	Return Query

		Select 
		
			LDB.local_db_id                             			As local_db_id,

            LDB.sample_name		                                 	As sample_name,
            LDB.abbreviation		                                As abbreviation,
            LDB.location_name		                                As location_name,
            LDB.uncertainty		                                 	As uncertainty,
            LDB.method_name		                                 	As method_name,
            LDB.C14_age_older		                                As C14_age_older,
            LDB.C14_age_younger		                                As C14_age_younger,
            LDB.CAL_age_older		                                As CAL_age_older,
            LDB.CAL_age_younger		                                As CAL_age_younger,
            LDB.relative_age_name		                            As relative_age_name,
            LDB.notes		                                 		As notes,
            LDB.reference		                                 	As reference,
		
			LDB.public_db_id                            			As public_db_id,

            LDB.sample_name		                                 	As public_sample_name,
            LDB.abbreviation		                                As public_abbreviation,
            LDB.location_name		                                As public_location_name,
            LDB.uncertainty		                                 	As public_uncertainty,
            LDB.method_name		                                 	As public_method_name,
            LDB.C14_age_older		                                As public_C14_age_older,
            LDB.C14_age_younger		                                As public_C14_age_younger,
            LDB.CAL_age_older		                                As public_CAL_age_older,
            LDB.CAL_age_younger		                                As public_CAL_age_younger,
            LDB.relative_age_name		                            As public_relative_age_name,
            LDB.notes		                                 		As public_notes,
            LDB.reference		                                 	As public_reference,

			to_char(LDB.date_updated,'YYYY-MM-DD')					As date_updated,
            entity_type_id                             				As entity_type_id

		From (                            

			select  ra.submission_id								As submission_id,
                    ra.source_id									As source_id,
                    ra.relative_age_id								As local_db_id,
                    ra.public_db_id									As public_db_id,

                    ps.sample_name                                 	As sample_name,
                    ''::character varying              				As abbreviation, /* NOTE! Missing in development schema */
                    l.location_name									As location_name,
                    du.uncertainty									As uncertainty,
                    m.method_name									As method_name,
                    ra.C14_age_older								As C14_age_older,
                    ra.C14_age_younger								As C14_age_younger,
                    ra.CAL_age_older								As CAL_age_older,
                    ra.CAL_age_younger								As CAL_age_younger,
                    ra.relative_age_name							As relative_age_name,
                    ra.notes										As notes,
                    b.author || '(' || b.year::varchar || ')'		As reference,

                    ra.date_updated									As date_updated

            From clearing_house.view_relative_dates rd
            Join clearing_house.view_physical_samples ps
              On ps.merged_db_id = rd.physical_sample_id
             And ps.submission_id In (0, rd.submission_id)
            Join clearing_house.view_relative_ages ra
              On ra.merged_db_id = rd.relative_age_id
             And ra.submission_id In (0, rd.submission_id)
            Join clearing_house.view_methods m
              On m.merged_db_id = rd.method_id
             And m.submission_id In (0, rd.submission_id)
            Join clearing_house.view_dating_uncertainty du
              On du.merged_db_id = rd.dating_uncertainty_id
             And du.submission_id In (0, rd.submission_id)
            Join clearing_house.view_relative_age_types rat
              On rat.merged_db_id = ra.relative_age_type_id
             And rat.submission_id In (0, rd.submission_id)
            Join clearing_house.view_locations l
              On l.merged_db_id = ra.location_id
             And l.submission_id In (0, rd.submission_id)
            Join clearing_house.view_relative_age_refs raf
              On raf.relative_age_id = ra.merged_db_id
             And raf.submission_id In (0, rd.submission_id)
            Join clearing_house.view_biblio b
              On b.merged_db_id = raf.biblio_id
             And b.submission_id In (0, rd.submission_id)

		) As LDB Left Join (
		
           Select 	ra.relative_age_id								As relative_age_id,
					ps.sample_name									As sample_name,
                    ra."Abbreviation"          						As abbreviation,
                    l.location_name									As location_name,
                    du.uncertainty									As uncertainty,
                    m.method_name									As method_name,
                    ra.C14_age_older								As C14_age_older,
                    ra.C14_age_younger								As C14_age_younger,
                    ra.CAL_age_older								As CAL_age_older,
                    ra.CAL_age_younger								As CAL_age_younger,
                    ra.relative_age_name							As relative_age_name,
                    ra.notes										As notes,
                    b.author || '(' || b.year::varchar || ')'		As reference
            From tbl_relative_dates rd
            Join tbl_physical_samples ps
              On ps.physical_sample_id  = rd.physical_sample_id
            Join tbl_relative_ages ra
              On ra.relative_age_id = rd.relative_age_id
            Join tbl_methods m
              On m.method_id = rd.method_id
            Join tbl_dating_uncertainty du
              On du.dating_uncertainty_id = rd.dating_uncertainty_id
            Join tbl_relative_age_types rat
              On rat.relative_age_type_id = ra.relative_age_type_id
            Join tbl_locations l
              On l.location_id = ra.location_id
            Join tbl_relative_age_refs raf
              On raf.relative_age_id = ra.relative_age_id
            Join tbl_biblio b
              On b.biblio_id = raf.biblio_id
              
		) As RDB
		  On RDB.relative_age_id = LDB.public_db_id
		Where LDB.source_id = 1
		  And LDB.submission_id = $1
		Order By LDB.sample_name;
		
End $_$;


--
-- TOC entry 969 (class 1255 OID 16507)
-- Name: fn_clearinghouse_report_taxa_ecocodes(integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_clearinghouse_report_taxa_ecocodes(integer) RETURNS TABLE(local_db_id integer, species text, abbreviation character varying, label character varying, definition text, notes text, group_label character varying, system_name character varying, reference text, public_db_id integer, public_species text, public_abbreviation character varying, public_label character varying, public_definition text, public_notes text, public_group_label character varying, public_system_name character varying, public_reference text, date_updated text, entity_type_id integer)
    LANGUAGE plpgsql
    AS $_$

Declare
    entity_type_id int;

Begin

    entity_type_id := clearing_house.fn_get_entity_type_for('tbl_ecocodes ');

	Return Query

		Select 
			LDB.local_db_id                            	As local_db_id,

			LDB.species,
			LDB.abbreviation,
			LDB.label,
			LDB.definition, 
			LDB.notes,
			LDB.group_label,
			LDB.system_name,
			LDB.reference,
			
  			LDB.public_db_id                            As public_db_id,

			RDB.public_species,
			RDB.public_abbreviation,
			RDB.public_label,
			RDB.public_definition, 
			RDB.public_notes,
			RDB.public_group_label,
			RDB.public_system_name,
			RDB.public_reference,


			to_char(LDB.date_updated,'YYYY-MM-DD')		As date_updated,
			entity_type_id              				As entity_type_id

		From (
                                
				select t.submission_id,
					t.source_id,
					t.taxon_id As local_db_id,
					t.public_db_id As public_db_id,
					g.genus_name || ' ' || t.species || ' ' || coalesce(a.author_name, '')	As species,
					ed.abbreviation,
					ed.label,
					ed.definition,
					ed.notes,
					eg.label as group_label,
					es.name as system_name,
					b.author || '(' || b.year || ')' as reference,
					t.date_updated

				from clearing_house.view_taxa_tree_master t
				join clearing_house.view_taxa_tree_genera g
				  on t.genus_id = g.merged_db_id
				 and g.submission_id in (0, t.submission_id)
				left join clearing_house.view_taxa_tree_authors a
				  on t.author_id = a.merged_db_id
				 and a.submission_id in (0, t.submission_id)
                                join clearing_house.view_ecocodes e
                                  on e.taxon_id = t.merged_db_id
                                 and e.submission_id in (0, t.submission_id)
                                join clearing_house.view_ecocode_definitions ed
                                  on ed.merged_db_id = e.ecocode_definition_id
                                 and ed.submission_id in (0, t.submission_id)
                                join clearing_house.view_ecocode_groups eg
                                  on eg.merged_db_id = ed.ecocode_group_id
                                 and eg.submission_id in (0, t.submission_id)
                                join clearing_house.view_ecocode_systems es
                                  on es.merged_db_id = eg.ecocode_system_id
                                 and es.submission_id in (0, t.submission_id)
				Join clearing_house.view_biblio b
				  On b.merged_db_id = es.biblio_id
				 And b.submission_id in (0, t.submission_id)
                                
		
		) As LDB Left Join (

				select 
					t.taxon_id As taxon_id,
					g.genus_name || ' ' || t.species || ' ' || coalesce(a.author_name, '')	As public_species,
					ed.abbreviation as public_abbreviation,
					ed.label as public_label,
					ed.definition as public_definition,
					ed.notes as public_notes,
					eg.label as public_group_label,
					es.name as public_system_name,
					b.author || '(' || b.year || ')' as public_reference,
					t.date_updated

				from public.tbl_taxa_tree_master t
				join public.tbl_taxa_tree_genera g
				  on t.genus_id = g.genus_id
				left join public.tbl_taxa_tree_authors a
				  on t.author_id = a.author_id
				join public.tbl_ecocodes e
				  on e.taxon_id = t.taxon_id
				join public.tbl_ecocode_definitions ed
				  on ed.ecocode_definition_id = e.ecocode_definition_id
				join public.tbl_ecocode_groups eg
				  on eg.ecocode_group_id = ed.ecocode_group_id
				join public.tbl_ecocode_systems es
				  on es.ecocode_system_id = eg.ecocode_system_id
				Join public.tbl_biblio b
				  On b.biblio_id = es.biblio_id

		) As RDB
		  On RDB.taxon_id = LDB.public_db_id
		Where LDB.source_id = 1
		  And LDB.submission_id = $1
		Order By LDB.species;
End $_$;


--
-- TOC entry 970 (class 1255 OID 16508)
-- Name: fn_clearinghouse_report_taxa_other_lists(integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_clearinghouse_report_taxa_other_lists(integer) RETURNS TABLE(local_db_id integer, species text, distribution_text text, distribution_reference text, biology_text text, biology_reference text, taxonomy_note_text text, taxonomy_note_reference text, identification_key_text text, identification_key_reference text, public_db_id integer, public_species text, public_distribution_text text, public_distribution_reference text, public_biology_text text, public_biology_reference text, public_taxonomy_note_text text, public_taxonomy_note_reference text, public_identification_key_text text, public_identification_key_reference text, date_updated text, entity_type_id integer)
    LANGUAGE plpgsql
    AS $_$

Declare
    entity_type_id int;

Begin

    entity_type_id := clearing_house.fn_get_entity_type_for('tbl_taxa_tree_master ');

	Return Query

		Select 
			LDB.local_db_id                            	As local_db_id,
			LDB.species,
			LDB.distribution_text,
			LDB.distribution_reference,
			LDB.biology_text,
			LDB.biology_reference, 
			LDB.taxonomy_note_text,
			LDB.taxonomy_note_reference,
			LDB.identification_key_text,
			LDB.identification_key_reference,
			
  			LDB.public_db_id                            As public_db_id,

            RDB.public_species,
			RDB.public_distribution_text,
			RDB.public_distribution_reference,
			RDB.public_biology_text,
			RDB.public_biology_reference, 
			RDB.public_taxonomy_note_text,
			RDB.public_taxonomy_note_reference,
			RDB.public_identification_key_text,
			RDB.public_identification_key_reference,


			to_char(LDB.date_updated,'YYYY-MM-DD')		As date_updated,
			entity_type_id              				As entity_type_id

		From (
                                
			select t.submission_id,
				t.source_id,
				t.taxon_id As local_db_id,
				t.public_db_id As public_db_id,
				g.genus_name || ' ' || t.species || ' ' || coalesce(a.author_name, '')	As species,
				d.distribution_text,
				db.author || '(' || db.year || ')' as distribution_reference,
				b.biology_text,
				bb.author || '(' || bb.year || ')' as biology_reference,
				n.taxonomy_notes as taxonomy_note_text,
				nb.author || '(' || nb.year || ')' as taxonomy_note_reference,
				ik.key_text as identification_key_text,
				ikb.author || '(' || ikb.year || ')' as identification_key_reference,
				t.date_updated
			  from clearing_house.view_taxa_tree_master t
			  join clearing_house.view_taxa_tree_genera g
			   on t.genus_id = g.merged_db_id
			   and g.submission_id in (0, t.submission_id)
			  left join clearing_house.view_taxa_tree_authors a
			   on t.author_id = a.merged_db_id
			   And a.submission_id in (0, t.submission_id)
			  --distribution
			  left join clearing_house.view_text_distribution d
			   on d.taxon_id = t.merged_db_id
			   And d.submission_id in (0, t.submission_id)
			  left Join clearing_house.view_biblio db
			   On db.merged_db_id = d.biblio_id
			   And db.submission_id in (0, t.submission_id)
			  --text biology
			  left join clearing_house.view_text_biology b
			   on b.taxon_id = t.merged_db_id
			   And b.submission_id in (0, t.submission_id)
			  left join clearing_house.view_biblio bb
			   on b.biblio_id = bb.merged_db_id
			   And bb.submission_id in (0, t.submission_id)
			  --taxonomy notes
			  left join clearing_house.view_taxonomy_notes n
			   on n.taxon_id = t.merged_db_id
			   And n.submission_id in (0, t.submission_id)
			  left join clearing_house.view_biblio nb
			   on n.biblio_id = nb.merged_db_id
			   And nb.submission_id in (0, t.submission_id)
			  --identification keys
			  left join clearing_house.view_text_identification_keys ik
			   on ik.taxon_id = t.merged_db_id
			   And ik.submission_id in (0, t.submission_id)
			  left join clearing_house.view_biblio ikb
			   on ik.biblio_id = ikb.merged_db_id
			   And ikb.submission_id in (0, t.submission_id)
		
		) As LDB Left Join (
				select 
				t.taxon_id As taxon_id,
				g.genus_name || ' ' || t.species || ' ' || coalesce(a.author_name, '')	As public_species,
				d.distribution_text as public_distribution_text,
				db.author || '(' || db.year || ')' as public_distribution_reference,
				b.biology_text as public_biology_text,
				bb.author || '(' || bb.year || ')' as public_biology_reference,
				n.taxonomy_notes as public_taxonomy_note_text,
				nb.author || '(' || nb.year || ')' as public_taxonomy_note_reference,
				ik.key_text as public_identification_key_text,
				ikb.author || '(' || ikb.year || ')' as public_identification_key_reference,
				t.date_updated
			  from public.tbl_taxa_tree_master t
			  join public.tbl_taxa_tree_genera g
			   on t.genus_id = g.genus_id
			  left join public.tbl_taxa_tree_authors a
			   on t.author_id = a.author_id
			  --distribution
			  left join public.tbl_text_distribution d
			   on d.taxon_id = t.taxon_id
			  left Join public.tbl_biblio db
			   On db.biblio_id = d.biblio_id
			  --text biology
			  left join public.tbl_text_biology b
			   on b.taxon_id = t.taxon_id
			  left join public.tbl_biblio bb
			   on b.biblio_id = bb.biblio_id
			  --taxonomy notes
			  left join public.tbl_taxonomy_notes n
			   on n.taxon_id = t.taxon_id
			  left join public.tbl_biblio nb
			   on n.biblio_id = nb.biblio_id
			  --identification keys
			  left join public.tbl_text_identification_keys ik
			   on ik.taxon_id = t.taxon_id
			  left join public.tbl_biblio ikb
			   on ik.biblio_id = ikb.biblio_id

		) As RDB
		  On RDB.taxon_id = LDB.public_db_id
		Where LDB.source_id = 1
		  And LDB.submission_id = $1
		Order By LDB.species;
End $_$;


--
-- TOC entry 972 (class 1255 OID 16509)
-- Name: fn_clearinghouse_report_taxa_rdb(integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_clearinghouse_report_taxa_rdb(integer) RETURNS TABLE(local_db_id integer, species text, location_name character varying, rdb_category character varying, rdb_definition character varying, rdb_system character varying, reference text, public_db_id integer, public_species text, public_location_name character varying, public_rdb_category character varying, public_rdb_definition character varying, public_rdb_system character varying, public_reference text, date_updated text, entity_type_id integer)
    LANGUAGE plpgsql
    AS $_$

Declare
    entity_type_id int;

Begin

    entity_type_id := clearing_house.fn_get_entity_type_for('tbl_rdb ');

	Return Query

		Select 
			LDB.local_db_id                            	As local_db_id,

			LDB.species,
			LDB.location_name,
			LDB.rdb_category,
			LDB.rdb_definition,
			LDB.rdb_system,
			LDB.reference,
			
  			LDB.public_db_id                            As public_db_id,

			RDB.public_species,
			RDB.public_location_name,
			RDB.public_rdb_category,
			RDB.public_rdb_definition,
			RDB.public_rdb_system,
			RDB.public_reference,


			to_char(LDB.date_updated,'YYYY-MM-DD')		As date_updated,
			entity_type_id              				As entity_type_id

		From (
                                
				select t.submission_id,
					t.source_id,
					t.taxon_id As local_db_id,
					t.public_db_id As public_db_id,
					g.genus_name || ' ' || t.species || ' ' || coalesce(a.author_name, '')	As species,
					l.location_name, 
					c.rdb_category,
					c.rdb_definition,
					s.rdb_system,
					b.author || '(' || b.year || ')' as reference,
					t.date_updated

				from clearing_house.view_taxa_tree_master t
				join clearing_house.view_taxa_tree_genera g
				  on t.genus_id = g.merged_db_id
				 and g.submission_id in (0, t.submission_id)
				left join clearing_house.view_taxa_tree_authors a
				  on t.author_id = a.merged_db_id
				 and a.submission_id in (0, t.submission_id)
				join clearing_house.view_rdb r
				  on r.taxon_id = t.merged_db_id
				 and r.submission_id in (0, t.submission_id)
				join clearing_house.view_rdb_codes c
				  on c.merged_db_id = r.rdb_code_id
				 and c.submission_id in (0, t.submission_id)
				join clearing_house.view_rdb_systems s
				  on s.merged_db_id = c.rdb_system_id
				 and s.submission_id in (0, t.submission_id)
				Join clearing_house.view_biblio b
				  On b.merged_db_id = s.biblio_id
				 And b.submission_id in (0, t.submission_id)
				join clearing_house.view_locations l
				  on l.merged_db_id = r.location_id
				 and l.submission_id in (0, t.submission_id)
				
		
		) As LDB Left Join (

				select 
					t.taxon_id As taxon_id,
					g.genus_name || ' ' || t.species || ' ' || coalesce(a.author_name, '')	As public_species,
					l.location_name as public_location_name,
					c.rdb_category as public_rdb_category,
					c.rdb_definition as public_rdb_definition,
					s.rdb_system as public_rdb_system,
					b.author || '(' || b.year || ')' as public_reference,
					t.date_updated

				from clearing_house.tbl_taxa_tree_master t
				join clearing_house.tbl_taxa_tree_genera g
				  on t.genus_id = g.genus_id
				left join public.tbl_taxa_tree_authors a
				  on t.author_id = a.author_id
				join public.tbl_rdb r
				  on r.taxon_id = t.taxon_id
				join public.tbl_rdb_codes c
				  on c.rdb_code_id = r.rdb_code_id
				join public.tbl_rdb_systems s
				  on s.rdb_system_id = c.rdb_system_id
				Join public.tbl_biblio b
				  On b.biblio_id = s.biblio_id
				join public.tbl_locations l
				  on l.location_id = r.location_id

		) As RDB
		  On RDB.taxon_id = LDB.public_db_id
		Where LDB.source_id = 1
		  And LDB.submission_id = $1
		Order By LDB.species;
End $_$;


--
-- TOC entry 973 (class 1255 OID 16510)
-- Name: fn_clearinghouse_report_taxa_seasonality(integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_clearinghouse_report_taxa_seasonality(integer) RETURNS TABLE(local_db_id integer, species text, season_name character varying, season_type character varying, location_name character varying, activity_type character varying, public_db_id integer, public_species text, public_season_name character varying, public_season_type character varying, public_location_name character varying, public_activity_type character varying, date_updated text, entity_type_id integer)
    LANGUAGE plpgsql
    AS $_$

Declare
    entity_type_id int;

Begin

    entity_type_id := clearing_house.fn_get_entity_type_for('tbl_taxa_seasonality ');

	Return Query

		Select 
			LDB.local_db_id                             As local_db_id,
			LDB.species                                 As species,
			LDB.season_name                             As season_name,
			LDB.season_type                             As season_type,
			LDB.location_name                           As location_name,
			LDB.activity_type                           As activity_type,
		
			LDB.public_db_id                            As public_db_id,

			RDB.public_species                          As public_species,
			RDB.public_season_name                      As public_season_name,
			RDB.public_season_type                      As public_season_type,
			RDB.public_location_name                    As public_location_name,
			RDB.public_activity_type                    As public_activity_type,


			to_char(LDB.date_updated,'YYYY-MM-DD')		As date_updated,
            entity_type_id                                  As entity_type_id

		From (                            
			select t.submission_id,
			   t.source_id,
			   t.taxon_id As local_db_id,
			   t.public_db_id As public_db_id,
			   g.genus_name || ' ' || t.species || ' ' || coalesce(a.author_name, '')	As species,
			   s.season_name,
			   st.season_type,
			   l.location_name,
			   at.activity_type,
			   t.date_updated
			 from clearing_house.view_taxa_tree_master t
			 join clearing_house.view_taxa_tree_genera g
			  on t.genus_id = g.merged_db_id
			  and g.submission_id in (0, t.submission_id)
			 left join clearing_house.view_taxa_tree_authors a
			  on t.author_id = a.merged_db_id
			  And a.submission_id in (0, t.submission_id)
			left join clearing_house.view_taxa_seasonality ts
			  on ts.merged_db_id = t.taxon_id
			  and ts.submission_id in (0, t.submission_id)
			join clearing_house.view_seasons s
			  on ts.season_id = s.merged_db_id
			  and s.submission_id in (0, t.submission_id)
			join clearing_house.view_season_types st
			  on s.season_type_id = st.merged_db_id
			  and st.submission_id in (0, t.submission_id)
			join clearing_house.view_activity_types at
			  on ts.activity_type_id = at.merged_db_id
			  and at.submission_id in (0, t.submission_id)
			join clearing_house.view_locations l
			  on ts.location_id = l.merged_db_id
			  and l.submission_id in (0, t.submission_id)
		
		) As LDB Left Join (
            select 
               t.taxon_id As taxon_id,
               g.genus_name || ' ' || t.species || ' ' || coalesce(a.author_name, '')	As public_species,
               s.season_name as public_season_name,
               st.season_type as public_season_type,
               l.location_name as public_location_name,
               at.activity_type as public_activity_type,
               t.date_updated
            from public.tbl_taxa_tree_master t
            join public.tbl_taxa_tree_genera g
              on t.genus_id = g.genus_id
             left join public.tbl_taxa_tree_authors a
              on t.author_id = a.author_id
            left join public.tbl_taxa_seasonality ts
              on ts.taxon_id = t.taxon_id
            join public.tbl_seasons s
              on ts.season_id = s.season_id
            join public.tbl_season_types st
              on s.season_type_id = st.season_type_id
            join public.tbl_activity_types at
              on ts.activity_type_id = at.activity_type_id
            join public.tbl_locations l
              on ts.location_id = l.location_id
		) As RDB
		  On RDB.taxon_id = LDB.public_db_id
		Where LDB.source_id = 1
		  And LDB.submission_id = $1
		Order By LDB.species;
End $_$;


--
-- TOC entry 974 (class 1255 OID 16511)
-- Name: fn_clearinghouse_report_taxa_tree_master(integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_clearinghouse_report_taxa_tree_master(integer) RETURNS TABLE(local_db_id integer, order_name character varying, family character varying, species text, association_type_name character varying, association_species text, common_name character varying, language_name character varying, public_db_id integer, public_order_name character varying, public_family character varying, public_species text, public_association_type_name character varying, public_association_species text, public_common_name character varying, public_language_name character varying, date_updated text, entity_type_id integer)
    LANGUAGE plpgsql
    AS $_$

Declare
    entity_type_id int;

Begin

    entity_type_id := clearing_house.fn_get_entity_type_for('tbl_taxa_tree_master ');

	Return Query

		Select 
			LDB.local_db_id                            	As local_db_id,

			LDB.order_name,
			LDB.family,
			LDB.species,
			LDB.association_type_name, 
			LDB.association_species,
			LDB.common_name,
			LDB.language_name,
			
  			LDB.public_db_id                            As public_db_id,

			RDB.public_order_name,
			RDB.public_family,
			RDB.public_species,
			RDB.public_association_type_name, 
			RDB.public_association_species,
			RDB.public_common_name,
			RDB.public_language_name,


			to_char(LDB.date_updated,'YYYY-MM-DD')		As date_updated,
			entity_type_id              				As entity_type_id

		From (
                                
			select t.submission_id,
				t.source_id,
				t.taxon_id As local_db_id,
				t.public_db_id As public_db_id,
				o.order_name as order_name,
				f.family_name as family,
				g.genus_name || ' ' || t.species || ' ' || coalesce(a.author_name, '')	As species,
				sat.association_type_name, 
				sa_genera.genus_name || ' ' || sa_species.species || ' ' || coalesce(sa_authors.author_name, '') as association_species,
				cn.common_name,
				l.language_name_english as language_name,
				t.date_updated
			from clearing_house.view_taxa_tree_master t
			join clearing_house.view_taxa_tree_genera g
			 on t.genus_id = g.merged_db_id
			 and g.submission_id in (0, t.submission_id)
			join clearing_house.view_taxa_tree_families f
			 on g.family_id = f.merged_db_id
			 and f.submission_id in (0, t.submission_id)
			join clearing_house.view_taxa_tree_orders o
			 on o.order_id = f.merged_db_id
			 and o.submission_id in (0, t.submission_id)
			left join clearing_house.view_taxa_tree_authors a
			 on t.author_id = a.merged_db_id
			 and a.submission_id in (0, t.submission_id)
			-- associations
			left join clearing_house.view_species_associations sa
			 on t.taxon_id = sa.merged_db_id
			 and sa.submission_id in (0, t.submission_id)
			left join clearing_house.view_species_association_types sat
			 on sat.association_type_id = sa.merged_db_id
			 and sat.submission_id in (0, t.submission_id)
			left join clearing_house.view_taxa_tree_master sa_species
			 on sa.associated_taxon_id = sa_species.merged_db_id
			 and sa_species.submission_id in (0, t.submission_id)
			left join clearing_house.view_taxa_tree_genera sa_genera
			 on sa_species.genus_id = sa_genera.merged_db_id
			 and sa_genera.submission_id in (0, t.submission_id)
			left join clearing_house.view_taxa_tree_authors sa_authors
			 on sa_species.author_id = sa_authors.merged_db_id
			 and sa_authors.submission_id in (0, t.submission_id)
			-- // end associations
			--common names
			left join clearing_house.view_taxa_common_names cn
			 on cn.merged_db_id = t.taxon_id
			 and cn.submission_id in (0, t.submission_id)
			left join clearing_house.view_languages l
			 on cn.language_id = l.merged_db_id
			 and l.submission_id in (0, t.submission_id)
                                 -- // end common names
		
		) As LDB Left Join (
			select 
				t.taxon_id As taxon_id,
				o.order_name as public_order_name,
				f.family_name as public_family,
				g.genus_name || ' ' || t.species || ' ' || coalesce(a.author_name, '') as public_species,
				sat.association_type_name as public_association_type_name, 
				sa_genera.genus_name || ' ' || sa_species.species || ' ' || coalesce(sa_authors.author_name, '') as public_association_species,
				cn.common_name as public_common_name,
				l.language_name_english as public_language_name
			  from public.tbl_taxa_tree_master t
			  join public.tbl_taxa_tree_genera g
			   on t.genus_id = g.genus_id
			  join public.tbl_taxa_tree_families f
			   on g.family_id = f.family_id
			  join public.tbl_taxa_tree_orders o
			   on o.order_id = f.order_id
			  left join public.tbl_taxa_tree_authors a
			   on t.author_id = a.author_id
			  -- associations
			  left join public.tbl_species_associations sa
			   on t.taxon_id = sa.taxon_id
			  left join public.tbl_species_association_types sat
			   on sat.association_type_id = sa.association_type_id
			  left join public.tbl_taxa_tree_master sa_species
			   on sa.associated_taxon_id = sa_species.taxon_id
			  left join public.tbl_taxa_tree_genera sa_genera
			   on sa_species.genus_id = sa_genera.genus_id
			  left join public.tbl_taxa_tree_authors sa_authors
			   on sa_species.author_id = sa_authors.author_id
			  -- // end associations
			  --common names
			  left join public.tbl_taxa_common_names cn
			   on cn.taxon_id = t.taxon_id
			  left join public.tbl_languages l
			   on cn.language_id = l.language_id
			   -- // end common names

		) As RDB
		  On RDB.taxon_id = LDB.public_db_id
		Where LDB.source_id = 1
		  And LDB.submission_id = $1
		Order By LDB.species;
End $_$;


--
-- TOC entry 975 (class 1255 OID 16512)
-- Name: fn_clearinghouse_report_taxonomic_order(integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_clearinghouse_report_taxonomic_order(integer) RETURNS TABLE(local_db_id integer, species text, taxonomic_code numeric, system_name character varying, reference text, public_db_id integer, public_species text, public_taxonomic_code numeric, public_system_name character varying, public_reference text, date_updated text, entity_type_id integer)
    LANGUAGE plpgsql
    AS $_$

Declare
    entity_type_id int;

Begin

    entity_type_id := clearing_house.fn_get_entity_type_for('tbl_taxonomic_order ');

	Return Query

		Select 
			LDB.local_db_id                            	As local_db_id,

			LDB.species,
			LDB.taxonomic_code,
			LDB.system_name,
			LDB.reference,
			
  			LDB.public_db_id                            As public_db_id,

			RDB.public_species,
			RDB.public_taxonomic_code,
			RDB.public_system_name,
			RDB.public_reference,


			to_char(LDB.date_updated,'YYYY-MM-DD')		As date_updated,
			entity_type_id              				As entity_type_id

		From (

				select t.submission_id,
					   t.source_id,
					   t.taxon_id																As local_db_id,
					   t.public_db_id															As public_db_id,
					   g.genus_name || ' ' || t.species || ' ' || coalesce(a.author_name, '')	As species,
					   o.taxonomic_code,
					   s.system_name,
					   b.author || '(' || b.year || ')' as reference,
					   t.date_updated

				from clearing_house.view_taxa_tree_master t
				join clearing_house.view_taxa_tree_genera g
				  on t.genus_id = g.merged_db_id
				 and g.submission_id in (0, t.submission_id)
				left join clearing_house.view_taxa_tree_authors a
				  on t.author_id = a.merged_db_id
				 and a.submission_id in (0, t.submission_id)
				Join clearing_house.view_taxonomic_order o
				  on o.taxon_id = t.merged_db_id
				 and o.submission_id in (0, t.submission_id)
				Join clearing_house.view_taxonomic_order_systems s
				  On o.taxonomic_order_system_id = s.merged_db_id
				 And s.submission_id in (0, o.submission_id)
				Join clearing_house.view_taxonomic_order_biblio bo
				  On bo.taxonomic_order_system_id = s.merged_db_id
				 And bo.submission_id in (0, o.submission_id)
				Join clearing_house.view_biblio b
				  On b.merged_db_id = bo.biblio_id
				 And b.submission_id in (0, o.submission_id)
				--Where o.submission_id = $1
				--Order by 4 /* species */
		
		) As LDB Left Join (

				select t.taxon_id As taxon_id,
					   g.genus_name || ' ' || t.species || ' ' || coalesce(a.author_name, '')	As public_species,
					   o.taxonomic_code															As public_taxonomic_code,
					   s.system_name															As public_system_name,
					   b.author || '(' || b.year || ')'											as public_reference

				from public.tbl_taxa_tree_master t
				join public.tbl_taxa_tree_genera g
				  on t.genus_id = g.genus_id
				left join public.tbl_taxa_tree_authors a
				  on t.author_id = a.author_id
				Join public.tbl_taxonomic_order o
				  on o.taxon_id = t.taxon_id
				Join public.tbl_taxonomic_order_systems s
				  On o.taxonomic_order_system_id = s.taxonomic_order_system_id
				Join public.tbl_taxonomic_order_biblio bo
				  On bo.taxonomic_order_system_id = s.taxonomic_order_system_id
				Join public.tbl_biblio b
				  On b.biblio_id = bo.biblio_id
				--Where o.submission_id = $1
				--Order by 4 /* species */

		) As RDB
		  On RDB.taxon_id = LDB.public_db_id
		Where LDB.source_id = 1
		  And LDB.submission_id = $1
		Order By LDB.species;
End $_$;


--
-- TOC entry 976 (class 1255 OID 16513)
-- Name: fn_clearinghouse_review_dataset_abundance_values_client_data(integer, integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_clearinghouse_review_dataset_abundance_values_client_data(integer, integer) RETURNS TABLE(local_db_id integer, public_db_id integer, abundance_id integer, physical_sample_id integer, taxon_id integer, genus_name character varying, species character varying, sample_name character varying, author_name character varying, element_name text, modification_type_name text, identification_level_name text, abundance integer, public_abundance integer, entity_type_id integer)
    LANGUAGE plpgsql
    AS $_$
Declare
    entity_type_id int;
    public_ds_id int;
    
Begin
			
    entity_type_id := clearing_house.fn_get_entity_type_for('tbl_abundances');
    
	Select x.public_db_id Into public_ds_id
	From clearing_house.view_datasets x
	Where x.local_db_id = -$2;
	
	Return Query

		Select 

			LDB.local_db_id						               			As local_db_id,
			LDB.public_db_id						               		As public_db_id,
			
			LDB.abundance_id					               			As abundance_id,
			LDB.physical_sample_id				               			As physical_sample_id,
			LDB.taxon_id						               			As taxon_id,

			LDB.genus_name												As genus_name,
			LDB.species													As species,
			LDB.sample_name												As sample_name,
			LDB.author_name												As author_name,
			LDB.element_name											As element_name,
			LDB.modification_type_name									As modification_type_name,
			LDB.identification_level_name								As identification_level_name,
			
			LDB.abundance												As abundance,

			RDB.abundance												As public_abundance,
			
			entity_type_id												As entity_type_id
		-- Select LDB.*
		From clearing_house.view_clearinghouse_dataset_abundances LDB

		Left Join clearing_house.view_dataset_abundances RDB
		  On RDB.dataset_id =  LDB.public_dataset_id
		 And RDB.taxon_id = LDB.public_taxon_id
		 And RDB.abundance_id = LDB.public_db_id
		 And RDB.physical_sample_id = LDB.public_physical_sample_id

		Where LDB.source_id = 1
		  And LDB.submission_id = $1
		  And LDB.local_dataset_id = -$2;
		  
End $_$;


--
-- TOC entry 977 (class 1255 OID 16514)
-- Name: fn_clearinghouse_review_dataset_client_data(integer, integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_clearinghouse_review_dataset_client_data(integer, integer) RETURNS TABLE(local_db_id integer, dataset_name character varying, data_type_name character varying, master_name character varying, previous_dataset_name character varying, method_name character varying, project_stage_name text, record_type_id integer, public_db_id integer, public_dataset_name character varying, public_data_type_name character varying, public_master_name character varying, public_previous_dataset_name character varying, public_method_name character varying, public_project_stage_name text, public_record_type_id integer, entity_type_id integer)
    LANGUAGE plpgsql
    AS $_$

Declare
    entity_type_id int;

Begin

    entity_type_id := clearing_house.fn_get_entity_type_for('tbl_physical_samples');

	Return Query

		With sample (submission_id, source_id, local_db_id, public_db_id, merged_db_id, dataset_name, data_type_name, master_name, previous_dataset_name, method_name, project_stage_name, record_type_id) As (
            Select  d.submission_id                                         As submission_id,
                    d.source_id                                             As source_id,
                    d.local_db_id                                           As local_db_id,
                    d.public_db_id                                          As public_db_id,
                    d.merged_db_id                                          As merged_db_id,
                    d.dataset_name                                          As dataset_name,
                    dt.data_type_name                                       As data_type_name,
                    dm.master_name                                          As master_name,
                    ud.dataset_name                                         As previous_dataset_name, 
                    m.method_name                                           As method_name,
                    p.project_name || pt.project_type_name || ps.stage_name As project_stage_name,
                    m.record_type_id                                        As record_type_id
                    /* Används för att skilja proxy types: 1) measured value 2) abundance */
            From clearing_house.view_datasets d
            Join clearing_house.view_data_types dt
              On dt.data_type_id = d.data_type_id
             And dt.submission_id In (0, d.submission_id)
            Left Join clearing_house.view_dataset_masters dm
              On dm.merged_db_id = d.master_set_id
             And dm.submission_id In (0, d.submission_id)
            Left Join clearing_house.view_datasets ud
              On ud.merged_db_id = d.updated_dataset_id
             And ud.submission_id In (0, d.submission_id)
            Join clearing_house.view_methods m
              On m.merged_db_id = d.method_id
             And m.submission_id In (0, d.submission_id)
            Left Join clearing_house.view_projects p
              On p.merged_db_id = d.project_id
             And p.submission_id In (0, d.submission_id)
            Left Join clearing_house.view_project_types pt
              On pt.merged_db_id = p.project_type_id
             And pt.submission_id In (0, d.submission_id)
            Left Join clearing_house.view_project_stages ps
              On ps.merged_db_id = p.project_stage_id
             And ps.submission_id In (0, d.submission_id)
		)
			Select 
				LDB.local_db_id						As local_db_id,
				LDB.dataset_name                    As dataset_name, 
				LDB.data_type_name                  As data_type_name,
				LDB.master_name                     As master_name,
				LDB.previous_dataset_name           As previous_dataset_name,
				LDB.method_name                     As method_name,
				LDB.project_stage_name              As project_stage_name,
				LDB.record_type_id                  As record_type_id,

				LDB.public_db_id					As public_db_id,
				RDB.dataset_name                    As public_dataset_name, 
				RDB.data_type_name                  As public_data_type_name,
				RDB.master_name                     As public_master_name,
				RDB.previous_dataset_name           As public_previous_dataset_name,
				RDB.method_name                     As public_method_name,
				RDB.project_stage_name              As public_project_stage_name,
				RDB.record_type_id                  As public_record_type_id,

                entity_type_id

			From sample LDB
			Left Join sample RDB
			  On RDB.source_id = 2
			 And RDB.public_db_id = LDB.public_db_id
			Where LDB.source_id = 1
			  And LDB.submission_id = $1
			  And LDB.local_db_id = -$2
			  ;
		  
End $_$;


--
-- TOC entry 978 (class 1255 OID 16515)
-- Name: fn_clearinghouse_review_dataset_contacts_client_data(integer, integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_clearinghouse_review_dataset_contacts_client_data(integer, integer) RETURNS TABLE(local_db_id integer, first_name character varying, last_name character varying, contact_type_name character varying, public_db_id integer, public_first_name character varying, public_last_name character varying, public_contact_type_name character varying, date_updated text, entity_type_id integer)
    LANGUAGE plpgsql
    AS $_$
Declare
    entity_type_id int;
Begin

    entity_type_id := clearing_house.fn_get_entity_type_for('tbl_dataset_contacts');

	Return Query

		Select 
			LDB.local_db_id				               					As local_db_id,

			LDB.first_name												As first_name,
			LDB.last_name												As last_name,
			LDB.contact_type_name										As contact_type_name,

			LDB.public_db_id				            				As public_db_id,

			RDB.first_name												As public_first_name,
			RDB.last_name												As public_last_name,
			RDB.contact_type_name										As public_contact_type_name,

			to_char(LDB.date_updated,'YYYY-MM-DD')						As date_updated,
			entity_type_id												As entity_type_id

		From (
			Select	d.source_id                                         As source_id,
					d.submission_id                                     As submission_id,
					d.local_db_id										As dataset_id,
					
					dc.local_db_id										As local_db_id,
					dc.public_db_id										As public_db_id,
					dc.merged_db_id										As merged_db_id,

					c.first_name										As first_name,
					c.last_name											As last_name,
					t.contact_type_name									As contact_type_name,

					dc.date_updated										As date_updated
			From clearing_house.view_datasets d
			Join clearing_house.view_dataset_contacts dc
			  On dc.dataset_id = d.merged_db_id
			 And dc.submission_id In (0, d.submission_id)
			Join clearing_house.view_contacts c
			  On c.merged_db_id = dc.contact_id
			 And c.submission_id In (0, d.submission_id)
			Join clearing_house.view_contact_types t
			  On t.merged_db_id = dc.contact_type_id
			 And t.submission_id In (0, d.submission_id)
 
		) As LDB Left Join (
		
			Select	d.dataset_id										As dataset_id,
					
					dc.contact_id										As contact_id,

					c.first_name										As first_name,
					c.last_name											As last_name,
					t.contact_type_name									As contact_type_name
					
			From public.tbl_datasets d
			Join public.tbl_dataset_contacts dc
			  On dc.dataset_id = d.dataset_id
			Join public.tbl_contacts c
			  On c.contact_id = dc.contact_id
			Join public.tbl_contact_types t
			  On t.contact_type_id = dc.contact_type_id
			 
		  ) As RDB
		  On
		  RDB.contact_id = LDB.public_db_id
		Where LDB.source_id = 1
		  And LDB.submission_id = $1
		  And LDB.dataset_id = -$2
		;
		  
End $_$;


--
-- TOC entry 979 (class 1255 OID 16516)
-- Name: fn_clearinghouse_review_dataset_measured_values_client_data(integer, integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_clearinghouse_review_dataset_measured_values_client_data(integer, integer) RETURNS TABLE(local_db_id integer, public_db_id integer, sample_name character varying, method_id integer, method_name character varying, prep_method_id integer, prep_method_name character varying, measured_value numeric, public_measured_value numeric, entity_type_id integer)
    LANGUAGE plpgsql
    AS $_$
Declare
    entity_type_id int;
    public_ds_id int;
    
Begin

    entity_type_id := clearing_house.fn_get_entity_type_for('tbl_physical_samples');
    
	Select x.public_db_id Into public_ds_id
	From clearing_house.view_datasets x
	Where x.local_db_id = -$2;
	
	Return Query

		Select 

			LDB.physical_sample_id				               			As local_db_id,
			RDB.physical_sample_id				               			As public_db_id,

			LDB.sample_name												As sample_name,

			LDB.method_id												As method_id,
			LDB.method_name												As method_name,
			LDB.prep_method_id											As prep_method_id,
			LDB.prep_method_name										As prep_method_name,

			LDB.measured_value											As measured_value,

			RDB.measured_value											As public_measured_value,
			
			entity_type_id												As entity_type_id

		From clearing_house.view_clearinghouse_dataset_measured_values LDB
		Left Join clearing_house.view_dataset_measured_values RDB
		  On RDB.dataset_id = public_ds_id
		 And RDB.physical_sample_id = LDB.public_physical_sample_id
		 And RDB.method_id = LDB.public_method_id
		 And RDB.prep_method_id = LDB.public_prep_method_id
		Where LDB.source_id = 1
		  And LDB.submission_id = $1
		  And LDB.local_dataset_id = -$2;
		  
End $_$;


--
-- TOC entry 980 (class 1255 OID 16517)
-- Name: fn_clearinghouse_review_dataset_submissions_client_data(integer, integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_clearinghouse_review_dataset_submissions_client_data(integer, integer) RETURNS TABLE(local_db_id integer, first_name character varying, last_name character varying, submission_type character varying, notes text, public_db_id integer, public_first_name character varying, public_last_name character varying, public_submission_type character varying, public_notes text, date_updated text, entity_type_id integer)
    LANGUAGE plpgsql
    AS $_$
Declare
    entity_type_id int;
Begin

    entity_type_id := clearing_house.fn_get_entity_type_for('tbl_dataset_submissions');

	Return Query

		Select 
		
			LDB.local_db_id				               					As local_db_id,

			LDB.first_name												As first_name,
			LDB.last_name												As last_name,
			LDB.submission_type											As submission_type,
			LDB.notes													As notes,

			LDB.public_db_id				            				As public_db_id,

			RDB.first_name												As public_first_name,
			RDB.last_name												As public_last_name,
			RDB.submission_type											As public_submission_type,
			RDB.notes													As public_notes,

			to_char(LDB.date_updated,'YYYY-MM-DD')						As date_updated,
			
			entity_type_id												As entity_type_id

		From (
		
			Select	d.source_id                                         As source_id,
					d.submission_id                                     As submission_id,
					d.local_db_id										As dataset_id,
					d.public_db_id										As public_dataset_id,
					
					ds.local_db_id										As local_db_id,
					ds.public_db_id										As public_db_id,
					ds.merged_db_id										As merged_db_id,

					c.first_name										As first_name,
					c.last_name											As last_name,
					dst.submission_type									As submission_type,
					ds.notes											As notes,

					ds.date_updated
					
			From clearing_house.view_datasets d
			Join clearing_house.view_dataset_submissions ds
			  On ds.dataset_id = d.merged_db_id
			 And ds.submission_id In (0, d.submission_id)
			Join clearing_house.view_contacts c
			  On c.merged_db_id = ds.contact_id
			 And c.submission_id In (0, d.submission_id)
			Join clearing_house.view_dataset_submission_types dst
			  On dst.merged_db_id = ds.submission_type_id
			 And dst.submission_id In (0, d.submission_id)
 
		) As LDB Left Join (
		
			Select	d.dataset_id										As dataset_id,
					
					ds.dataset_submission_id							As dataset_submission_id,

					c.first_name										As first_name,
					c.last_name											As last_name,
					dst.submission_type									As submission_type,
					ds.notes											As notes,

					ds.date_updated
					
			From public.tbl_datasets d
			Join public.tbl_dataset_submissions ds
			  On ds.dataset_id = d.dataset_id
			Join public.tbl_contacts c
			  On c.contact_id = ds.contact_id
			Join public.tbl_dataset_submission_types dst
			  On dst.submission_type_id = ds.submission_type_id
 
		  ) As RDB
		  On RDB.dataset_submission_id = LDB.public_db_id
		Where LDB.source_id = 1
		  And LDB.submission_id = $1
		  And LDB.dataset_id = -$2;
		  
End $_$;


--
-- TOC entry 981 (class 1255 OID 16518)
-- Name: fn_clearinghouse_review_sample_alternative_names_client_data(integer, integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_clearinghouse_review_sample_alternative_names_client_data(integer, integer) RETURNS TABLE(local_db_id integer, alt_ref character varying, alt_ref_type character varying, public_db_id integer, public_alt_ref character varying, public_alt_ref_type character varying, date_updated text, entity_type_id integer)
    LANGUAGE plpgsql
    AS $_$

Declare
    entity_type_id int;

Begin

    entity_type_id := clearing_house.fn_get_entity_type_for('tbl_sample_alt_refs');

	Return Query

			Select 

				LDB.local_db_id		                    As local_db_id,
				
				LDB.alt_ref                      		As alt_ref, 
				LDB.alt_ref_type						As alt_ref_type,

				LDB.public_db_id                        As public_db_id,
				RDB.alt_ref                      		As public_alt_ref, 
				RDB.alt_ref_type 						As public_alt_ref_type,

				to_char(LDB.date_updated,'YYYY-MM-DD')	As date_updated,
				entity_type_id                 			As entity_type_id

			From (
				Select s.submission_id					As submission_id,
					   s.source_id						As source_id,
					   s.merged_db_id					As physical_sample_id,
					   a.local_db_id					As local_db_id,
					   a.public_db_id					As public_db_id,
					   a.merged_db_id					As merged_db_id,
                       a.alt_ref                        As alt_ref,
                       t.alt_ref_type                   As alt_ref_type,
                       a.date_updated					As date_updated
                From clearing_house.view_physical_samples s
                Join clearing_house.view_sample_alt_refs a
                  On a.physical_sample_id = s.merged_db_id
                 And a.submission_id in (0, s.submission_id)
                Join clearing_house.view_alt_ref_types t
                  On t.merged_db_id = a.alt_ref_type_id
                 And t.submission_id in (0, s.submission_id)
			) As LDB Left Join (
				Select a.alt_ref_type_id    			As alt_ref_type_id,
                       a.alt_ref                        As alt_ref,
                       t.alt_ref_type                   As alt_ref_type
                From public.tbl_sample_alt_refs a
                Join public.tbl_alt_ref_types t
                  On t.alt_ref_type_id = a.alt_ref_type_id
			) As RDB
			  On RDB.alt_ref_type_id = LDB.public_db_id
			Where LDB.source_id = 1
			  And LDB.submission_id = $1
			  And LDB.physical_sample_id = -$2;
		  
End $_$;


--
-- TOC entry 983 (class 1255 OID 16519)
-- Name: fn_clearinghouse_review_sample_client_data(integer, integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_clearinghouse_review_sample_client_data(integer, integer) RETURNS TABLE(local_db_id integer, date_sampled character varying, sample_name character varying, sample_name_type character varying, type_name character varying, public_db_id integer, public_date_sampled character varying, public_sample_name character varying, public_sample_name_type character varying, public_type_name character varying, entity_type_id integer)
    LANGUAGE plpgsql
    AS $_$

Declare
    entity_type_id int;

Begin

    entity_type_id := clearing_house.fn_get_entity_type_for('tbl_physical_samples');

	Return Query

		With sample (submission_id, source_id, local_db_id, public_db_id, merged_db_id, date_sampled, sample_name, sample_name_type, sample_type) As (
            Select  s.submission_id         As submission_id,
                    s.source_id             As source_id,
                    s.local_db_id           As local_db_id,
                    s.public_db_id          As public_db_id,
                    s.merged_db_id          As merged_db_id,
                    s.date_sampled          As date_sampled,
                    s.sample_name           As sample_name,
                    r.alt_ref_type          As sample_type_type,
                    n.type_name             As sample_type
            From clearing_house.view_physical_samples s
            Left Join clearing_house.view_alt_ref_types r
              On r.merged_db_id = s.alt_ref_type_id
             And r.submission_id In (0, s.submission_id)
            Join clearing_house.view_sample_types n
              On n.merged_db_id = s.sample_type_id
             And n.submission_id In (0, s.submission_id)
		)
			Select 

				LDB.local_db_id						As local_db_id,
				LDB.date_sampled                    As date_sampled, 
				LDB.sample_name                     As sample_name,
				LDB.sample_name_type				As sample_name_type,
				LDB.sample_type                     As sample_type,

				LDB.public_db_id					As public_db_id,
				RDB.date_sampled                    As public_date_sampled, 
				RDB.sample_name                     As public_sample_name,
				RDB.sample_name_type				As public_sample_name_type,
				RDB.sample_type                     As public_sample_type,

                entity_type_id

			From sample LDB
			Left Join sample RDB
			  On RDB.source_id = 2
			 And RDB.public_db_id = LDB.public_db_id
			Where LDB.source_id = 1
			  And LDB.submission_id = $1
			  And LDB.local_db_id = -$2;
		  
End $_$;


--
-- TOC entry 984 (class 1255 OID 16520)
-- Name: fn_clearinghouse_review_sample_colours_client_data(integer, integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_clearinghouse_review_sample_colours_client_data(integer, integer) RETURNS TABLE(local_db_id integer, colour_name character varying, rgb integer, method_name character varying, public_db_id integer, public_colour_name character varying, public_rgb integer, public_method_name character varying, date_updated text, entity_type_id integer)
    LANGUAGE plpgsql
    AS $_$
Declare
    entity_type_id int;
Begin

    entity_type_id := clearing_house.fn_get_entity_type_for('tbl_colours');

	Return Query

		Select 
			LDB.local_db_id				               	As local_db_id, /* Alt: Use colour_id instead */
			LDB.colour_name                             As colour_name, 
			LDB.rgb                                     As rgb, 
			LDB.method_name                       		As method_name, 

			LDB.public_db_id				            As public_db_id,
			RDB.colour_name                             As public_colour_name, 
			RDB.rgb                                     As public_rgb, 
			RDB.method_name                       		As public_method_name, 

			to_char(LDB.date_updated,'YYYY-MM-DD')		As date_updated,
			entity_type_id								As entity_type_id

		From (
			Select	s.source_id                         As source_id,
					s.submission_id                     As submission_id,
					s.local_db_id						As physical_sample_id,
					sc.local_db_id						As local_db_id,
					sc.public_db_id						As public_db_id,
					sc.merged_db_id						As merged_db_id,
                    --c.merged_db_id                    As colour_id, /* alternative review entity */
                    c.colour_name                       As colour_name,
                    c.rgb                               As rgb,
                    m.method_name                       As method_name,
                    sc.date_updated                     As date_updated
            From clearing_house.view_physical_samples s
            Join clearing_house.view_sample_colours sc
              On sc.physical_sample_id = s.merged_db_id
             And sc.submission_id in (0, s.submission_id)
            Join clearing_house.view_colours c
              On c.merged_db_id = sc.colour_id
             And c.submission_id in (0, s.submission_id)
            Join clearing_house.view_methods m
              On m.merged_db_id = c.method_id
             And m.submission_id in (0, s.submission_id)
		) As LDB Left Join (
            Select	sc.sample_colour_id					As sample_colour_id,
                    c.colour_id                         As colour_id, /* alternative review entity */
                    c.colour_name                       As colour_name,
                    c.rgb                               As rgb,
                    m.method_name                       As method_name
            From public.tbl_sample_colours sc
            Join public.tbl_colours c
              On c.colour_id = sc.colour_id
            Join public.tbl_methods m
              On m.method_id = c.method_id
		) As RDB
		  On RDB.sample_colour_id = LDB.public_db_id
		Where LDB.source_id = 1
		  And LDB.submission_id = $1
		  And LDB.physical_sample_id = -$2;
		  
End $_$;


--
-- TOC entry 985 (class 1255 OID 16521)
-- Name: fn_clearinghouse_review_sample_descriptions_client_data(integer, integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_clearinghouse_review_sample_descriptions_client_data(integer, integer) RETURNS TABLE(local_db_id integer, type_name character varying, type_description text, public_db_id integer, public_type_name character varying, public_type_description text, date_updated text, entity_type_id integer)
    LANGUAGE plpgsql
    AS $_$
Declare
    entity_type_id int;
Begin

    entity_type_id := clearing_house.fn_get_entity_type_for('tbl_sample_descriptions');

	Return Query

		Select 
			LDB.local_db_id				               					As local_db_id,

			LDB.type_name                         						As type_name, 
			LDB.type_description                       					As type_description, 

			LDB.public_db_id				            				As public_db_id,

			RDB.type_name                         						As public_type_name, 
			RDB.type_description                       					As public_type_description, 

			to_char(LDB.date_updated,'YYYY-MM-DD')						As date_updated,
			entity_type_id												As entity_type_id

		From (
			Select	s.source_id                                         As source_id,
					s.submission_id                                     As submission_id,
					s.local_db_id										As physical_sample_id,
					sd.local_db_id										As local_db_id,
					sd.public_db_id										As public_db_id,
					sd.merged_db_id										As merged_db_id,
                    sd.description                                      As description,
                    t.type_name                                         As type_name,
                    t.type_description                                  As type_description,
                    sd.date_updated                                     As date_updated
            From clearing_house.view_physical_samples s
            Join clearing_house.view_sample_descriptions sd
              On sd.sample_description_id = s.merged_db_id
             And sd.submission_id in (0, s.submission_id)
            Join clearing_house.view_sample_description_types t
              On t.merged_db_id = sd.sample_description_type_id
             And t.submission_id in (0, s.submission_id)
		) As LDB Left Join (
			Select	sd.sample_description_id							As sample_description_id,
                    sd.description                                      As description,
                    t.type_name                                         As type_name,
                    t.type_description                                  As type_description
            From public.tbl_sample_descriptions sd
            Join public.tbl_sample_description_types t
              On t.sample_description_type_id = sd.sample_description_type_id
		  ) As RDB
		  On RDB.sample_description_id = LDB.public_db_id
		Where LDB.source_id = 1
		  And LDB.submission_id = $1
		  And LDB.physical_sample_id = -$2;
		  
End $_$;


--
-- TOC entry 986 (class 1255 OID 16522)
-- Name: fn_clearinghouse_review_sample_dimensions_client_data(integer, integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_clearinghouse_review_sample_dimensions_client_data(integer, integer) RETURNS TABLE(local_db_id integer, dimension_value numeric, dimension_name character varying, method_name character varying, public_db_id integer, public_dimension_value numeric, public_dimension_name character varying, public_method_name character varying, date_updated text, entity_type_id integer)
    LANGUAGE plpgsql
    AS $_$
Declare
    entity_type_id int;
Begin

    entity_type_id := clearing_house.fn_get_entity_type_for('tbl_sample_dimensions');

	Return Query

		Select 
			LDB.local_db_id				               					As local_db_id,
			LDB.dimension_value                         				As dimension_value, 
			LDB.dimension_name                         					As dimension_name, 
			LDB.method_name                         					As method_name, 
			LDB.public_db_id				            				As public_db_id,
			RDB.dimension_value                         				As public_dimension_value, 
			RDB.dimension_name                         					As public_dimension_name, 
			RDB.method_name                         					As public_method_name, 
			to_char(LDB.date_updated,'YYYY-MM-DD')						As date_updated,
			entity_type_id												As entity_type_id
		From (
			Select	s.source_id                                         As source_id,
					s.submission_id                                     As submission_id,
					s.local_db_id										As physical_sample_id,
					sd.local_db_id 										As local_db_id,
					sd.public_db_id 									As public_db_id,
					sd.merged_db_id 									As merged_db_id,
                    sd.dimension_value                                  As dimension_value,
                    Coalesce(t.dimension_abbrev, t.dimension_name, '')  As dimension_name,
                    m.method_name                                       As method_name,
                    sd.date_updated                                     As date_updated
            From clearing_house.view_physical_samples s
            Join clearing_house.view_sample_dimensions sd
              On sd.physical_sample_id = s.merged_db_id
             And sd.submission_id in (0, s.submission_id)
            Join clearing_house.view_dimensions t
              On t.merged_db_id = sd.dimension_id
             And t.submission_id in (0, s.submission_id)
            Join clearing_house.view_methods m
              On m.merged_db_id = sd.method_id
             And m.submission_id in (0, s.submission_id)
		) As LDB Left Join (
			Select	sd.sample_dimension_id 								As sample_dimension_id,
                    sd.dimension_value                                  As dimension_value,
                    Coalesce(t.dimension_abbrev, t.dimension_name, '')  As dimension_name,
                    m.method_name                                       As method_name
            From public.tbl_sample_dimensions sd
            Join public.tbl_dimensions t
              On t.dimension_id = sd.dimension_id
            Join public.tbl_methods m
              On m.method_id = sd.method_id
		  ) As RDB
		  On RDB.sample_dimension_id = LDB.public_db_id
		Where LDB.source_id = 1
		  And LDB.submission_id = $1
		  And LDB.physical_sample_id = -$2;
		  
End $_$;


--
-- TOC entry 987 (class 1255 OID 16523)
-- Name: fn_clearinghouse_review_sample_features_client_data(integer, integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_clearinghouse_review_sample_features_client_data(integer, integer) RETURNS TABLE(local_db_id integer, feature_name character varying, feature_description text, feature_type_name character varying, public_db_id integer, public_feature_name character varying, public_feature_description text, public_feature_type_name character varying, date_updated text, entity_type_id integer)
    LANGUAGE plpgsql
    AS $_$
Declare
    sample_group_references_entity_type_id int;
Begin

    sample_group_references_entity_type_id := clearing_house.fn_get_entity_type_for('tbl_physical_sample_features');

	Return Query

		Select 
			LDB.local_db_id                             As local_db_id,
			LDB.feature_name                            As feature_name, 
			LDB.feature_description                     As feature_description,
			LDB.feature_type_name                       As feature_type_name,
			LDB.public_db_id                            As public_db_id,
			RDB.feature_name                            As public_feature_name, 
			RDB.feature_description                     As public_feature_description,
			RDB.feature_type_name                       As public_feature_type_name,
			to_char(LDB.date_updated,'YYYY-MM-DD')		As date_updated,
			sample_group_references_entity_type_id		As entity_type_id
		From (
			Select	s.source_id                         As source_id,
					s.submission_id                     As submission_id,
					s.merged_db_id                      As physical_sample_id,
					fs.local_db_id						As local_db_id,
					fs.public_db_id						As public_db_id,
                    fs.merged_db_id						As merged_db_id,
                    f.feature_name						As feature_name,
                    f.feature_description				As feature_description,
                    t.feature_type_name					As feature_type_name,
                    fs.date_updated                     As date_updated
            From clearing_house.view_physical_samples s
            Join clearing_house.view_physical_sample_features fs
              On fs.physical_sample_id = s.merged_db_id
             And fs.submission_id in (0, s.submission_id)
            Join clearing_house.view_features f
              On f.merged_db_id = fs.feature_id
             And f.submission_id in (0, s.submission_id)
            Join clearing_house.view_feature_types t
              On t.merged_db_id = f.feature_type_id
             And t.submission_id in (0, s.submission_id)
		) As LDB Left Join (
			Select	fs.feature_id						As feature_id,
                    f.feature_name						As feature_name,
                    f.feature_description				As feature_description,
                    t.feature_type_name					As feature_type_name
            From public.tbl_physical_sample_features fs
            Join public.tbl_features f
              On f.feature_id = fs.feature_id
            Join public.tbl_feature_types t
              On t.feature_type_id = f.feature_type_id
		) As RDB
		  On RDB.feature_id = LDB.public_db_id
		Where LDB.source_id = 1
		  And LDB.submission_id = $1
		  And LDB.physical_sample_id = -$2;
		  
End $_$;


--
-- TOC entry 988 (class 1255 OID 16524)
-- Name: fn_clearinghouse_review_sample_group_client_data(integer, integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_clearinghouse_review_sample_group_client_data(integer, integer) RETURNS TABLE(local_db_id integer, sample_group_name character varying, sampling_method character varying, sampling_context character varying, public_db_id integer, public_sample_group_name character varying, public_sampling_method character varying, public_sampling_context character varying, entity_type_id integer)
    LANGUAGE plpgsql
    AS $_$

Declare
    entity_type_id int;

Begin

    entity_type_id := clearing_house.fn_get_entity_type_for('tbl_sample_groups');

	Return Query

		With sample_group (submission_id, source_id, local_db_id, public_db_id, merged_db_id, sample_group_name, sampling_method, sampling_context) As (
            Select sg.submission_id                 As submission_id,
                   sg.source_id                     As source_id,
                   sg.local_db_id                   As local_db_id,
                   sg.public_db_id                  As public_db_id,
                   sg.merged_db_id                  As merged_db_id,
                   sg.sample_group_name             As sample_group_name,
                   m.method_name                    As sampling_method,
                   c.sampling_context				As sampling_context
            From clearing_house.view_sample_groups sg
            Join clearing_house.view_methods m
              On m.merged_db_id = sg.method_id
             And m.submission_id in (0, sg.submission_id)
            Join clearing_house.view_sample_group_sampling_contexts c
              On c.merged_db_id = sg.sampling_context_id
             And c.submission_id in (0, sg.submission_id)
		)
			Select 

				LDB.local_db_id						As local_db_id,
				
				LDB.sample_group_name				As sample_group_name, 
				LDB.sampling_method					As sampling_method,
				LDB.sampling_context				As sampling_context,

				LDB.public_db_id					As public_db_id,

				RDB.sample_group_name				As public_sample_group_name, 
				RDB.sampling_method					As public_sampling_method,
				RDB.sampling_context				As public_sampling_context,

                entity_type_id

			From sample_group LDB
			Left Join sample_group RDB
			  On RDB.source_id = 2
			 And RDB.public_db_id = LDB.public_db_id
			Where LDB.source_id = 1
			  And LDB.submission_id = $1
			  And LDB.local_db_id = -$2;
		  
End $_$;


--
-- TOC entry 990 (class 1255 OID 16525)
-- Name: fn_clearinghouse_review_sample_group_descriptions_client_data(integer, integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_clearinghouse_review_sample_group_descriptions_client_data(integer, integer) RETURNS TABLE(local_db_id integer, group_description character varying, type_name character varying, type_description character varying, public_db_id integer, public_group_description character varying, public_type_name character varying, public_type_description character varying, entity_type_id integer)
    LANGUAGE plpgsql
    AS $_$
Declare
    entity_type_id int;
Begin

    entity_type_id := clearing_house.fn_get_entity_type_for('tbl_sample_group_descriptions');

	Return Query

		Select 
			LDB.local_db_id				               					As local_db_id,
			LDB.group_description                       				As group_description, 
			LDB.type_name                         						As type_name, 
			LDB.type_description                       					As type_description, 
			LDB.public_db_id				            				As public_db_id,
			RDB.group_description                      					As public_group_description, 
			RDB.type_name                         						As public_type_name, 
			RDB.type_description                       					As public_type_description, 
			entity_type_id												As entity_type_id
		From (
			Select	sg.source_id										As source_id,
					sg.submission_id									As submission_id,
					sg.local_db_id										As sample_group_id,
					d.local_db_id										As local_db_id,
					d.public_db_id										As public_db_id,
					d.merged_db_id										As merged_db_id,
					d.group_description									As group_description,
					t.type_name											As type_name,
					t.type_description									As type_description
			From clearing_house.view_sample_groups sg
			Join clearing_house.view_sample_group_descriptions d
			  On d.sample_group_description_id = sg.merged_db_id
			 And d.submission_id in (0, sg.submission_id)
			Join clearing_house.view_sample_group_description_types t
			  On t.merged_db_id = d.sample_group_description_type_id
			 And t.submission_id in (0, sg.submission_id)
		) As LDB Left Join (
			Select	d.sample_group_description_id						As sample_group_description_id,
					d.group_description									As group_description,
					t.type_name											As type_name,
					t.type_description									As type_description
			From public.tbl_sample_groups sg
			Join public.tbl_sample_group_descriptions d
			  On d.sample_group_id = sg.sample_group_id
			Join public.tbl_sample_group_description_types t
			  On t.sample_group_description_type_id = d.sample_group_description_type_id
		  ) As RDB
		  On RDB.sample_group_description_id = LDB.public_db_id
		Where LDB.source_id = 1
		  And LDB.submission_id = $1
		  And LDB.sample_group_id = -$2;
		  
End $_$;


--
-- TOC entry 991 (class 1255 OID 16526)
-- Name: fn_clearinghouse_review_sample_group_dimensions_client_data(integer, integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_clearinghouse_review_sample_group_dimensions_client_data(integer, integer) RETURNS TABLE(local_db_id integer, dimension_value numeric, dimension_name character varying, public_db_id integer, public_dimension_value numeric, public_dimension_name character varying, date_updated text, entity_type_id integer)
    LANGUAGE plpgsql
    AS $_$
Declare
    entity_type_id int;
Begin

    entity_type_id := clearing_house.fn_get_entity_type_for('tbl_sample_group_dimensions');

	Return Query

		Select 
			LDB.local_db_id				               					As local_db_id,
			LDB.dimension_value                         				As dimension_value, 
			LDB.dimension_name                         					As dimension_name, 
			LDB.public_db_id				            				As public_db_id,
			RDB.dimension_value                         				As public_dimension_value, 
			RDB.dimension_name                         					As public_dimension_name, 
			to_char(LDB.date_updated,'YYYY-MM-DD')						As date_updated,
			entity_type_id												As entity_type_id
		From (
			Select	sg.source_id										As source_id,
					sg.submission_id									As submission_id,
					sg.local_db_id										As sample_group_id,
					d.local_db_id 										As local_db_id,
					d.public_db_id 										As public_db_id,
					d.merged_db_id 										As merged_db_id,
					d.dimension_value									As dimension_value,
					Coalesce(t.dimension_abbrev, t.dimension_name, '')	As dimension_name,
					d.date_updated										As date_updated
			From clearing_house.view_sample_groups sg
			Join clearing_house.view_sample_group_dimensions d
			  On d.sample_group_id = sg.merged_db_id
			 And d.submission_id in (0, sg.submission_id)
			Join clearing_house.view_dimensions t
			  On t.merged_db_id = d.dimension_id
			 And d.submission_id in (0, sg.submission_id)
		) As LDB Left Join (
			Select	d.sample_group_dimension_id 						As sample_group_dimension_id,
					d.dimension_value									As dimension_value,
					Coalesce(t.dimension_abbrev, t.dimension_name, '')	As dimension_name
			From public.tbl_sample_group_dimensions d
			Join public.tbl_dimensions t
			  On t.dimension_id = d.dimension_id
		  ) As RDB
		  On RDB.sample_group_dimension_id = LDB.public_db_id
		Where LDB.source_id = 1
		  And LDB.submission_id = $1
		  And LDB.sample_group_id = -$2;
		  
End $_$;


--
-- TOC entry 992 (class 1255 OID 16527)
-- Name: fn_clearinghouse_review_sample_group_lithology_client_data(integer, integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_clearinghouse_review_sample_group_lithology_client_data(integer, integer) RETURNS TABLE(local_db_id integer, depth_top numeric, depth_bottom numeric, description text, lower_boundary character varying, public_db_id integer, public_depth_top numeric, public_depth_bottom numeric, public_description text, public_lower_boundary character varying, entity_type_id integer)
    LANGUAGE plpgsql
    AS $_$

Declare
    entity_type_id int;

Begin

    entity_type_id := clearing_house.fn_get_entity_type_for('tbl_site_locations');

	Return Query

			Select 

				LDB.local_db_id		                    As local_db_id,
				
				LDB.depth_top                      		As depth_top, 
				LDB.depth_bottom						As depth_bottom,
				LDB.description                  		As description,
				LDB.lower_boundary                 		As lower_boundary,

				LDB.public_db_id                        As public_db_id,
				RDB.depth_top                      		As public_depth_top, 
				RDB.depth_bottom						As public_depth_bottom,
				RDB.description                  		As public_description,
				RDB.lower_boundary                 		As public_lower_boundary,

				entity_type_id              			As entity_type_id

			From (
				Select sg.submission_id					As submission_id,
					   sg.source_id						As source_id,
					   sg.merged_db_id					As sample_group_id,
					   l.local_db_id					As local_db_id,
					   l.public_db_id					As public_db_id,
					   l.merged_db_id					As lithology_id,
					   l.depth_top						As depth_top,
					   l.depth_bottom					As depth_bottom,
					   l.description					As description,
					   l.lower_boundary					As lower_boundary
				From clearing_house.view_sample_groups sg
				Join clearing_house.view_lithology l
				  On l.sample_group_id = sg.merged_db_id
				 And l.submission_id in (0, sg.submission_id)
			) As LDB Left Join (
				Select sg.sample_group_id				As sample_group_id,
					   l.lithology_id					As lithology_id,
					   l.depth_top						As depth_top,
					   l.depth_bottom					As depth_bottom,
					   l.description					As description,
					   l.lower_boundary					As lower_boundary
				From public.tbl_sample_groups sg
				Join public.tbl_lithology l
				  On l.sample_group_id = sg.sample_group_id
			) As RDB
			  On RDB.lithology_id = LDB.public_db_id
			Where LDB.source_id = 1
			  And LDB.submission_id = $1
			  And LDB.sample_group_id = -$2;
		  
End $_$;


--
-- TOC entry 993 (class 1255 OID 16528)
-- Name: fn_clearinghouse_review_sample_group_notes_client_data(integer, integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_clearinghouse_review_sample_group_notes_client_data(integer, integer) RETURNS TABLE(local_db_id integer, note character varying, public_db_id integer, public_note character varying, date_updated text, entity_type_id integer)
    LANGUAGE plpgsql
    AS $_$
Declare
    entity_type_id int;
Begin

    entity_type_id := clearing_house.fn_get_entity_type_for('tbl_sample_group_notes');

	Return Query

		Select 
			LDB.local_db_id					            As local_db_id,
			LDB.note                              		As note, 
			LDB.public_db_id                            As public_db_id,
			RDB.note                               		As public_note, 
			to_char(LDB.date_updated,'YYYY-MM-DD')		As date_updated,
			entity_type_id                  			As entity_type_id
		From (
			Select	sg.source_id						As source_id,
					sg.submission_id					As submission_id,
					sg.local_db_id						As sample_group_id,
					n.local_db_id						As local_db_id, 
					n.public_db_id						As public_db_id, 
					n.merged_db_id						As merged_db_id, 
					n.note								As note,
					n.date_updated						As date_updated
			From clearing_house.view_sample_groups sg
			Join clearing_house.view_sample_group_notes n
			  On n.sample_group_id = sg.merged_db_id
			 And n.submission_id in (0, sg.submission_id)
		) As LDB Left Join (
			Select	n.sample_group_note_id				As sample_group_note_id, 
					n.note								As note
			From public.tbl_sample_group_notes n
		) As RDB
		  On RDB.sample_group_note_id = LDB.public_db_id
		Where LDB.source_id = 1
		  And LDB.submission_id = $1
		  And LDB.sample_group_id = -$2;
		  
End $_$;


--
-- TOC entry 994 (class 1255 OID 16529)
-- Name: fn_clearinghouse_review_sample_group_positions_client_data(integer, integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_clearinghouse_review_sample_group_positions_client_data(integer, integer) RETURNS TABLE(local_db_id integer, sample_group_position numeric, position_accuracy character varying, method_name character varying, dimension_name character varying, public_db_id integer, public_sample_group_position numeric, public_position_accuracy character varying, public_method_name character varying, public_dimension_name character varying, entity_type_id integer)
    LANGUAGE plpgsql
    AS $_$
Declare
    entity_type_id int;
Begin

    entity_type_id := clearing_house.fn_get_entity_type_for('tbl_sample_group_coordinates');

	Return Query

		Select 
			LDB.local_db_id				               	As local_db_id,
			LDB.sample_group_position                   As sample_group_position, 
			LDB.position_accuracy                       As position_accuracy, 
			LDB.method_name                       		As method_name, 
			LDB.dimension_name                       	As dimension_name, 
			LDB.public_db_id				            As public_db_id,
			RDB.sample_group_position                   As public_sample_group_position, 
			RDB.position_accuracy                       As public_position_accuracy, 
			RDB.method_name                       		As public_method_name, 
			RDB.dimension_name                       	As public_dimension_name, 
			entity_type_id								As entity_type_id
		From (
			Select	sg.source_id						As source_id,
					sg.submission_id					As submission_id,
					sg.local_db_id						As sample_group_id,
					d.local_db_id						As local_db_id,
					d.public_db_id						As public_db_id,
					d.merged_db_id						As merged_db_id,
					c.sample_group_position				As sample_group_position,
					c.position_accuracy					As position_accuracy,
					m.method_name						As method_name,
					d.dimension_name					As dimension_name
			From clearing_house.view_sample_groups sg
			Join clearing_house.view_sample_group_coordinates c
			  On c.sample_group_id = sg.merged_db_id
			 And c.submission_id In (0, sg.submission_id)
			Join clearing_house.view_coordinate_method_dimensions md
			  On md.merged_db_id = c.coordinate_method_dimension_id
			 And md.submission_id In (0, sg.submission_id)
			Join clearing_house.view_methods m
			  On m.merged_db_id = md.method_id
			 And m.submission_id In (0, sg.submission_id)
			Join clearing_house.view_dimensions d
			  On d.merged_db_id = md.dimension_id
			 And d.submission_id In (0, sg.submission_id)
			Where 1 = 1
		) As LDB Left Join (
			Select	c.sample_group_position_id			As sample_group_position_id,
					c.sample_group_position				As sample_group_position,
					c.position_accuracy					As position_accuracy,
					m.method_name						As method_name,
					d.dimension_name					As dimension_name
			From public.tbl_sample_group_coordinates c
			Join public.tbl_coordinate_method_dimensions md
			  On md.coordinate_method_dimension_id = c.coordinate_method_dimension_id
			Join public.tbl_methods m
			  On m.method_id = md.method_id
			Join public.tbl_dimensions d
			  On d.dimension_id = md.dimension_id
		) As RDB
		  On RDB.sample_group_position_id = LDB.public_db_id
		Where LDB.source_id = 1
		  And LDB.submission_id = $1
		  And LDB.sample_group_id = -$2;
		  
End $_$;


--
-- TOC entry 996 (class 1255 OID 16530)
-- Name: fn_clearinghouse_review_sample_group_references_client_data(integer, integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_clearinghouse_review_sample_group_references_client_data(integer, integer) RETURNS TABLE(local_db_id integer, reference text, public_db_id integer, public_reference text, date_updated text, entity_type_id integer)
    LANGUAGE plpgsql
    AS $_$
Declare
    entity_type_id int;
Begin

    entity_type_id := clearing_house.fn_get_entity_type_for('tbl_sample_group_references');

	Return Query

		Select 
			LDB.sample_group_reference_id               As local_db_id,
			LDB.reference                               As reference, 
			LDB.public_db_id                            As public_db_id,
			RDB.reference                               As public_reference, 
			to_char(LDB.date_updated,'YYYY-MM-DD')		As date_updated,
			entity_type_id                      		As entity_type_id
		From (
			Select	sg.source_id						As source_id,
					sg.submission_id					As submission_id,
					sg.local_db_id						As sample_group_id,
					sr.local_db_id						As sample_group_reference_id,
					b.local_db_id						As local_db_id, 
					b.public_db_id						As public_db_id, 
					b.merged_db_id						As merged_db_id, 
					b.author || ' (' || b.year || ')'	As reference,
					sr.date_updated						As date_updated
			From clearing_house.view_sample_groups sg
			Join clearing_house.view_sample_group_references sr
			  On sr.sample_group_id = sg.merged_db_id
			 And sr.submission_id In (0, sg.submission_id)
			Join clearing_house.view_biblio b
			  On b.merged_db_id = sr.biblio_id
			 And b.submission_id In (0, sg.submission_id)
		) As LDB Left Join (
			Select	b.biblio_id							As biblio_id,
					b.author || ' (' || b.year || ')'	As reference
			From public.tbl_biblio b
		) As RDB
		  On RDB.biblio_id = LDB.public_db_id
		Where LDB.source_id = 1
		  And LDB.submission_id = $1
		  And LDB.sample_group_id = -$2;
		  
End $_$;


--
-- TOC entry 997 (class 1255 OID 16531)
-- Name: fn_clearinghouse_review_sample_horizons_client_data(integer, integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_clearinghouse_review_sample_horizons_client_data(integer, integer) RETURNS TABLE(local_db_id integer, horizon_name character varying, description text, method_name character varying, public_db_id integer, public_horizon_name character varying, public_description text, public_method_name character varying, date_updated text, entity_type_id integer)
    LANGUAGE plpgsql
    AS $_$
Declare
    entity_type_id int;
Begin
    -- Entity in focus should perhaps be tbl_samples instead. In such case return ids from h (and join LDB & RDB on horizon id)
    entity_type_id := clearing_house.fn_get_entity_type_for('tbl_sample_horizons');

	Return Query

		Select 
			LDB.local_db_id				               	As local_db_id, --> use horizon_id instead?
			LDB.horizon_name                            As horizon_name, 
			LDB.description                             As description, 
			LDB.method_name                       		As method_name, 
			LDB.public_db_id				            As public_db_id,
			RDB.horizon_name                            As public_horizon_name, 
			RDB.description                             As public_description, 
			RDB.method_name                       		As public_method_name, 
			to_char(LDB.date_updated,'YYYY-MM-DD')		As date_updated,
			entity_type_id								As entity_type_id
		From (
			Select	s.source_id                         As source_id,
					s.submission_id                     As submission_id,
					s.local_db_id						As physical_sample_id,
					sh.local_db_id						As local_db_id,
					sh.public_db_id						As public_db_id,
					sh.merged_db_id						As merged_db_id,
                    --h.merged_db_id                    As horizon_id,/* alternative review entity */
                    h.horizon_name                      As horizon_name,
                    h.description                       As description,
                    m.method_name                       As method_name,
                    sh.date_updated                     As date_updated
            From clearing_house.view_physical_samples s
            Join clearing_house.view_sample_horizons sh
              On sh.physical_sample_id = s.merged_db_id
             And sh.submission_id in (0, s.submission_id)
            Join clearing_house.view_horizons h
              On h.merged_db_id = sh.horizon_id
             And h.submission_id in (0, s.submission_id)
            Join clearing_house.view_methods m
              On m.merged_db_id = h.method_id
             And m.submission_id in (0, s.submission_id)
			Where 1 = 1
		) As LDB Left Join (
            Select	sh.sample_horizon_id				As sample_horizon_id,
                    h.horizon_name                      As horizon_name,
                    h.description                       As description,
                    m.method_name                       As method_name
            From public.tbl_sample_horizons sh
            Join public.tbl_horizons h
              On h.horizon_id = sh.horizon_id
            Join public.tbl_methods m
              On m.method_id = h.method_id
		) As RDB
		  On RDB.sample_horizon_id = LDB.public_db_id
		Where LDB.source_id = 1
		  And LDB.submission_id = $1
		  And LDB.physical_sample_id = -$2;
		  
End $_$;


--
-- TOC entry 998 (class 1255 OID 16532)
-- Name: fn_clearinghouse_review_sample_images_client_data(integer, integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_clearinghouse_review_sample_images_client_data(integer, integer) RETURNS TABLE(local_db_id integer, image_name character varying, description text, image_type character varying, public_db_id integer, public_image_name character varying, public_description text, public_image_type character varying, date_updated text, entity_type_id integer)
    LANGUAGE plpgsql
    AS $_$
Declare
    entity_type_id int;
Begin

    entity_type_id := clearing_house.fn_get_entity_type_for('tbl_sample_images');

	Return Query

		Select 
			LDB.local_db_id				               	As local_db_id,

			LDB.image_name                              As image_name, 
			LDB.description                             As description, 
			LDB.image_type                       		As image_type, 

			LDB.public_db_id				            As public_db_id,

			RDB.image_name                              As public_image_name, 
			RDB.description                             As public_description, 
			RDB.image_type                       		As public_image_type, 

			to_char(LDB.date_updated,'YYYY-MM-DD')		As date_updated,
			entity_type_id								As entity_type_id

		From (
			Select	s.source_id                         As source_id,
					s.submission_id                     As submission_id,
					s.local_db_id						As physical_sample_id,
					si.local_db_id						As local_db_id,
					si.public_db_id						As public_db_id,
					si.merged_db_id						As merged_db_id,
                    si.image_name                       As image_name,
                    si.description                      As description,
                    it.image_type                       As image_type,
                    si.date_updated                     As date_updated
            From clearing_house.view_physical_samples s
            Join clearing_house.view_sample_images si
              On si.physical_sample_id = s.merged_db_id
             And si.submission_id in (0, s.submission_id)
            Join clearing_house.view_image_types it
              On it.merged_db_id = si.image_type_id
             And it.submission_id in (0, s.submission_id)
		) As LDB Left Join (
			Select	si.sample_image_id					As sample_image_id,
                    si.image_name                       As image_name,
                    si.description                      As description,
                    it.image_type                       As image_type
            From public.tbl_sample_images si
            Join public.tbl_image_types it
              On it.image_type_id = si.image_type_id
		) As RDB
		  On RDB.sample_image_id = LDB.public_db_id
		Where LDB.source_id = 1
		  And LDB.submission_id = $1
		  And LDB.physical_sample_id = -$2;
		  
End $_$;


--
-- TOC entry 999 (class 1255 OID 16533)
-- Name: fn_clearinghouse_review_sample_locations_client_data(integer, integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_clearinghouse_review_sample_locations_client_data(integer, integer) RETURNS TABLE(local_db_id integer, location character varying, location_type character varying, description text, public_db_id integer, public_location character varying, public_location_type character varying, public_description text, date_updated text, entity_type_id integer)
    LANGUAGE plpgsql
    AS $_$

Declare
    entity_type_id int;

Begin

    entity_type_id := clearing_house.fn_get_entity_type_for('tbl_sample_locations');

	Return Query

			Select 

				LDB.local_db_id                   		As local_db_id,
				
				LDB.location                            As location, 
				LDB.location_type                       As location_type,
				LDB.description                         As description,

				LDB.public_db_id                        As public_db_id,

				RDB.location                            As public_location, 
				RDB.location_type                       As public_location_type,
				RDB.description                         As public_description,

				to_char(LDB.date_updated,'YYYY-MM-DD')	As date_updated,
				entity_type_id              			As entity_type_id

			From (
                Select	s.source_id                         As source_id,
                        s.submission_id                     As submission_id,
                        s.local_db_id						As physical_sample_id,
                        sl.local_db_id						As local_db_id,
                        sl.public_db_id						As public_db_id,
                        sl.merged_db_id						As merged_db_id,
                        sl.location                         As location,
                        t.location_type                     As location_type,
                        t.location_type_description         As description,
                        sl.date_updated						As date_updated
                From clearing_house.view_physical_samples s
                Join clearing_house.view_sample_locations sl
                  On sl.physical_sample_id = s.merged_db_id
                 And sl.submission_id in (0, s.submission_id)
                Join clearing_house.view_sample_location_types t
                  On t.merged_db_id = sl.sample_location_type_id
                 And t.submission_id in (0, s.submission_id)
			) As LDB Left Join (
                Select	sl.sample_location_id				As sample_location_id,
                        sl.location                         As location,
                        t.location_type                     As location_type,
                        t.location_type_description         As description
                From public.tbl_sample_locations sl
                Join public.tbl_sample_location_types t
                  On t.sample_location_type_id = sl.sample_location_type_id
			) As RDB
			  On RDB.sample_location_id = LDB.public_db_id
			Where LDB.source_id = 1
			  And LDB.submission_id = $1
			  And LDB.physical_sample_id = -$2;
		  
End $_$;


--
-- TOC entry 1000 (class 1255 OID 16534)
-- Name: fn_clearinghouse_review_sample_notes_client_data(integer, integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_clearinghouse_review_sample_notes_client_data(integer, integer) RETURNS TABLE(local_db_id integer, note text, note_type character varying, public_db_id integer, public_note text, public_note_type character varying, date_updated text, entity_type_id integer)
    LANGUAGE plpgsql
    AS $_$
Declare
    entity_type_id int;
Begin

    entity_type_id := clearing_house.fn_get_entity_type_for('tbl_sample_notes');

	Return Query

		Select 
			LDB.local_db_id					            As local_db_id,
			LDB.note                              		As note, 
			LDB.note_type                          		As note_type, 
			LDB.public_db_id                            As public_db_id,
			RDB.note                               		As public_note, 
			RDB.note_type                          		As note_type, 
			to_char(LDB.date_updated,'YYYY-MM-DD')		As date_updated,
			entity_type_id                              As entity_type_id
		From (
			Select	s.source_id                         As source_id,
					s.submission_id                     As submission_id,
					s.local_db_id						As physical_sample_id,
					n.local_db_id						As local_db_id, 
					n.public_db_id						As public_db_id, 
					n.merged_db_id						As merged_db_id, 
					n.note								As note,
					n.note_type							As note_type,
					n.date_updated						As date_updated
			From clearing_house.view_physical_samples s
			Join clearing_house.view_sample_notes n
			  On n.physical_sample_id = s.merged_db_id
			 And n.submission_id in (0, s.submission_id)
		) As LDB Left Join (
			Select	n.sample_note_id                    As sample_note_id, 
					n.note								As note,
					n.note_type							As note_type
			From public.tbl_sample_notes n
		) As RDB
		  On RDB.sample_note_id = LDB.public_db_id
		Where LDB.source_id = 1
		  And LDB.submission_id = $1
		  And LDB.physical_sample_id = -$2;
		  
End $_$;


--
-- TOC entry 995 (class 1255 OID 16535)
-- Name: fn_clearinghouse_review_site_client_data(integer, integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_clearinghouse_review_site_client_data(integer, integer) RETURNS TABLE(local_db_id integer, latitude_dd numeric, longitude_dd numeric, altitude numeric, national_site_identifier character varying, site_name character varying, site_description text, preservation_status_or_threat character varying, public_db_id integer, public_latitude_dd numeric, public_longitude_dd numeric, public_altitude numeric, public_national_site_identifier character varying, public_site_name character varying, public_site_description text, public_preservation_status_or_threat character varying, entity_type_id integer)
    LANGUAGE plpgsql
    AS $_$

Declare
    site_entity_type_id int;

Begin

    site_entity_type_id := clearing_house.fn_get_entity_type_for('tbl_sites');

	Return Query
		With site_data (submission_id, source_id, site_id, local_db_id, public_db_id, latitude_dd, longitude_dd, altitude, national_site_identifier, site_name, site_description, preservation_status_or_threat) As (
			Select  s.submission_id,
					s.source_id,
					s.site_id,
					s.local_db_id,
					s.public_db_id,
					s.latitude_dd, 
					s.longitude_dd,
					s.altitude,
					s.national_site_identifier,
					s.site_name,
					s.site_description,
					t.preservation_status_or_threat
			From clearing_house.view_sites s
			Left Join clearing_house.view_site_preservation_status t
			  On t.merged_db_id = s.site_preservation_status_id
		)
			Select 

				LDB.local_db_id						As local_db_id,
				
				LDB.latitude_dd						As latitude_dd, 
				LDB.longitude_dd					As longitude_dd,
				LDB.altitude						As altitude,
				LDB.national_site_identifier		As national_site_identifier,
				LDB.site_name						As site_name,
				LDB.site_description				As site_description,
				LDB.preservation_status_or_threat	As preservation_status_or_threat,

				LDB.public_db_id					As public_db_id,
				RDB.latitude_dd						As public_latitude_dd, 
				RDB.longitude_dd					As public_longitude_dd, 
				RDB.altitude						As public_altitude, 
				RDB.national_site_identifier		As public_national_site_identifier, 
				RDB.site_name						As public_site_name, 
				RDB.site_description				As public_site_description,
				RDB.preservation_status_or_threat	As public_preservation_status_or_threat,

                site_entity_type_id


			From site_data LDB
			Left Join site_data RDB
			  On RDB.source_id = 2
			 And RDB.site_id = LDB.public_db_id
			Where LDB.source_id = 1
			  And LDB.submission_id = $1
			  And LDB.site_id = $2;
		  
End $_$;


--
-- TOC entry 1001 (class 1255 OID 16536)
-- Name: fn_clearinghouse_review_site_locations_client_data(integer, integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_clearinghouse_review_site_locations_client_data(integer, integer) RETURNS TABLE(local_db_id integer, location_name character varying, location_type character varying, default_lat_dd numeric, default_long_dd numeric, public_db_id integer, public_location_name character varying, public_location_type character varying, public_default_lat_dd numeric, public_default_long_dd numeric, date_updated text, entity_type_id integer)
    LANGUAGE plpgsql
    AS $_$

Declare
    entity_type_id int;

Begin

    entity_type_id := clearing_house.fn_get_entity_type_for('tbl_site_locations');

	Return Query

			Select 

				LDB.site_location_id                    As local_db_id,
				
				LDB.location_name                       As location_name, 
				LDB.location_type                       As location_type,
				LDB.default_lat_dd                  	As default_lat_dd,
				LDB.default_long_dd                 	As default_long_dd,

				LDB.public_db_id                        As public_db_id,

				RDB.location_name                   	As public_location_name, 
				RDB.location_type               		As public_location_type,
				RDB.default_lat_dd              		As public_default_lat_dd,
				RDB.default_long_dd                     As public_default_long_dd,

				to_char(LDB.date_updated,'YYYY-MM-DD')	As date_updated,

				entity_type_id			As entity_type_id

			From (
				Select s.submission_id, sl.site_location_id, s.source_id, s.site_id, l.location_id, l.local_db_id, l.public_db_id, l.location_name, l.date_updated, t.location_type, l.default_lat_dd, l.default_long_dd
				From clearing_house.view_sites s
				Left Join clearing_house.view_site_locations sl
				  On sl.site_id = s.merged_db_id
				 And sl.submission_id In (0, $1)
				Left Join clearing_house.view_locations l
				  On l.merged_db_id = sl.location_id
				 And sl.submission_id In (0, $1)
				Join clearing_house.view_location_types t
				  On t.merged_db_id = l.location_type_id
				 And t.submission_id In (0, $1)
				Where 1 = 1
			) As LDB Left Join (
				Select l.location_id, l.location_name, l.date_updated, t.location_type, l.default_lat_dd, l.default_long_dd
				From public.tbl_locations l
				Join public.tbl_location_types t
				  On t.location_type_id = l.location_type_id
				Where 1 = 1
			) As RDB
			  On RDB.location_id = LDB.public_db_id
			Where LDB.source_id = 1
			  And LDB.submission_id = $1
			  And LDB.site_id = $2;
		  
End $_$;


--
-- TOC entry 1002 (class 1255 OID 16537)
-- Name: fn_clearinghouse_review_site_natgridrefs_client_data(integer, integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_clearinghouse_review_site_natgridrefs_client_data(integer, integer) RETURNS TABLE(local_db_id integer, method_name character varying, natgridref character varying, public_db_id integer, public_method_name character varying, public_natgridref character varying, entity_type_id integer)
    LANGUAGE plpgsql
    AS $_$

Declare
    entity_type_id int;

Begin

    entity_type_id := clearing_house.fn_get_entity_type_for('tbl_site_natgridrefs');

	Return Query

		Select 
			LDB.site_natgridref_id			As local_db_id,
			LDB.method_name					As method_name, 
			LDB.natgridref					As natgridref, 
			LDB.public_db_id				As public_db_id,
			RDB.method_name					As public_method_name, 
			RDB.natgridref					As public_natgridref,
			entity_type_id          		As entity_type_id
		From (
			Select s.source_id, sg.site_natgridref_id, s.submission_id, s.site_id, sg.site_natgridref_id as local_db_id, sg.public_db_id, m.method_name, sg.natgridref
			From clearing_house.view_sites s
			Join clearing_house.view_site_natgridrefs sg
			  On sg.site_id = s.merged_db_id
			 And sg.submission_id In (0, $1)
			Join clearing_house.view_methods m
			  On m.merged_db_id = sg.method_id
			 And m.submission_id In (0, $1)
			Where 1 = 1
		) As LDB Left Join (
			Select sg.site_natgridref_id, m.method_name, sg.natgridref
			From public.tbl_site_natgridrefs sg
			Join public.tbl_methods m
			  On m.method_id = sg.method_id
			Where 1 = 1
		) As RDB
		  On RDB.site_natgridref_id = LDB.public_db_id
		Where LDB.source_id = 1
		  And LDB.submission_id = $1
		  And LDB.site_id = $2;
		  
End $_$;


--
-- TOC entry 1003 (class 1255 OID 16538)
-- Name: fn_clearinghouse_review_site_references_client_data(integer, integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_clearinghouse_review_site_references_client_data(integer, integer) RETURNS TABLE(local_db_id integer, reference text, public_db_id integer, public_reference text, date_updated text, entity_type_id integer)
    LANGUAGE plpgsql
    AS $_$

Declare
    entity_type_id int;

Begin

    entity_type_id := clearing_house.fn_get_entity_type_for('tbl_site_references');

	Return Query

		Select 
			LDB.site_reference_id                       As local_db_id,
			LDB.reference                               As reference, 
			LDB.public_db_id                            As public_db_id,
			RDB.reference                               As public_reference, 
			to_char(LDB.date_updated,'YYYY-MM-DD')		As date_updated,
			entity_type_id              				As entity_type_id
		From (
			Select s.source_id, s.submission_id, sr.site_reference_id, s.site_id, b.biblio_id as local_db_id, b.public_db_id, b.author || ' (' || b.year || ')' as reference, b.date_updated
			From clearing_house.view_sites s
			Join clearing_house.view_site_references sr
			  On sr.site_id = s.merged_db_id
			 And sr.submission_id In (0, $1)
			Join clearing_house.view_biblio b
			  On b.merged_db_id = sr.biblio_id
			 And b.submission_id In (0, $1)
		) As LDB Left Join (
			Select b.biblio_id, b.author || ' (' || b.year || ')' as reference
			From public.tbl_biblio b
		) As RDB
		  On RDB.biblio_id = LDB.public_db_id
		Where LDB.source_id = 1
		  And LDB.submission_id = $1
		  And LDB.site_id = $2;
		  
End $_$;


--
-- TOC entry 1004 (class 1255 OID 16539)
-- Name: fn_copy_extracted_values_to_entity_table(integer, character varying); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_copy_extracted_values_to_entity_table(integer, character varying) RETURNS text
    LANGUAGE plpgsql
    AS $_$

	Declare schema_columns character varying(255)[];
	Declare submission_columns character varying(255)[];
	Declare submission_column_types character varying(255)[];
	
	Declare insert_columns_string text;
	Declare select_columns_string text;
	Declare public_columns_string text;
	Declare public_key_columns_string text;
	
	Declare sql text;
	Declare i integer;
	
Begin

	If clearing_house.fn_table_exists($2) = false Then
		Raise Exception 'Table does not exist: %', $2;
		Return Null;
	End If;  

	sql := 'Delete From clearing_house.' || $2 || ' Where submission_id = ' || $1::character varying(20) || ';';
	
	--Execute sql;

	submission_columns := clearing_house.fn_get_submission_table_column_names($1, $2);

	If Not (submission_columns is Null or array_length(submission_columns, 1) = 0) Then

		submission_column_types := clearing_house.fn_get_submission_table_column_types($1, $2);

		insert_columns_string := array_to_string(submission_columns, ', ');
		
		select_columns_string := '';
		For i In array_lower(submission_columns, 1) .. array_upper(submission_columns, 1)
		Loop

			select_columns_string := select_columns_string || ' v.values[' || i::text || ']::' || submission_column_types[i] || Case When i < array_upper(submission_columns, 1) Then ', ' Else '' End;

		End Loop;

		/*
		If Not submission_columns <@ clearing_house.fn_get_schema_table_column_names($2) Then
			Raise Exception 'XML contains unknown columns for table % [%] [%]', $2, array_to_string(submission_columns, ','), array_to_string(clearing_house.fn_get_schema_table_column_names($2), ',');
			Return Null;
		End If;
		*/

		insert_columns_string := replace(insert_columns_string, 'cloned_id', 'public_db_id');

		/* Insert values to entity tables. Insert Local DB id attribute (ref_id) if the attribute is a FK */
		sql := sql || 'Insert Into clearing_house.' || $2 || ' (submission_id, source_id, local_db_id, ' || insert_columns_string || ') 
			Select v.submission_id, 1 as source_id, -local_db_id, ' || select_columns_string || '
			From (
				Select v.submission_id, t.table_name, local_db_id, array_agg(
					   Case when v.fk_flag = TRUE Then
							Case When Not v.fk_public_db_id Is Null And r.fk_local_db_id Is Null Then v.fk_public_db_id::text Else (-v.fk_local_db_id)::text End
					   Else v.value End
					Order by c.column_id asc
				) as values
				From clearing_house.tbl_clearinghouse_submission_xml_content_values v

				Join clearing_house.tbl_clearinghouse_submission_tables t
				  On t.table_id = v.table_id

				Join clearing_house.tbl_clearinghouse_submission_xml_content_columns c
				  On c.submission_id = v.submission_id
				 And c.table_id = t.table_id
				 And c.column_id = v.column_id

                /* Check if public record pointed to by FK exists in local DB. In such case set FK value to -fk_local_db_id */
                Left Join clearing_house.view_clearinghouse_local_fk_references r
                  On v.fk_flag = TRUE
                 And r.submission_id = v.submission_id
                 And r.table_id = t.table_id
                 And r.column_id = c.column_id
                 And r.local_db_id = v.local_db_id
                 And r.fk_local_db_id = v.fk_local_db_id

				Where 1 = 1
				  And v.submission_id = ' || $1::character varying(20) || '
				  And t.table_name_underscored = ''' || $2 || '''
				Group By v.submission_id, t.table_name, v.local_db_id
			) as v
		';



		Raise Notice 'Inserted %', sql;
		
		Execute sql;
	
	End If;  


	/* Insert explicilty referenced public data */
	
/*
	public_columns_string := array_to_string(clearing_house.fn_get_public_table_column_names('public', $2), ', ');
	public_key_columns_string := clearing_house.fn_get_public_table_key_column_name('public', $2);
	
	sql := 'Insert Into clearing_house.' || $2 || ' (submission_id, source_id, local_db_id, public_db_id, ' || public_columns_string || ') 
		Select ' || $1::text || ' as submission_id, 2 as source_id, r.local_db_id, e.' || public_key_columns_string || ', ' || public_columns_string || '
		From public.' || $2 || ' e
		Join clearing_house.tbl_clearinghouse_submission_xml_content_records r
		  On r.submission_id = ' || $1::text || '
		 And r.public_db_id = e.' || public_key_columns_string || '
		Join clearing_house.tbl_clearinghouse_submission_tables t
		  On t.table_id = r.table_id
		Where r.submission_id = ' || $1::text || '
		  And t.table_name_underscored = ''' || $2 || ''' 
		  And Not r.public_db_id Is NULL
	';
*/

	Execute sql;

	--Raise Notice 'Copied data: %', sql;

	Return sql;
	
End $_$;


--
-- TOC entry 1005 (class 1255 OID 16540)
-- Name: fn_copy_extracted_values_to_entity_tables(integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_copy_extracted_values_to_entity_tables(integer) RETURNS void
    LANGUAGE plpgsql
    AS $_$
	Declare x RECORD;
Begin

	For x In (Select t.*
			  From clearing_house.tbl_clearinghouse_submission_tables t
			  Join clearing_house.tbl_clearinghouse_submission_xml_content_tables c
			    On c.table_id = t.table_id
			  Where c.submission_id = $1
	) Loop

		--Raise Notice 'Executing table: %', x.table_name_underscored;

		Perform clearing_house.fn_add_new_public_db_columns($1, x.table_name_underscored);
		Perform clearing_house.fn_copy_extracted_values_to_entity_table($1, x.table_name_underscored);

	End Loop;	
	
	--Raise Notice 'XML entity field values extracted and stored for submission id %', $1;
	
End $_$;


--
-- TOC entry 1007 (class 1255 OID 16541)
-- Name: fn_create_local_union_public_entity_views(character varying, character varying); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_create_local_union_public_entity_views(target_schema character varying, local_schema character varying) RETURNS void
    LANGUAGE plpgsql
    AS $$
	
	Declare x RECORD;
	Declare drop_script text;
	Declare create_script text;
	
Begin

	Drop Table If Exists clearing_house.tbl_clearinghouse_SEAD_Create_View_Log;
	
	Create Table clearing_house.tbl_clearinghouse_SEAD_Create_View_Log (create_script text, drop_script text);
	
	For x In (
		Select distinct table_schema As public_schema, table_name, replace(table_name, 'tbl_', 'view_') As view_name
		From clearing_house.tbl_clearinghouse_SEAD_rdb_schema
		Where table_schema Not In ('information_schema', 'pg_catalog', 'clearing_house', 'metainformation')
		  And table_name Like 'tbl%'
		  And is_pk = 'YES' /* Måste finnas PK */
	)
	Loop

		drop_script = 'Drop View If Exists ' || target_schema || '.' || x.view_name || ';';

		create_script := clearing_house.fn_script_local_union_public_entity_view(target_schema, local_schema, x.public_schema, x.table_name);

		If (create_script <> '') Then

			Insert Into clearing_house.tbl_clearinghouse_SEAD_Create_View_Log (create_script, drop_script) Values (create_script, drop_script);

			Execute drop_script || ' ' || create_script;
			

		Else
			Insert Into clearing_house.tbl_clearinghouse_SEAD_Create_View_Log (create_script, drop_script) Values ('--Failed: ' || target_schema || '.' || x.table_name, '');
		End If;

		
	End Loop;
	
End $$;


--
-- TOC entry 1008 (class 1255 OID 16542)
-- Name: fn_create_public_db_entity_tables(character varying); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_create_public_db_entity_tables(target_schema character varying) RETURNS void
    LANGUAGE plpgsql
    AS $$
	
	Declare x RECORD;
	Declare create_script text;
	Declare drop_script text;
	
Begin

	Drop Table If Exists clearing_house.tbl_clearinghouse_SEAD_Create_Table_Log;
	
	Create Table clearing_house.tbl_clearinghouse_SEAD_Create_Table_Log (create_script text, drop_script text);
	
	For x In (
		Select distinct table_schema As source_schema, table_name
		From clearing_house.tbl_clearinghouse_SEAD_rdb_schema
		Where table_schema Not In ('information_schema', 'pg_catalog', 'clearing_house')
		  And table_name Like 'tbl%'
	)
	Loop

		If clearing_house.fn_table_exists(target_schema || '.' || x.table_name) Then

			Raise Exception 'Skipped: % since table already exists. ', target_schema || '.' || x.table_name;
			
		Else
	
			create_script := clearing_house.fn_script_public_db_entity_table(x.source_schema, target_schema, x.table_name);
			drop_script := 'Drop Table If Exists ' || target_schema || '.' ||  x.table_name || ';';

			If (create_script <> '') Then

				Execute drop_script;
				Execute create_script;

				Insert Into clearing_house.tbl_clearinghouse_SEAD_Create_Table_Log (create_script, drop_script) Values (create_script, drop_script);

			Else
				Insert Into clearing_house.tbl_clearinghouse_SEAD_Create_Table_Log (create_script, drop_script) Values ('--Failed: ' || target_schema || '.' || x.table_name, '');
			End If;


		End If;
		
	End Loop;
	
End $$;


--
-- TOC entry 1009 (class 1255 OID 16543)
-- Name: fn_create_schema_type_string(character varying, integer, integer, integer, character varying); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_create_schema_type_string(data_type character varying, character_maximum_length integer, numeric_precision integer, numeric_scale integer, is_nullable character varying) RETURNS text
    LANGUAGE plpgsql
    AS $$
	Declare type_string text;
Begin
	type_string :=  data_type
		||	Case When data_type = 'character varying' Then '(' || Coalesce(character_maximum_length::text, '255') || ')'
				 When data_type = 'numeric' Then
					Case When numeric_precision Is Null And numeric_scale Is Null Then  ''
						 When numeric_scale Is Null Then  '(' || numeric_precision::text || ')'
						 Else '(' || numeric_precision::text || ', ' || numeric_scale::text || ')'
					End
				 Else '' End || ' '|| Case When Coalesce(is_nullable,'') = 'YES' Then 'null' Else 'not null' End;					 
	return type_string;

End $$;


--
-- TOC entry 1010 (class 1255 OID 16544)
-- Name: fn_dba_create_clearing_house_db_model(); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_dba_create_clearing_house_db_model() RETURNS void
    LANGUAGE plpgsql
    AS $$

Begin



    If Not Exists (Select * From INFORMATION_SCHEMA.tables Where table_catalog = CURRENT_CATALOG And table_schema = 'clearing_house' And table_name = 'tbl_clearinghouse_settings') Then

        -- Drop Table clearing_house.tbl_clearinghouse_settings
        Create Table If Not Exists clearing_house.tbl_clearinghouse_settings (
            setting_id serial not null,
            setting_group character varying(255) not null,
            setting_key character varying(255) not null,
            setting_value text not null,
            setting_datatype text not null,
            Constraint pk_tbl_clearinghouse_settings Primary Key (setting_id)
        );

        create unique index idx_tbl_clearinghouse_settings_key On clearing_house.tbl_clearinghouse_settings (setting_key);
        create index idx_tbl_clearinghouse_settings_group On clearing_house.tbl_clearinghouse_settings (setting_group);

    End If;

    If (Select Count(*) From clearing_house.tbl_clearinghouse_settings) = 0 Then

        
        Insert Into clearing_house.tbl_clearinghouse_settings (setting_group, setting_key, setting_value, setting_datatype) 
            Values
                ('logger', 'folder', '/tmp/', 'string'),
                ('', 'max_execution_time', '120', 'numeric'),
                ('mailer', 'smtp-server', 'mail.acc.umu.se', 'string'),
                ('mailer', 'reply-address', 'noreply@sead.se', 'string'),
                ('mailer', 'sender-name', 'SEAD Clearing House', 'string'),
                ('mailer', 'smtp-auth', 'false', 'bool'),
                ('mailer', 'smtp-username', '', 'string'),
                ('mailer', 'smtp-password', '', 'string'),

                ('signal-templates', 'reject-subject', 'SEAD Clearing House: submission has been rejected', 'string'),
                ('signal-templates', 'reject-body',
'
Your submission to SEAD Clearing House has been rejected!

Reject causes:

#REJECT-CAUSES#

This is an auto-generated mail from the SEAD Clearing House system

', 'string'),
 
                ('signal-templates', 'reject-cause',
'
            
Entity type: #ENTITY-TYPE# 
Error scope: #ERROR-SCOPE# 
Entities: #ENTITY-ID-LIST# 
Note:  #ERROR-DESCRIPTION# 

--------------------------------------------------------------------

', 'string'),

                ('signal-templates', 'accept-subject', 'SEAD Clearing House: submission has been accepted', 'string'),
        
                ('signal-templates', 'accept-body',
'
            
Your submission to SEAD Clearing House has been accepted!

This is an auto-generated mail from the SEAD Clearing House system

', 'string'),

                ('signal-templates', 'reclaim-subject', 'SEAD Clearing House notfication: Submission #SUBMISSION-ID# has been transfered to pending', 'string'),
        
                ('signal-templates', 'reclaim-body', '
            
Status of submission #SUBMISSION-ID# has been reset to pending due to inactivity.

A submission is automatically reset to pending status when #DAYS-UNTIL-RECLAIM# days have passed since the submission
was claimed for review, and if no activity during has been registered during last #DAYS-WITHOUT-ACTIVITY# days.

This is an auto-generated mail from the SEAD Clearing House system.

', 'string'),
 
                ('signal-templates', 'reminder-subject', 'SEAD Clearing House reminder: Submission #SUBMISSION-ID#', 'string'),
        
                ('signal-templates', 'reminder-body', '
            
Status of submission #SUBMISSION-ID# has been reset to pending due to inactivity.

A reminder is automatically send when #DAYS-UNTIL-REMINDER# have passed since the submission
was claimed for review.

This is an auto-generated mail from the SEAD Clearing House system.

', 'string'),
    
                ('reminder', 'days_until_first_reminder', '14', 'numeric'),
                ('reminder', 'days_since_claimed_until_transfer_back_to_pending', '28', 'numeric'),
                ('reminder', 'days_without_activity_until_transfer_back_to_pending', '14', 'numeric');

    
    End If;



    If Not Exists (Select * From INFORMATION_SCHEMA.tables Where table_catalog = CURRENT_CATALOG And table_schema = 'clearing_house' And table_name = 'tbl_clearinghouse_info_references') Then

        -- Drop Table clearing_house.tbl_clearinghouse_info_references
        Create Table If Not Exists clearing_house.tbl_clearinghouse_info_references (
            info_reference_id serial not null,
            info_reference_type character varying(255) not null,
            display_name character varying(255) not null,
            href character varying(255),
            Constraint pk_tbl_clearinghouse_info_references Primary Key (info_reference_id)
        );

    End If;

    If (Select Count(*) From clearing_house.tbl_clearinghouse_info_references) = 0 Then

        Insert Into clearing_house.tbl_clearinghouse_info_references (info_reference_type, display_name, href)
            Values
                ('link', 'SEAD overview article',  'http://bugscep.com/phil/publications/Buckland2010_jns.pdf'),
                ('link', 'Popular science description of SEAD aims',  'http://bugscep.com/phil/publications/buckland2011_international_innovation.pdf');

    End If;

    If Not Exists (Select * From INFORMATION_SCHEMA.tables Where table_catalog = CURRENT_CATALOG And table_schema = 'clearing_house' And table_name = 'tbl_clearinghouse_sessions') Then

        Create Table If Not Exists clearing_house.tbl_clearinghouse_sessions (
            session_id serial not null,
            user_id int not null default(0),
            ip character varying(255),
            start_time date not null,
            stop_time date,
            Constraint pk_tbl_clearinghouse_sessions_session_id Primary Key (session_id)
        );

    End If;
    
    If Not Exists (Select * From INFORMATION_SCHEMA.tables Where table_catalog = CURRENT_CATALOG And table_schema = 'clearing_house' And table_name = 'tbl_clearinghouse_signals') Then

        Create Table If Not Exists clearing_house.tbl_clearinghouse_signals (
            signal_id serial not null,
            use_case_id int not null default(0),
            recipient_user_id int not null default(0),
            recipient_address text not null,
            signal_time date not null,
            subject text,
            body text,
            status text,
            Constraint pk_clearinghouse_signals_signal_id Primary Key (signal_id)
        );

    End If;

    /*
    Create Table If Not Exists tbl_error_id_types (
        error_id int not null,
        description character varying(255) not null,
        Constraint pk_error_id Primary Key (error_id),
        Constraint fk_tbl_user_roles_role_id Foreign Key (role_id)
            References tbl_user_roles (role_id) Match Simple
                On Update No Action On Delete No Action
    );


    Insert Into tbl_error_id_types (error_id, description) Values (0, 'Not specified');

    Create Table If Not Exists tbl_error_log (
        error_log_id serial not null,
        error_id int not null,
        error_type character varying(32) not null,
        error_message text not null,
        error_file character varying(255) not null,
        error_line int not null,
        error_time date not null,
        error_user character varying(255) not null,
        Constraint pk_tbl_error_log Primary Key (error_log_id)
    );
    */

	if (false) Then

		Drop Table If Exists clearing_house.tbl_clearinghouse_activity_log;
		Drop Table If Exists clearing_house.tbl_clearinghouse_submissions;
		Drop Table If Exists clearing_house.tbl_clearinghouse_signal_log;

		Drop Table If Exists clearing_house.tbl_clearinghouse_submissions;
		Drop Table If Exists clearing_house.tbl_clearinghouse_reject_cause_types;
		Drop Table If Exists clearing_house.tbl_clearinghouse_reject_causes;
		Drop Table If Exists clearing_house.tbl_clearinghouse_users;
		Drop Table If Exists clearing_house.tbl_clearinghouse_user_roles;
		Drop Table If Exists clearing_house.tbl_clearinghouse_data_provider_grades;
		Drop Table If Exists clearing_house.tbl_clearinghouse_submission_states;
		
	End If;

    /*********************************************************************************************************************************
    ** Activity
    **********************************************************************************************************************************/

    If Not Exists (Select * From INFORMATION_SCHEMA.tables Where table_catalog = CURRENT_CATALOG And table_schema = 'clearing_house' And table_name = 'tbl_clearinghouse_use_cases') Then

		-- Drop Table clearing_house.tbl_clearinghouse_use_cases
		-- Alter Table clearing_house.tbl_clearinghouse_use_cases Add Column entity_type_id int not null default(0)
		Create Table clearing_house.tbl_clearinghouse_use_cases (
			use_case_id int not null,
			use_case_name character varying(255) not null,
			entity_type_id int not null default(0),
			Constraint pk_tbl_clearinghouse_use_cases PRIMARY KEY (use_case_id)
		);
		
	End If;

    If (Select Count(*) From clearing_house.tbl_clearinghouse_use_cases) = 0 Then

        -- Update clearing_house.tbl_clearinghouse_use_cases Set entity_type_id = 1 Where use_case_id In (1,2,20,21) 
        Insert Into clearing_house.tbl_clearinghouse_use_cases (use_case_id, use_case_name, entity_type_id) 
            Values (0, 'General', 0),
				   (1, 'Login', 1),
				   (2, 'Logout', 1),
				   (3, 'Upload submission', 2),
				   (4, 'Accept submission', 2),
				   (5, 'Reject submission', 2),
				   (6, 'Open submission', 2),
				   (7, 'Process submission', 2),
				   (8, 'Transfer submission', 2),
				   (9, 'Add reject cause', 2),
				   (10, 'Delete reject cause', 2),
				   (11, 'Claim submission', 2),
				   (12, 'Unclaim submission', 2),
				   (13, 'Execute report', 2),
				   (20, 'Add user', 1),
				   (21, 'Change user', 1),
                   (22, 'Send reminder', 2),
                   (23, 'Reclaim submission', 2),
                   (24, 'Nag', 0)

        ;

    End If;

    If Not Exists (Select * From INFORMATION_SCHEMA.tables Where table_catalog = CURRENT_CATALOG And table_schema = 'clearing_house' And table_name = 'tbl_clearinghouse_activity_log') Then

		-- Drop Table clearing_house.tbl_clearinghouse_activity_log
		-- Alter Table clearing_house.tbl_clearinghouse_activity_log add column entity_type_id int not null default(0)
		Create Table clearing_house.tbl_clearinghouse_activity_log (
			activity_log_id serial not null,
			use_case_id int not null default(0),
			user_id int not null default(0),
			session_id int not null default(0),
			entity_type_id int not null default(0),
			entity_id int not null default(0),
			execute_start_time date not null,
			execute_stop_time date,
			status_id int not null default(0),
			activity_data text null,
			message text not null default(''),
			Constraint pk_activity_log_id PRIMARY KEY (activity_log_id)
		);

		Create Index idx_clearinghouse_activity_entity_id
			On clearing_house.tbl_clearinghouse_activity_log (entity_type_id, entity_id);

	End If;


	
    If Not Exists (Select * From INFORMATION_SCHEMA.tables Where table_catalog = CURRENT_CATALOG And table_schema = 'clearing_house' And table_name = 'tbl_clearinghouse_signal_log') Then
    
		Create Table clearing_house.tbl_clearinghouse_signal_log (
			signal_log_id serial not null,
			use_case_id int not null,
			signal_time date not null,
			email text not null,
			cc text not null,
			subject text not null,
			body text not null,
			Constraint pk_signal_log_id PRIMARY KEY (signal_log_id)		
		);
		
	End If;

    /*********************************************************************************************************************************
    ** Users
    **********************************************************************************************************************************/

    If Not Exists (Select * From INFORMATION_SCHEMA.tables Where table_catalog = CURRENT_CATALOG And table_schema = 'clearing_house' And table_name = 'tbl_clearinghouse_data_provider_grades') Then

        Create Table clearing_house.tbl_clearinghouse_data_provider_grades (
            grade_id int not null,
            description character varying(255) not null,
            Constraint pk_grade_id PRIMARY KEY (grade_id)
        );

	End If;

    If (Select Count(*) From clearing_house.tbl_clearinghouse_data_provider_grades) = 0 Then

        Insert Into clearing_house.tbl_clearinghouse_data_provider_grades (grade_id, description)
			Values (0, 'n/a'), (1, 'Normal'), (2, 'Good'), (3, 'Excellent');

    End If;

    If Not Exists (Select * From INFORMATION_SCHEMA.tables Where table_catalog = CURRENT_CATALOG And table_schema = 'clearing_house' And table_name = 'tbl_clearinghouse_user_roles') Then

        Create Table clearing_house.tbl_clearinghouse_user_roles (
            role_id int not null,
            role_name character varying(255) not null,
            Constraint pk_role_id PRIMARY KEY (role_id)
        );

    End If;
    
    If (Select Count(*) From clearing_house.tbl_clearinghouse_user_roles) = 0 Then

        Insert Into clearing_house.tbl_clearinghouse_user_roles (role_id, role_name) 
            Values (0, 'Undefined'),
				   (1, 'Reader'),
				   (2, 'Normal'),
				   (3, 'Administrator'),
				   (4, 'Data Provider');

    End If;

    If Not Exists (Select * From INFORMATION_SCHEMA.tables Where table_catalog = CURRENT_CATALOG And table_schema = 'clearing_house' And table_name = 'tbl_clearinghouse_users') Then
		-- Drop Table clearing_house.tbl_clearinghouse_users
        Create Table clearing_house.tbl_clearinghouse_users (
            user_id serial not null,
            user_name character varying(255) not null,
            full_name character varying(255) not null default(''),
            password character varying(255) not null,
            email character varying(1024) not null default (''),
            signal_receiver boolean not null default(false),
            role_id int not null default(1),
            data_provider_grade_id int not null default(2),
            is_data_provider boolean not null default(false),
            create_date date not null,
            Constraint pk_user_id PRIMARY KEY (user_id),
            Constraint fk_tbl_user_roles_role_id FOREIGN KEY (role_id)
                References clearing_house.tbl_clearinghouse_user_roles (role_id) MATCH SIMPLE
                    ON Update NO Action ON DELETE NO ACTION,
            Constraint fk_tbl_data_provider_grades_grade_id FOREIGN KEY (data_provider_grade_id)
                References clearing_house.tbl_clearinghouse_data_provider_grades (grade_id) MATCH SIMPLE
                    ON Update NO Action ON DELETE NO ACTION
        );

		-- Alter table clearing_house.tbl_clearinghouse_users Add column is_data_provider boolean not null default(false)
    End If;

    If (Select Count(*) From clearing_house.tbl_clearinghouse_users) = 0 Then

		-- update clearing_house.tbl_clearinghouse_users set signal_receiver = true where user_id = 2
        Insert Into clearing_house.tbl_clearinghouse_users (user_name, password, full_name, role_id, data_provider_grade_id, create_date, email, signal_receiver) 
            Values ('test_reader', 'secret', 'Test Reader', 1, 0, '2013-10-08', 'roger.mahler@umu.se', false),
                   ('test_normal', 'secret', 'Test Normal', 2, 0, '2013-10-08', 'roger.mahler@umu.se', false),
                   ('test_admin', 'secret', 'Test Administrator', 3, 0, '2013-10-08', 'roger.mahler@umu.se', true),
                   ('test_provider', 'secret', 'Test Provider', 3, 3, '2013-10-08', 'roger.mahler@umu.se', true);

    End If;

    /*********************************************************************************************************************************
    ** XML content tables - intermediate tables using during process
    **********************************************************************************************************************************/

	If (false) Then

		Drop Table If Exists clearing_house.tbl_clearinghouse_submission_xml_content_values;
		Drop Table If Exists clearing_house.tbl_clearinghouse_submission_xml_content_records;
		Drop Table If Exists clearing_house.tbl_clearinghouse_submission_xml_content_columns;
		Drop Table If Exists clearing_house.tbl_clearinghouse_submission_xml_content_tables;
		Drop Table If Exists clearing_house.tbl_clearinghouse_submission_tables;
	
	End If;

    If Not Exists (Select * From INFORMATION_SCHEMA.tables Where table_catalog = CURRENT_CATALOG And table_schema = 'clearing_house' And table_name = 'tbl_clearinghouse_submission_tables') Then
	
		Create Table clearing_house.tbl_clearinghouse_submission_tables (
			table_id serial not null,
			table_name character varying(255) not null,
			table_name_underscored character varying(255) not null,
			Constraint pk_tbl_clearinghouse_submission_tables Primary Key (table_id) 
		);

		Create Unique Index idx_tbl_clearinghouse_submission_tables_name1
			On clearing_house.tbl_clearinghouse_submission_tables (table_name);

		Create Unique Index idx_tbl_clearinghouse_submission_tables_name2
			On clearing_house.tbl_clearinghouse_submission_tables (table_name_underscored);


		Insert Into clearing_house.tbl_clearinghouse_submission_tables (table_name, table_name_underscored)
			Select replace(initcap(replace(s.table_name, '_', ' ')), ' ', '') , s.table_name
			From (
				Select distinct table_name
				From clearing_house.tbl_clearinghouse_sead_rdb_schema
				Where table_schema = 'public'
			) As s
			Left Join clearing_house.tbl_clearinghouse_submission_tables t
			  On t.table_name_underscored = s.table_name
			Where t.table_id is NULL
			  And s.table_name Like 'tbl_%';

	End If;
	
    If Not Exists (Select * From INFORMATION_SCHEMA.tables Where table_catalog = CURRENT_CATALOG And table_schema = 'clearing_house' And table_name = 'tbl_clearinghouse_submission_xml_content_tables') Then

	
		Create Table clearing_house.tbl_clearinghouse_submission_xml_content_tables (
			content_table_id serial not null,
			submission_id int not null,
			table_id int not null,
			record_count int not null,
			Constraint pk_tbl_submission_xml_content_meta_tables_table_id Primary Key (content_table_id),
			Constraint fk_tbl_clearinghouse_submission_xml_content_tables Foreign Key (table_id)
			  References clearing_house.tbl_clearinghouse_submission_tables (table_id) Match Simple
				On Update NO ACTION ON DELETE Cascade
		);


		Create Unique Index fk_idx_tbl_submission_xml_content_tables_table_name
			On clearing_house.tbl_clearinghouse_submission_xml_content_tables (submission_id, table_id);

	End If;

    If Not Exists (Select * From INFORMATION_SCHEMA.tables Where table_catalog = CURRENT_CATALOG And table_schema = 'clearing_house' And table_name = 'tbl_clearinghouse_submission_xml_content_columns') Then

		Create Table clearing_house.tbl_clearinghouse_submission_xml_content_columns (
			column_id serial not null,
			submission_id int not null,
			table_id int not null,
			column_name character varying(255) not null,
			column_name_underscored character varying(255) not null,
			data_type character varying(255) not null,
			fk_flag boolean not null,
			fk_table character varying(255) null,
			fk_table_underscored character varying(255) null,
			Constraint pk_tbl_submission_xml_content_columns_column_id Primary Key (column_id),
			Constraint fk_tbl_submission_xml_content_columns_table_id Foreign Key (table_id)
			  References clearing_house.tbl_clearinghouse_submission_tables (table_id) Match Simple
				On Update NO ACTION ON DELETE Cascade
		); 

		Create Unique Index idx_tbl_submission_xml_content_columns_submission_id
			On clearing_house.tbl_clearinghouse_submission_xml_content_columns (submission_id, table_id, column_name);

	End If;

    If Not Exists (Select * From INFORMATION_SCHEMA.tables Where table_catalog = CURRENT_CATALOG And table_schema = 'clearing_house' And table_name = 'tbl_clearinghouse_submission_xml_content_records') Then

		Create Table clearing_house.tbl_clearinghouse_submission_xml_content_records (
			record_id serial not null,
			submission_id int not null,
			table_id int not null,
			local_db_id int null,
			public_db_id int null,
			Constraint pk_tbl_submission_xml_content_records_record_id Primary Key (record_id),
			Constraint fk_tbl_submission_xml_content_records_table_id Foreign Key (table_id)
			  References clearing_house.tbl_clearinghouse_submission_tables (table_id) Match Simple
				On Update NO ACTION ON DELETE Cascade
			
		);

		Create Unique Index idx_tbl_submission_xml_content_records_submission_id
			On clearing_house.tbl_clearinghouse_submission_xml_content_records (submission_id, table_id, local_db_id);

	End If;

    If Not Exists (Select * From INFORMATION_SCHEMA.tables Where table_catalog = CURRENT_CATALOG And table_schema = 'clearing_house' And table_name = 'tbl_clearinghouse_submission_xml_content_values') Then

		-- Drop Table tbl_submission_xml_content_record_values
		Create Table clearing_house.tbl_clearinghouse_submission_xml_content_values (
			value_id serial not null,
			submission_id int not null,
			table_id int not null,
			local_db_id int not null,
			column_id int not null,
			fk_flag boolean null,
			fk_local_db_id int null,
			fk_public_db_id int null,
			value text null,
			Constraint pk_tbl_submission_xml_content_record_values_value_id Primary Key (value_id),
			Constraint fk_tbl_submission_xml_content_meta_record_values_table_id Foreign Key (table_id)
			  References clearing_house.tbl_clearinghouse_submission_tables (table_id) Match Simple
				On Update NO ACTION ON DELETE Cascade
			
		);

		Create Unique Index idx_tbl_submission_xml_content_record_values_column_id
			On clearing_house.tbl_clearinghouse_submission_xml_content_values (submission_id, table_id, local_db_id, column_id);

	End If;
	
    /*********************************************************************************************************************************
    ** Submissions
    **********************************************************************************************************************************/

     -- ALTER TABLE metainformation.tbl_upload_contents
     --  OWNER TO seadworker;

    If Not Exists (Select * From INFORMATION_SCHEMA.tables Where table_catalog = CURRENT_CATALOG And table_schema = 'clearing_house' And table_name = 'tbl_clearinghouse_submission_states') Then

        Create Table clearing_house.tbl_clearinghouse_submission_states (
            submission_state_id int not null,
            submission_state_name character varying(255) not null,
            CONSTRAINT pk_submission_state_id PRIMARY KEY (submission_state_id)
        );

    End If;

    If (Select Count(*) From clearing_house.tbl_clearinghouse_submission_states) = 0 Then

        Insert Into clearing_house.tbl_clearinghouse_submission_states (submission_state_id, submission_state_name)
            Values	(0, 'Undefined'),
                    (1, 'New'),
                    (2, 'Pending'),
                    (3, 'In progress'),
                    (4, 'Accepted'),
                    (5, 'Rejected'),
                    (9, 'Error');

    End If;

    If Not Exists (Select * From INFORMATION_SCHEMA.tables Where table_catalog = CURRENT_CATALOG And table_schema = 'clearing_house' And table_name = 'tbl_clearinghouse_submissions') Then

		--Alter Table clearing_house.tbl_clearinghouse_submissions Drop Column upload_date
		--Alter Table clearing_house.tbl_clearinghouse_submissions Add Column upload_date Date Not Null default now()
		-- Drop table clearing_house.tbl_clearinghouse_users

        Create Table clearing_house.tbl_clearinghouse_submissions
        (
          submission_id serial NOT NULL,
          submission_state_id integer NOT NULL,
          data_types character varying(255), 
          upload_user_id integer NOT NULL,
          upload_date Date Not Null default now(),
          upload_content text,
          xml xml, 
          status_text text,
          claim_user_id integer,
          claim_date_time date,
          Constraint pk_submission_id PRIMARY KEY (submission_id),
          Constraint fk_tbl_submissions_user_id_user_id FOREIGN KEY (claim_user_id)
              References clearing_house.tbl_clearinghouse_users (user_id) MATCH SIMPLE
                ON UPDATE NO ACTION ON DELETE NO ACTION,
          Constraint fk_tbl_submissions_state_id_state_id FOREIGN KEY (submission_state_id)
              References clearing_house.tbl_clearinghouse_submission_states (submission_state_id) MATCH SIMPLE
                ON UPDATE NO ACTION ON DELETE NO ACTION
        );

        --GRANT ALL ON TABLE metainformation.tbl_upload_contents TO seadworker;
        --COMMENT ON TABLE metainformation.tbl_upload_contents IS 'Table for storing information about an upload. The actual upload is stored in a file separately.';
        --COMMENT ON COLUMN metainformation.tbl_upload_contents.upload_data_types IS 'A series of data types contained in the uploaded data. This list should be separated by something.';

    End If;

    If Not Exists (Select * From INFORMATION_SCHEMA.tables Where table_catalog = CURRENT_CATALOG And table_schema = 'clearing_house' And table_name = 'tbl_clearinghouse_accepted_submissions') Then

        Create Table clearing_house.tbl_clearinghouse_accepted_submissions
        (
          accepted_submission_id serial NOT NULL,
          process_state_id bool NOT NULL,
          submission_id int,
          upload_file text,
          accept_user_id integer,
          Constraint pk_tbl_clearinghouse_accepted_submissions PRIMARY KEY (accepted_submission_id)
        );

    End If;

    If Not Exists (Select * From INFORMATION_SCHEMA.tables Where table_catalog = CURRENT_CATALOG And table_schema = 'clearing_house' And table_name = 'tbl_clearinghouse_reject_entity_types') Then

        Drop Table If Exists clearing_house.tbl_clearinghouse_reject_entity_types;

        Create Table clearing_house.tbl_clearinghouse_reject_entity_types
        (
			entity_type_id int NOT NULL,
			table_id int NULL,
			entity_type character varying(255) NOT NULL,
			Constraint pk_tbl_clearinghouse_reject_entity_types PRIMARY KEY (entity_type_id)
        );

        Create Index fk_clearinghouse_reject_entity_types On clearing_house.tbl_clearinghouse_reject_entity_types (table_id);

    End If;

     If (Select Count(*) From clearing_house.tbl_clearinghouse_reject_entity_types) = 0 Then

		--Delete From clearing_house.tbl_clearinghouse_reject_entity_types
        Insert Into clearing_house.tbl_clearinghouse_reject_entity_types (entity_type_id, table_id, entity_type)

            Select 0,  0, 'Not specified'
			Union
            Select row_number() over (ORDER BY table_name),  table_id, left(substring(table_name,4),Length(table_name)-4) 
            From clearing_house.tbl_clearinghouse_submission_tables
            Where table_name Like 'Tbl%s'
            Order by 1;

        /* Komplettera med nya */
        Insert Into clearing_house.tbl_clearinghouse_reject_entity_types (entity_type_id, table_id, entity_type)

            Select (Select Max(entity_type_id) From clearing_house.tbl_clearinghouse_reject_entity_types) + row_number() over (ORDER BY table_name),  t.table_id, left(substring(table_name,4),Length(table_name)-3) 
            From clearing_house.tbl_clearinghouse_submission_tables t
			Left Join clearing_house.tbl_clearinghouse_reject_entity_types x
			  On x.table_id = t.table_id
            Where x.table_id Is Null
            Order by 1;


        /* Fixa beskrivningstext */
        Update clearing_house.tbl_clearinghouse_reject_entity_types as x
			set entity_type = replace(trim(replace(regexp_replace(t.table_name, E'([A-Z])', E'\_\\1','g'), '_', ' ')), 'Tbl ', '')
        From clearing_house.tbl_clearinghouse_submission_tables t
        Where t.table_id = x.table_id
          And replace(trim(replace(regexp_replace(t.table_name, E'([A-Z])', E'\_\\1','g'), '_', ' ')), 'Tbl ', '') <> x.entity_type;

    End If;

    If Not Exists (Select * From INFORMATION_SCHEMA.tables Where table_catalog = CURRENT_CATALOG And table_schema = 'clearing_house' And table_name = 'tbl_clearinghouse_submission_rejects') Then

        -- alter table clearing_house.tbl_clearinghouse_submission_rejects add column site_id int NOT NULL default(0)
        Create Table clearing_house.tbl_clearinghouse_submission_rejects
        (
			submission_reject_id serial NOT NULL,
			submission_id int NOT NULL,
			site_id int NOT NULL default(0),
			entity_type_id int NOT NULL,
			reject_scope_id int NOT NULL, /* 0, 1=specific, 2=General */
			reject_description text NULL,
			Constraint pk_tbl_clearinghouse_submission_rejects PRIMARY KEY (submission_reject_id),
			Constraint fk_tbl_clearinghouse_submission_rejects_submission_id Foreign Key (submission_id)
			  References clearing_house.tbl_clearinghouse_submissions (submission_id) Match Simple
				On Update NO ACTION ON DELETE Cascade
		);

        Create Index fk_clearinghouse_submission_rejects On clearing_house.tbl_clearinghouse_submission_rejects (submission_id);

    End If;
    

    If Not Exists (Select * From INFORMATION_SCHEMA.tables Where table_catalog = CURRENT_CATALOG And table_schema = 'clearing_house' And table_name = 'tbl_clearinghouse_submission_reject_entities') Then

        Create Table clearing_house.tbl_clearinghouse_submission_reject_entities
        (
			reject_entity_id serial NOT NULL,
			submission_reject_id int NOT NULL,
			local_db_id int NOT NULL,
			Constraint pk_tbl_clearinghouse_submission_reject_entities PRIMARY KEY (reject_entity_id),
			Constraint fk_tbl_clearinghouse_submission_reject_entities Foreign Key (submission_reject_id)
			  References clearing_house.tbl_clearinghouse_submission_rejects (submission_reject_id) Match Simple
				On Update NO ACTION ON DELETE Cascade
		);

        Create Index fk_clearinghouse_submission_reject_entities_submission On clearing_house.tbl_clearinghouse_submission_reject_entities (submission_reject_id);
        Create Index fk_clearinghouse_submission_reject_entities_local_db_id On clearing_house.tbl_clearinghouse_submission_reject_entities (local_db_id);

    End If;

    If Not Exists (Select * From INFORMATION_SCHEMA.tables Where table_catalog = CURRENT_CATALOG And table_schema = 'clearing_house' And table_name = 'tbl_clearinghouse_reports') Then

        --Drop Table clearing_house.tbl_clearinghouse_reports

        Create Table clearing_house.tbl_clearinghouse_reports
        (
            report_id int NOT NULL,
            report_name character varying(255), 
            report_procedure text not null,
            Constraint pk_tbl_clearinghouse_reports PRIMARY KEY (report_id)
        );

    End If;



End $$;


--
-- TOC entry 1011 (class 1255 OID 16546)
-- Name: fn_dd2dms(double precision, character varying, character varying, character varying); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_dd2dms(p_ddecdeg double precision, p_sdegreesymbol character varying DEFAULT 'd'::character varying, p_sminutesymbol character varying DEFAULT 'm'::character varying, p_ssecondsymbol character varying DEFAULT 's'::character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
DECLARE
   v_iDeg INT;
   v_iMin INT;
   v_dSec FLOAT;
Begin

   v_iDeg := Trunc(p_dDecDeg)::INT;
   v_iMin := Trunc((Abs(p_dDecDeg) - Abs(v_iDeg)) * 60)::int;
   v_dSec := Round(((((Abs(p_dDecDeg) - Abs(v_iDeg)) * 60) - v_iMin) * 60)::numeric, 3)::float;
   
   Return trim(to_char(v_iDeg,'9999')) || p_sDegreeSymbol::text || trim(to_char(v_iMin,'99')) || p_sMinuteSymbol::text ||
          Case When v_dSec = 0::FLOAT Then '0' Else replace(trim(to_char(v_dSec,'99.999')),'.000','') End || p_sSecondSymbol::text;
          
End $$;


--
-- TOC entry 1012 (class 1255 OID 16547)
-- Name: fn_explode_submission_xml_to_rdb(integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_explode_submission_xml_to_rdb(integer) RETURNS void
    LANGUAGE plpgsql
    AS $_$

Begin

	Perform clearing_house.fn_extract_and_store_submission_tables($1);
	Perform clearing_house.fn_extract_and_store_submission_columns($1);
	Perform clearing_house.fn_extract_and_store_submission_records($1);
	Perform clearing_house.fn_extract_and_store_submission_values($1);

	Perform clearing_house.fn_copy_extracted_values_to_entity_tables($1);

End $_$;


--
-- TOC entry 1013 (class 1255 OID 16548)
-- Name: fn_extract_and_store_submission_columns(integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_extract_and_store_submission_columns(integer) RETURNS void
    LANGUAGE plpgsql
    AS $_$

Begin

	Delete From clearing_house.tbl_clearinghouse_submission_xml_content_columns
		Where submission_id = $1;
		
	/* Extract all unique column names */
	Insert Into clearing_house.tbl_clearinghouse_submission_xml_content_columns (submission_id, table_id, column_name, column_name_underscored, data_type, fk_flag, fk_table, fk_table_underscored)
		Select	c.submission_id,
				t.table_id,
				c.column_name,
				clearing_house.fn_pascal_case_to_underscore(c.column_name),
				c.column_type,
				left(c.column_type, 18) = 'com.sead.database.',
				Case When left(c.column_type, 18) = 'com.sead.database.' Then substring(c.column_type from 19) Else Null End,
				''
		From  clearing_house.fn_select_xml_content_columns($1) c
		Join clearing_house.tbl_clearinghouse_submission_tables t
		  On t.table_name = c.table_name
		Where c.submission_id = $1;

	Update clearing_house.tbl_clearinghouse_submission_xml_content_columns
		Set fk_table_underscored = clearing_house.fn_pascal_case_to_underscore(fk_table)
	Where submission_id = $1;

	--Raise Notice 'XML columns extracted and stored for submission id %', $1;
	
End $_$;


--
-- TOC entry 1014 (class 1255 OID 16549)
-- Name: fn_extract_and_store_submission_records(integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_extract_and_store_submission_records(integer) RETURNS void
    LANGUAGE plpgsql
    AS $_$

Begin

	/* Extract all unique records */
	Insert Into clearing_house.tbl_clearinghouse_submission_xml_content_records (submission_id, table_id, local_db_id, public_db_id)
		Select r.submission_id, t.table_id, r.local_db_id, coalesce(r.public_db_id_tag, public_db_id_attr)
		From clearing_house.fn_select_xml_content_records($1) r
		Join clearing_house.tbl_clearinghouse_submission_tables t
		  On t.table_name = r.table_name
		Where r.submission_id = $1;
		
	--Raise Notice 'XML record headers extracted and stored for submission id %', $1;
	
End $_$;


--
-- TOC entry 1015 (class 1255 OID 16550)
-- Name: fn_extract_and_store_submission_tables(integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_extract_and_store_submission_tables(integer) RETURNS void
    LANGUAGE plpgsql
    AS $_$

Begin

	/* Delete existing data (cascade) */
	Delete From clearing_house.tbl_clearinghouse_submission_xml_content_values
		Where submission_id = $1;

	Delete From clearing_house.tbl_clearinghouse_submission_xml_content_columns
		Where submission_id = $1;

	Delete From clearing_house.tbl_clearinghouse_submission_xml_content_records
		Where submission_id = $1;

	Delete From clearing_house.tbl_clearinghouse_submission_xml_content_tables
		Where submission_id = $1;

	/* Register new tables not previously encountered */
	Insert Into clearing_house.tbl_clearinghouse_submission_tables (table_name, table_name_underscored)
		Select t.table_name, clearing_house.fn_pascal_case_to_underscore(t.table_name)
		From  clearing_house.fn_select_xml_content_tables($1) t
		Left Join clearing_house.tbl_clearinghouse_submission_tables x
		  On x.table_name = t.table_name
		Where x.table_name Is NULL;
	
	/* Store all tables that att exists in submission */
	Insert Into clearing_house.tbl_clearinghouse_submission_xml_content_tables (submission_id, table_id, record_count)
		Select t.submission_id, x.table_id, t.row_count
		From  clearing_house.fn_select_xml_content_tables($1) t
		Join clearing_house.tbl_clearinghouse_submission_tables x
		  On x.table_name = t.table_name
		;

	--Raise Notice 'XML entity tables extracted and stored for submission id %', $1;
	
End $_$;


--
-- TOC entry 1016 (class 1255 OID 16551)
-- Name: fn_extract_and_store_submission_values(integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_extract_and_store_submission_values(integer) RETURNS void
    LANGUAGE plpgsql
    AS $_$
	Declare x RECORD;
Begin

	For x In (Select t.*
			  From clearing_house.tbl_clearinghouse_submission_tables t
			  Join clearing_house.tbl_clearinghouse_submission_xml_content_tables c
			    On c.table_id = t.table_id
			  Where c.submission_id = $1)
	Loop

		Insert Into clearing_house.tbl_clearinghouse_submission_xml_content_values (submission_id, table_id, local_db_id, column_id, fk_flag, fk_local_db_id, fk_public_db_id, value)
			Select	$1,
					t.table_id,
					v.local_db_id,
					c.column_id,
					Not (v.fk_local_db_id Is Null),
					v.fk_local_db_id,
					v.fk_public_db_id,
					Case When v.value = 'NULL' Then NULL Else v.value End
			From clearing_house.fn_select_xml_content_values($1, x.table_name) v
			Join clearing_house.tbl_clearinghouse_submission_tables t
			  On t.table_name = v.table_name
			Join clearing_house.tbl_clearinghouse_submission_xml_content_columns c
			  On c.submission_id = v.submission_id
			 And c.table_id = t.table_id
			 And c.column_name = v.column_name;

	End Loop;		
	
	--Raise Notice 'XML entity field values extracted and stored for submission id %', $1;
	
End $_$;


--
-- TOC entry 1017 (class 1255 OID 16552)
-- Name: fn_get_entity_type_for(character varying); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_get_entity_type_for(character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
Declare
    table_entity_type_id int;
Begin
    Select x.entity_type_id Into table_entity_type_id
    From clearing_house.tbl_clearinghouse_reject_entity_types x
    Join clearing_house.tbl_clearinghouse_submission_tables t
      On x.table_id = t.table_id
    Where table_name_underscored = $1;

    Return Coalesce(table_entity_type_id,0);	
End $_$;


--
-- TOC entry 1018 (class 1255 OID 16553)
-- Name: fn_get_public_table_column_names(character varying, character varying); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_get_public_table_column_names(sourceschema character varying, tablename character varying) RETURNS character varying[]
    LANGUAGE plpgsql
    AS $$
	Declare columns character varying(255)[];
Begin
	Select array_agg(c.column_name order by ordinal_position asc) Into columns
	From clearing_house.tbl_clearinghouse_SEAD_rdb_schema c
	Where c.table_schema = sourceschema
	  And c.table_name = tablename;
	return columns;
End $$;


--
-- TOC entry 1019 (class 1255 OID 16554)
-- Name: fn_get_public_table_key_column_name(character varying, character varying); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_get_public_table_key_column_name(sourceschema character varying, tablename character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
	Declare key_column character varying(255);
Begin
	Select c.column_name Into key_column
	From clearing_house.tbl_clearinghouse_SEAD_rdb_schema c
	Where c.table_schema = sourceschema
	  And c.table_name = tablename
	  And c.is_pk = 'YES'
	Limit 1;
	return key_column;
End $$;


--
-- TOC entry 1020 (class 1255 OID 16555)
-- Name: fn_get_schema_table_column_names(character varying); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_get_schema_table_column_names(character varying) RETURNS character varying[]
    LANGUAGE plpgsql
    AS $_$
	Declare columns character varying(255)[];
Begin

	Select array_agg(column_name::character varying(255)) Into columns
		From information_schema.columns 
		Where table_catalog = CURRENT_CATALOG
		  And table_schema = CURRENT_SCHEMA
		  And table_name = $1;
	
	return columns;
	
End $_$;


--
-- TOC entry 1021 (class 1255 OID 16556)
-- Name: fn_get_submission_table_column_names(integer, character varying); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_get_submission_table_column_names(integer, character varying) RETURNS character varying[]
    LANGUAGE plpgsql
    AS $_$
	Declare columns character varying(255)[];
Begin

	Select array_agg(c.column_name_underscored order by c.column_id asc) Into columns
	From clearing_house.tbl_clearinghouse_submission_tables t
    Join clearing_house.tbl_clearinghouse_submission_xml_content_columns c
	  On c.table_id = t.table_id
	Where c.submission_id = $1
	  And t.table_name_underscored = $2
	Group By c.submission_id, t.table_name;
	
	return columns;
	
End $_$;


--
-- TOC entry 1022 (class 1255 OID 16557)
-- Name: fn_get_submission_table_column_types(integer, character varying); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_get_submission_table_column_types(integer, character varying) RETURNS character varying[]
    LANGUAGE plpgsql
    AS $_$
	Declare columns character varying(255)[];
Begin

	Select array_agg(clearing_house.fn_java_type_to_PostgreSQL(c.data_type) order by c.column_id asc) Into columns
	From clearing_house.tbl_clearinghouse_submission_tables t
	Join clearing_house.tbl_clearinghouse_submission_xml_content_columns c
	  On c.table_id = t.table_id
	Where c.submission_id = $1
	  And t.table_name_underscored = $2
	Group By c.submission_id, t.table_name;
	
	return columns;
	
End $_$;


--
-- TOC entry 1023 (class 1255 OID 16558)
-- Name: fn_java_type_to_postgresql(character varying); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_java_type_to_postgresql(character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $_$
Begin
	If ($1 = 'java.util.Date') Then
		return 'date';
	End If;
	
	If ($1 = 'java.math.BigDecimal') Then
		return 'numeric';
	End If;
	
	If ($1 = 'java.lang.Integer') Then
		return 'integer';
	End If;

	If ($1 = 'java.lang.Boolean') Then
		return 'boolean';
	End If;

	If ($1 = 'java.lang.String') Then
		return 'text';
	End If;

	If ($1 Like 'com.sead.database.%') Then
		return 'integer'; /* FK */
	End If;

	Raise Exception 'Fatal error: Java type % encountered in XML not expected', $1;
	
End $_$;


--
-- TOC entry 1024 (class 1255 OID 16559)
-- Name: fn_pascal_case_to_underscore(character varying); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_pascal_case_to_underscore(character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $_$
Begin

	return lower(Left($1, 1) || regexp_replace(substring($1 from 2), E'([A-Z])', E'\_\\1','g'));

End $_$;


--
-- TOC entry 1027 (class 1255 OID 16560)
-- Name: fn_script_local_union_public_entity_view(character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_script_local_union_public_entity_view(target_schema character varying, local_schema character varying, public_schema character varying, table_name character varying) RETURNS text
    LANGUAGE plpgsql
    AS $$
	#variable_conflict use_variable
	Declare sql_template text;
	Declare sql text;
	Declare column_list text;
	Declare pk_field text;	
Begin

	sql_template =
'/*****************************************************************************************************************************
**	Function	#VIEW-NAME#
**	Who			THIS VIEW IS AUTO-GENERATED BY fn_create_local_union_public_entity_views / Roger Mähler
**	When		#DATE#
**	What		Returns union of local and public versions of #TABLE-NAME#
**  Uses        clearing_house.tbl_clearinghouse_SEAD_rdb_schema
**	Note		Plase re-run fn_create_local_union_public_entity_views whenever public schema is changed
**  Used By     SEAD Clearing House 
******************************************************************************************************************************/

Create Or Replace View #TARGET-SCHEMA#.#VIEW-NAME# As 

	Select submission_id, source_id, local_db_id as merged_db_id, local_db_id, public_db_id, #COLUMN-LIST#
	From #LOCAL-SCHEMA#.#TABLE-NAME#
	Union
	Select 0 As submission_id, 2 As source_id, #PK-COLUMN# as merged_db_id, 0 As local_db_id, #PK-COLUMN# As public_db_id, #COLUMN-LIST#
	From #PUBLIC-SCHEMA#.#TABLE-NAME#
	
;';

	Select array_to_string(array_agg(s.column_name Order By s.ordinal_position), ',') Into column_list
	From clearing_house.tbl_clearinghouse_SEAD_rdb_schema s
	Join information_schema.columns c /* Ta endast med kolumner som finns i båda */
	  On c.table_schema = local_schema
	 And c.table_name = table_name
	 And c.column_name = s.column_name
	Where s.table_schema = public_schema
	  And s.table_name = table_name;

	Select column_name Into pk_field
	From clearing_house.tbl_clearinghouse_SEAD_rdb_schema s
	Where s.table_schema = public_schema
	  And s.table_name = table_name
	  And s.is_pk = 'YES';
	  
	sql := sql_template;
	sql := replace(sql, '#DATE#', to_char(now(), 'YYYY-MM-DD HH24:MI:SS'));
	sql := replace(sql, '#COLUMN-LIST#', column_list);
	sql := replace(sql, '#PK-COLUMN#', pk_field);
	sql := replace(sql, '#TARGET-SCHEMA#', target_schema);
	sql := replace(sql, '#LOCAL-SCHEMA#', local_schema);
	sql := replace(sql, '#PUBLIC-SCHEMA#', public_schema);
	sql := replace(sql, '#VIEW-NAME#', replace(table_name, 'tbl_', 'view_'));
	sql := replace(sql, '#TABLE-NAME#', table_name);

	Return sql;
	
End $$;


--
-- TOC entry 1028 (class 1255 OID 16561)
-- Name: fn_script_public_db_entity_table(character varying, character varying, character varying); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_script_public_db_entity_table(source_schema character varying, target_schema character varying, table_name character varying) RETURNS text
    LANGUAGE plpgsql
    AS $$
	#variable_conflict use_variable
	Declare sql_template text;
	Declare sql text;
	Declare column_list text;
	Declare pk_fields text;
	Declare x clearing_house.tbl_clearinghouse_SEAD_rdb_schema%rowtype;
	
Begin

	sql_template = '	Create Table #TABLE-NAME# (

		submission_id int not null,
		source_id int not null,
		
		local_db_id int not null,
		public_db_id int null,

		#COLUMN-LIST#

		#PK-CONSTRAINT#

	);';

	column_list := '';
	pk_fields := '';
	
	For x In (
		Select *
		From clearing_house.tbl_clearinghouse_SEAD_rdb_schema s
		Where s.table_schema = source_schema
		  And s.table_name = table_name
		Order By ordinal_position)
	Loop

		column_list := column_list || Case When column_list = '' Then '' Else ',
		'
		End;
		
		column_list := column_list || x.column_name || ' ' || clearing_house.fn_create_schema_type_string(x.data_type, x.character_maximum_length, x.numeric_precision, x.numeric_scale, x.is_nullable) || '';

		If x.is_pk = 'YES' Then
			pk_fields := pk_fields || Case When pk_fields = '' Then '' Else ', ' End || x.column_name;
		End If;
		
	End Loop;

	sql := sql_template;
	
	sql := replace(sql, '#TABLE-NAME#', target_schema || '.' || table_name);
	sql := replace(sql, '#COLUMN-LIST#', column_list);

	If pk_fields <> '' Then
		sql := replace(sql, '#PK-CONSTRAINT#', replace(',Constraint pk_' || table_name || ' Primary Key (submission_id, source_id, #PK-FIELDS#)', '#PK-FIELDS#', pk_fields));
	Else
		sql := replace(sql, '#PK-CONSTRAINT#', '');
	End If;


	Return sql;
	
End $$;


--
-- TOC entry 1029 (class 1255 OID 16562)
-- Name: fn_select_xml_content_columns(integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_select_xml_content_columns(integer) RETURNS TABLE(submission_id integer, table_name character varying, column_name character varying, column_type character varying)
    LANGUAGE plpgsql
    AS $_$
Begin

    Return Query

        Select	d.submission_id                                   							as submission_id,
                d.table_name																as table_name,
                substring(d.xml::text from '^<([[:alnum:]]+).*>')::character varying(255)	as column_name,
                (xpath('./@class[1]', d.xml))[1]::character varying(255)					as column_type
        From (
            Select x.submission_id, t.table_name, unnest(xpath('/sead-data-upload/' || t.table_name || '/*[not(@clonedId)][1]/*', xml)) As xml
            From clearing_house.tbl_clearinghouse_submissions x
            Join clearing_house.fn_select_xml_content_tables($1) t
              On t.submission_id = x.submission_id
            Where 1 = 1
              And x.submission_id = $1
              And Not xml Is Null
              And xml Is Document
        ) as d;

End $_$;


--
-- TOC entry 1030 (class 1255 OID 16563)
-- Name: fn_select_xml_content_records(integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_select_xml_content_records(integer) RETURNS TABLE(submission_id integer, table_name character varying, local_db_id integer, public_db_id_attr integer, public_db_id_tag integer)
    LANGUAGE plpgsql
    AS $_$
Begin

    Return Query

        With submission_xml_data_rows As (
        
            Select x.submission_id,
				   unnest(xpath('/sead-data-upload/*/*', x.xml)) As xml
            From clearing_house.tbl_clearinghouse_submissions x
            Where Not xml Is Null
              And xml Is Document
              And x.submission_id = $1
        )
            Select v.submission_id,
                   v.table_name::character varying(255),
                   Case When v.local_db_id ~ '^[0-9]+$' Then v.local_db_id::int Else Null End,
                   Case When v.public_db_id_attribute ~ '^[0-9]+$' Then v.public_db_id_attribute::int Else Null End,
                   Case When v.public_db_id_value ~ '^[0-9]+$' Then v.public_db_id_value::int Else Null End
            From (
                Select	d.submission_id																			as submission_id,
                        replace(substring(d.xml::text from '^<([[:alnum:]\.]+).*>'), 'com.sead.database.', '')	as table_name,
                        ((xpath('./@id[1]', d.xml))[1])::character varying(255)									as local_db_id,
                        ((xpath('./@clonedId[1]', d.xml))[1])::character varying(255)							as public_db_id_attribute,
                        ((xpath('./clonedId/text()', d.xml))[1])::character varying(255)						as public_db_id_value
                From submission_xml_data_rows as d
            ) As v;

End $_$;


--
-- TOC entry 1031 (class 1255 OID 16564)
-- Name: fn_select_xml_content_tables(integer); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_select_xml_content_tables(integer) RETURNS TABLE(submission_id integer, table_name character varying, row_count integer)
    LANGUAGE plpgsql
    AS $_$
Begin

    Return Query

        Select	d.submission_id																	as submission_id,
                --xnode(xml)																	as table_name,
                substring(d.xml::text from '^<([[:alnum:]]+).*>')::character varying(255)		as table_name,
                (xpath('./@length[1]', d.xml))[1]::text::int									as row_count
        From (
            Select x.submission_id, unnest(xpath('/sead-data-upload/*', x.xml)) As xml
            From clearing_house.tbl_clearinghouse_submissions as x
            Where 1 = 1
              And x.submission_id = $1
              And Not xml Is Null
              And xml Is Document
              
        ) d;

End $_$;


--
-- TOC entry 1034 (class 1255 OID 16565)
-- Name: fn_select_xml_content_values(integer, character varying); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_select_xml_content_values(integer, character varying) RETURNS TABLE(submission_id integer, table_name character varying, local_db_id integer, public_db_id integer, column_name character varying, column_type character varying, fk_local_db_id integer, fk_public_db_id integer, value text)
    LANGUAGE plpgsql
    AS $_$
Begin

	Return Query 

		Select	$1,
				$2,
				x.local_db_id																				as local_db_id,
				x.public_db_id																				as public_db_id,
				substring(xml::character varying(255) from '^<([[:alnum:]]+).*>')::character varying(255)	as column_name,
				(xpath('./@class[1]', xml))[1]::character varying(255)										as column_type,
				(xpath('./@id[1]', xml))[1]::character varying(255)::int									as fk_local_db_id,
				(xpath('./@clonedId[1]', xml))[1]::character varying(255)::int								as fk_public_db_id,
				(xpath('./text()', xml))[1]::text															as value
		From (
			Select	r.submission_id,
					r.table_name,
					r.local_db_id,
					r.public_db_id,
					unnest(xpath( '/*/*', r.xml)) As xml
			From (
				Select	d.submission_id																			as submission_id,
						replace(substring(xml::text from '^<([[:alnum:]\.]+).*>'), 'com.sead.database.', '')	as table_name,
						((xpath('./@id[1]', xml))[1])::character varying(255)::int								as local_db_id,
						((xpath('./@clonedId[1]', xml))[1])::character varying(255)::int						as public_db_id,
						xml																						as xml
				From (
					Select x.submission_id, unnest(xpath('/sead-data-upload/' || $2 || '/*', xml)) As xml
					From clearing_house.tbl_clearinghouse_submissions x
					Where 1 = 1
					  And x.submission_id = $1
					  And Not xml Is Null
					  And xml Is Document
				) as d
			) as r
		) as x;


End $_$;


--
-- TOC entry 1035 (class 1255 OID 16566)
-- Name: fn_table_exists(character varying); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_table_exists(character varying) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
	Declare exists Boolean;
Begin

	Select Count(*) > 0 Into exists 
		From information_schema.tables 
		Where table_catalog = CURRENT_CATALOG
		  And table_schema = CURRENT_SCHEMA
		  And table_name = $1;

	return exists;
	
End $_$;


--
-- TOC entry 1036 (class 1255 OID 16567)
-- Name: fn_to_integer(character varying); Type: FUNCTION; Schema: clearing_house; Owner: -
--

CREATE FUNCTION fn_to_integer(character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
Begin
	Return Case When ($1 ~ '^[0-9]+$') Then $1::int Else null End;	
End $_$;


SET search_path = public, pg_catalog;

--
-- TOC entry 1037 (class 1255 OID 16568)
-- Name: addmethodifneeded(character varying, character varying, character varying, character varying, text, character varying, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION addmethodifneeded(method_name character varying, abbrev character varying, group_name character varying, unit character varying, description text, record_type character varying DEFAULT NULL::character varying, biblio_ref character varying DEFAULT NULL::character varying) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	biblio_id integer := null;
	record_type_id integer := null;
BEGIN
	if biblio_ref is not null then
	   -- select the reference into biblio_id
	   -- TODO
	end if;
	if record_type is not null then 
		record_type_id = GetTableIdByOneColumnNameValue('tbl_record_types',
				'record_type_id','record_type_name',
				record_type);
	end if;
	if ExistsTableOneColumnValue('tbl_methods', 'method_abbrev_or_alt_name', abbrev) IS FALSE THEN
		INSERT INTO tbl_methods (
			method_id,
			biblio_id,
			date_updated,
			description,
			method_abbrev_or_alt_name,
			method_group_id,
			method_name,
			record_type_id,
			unit_id
		)
		VALUES (
			nextval('tbl_methods_method_id_seq'),
			biblio_id,
			Now(),
			description,
			abbrev, --method_abbrev_or_alt_name
			GetTableIdByOneColumnNameValue('tbl_method_groups',
				'method_group_id','group_name',
				group_name ),		--LookupIdOnColumn('Dating to period'), for method_group_id on group_name
			method_name, --method_name
			record_type_id,
			GetTableIdByOneColumnNameValue('tbl_units',
				'unit_id','unit_name',
				unit )			--LookupIdOnColumn('Years') --unit_id on unit_name
		);
		PERFORM BugsTransferLog('tbl_methods','I',currval('tbl_methods_method_id_seq'),abbrev);
	END if;
END;
$$;


--
-- TOC entry 1038 (class 1255 OID 16569)
-- Name: addprimaryecocodesystem(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION addprimaryecocodesystem(character varying) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE

BEGIN
	INSERT INTO tbl_ecocode_systems(
		ecocode_system_id,
		biblio_id, 
		date_updated,
		name,
		notes
	)
	VALUES(
		nextval('tbl_ecocode_systems_ecocode_system_id_seq'),
		NULL,
		Now(),
		$1,
		NULL
	);
	PERFORM BugsTransferLog('tbl_ecocode_systems','I',currval('tbl_ecocode_systems_ecocode_system_id_seq'),'');
END;
$_$;


--
-- TOC entry 1039 (class 1255 OID 16570)
-- Name: bugsdataerror(character varying, character varying, character varying, character varying, text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION bugsdataerror(character varying, character varying, character varying, character varying, text, text) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	sead_tbl	ALIAS FOR $1;
	bugs_tbl	ALIAS FOR $2;
	sead_col	ALIAS FOR $3;
	bugs_col	ALIAS FOR $4;
	sead_update	ALIAS FOR $5;
	bugs_update	ALIAS FOR $6;
BEGIN
	INSERT INTO tbl_bugstransfer_errors (
			bugs_error_id,
			error_type,
			sead_table,
			bugs_table,
			sead_column,
			bugs_column,
			sead_update_query,
			bugs_update_query,
			notes,
			date_updated )
	VALUES (
			nextval('tbl_bugstransfer_errors_bugs_error_id_seq'),
			'DATA_ERROR',
			sead_tbl,
			bugs_tbl,
			sead_col,
			bugs_col,
			sead_update,
			bugs_update,
			NULL,
			Now() );
END;
$_$;


--
-- TOC entry 1040 (class 1255 OID 16571)
-- Name: bugserrornote(bigint, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION bugserrornote(bigint, text) RETURNS void
    LANGUAGE plpgsql
    AS $_$
BEGIN
	UPDATE tbl_bugstransfer_errors
	SET notes = $2
	WHERE bugs_error_id = $1;
END;
$_$;


--
-- TOC entry 1041 (class 1255 OID 16572)
-- Name: bugsregionlocationlookup(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION bugsregionlocationlookup(character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	region		ALIAS FOR $1;
	lt_id		INTEGER;
	l_id		INTEGER;
	l_count		INTEGER;
BEGIN
	-- get the country location_type_id
	SELECT location_type_id INTO lt_id FROM tbl_location_types
	WHERE location_type = 'Country';
	-- find the non-country locations for this region data
	SELECT COUNT(location_id) INTO l_count FROM tbl_locations WHERE location_name IN (
	SELECT DISTINCT location_name FROM tbl_locations
	WHERE 	location_type_id = lt_id
	GROUP BY location_name
	HAVING COUNT(location_name) > 1)
	AND location_name = region;

	-- l_count gives the number of regions with location_name = region that is not a country
	-- and that has more than one non-country entry
	IF l_count > 0 THEN 
		/*
		IF (EXCEPTIONS_HERE) THEN

		ELSIF ...
		ELSE
		*/
			RAISE USING 
				MESSAGE = FORMAT('BugsRegionLocationLookup(VARCHAR): More than one non-country location_name = %',region),
				HINT = 'Record needs review. Creaye an exception in BugsRegionLocationLookup(VARCHAR)';
	END IF;

	-- Any other region is only entered once
	SELECT location_id INTO STRICT l_id FROM tbl_locations
	WHERE	location_name = region
	AND	location_type_id != lt_id;

	RETURN l_id;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RAISE USING
			MESSAGE = FORMAT('BugsRegionLocationLookup(VARCHAR): The region does not exist location_name = %s',region),
			HINT = 'Perhaps it has only been entered as a country. Otherwise needs to be entered.';
	WHEN TOO_MANY_ROWS THEN
		RAISE USING
			MESSAGE = FORMAT('BugsRegionLocationLookup(VARCHAR): More than one region with location_name = %s',region),
			HINT = 'Check the logic in this function, something bad has happened.';
END;
$_$;


--
-- TOC entry 1006 (class 1255 OID 16573)
-- Name: bugstransferlog(character varying, character varying, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION bugstransferlog(character varying, character varying, text) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	tablename	ALIAS FOR $1;
	logcode		ALIAS FOR $2;
	notes		ALIAS FOR $3;
BEGIN
	INSERT INTO tbl_bugstransfer_log (
		bugs_transfer_log_id,
		table_name,
		transfer_code,
		id_value,
		notes,
		date_updated
	)
	VALUES (
		nextval('tbl_bugstransfer_log_bugs_transfer_log_id_seq'),
		tablename,
		logcode,
		NULL,
		notes,
		Now()
		
	);
END;
$_$;


--
-- TOC entry 1025 (class 1255 OID 16574)
-- Name: bugstransferlog(character varying, character varying, bigint, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION bugstransferlog(character varying, character varying, bigint, text) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	tablename	ALIAS FOR $1;
	logcode		ALIAS FOR $2;
	id		ALIAS FOR $3;
	notes		ALIAS FOR $4;
BEGIN
	INSERT INTO tbl_bugstransfer_log (
		bugs_transfer_log_id,
		table_name,
		transfer_code,
		id_value,
		notes,
		date_updated
	)
	VALUES (
		nextval('tbl_bugstransfer_log_bugs_transfer_log_id_seq'),
		tablename,
		logcode,
		id,
		notes,
		Now()
		
	);
END;
$_$;


--
-- TOC entry 1026 (class 1255 OID 16575)
-- Name: checkorderexists(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION checkorderexists(character varying) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	ocount	INTEGER;
BEGIN
	SELECT COUNT(*) INTO ocount FROM tbl_taxa_tree_orders
	WHERE	order_name = $1;

	IF ocount = 0 THEN
		--RAISE WARNING E'No order of name % exists',$1;
		RETURN FALSE;
	END IF;

	IF ocount > 1 THEN
		RAISE E'order_name % refers to % order records!!',$1,ocount;
		RETURN TRUE;
	END IF;
	RETURN TRUE;
END;
$_$;


--
-- TOC entry 1032 (class 1255 OID 16576)
-- Name: checkprimarycontactexists(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION checkprimarycontactexists() RETURNS boolean
    LANGUAGE plpgsql
    AS $$
BEGIN
	IF GetContactIdByBothNames('Philip','Buckland') IS NULL THEN
		RETURN FALSE;
	END IF;
	RETURN TRUE;
END;
$$;


--
-- TOC entry 1033 (class 1255 OID 16577)
-- Name: checkprimarydatasetmastersetbiblioexists(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION checkprimarydatasetmastersetbiblioexists() RETURNS boolean
    LANGUAGE plpgsql
    AS $$
DECLARE
	bid	INTEGER;
BEGIN
	SELECT biblio_id INTO bid FROM tbl_bugs_biblio
	WHERE	bugs_reference = 'Buckland & Buckland 2006';

	IF bid IS NULL THEN
		RETURN FALSE;
	END IF;

	RETURN TRUE;
END;
$$;


--
-- TOC entry 1042 (class 1255 OID 16578)
-- Name: create_sample_position_view(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION create_sample_position_view() RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
	methods record;
	pos_cols text;
	sub_select_clause text := '';
	select_clause text := '';
	point_clause varchar;
	normalized_method_name varchar := '';
	transform_string varchar;
begin

	for methods in (select *
			from tbl_methods m
			where m.method_group_id = 17) loop

	normalized_method_name := replace(methods.method_name, ' ', '_');
	normalized_method_name := replace(normalized_method_name, '.', '_');
	normalized_method_name := replace(normalized_method_name, '(', '_');
	normalized_method_name := replace(normalized_method_name, ')', '_');

	transform_string := get_transform_string(normalized_method_name);
	if transform_string = '-1' then
		continue;
	end if;

	if select_clause != '' then
		select_clause := select_clause || ',';
	end if;
	
	select_clause := select_clause || ' '
		|| transform_string
		|| 'as "' || methods.method_name || '"';
	
	sub_select_clause := sub_select_clause || ' ' ||
	  'left join (select x.measurement as x, y.measurement as y, sc.physical_sample_id as sample
		from 
		tbl_sample_coordinates sc
		join tbl_coordinate_method_dimensions cmd
		on cmd.coordinate_method_dimension_id = sc.coordinate_method_dimension_id
		join
		(select 
		sc.physical_sample_id as id,
		sc.measurement as measurement,
		cmd.method_id as method_id 
		from tbl_sample_coordinates sc
		join tbl_coordinate_method_dimensions cmd
		on sc.coordinate_method_dimension_id = cmd.coordinate_method_dimension_id
		join tbl_dimensions d
		on d.dimension_id = cmd.dimension_id
		where d.dimension_name like ''Y%'') as y
		on y.id = sc.physical_sample_id
		and y.method_id = cmd.method_id

		join
		(select 
		sc.physical_sample_id as id,
		sc.measurement as measurement,
		cmd.method_id as method_id 
		from tbl_sample_coordinates sc
		join tbl_coordinate_method_dimensions cmd
		on sc.coordinate_method_dimension_id = cmd.coordinate_method_dimension_id
		join tbl_dimensions d
		on d.dimension_id = cmd.dimension_id
		where d.dimension_name like ''X%'') as x
		on x.id = sc.physical_sample_id
		and x.method_id = cmd.method_id

		where cmd.method_id = ' || methods.method_id || 
		') as ' || normalized_method_name ||
		' on ' || normalized_method_name || '.sample = sc.physical_sample_id';
		
	end loop;
	select_clause :=
		'select sc.physical_sample_id, '
		||select_clause || ' from tbl_sample_coordinates sc '
		|| sub_select_clause;
	raise info '%', select_clause;
end;$$;


--
-- TOC entry 1043 (class 1255 OID 16579)
-- Name: createanalysisentity(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION createanalysisentity(psid integer, dataset integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN
	Insert Into tbl_analysis_entities
	  (physical_sample_id, 
	   dataset_id)
	  Values
	  (psid, 
	   dataset);
	return currval('tbl_analysis_entities_analysis_entity_id_seq');
END;
$$;


--
-- TOC entry 1044 (class 1255 OID 16580)
-- Name: createbugstypes(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION createbugstypes() RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	CREATE TYPE tfossil AS (
		fossilbugscode character varying(10),
		code numeric(18,10),
		samplecode character varying(10),
		abundance integer
		--taxon_id INTEGER,
		--abundance_element_id INTEGER,
		--analysis_entity_id INTEGER
	);
	
	CREATE TYPE tbiblio AS (
		reference character varying(60),
		author character varying(255),
		title text,
		notes text
	);
	
	CREATE TYPE tcountsheet AS (
		countsheetcode character varying(10),
		countsheetname character varying(100),
		sitecode character varying(10),
		sheetcontext character varying(25),
		sheettype character varying(25)
	);
	
	CREATE TYPE tsample AS (
		  samplecode character varying(10),
		  sitecode character varying(10),
		  x character varying(50),
		  y character varying(50),
		  zordepthtop numeric(18,10),
		  zordepthbot numeric(18,10),
		  refnrcontext character varying(50),
		  countsheetcode character varying(10)
	);

	CREATE TYPE tspeciesassociation AS (
		speciesassociationid integer,
		code numeric(18,10),
		associatedspeciescode numeric(18,10),
		associatedtype character varying(50),
		bugsref character varying(60)
	);
	
	CREATE TYPE tmcrdata AS (
		field1 character varying(255),
		field2 character varying(255),
		field3 character varying(255),
		field4 character varying(255),
		field5 character varying(255),
		field6 character varying(255),
		field7 character varying(255),
		field8 character varying(255),
		field9 character varying(255),
		field10 character varying(255),
		field11 character varying(255),
		field12 character varying(255),
		field13 character varying(255),
		field14 character varying(255),
		field15 character varying(255),
		field16 character varying(255),
		  field17 character varying(255),
		  field18 character varying(255),
		  field19 character varying(255),
		  field20 character varying(255),
		  field21 character varying(255),
		  field22 character varying(255),
		  field23 character varying(255),
		  field24 character varying(255),
		  field25 character varying(255),
		  field26 character varying(255),
		  field27 character varying(255),
		  field28 character varying(255),
		  field29 character varying(255),
		  field30 character varying(255),
		  field31 character varying(255),
		  field32 character varying(255),
		  field33 character varying(255),
		  field34 character varying(255),
		  field35 character varying(255),
		  field36 character varying(255),
		  field37 character varying(255),
		  field38 character varying(255),
		  field39 character varying(255),
		  field40 character varying(255),
		  field41 character varying(255),
		  field42 character varying(255),
		  field43 character varying(255),
		  field44 character varying(255),
		  field45 character varying(255),
		  field46 character varying(255),
		  field47 character varying(255),
		  field48 character varying(255),
		  field49 character varying(255),
		  field50 character varying(255),
		  field51 character varying(255),
		  field52 character varying(255),
		  field53 character varying(255),
		  field54 character varying(255),
		  field55 character varying(255),
		  field56 character varying(255),
		  field57 character varying(255),
		  field58 character varying(255),
		  field59 character varying(255),
		  field60 character varying(255),
		mcrrow smallint,
		code numeric(18,10)
	);

	PERFORM BugsTransferLog('catalog','CTY','tmcrdata');
	
	CREATE TYPE tmcrsummarydata AS (
		code numeric(18,10),
		tmaxlo smallint,
		tmaxhi smallint,
		tminlo smallint,
		tminhi smallint,
		trangelo smallint,
		trangehi smallint,
		cogmidtmax smallint,
		cogmidtrange smallint
	);

	PERFORM BugsTransferLog('catalog','CTY','tmcrsummarydata');
	
	CREATE TYPE tmcrname AS (
		mcrnametrim character varying(80),
		comparestatus character varying(255),
		code numeric(18,10),
		tempcode numeric(18,10),
		mcrnumber smallint,
		mcrname character varying(200)
	);
	
	PERFORM BugsTransferLog('catalog','CTY','tmcrname');
	
	CREATE TYPE trdb AS (
		code numeric(18,10),
		countrycode character varying(50),
		rdbcode integer
	);
	
	PERFORM BugsTransferLog('catalog','CTY','trdb');
	
	CREATE TYPE trdbcode AS (
		rdbcode integer,
		category character varying(4),
		rdbdef character varying(200),
		rdbsyscode integer
	);
	
	PERFORM BugsTransferLog('catalog','CTY','trdbcode');
	
	CREATE TYPE trdbsystem AS (
		rdbsyscode integer,
		rdbsys character varying(10),
		rdbversion character varying(10),
		rdbsysdate integer,
		rdbfirstpub smallint,
		bugsref character varying(60),
		countrycode character varying(50)
	);

	PERFORM BugsTransferLog('catalog','CTY','trdbsystem');
	
	CREATE TYPE tsiteop AS (
		  otherproxyid integer,
		  sitecode character varying(10),
		  haspollen character(1),
		  hasplantmacro character(1),
		  hasdiatoms character(1),
		  haschironomids character(1),
		  hassoilchemistry character(1),
		  hasisotopes character(1),
		  hasanimalbones character(1),
		 hasarchaeology character(1),
		 hasmolluscs character(1)
	);

	PERFORM BugsTransferLog('catalog','CTY','tsiteop');
	
	CREATE TYPE siteor AS (
		  site_other_records_id INTEGER,
		  site_id integer,
		  biblio_id integer, -- reference to publication containing data
		  record_type_id integer, -- reference to type of data (proxy)
		  description text
	);

	PERFORM BugsTransferLog('catalog','CTY','siteor');
	
	CREATE TYPE tbiology AS (
		 code numeric(18,10),
		  ref character varying(60),
		  data text
	);
	PERFORM BugsTransferLog('catalog','CTY','tbiology');

	CREATE TYPE ttaxo AS (
		  code numeric(18,10),
		  ref character varying(60),
		  data text
	);

	PERFORM BugsTransferLog('catalog','CTY','ttaxo');

	CREATE TYPE tdistrib AS (
		  code numeric(18,10),
		  ref character varying(60),
		  data text
	);

	PERFORM BugsTransferLog('catalog','CTY','tdistrib');

	CREATE TYPE tkey AS (
		  code numeric(18,10),
		  ref character varying(60),
		  data text
	);

	PERFORM BugsTransferLog('catalog','CTY','tkey');

	CREATE TYPE tsiteref AS (
		sitecode VARCHAR(10),
		bugsref VARCHAR(60)
	);

	PERFORM BugsTransferLog('catalog','CTY','tsiteref');
	
	CREATE TYPE tgenus AS (
		bugsfamily VARCHAR(50),
		bugsgenus VARCHAR(50)
	);

	PERFORM BugsTransferLog('catalog','CTY','tgenus');

	CREATE TYPE tindex AS (
		bugscode NUMERIC(18,10),
		bugsfamily VARCHAR(50),
		bugsgenus VARCHAR(50),
		bugsspecies VARCHAR(35),
		bugsauthority VARCHAR(35)
	);

	PERFORM BugsTransferLog('catalog','CTY','tindex');
	
	CREATE TYPE tsite AS (
		sitecode VARCHAR(10),
		sitename VARCHAR(50),
		region VARCHAR(40),
		country VARCHAR(40),
		ngr VARCHAR(10),
		latdd numeric(18,10),
		longdd numeric(18,10),
		alt numeric(18,10),
		idby VARCHAR(255),
		interp VARCHAR(255),
		specimens VARCHAR(255)
	);

	PERFORM BugsTransferLog('catalog','CTY','tsite');
	
	-- Sead Types
	-- dating
	CREATE TYPE relative_date AS (
		relative_date_id INTEGER,
		relative_age_id INTEGER,
		physical_sample_id INTEGER,
		method_id INTEGER, -- dating method used to attribute sample to period or calendar date.
		notes TEXT, -- any notes specific to the dating of this sample to this calendar or period based age
		date_updated TIMESTAMP WITH TIME ZONE,
		dating_uncertainty_id INTEGER
	);

	PERFORM BugsTransferLog('catalog','CTY','relative_date');
	
	CREATE TYPE relative_age AS (
		relative_age_id INTEGER,
		relative_age_type_id INTEGER,
		relative_age_name VARCHAR(50), -- name of the dating period, e.g. bronze age. calendar ages should be given appropriate names such as ad 1492, 74 bc
		description TEXT, -- a description of the (usually) period.
		c14_age_older NUMERIC(20,5), -- c14 age of younger boundary of period (where relevant).
		c14_age_younger NUMERIC(20,5), -- c14 age of later boundary of period (where relevant). leave blank for calendar ages.
		cal_age_older NUMERIC(20,5), -- (approximate) age before present (1950) of earliest boundary of period. or if calendar age then the calendar age converted to bp.
		cal_age_younger NUMERIC(20,5), -- (approximate) age before present (1950) of latest boundary of period. or if calendar age then the calendar age converted to bp.
		notes TEXT, -- any further notes not included in the description, such as reliability of definition or fuzzyness of boundaries.
		date_updated TIMESTAMP WITH TIME ZONE,
		location_id INTEGER,
		"Abbreviation" VARCHAR
	);
	RAISE WARNING 'CREATE TYPES FUNCTION: The relative_age type needs review on Abbreviation (lose the capital A)
	This change will have a flow on effect and need debugging if done.';
	
	PERFORM BugsTransferLog('catalog','CTY','relative_age');
	
	-- Bugs Types
	-- dating
	CREATE TYPE tlab AS (
		labid VARCHAR(10),
		labname VARCHAR(100),
		address VARCHAR(255),
		country VARCHAR(30),
		telephone VARCHAR(50),
		website TEXT,
		email TEXT
	);
	
	PERFORM BugsTransferLog('catalog','CTY','tlab');

	CREATE TYPE tperiod AS (
		periodcode VARCHAR(20),
		periodname VARCHAR(28),
		periodtype VARCHAR(50),
		perioddesc VARCHAR(255),
		periodref VARCHAR(50),
		periodgeog VARCHAR(100),
		periodbegin NUMERIC(20,5),
		beginbcad VARCHAR(4),
		periodend NUMERIC(20,5),
		endbcad VARCHAR(4),
		yearstype VARCHAR(13)
	);

	PERFORM BugsTransferLog('catalog','CTY','tperiod');

	CREATE TYPE tdatesperiod AS (
		perioddatecode VARCHAR(10),
		samplecode VARCHAR(10),
		uncertainty VARCHAR(10),
		Periodcode VARCHAR(20),
		datingmethod VARCHAR(50),
		notes TEXT
	);

	PERFORM BugsTransferLog('catalog','CTY','tdatesperiod');
	
	CREATE TYPE tdatesmethod AS (
		abbrev VARCHAR(50),
		method VARCHAR(50),
		datesmethodtype VARCHAR(50),
		sortorder VARCHAR(50)
	);

	PERFORM BugsTransferLog('catalog','CTY','tdatesmethod');

	CREATE TYPE tmethodcheck AS (
		dm VARCHAR(50),
		ytype VARCHAR(13)
	);

	PERFORM BugsTransferLog('catalog','CTY','tmethodcheck');

	CREATE TYPE tdatescalendar AS (
		samplecode VARCHAR(10),
		uncertainty VARCHAR(10),
		calendarcode VARCHAR(10),
		calendardate VARCHAR(50),
		bcadbp VARCHAR(10),
		datingmethod VARCHAR(50),
		notes text
	);

	PERFORM BugsTransferLog('catalog','CTY','tdatescalendar');

	CREATE TYPE tdatesradio AS (
		datecode VARCHAR(10),
		samplecode VARCHAR(10),
		labnr VARCHAR(20),
		uncertainty VARCHAR(10),
		perioddate VARCHAR(50),
		ageerrororpluserror VARCHAR(50),
		ageerrorminus VARCHAR(50),
		datingmethod VARCHAR(15),
		materialtype VARCHAR(50),
		labid VARCHAR(10),
		notes text
	);

	PERFORM BugsTransferLog('catalog','CTY','tdatesradio');
END;
$$;


--
-- TOC entry 1045 (class 1255 OID 16582)
-- Name: createdataset(tfossil); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION createdataset(frow tfossil) RETURNS integer
    LANGUAGE plpgsql
    AS $$
Declare
	master_set_id	Integer;
	method_id	Integer;
	dName		Varchar;
	datatype_id	Integer;
	
Begin

	Select 
	  master.master_set_id, 
	  m.method_id, 
	  countsheet."CountsheetName", 
	  GetDataTypeIDBySheetType(countsheet."SheetType")
	Into 
	  master_set_id, 
	  method_id, 
	  dName, 
	  datatype_id
	From
	  tbl_bugs_tsample ts
	join 
	  tbl_bugs_tcountsheet countsheet
	  on ts."CountsheetCODE" = countsheet."CountsheetCODE"
	left join 
	  tbl_dataset_masters master
	  on master_name = 'Bugs database'
	left join
	  tbl_methods m 
	  on method_name = 'Palaeoentomology'
	Where ts."SampleCODE" = frow.samplecode;

	If datatype_id = -1 Then
		return -1;
	End If;
	
	INSERT INTO tbl_datasets(
		dataset_id,
		dataset_name,
		master_set_id,
		method_id,
		data_type_id,
		date_updated
	)
	VALUES (
		nextval('tbl_datasets_dataset_id_seq'),
		dName,
		master_set_id,
		method_id,
		datatype_id,
		--LookupIdByUniqueValue('tbl_dataset_masters','master_set_id','master_name','Bugs database'), 
		--LookupIdByUniqueValue('tbl_methods','method_id','method_name','Palaeoentomology'), 
		Now()
		);
	return currval('tbl_datasets_dataset_id_seq');
End;
$$;


--
-- TOC entry 1046 (class 1255 OID 16583)
-- Name: datingupdates(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION datingupdates() RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	UPDATE tbl_bugs_tlab
	SET 	"Country" = 'United Kingdom'
	WHERE 	"LabID"   = 'Birm';
	PERFORM BugsTransferLog('tbl_bugs_tlab','U','SET Country = United Kingdom WHERE LabID = Birm');

	UPDATE tbl_bugs_tlab
	SET	"Country" = 'United States of America'
	WHERE 	"Country" = 'USA';
	PERFORM BugsTransferLog('tbl_bugs_tlab','U','SET Country = United States of America WHERE Country = USA');

	UPDATE tbl_bugs_tlab
	SET	"Country" = 'United States of America'
	WHERE 	"Country" = 'USA???';
	PERFORM BugsTransferLog('tbl_bugs_tlab','U','SET Country = United States of America WHERE Country = USA???');


	UPDATE tbl_bugs_tlab
	SET	"Country" = 'Korea, Republic Of'
	WHERE 	"Country" = 'Korea';
	PERFORM BugsTransferLog('tbl_bugs_tlab','U','SET Country = Korea, Republic Of WHERE Country = Korea');


	UPDATE tbl_bugs_tlab
	SET	"Country" = 'Slovakia (Slovak Republic)'
	WHERE 	"Country" = 'Slovakia';
	PERFORM BugsTransferLog('tbl_bugs_tlab','U','SET Country = Slovakia (Slovak Republic) WHERE Country = Slovakia');

	UPDATE tbl_bugs_tlab
	SET	"Country" = 'Senegal'
	WHERE 	"Country" = 'République du Sénégal';
	PERFORM BugsTransferLog('tbl_bugs_tlab','U','SET Country = Senegal WHERE Country = République du Sénégal');

	UPDATE tbl_bugs_tlab
	SET	"Country" = 'Russian Federation'
	WHERE 	"Country" = 'Russia';
	PERFORM BugsTransferLog('tbl_bugs_tlab','U','SET Country = Russian Federation WHERE Country = Russia');


	UPDATE tbl_bugs_tlab
	SET	"Country" = 'Netherlands'
	WHERE 	"Country" = 'The Netherlands';
	PERFORM BugsTransferLog('tbl_bugs_tlab','U','SET CountryCode = Netherlands WHERE Country = The Netherlands');


	UPDATE tbl_bugs_tlab
	SET	"Country" = 'China'
	WHERE 	"Country" = 'Republic of China';
	PERFORM BugsTransferLog('tbl_bugs_tlab','U','SET CountryCode = China WHERE Country = Republic of China');

	UPDATE tbl_bugs_tlab
	SET	"Country" = 'Iran, Islamic Republic of'
	WHERE 	"Country" = 'Iran';
	PERFORM BugsTransferLog('tbl_bugs_tlab','U','SET CountryCode = Iran, Islamic Republic of WHERE Country = Iran');

	delete from tbl_bugs_tlab
	where "LabID" = 'Code' and "Labname" = 'Lab name' and "Country" = 'Country';
	PERFORM BugsTransferLog('tbl_bugs_tlab','D','where LabID = Code and Labname = Lab name and Country = Country');

END;
$$;


--
-- TOC entry 1047 (class 1255 OID 16584)
-- Name: existsanalysisentity(tsample); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existsanalysisentity(tsample) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	srow		ALIAS FOR $1;
	entity_id	INTEGER;
BEGIN
	SELECT analysis_entity_id INTO STRICT entity_id FROM tbl_analysis_entities AS A
	INNER JOIN tbl_bugs_physical_samples AS B
	ON A.physical_sample_id = B.physical_sample_id
	INNER JOIN tbl_datasets AS C
	ON A.dataset_id = C.dataset_id
	WHERE B.bugs_samplecode = srow.samplecode
	AND C.dataset_name = srow.countsheetcode;
	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		RAISE WARNING 'ExistsAnalysisEntity(tsample): Multiple analyis_entities found for samplecode = % dataset_name = %
		TODO: Error handling',srow.samplecode,srow.countsheetcode;
END;
$_$;


--
-- TOC entry 1048 (class 1255 OID 16585)
-- Name: existsasduplicatetaxon(tindex, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existsasduplicatetaxon(tindex, integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	irow		ALIAS FOR $1;
	
BEGIN
	RAISE WARNING 'ExistsAsDuplicateTaxon(tindex,INTEGER): NOT ADDEDCurrently not implemented, manual import of duplicates. tindex = %',irow;
	EXECUTE BugsDataError('tbl_taxonomic_order','tbl_bugs_tindex','taxonomic_code','CODE',
	FORMAT('SELECT * FROM tbl_taxonomic_order WHERE taxonomic_code = %s',irow.code),
	FORMAT('SELECT * FROM tbl_bugs_tindex WHERE "CODE" = %s',irow.code)
	);
	EXECUTE BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),
	'DUPLICATE TAXON tbl_bugs_tindex has duplicate code. ExistsAsDuplicateTaxon(tindex,INTEGER): Not yet added to sead.');
	RETURN FALSE;
END;
$_$;


--
-- TOC entry 1049 (class 1255 OID 16586)
-- Name: existsassociationtype(tspeciesassociation); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existsassociationtype(tspeciesassociation) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	spassoc	ALIAS FOR $1;
	atid	INTEGER;
BEGIN
	SELECT association_type_id INTO STRICT atid 
	FROM tbl_species_association_types
	WHERE association_type_name = spassoc.associatedtype;
	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RAISE WARNING 'ExistsAssociationType(tspeciesassociation):
		No existing association type. tspeciesassociation = %',spassoc;
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		RAISE 'ExistsAssociationType(tspeciesassociation):
		Multiple association types for association_type_name = %',spassoc.associatedtype;
END;
$_$;


--
-- TOC entry 1050 (class 1255 OID 16587)
-- Name: existsbiblio(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existsbiblio(character varying) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	bugsref		ALIAS FOR $1;
	bid		INTEGER;
	sead_query	TEXT;
	bugs_query	TEXT;
BEGIN
	SELECT biblio_id INTO STRICT bid FROM tbl_bugs_biblio
	WHERE bugs_reference = bugsref;
	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		sead_query = FORMAT('SELECT * FROM tbl_bugs_biblio WHERE bugs_reference = %s',bugsref);
		bugs_query = FORMAT('SELECT * FROM tbl_bugs_tbibliio WHERE "REFERENCE" = %s',bugsref);
		PERFORM BugsDataError('tbl_bugs_biblio','tbl_bugs_trdbsystems','bugs_reference',bugsref,
			sead_query, bugs_query
		);
		PERFORM BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),'No bugs_reference is found in sead for the given reference.');
		RAISE WARNING 'ExistsBiblio(VARCHAR): Bugs error logged. No reference found for bugs_reference = %',bugsref;
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		RAISE 'ExistsBiblio(VARCHAR): Critical error. Too many bugs_reference = % found in tbl_bugs_biblio.',bugsref;
END;
$_$;


--
-- TOC entry 1052 (class 1255 OID 16588)
-- Name: existscountrylocation(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existscountrylocation(character varying) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	countrycode	ALIAS FOR $1;
	lid		INTEGER;
	ltid		INTEGER;
	ltfound		BOOLEAN:=FALSE;
BEGIN
	-- Manually add the RDB country codes here
	-- TODO: see UpdateRDBData() the column needs to be altered to fit the new country name, then this can be removed from here
	IF countrycode = 'UK' THEN
		RETURN TRUE;
	ELSIF countrycode = 'Int' THEN
		RETURN TRUE;
	ELSIF countrycode = 'Swe' THEN
		RETURN TRUE;
	ELSIF countrycode = 'Ger' THEN
		RETURN TRUE;
	END IF;
	------------------------------------------
	SELECT location_type_id INTO STRICT ltid FROM tbl_location_types
	WHERE location_type = 'Country';
	ltfound = TRUE;

	SELECT location_id INTO STRICT lid FROM tbl_locations
	WHERE location_type_id = ltid
	AND location_name = countrycode;
	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		IF ltfound IS FALSE THEN
			RAISE 'ExistsCountryLocation(VARCHAR): Critical error. No location_type = Country found.';
		END IF;
		PERFORM BugsDataError('tbl_locations','tbl_rdb_systems','location_name',countrycode,'','');
		PERFORM BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),'No country exists for the given country code');
		RAISE WARNING 'ExistsCountryLocation(VARCHAR): Bugs error logged. No country location with location_name = % found.',countrycode;
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		IF ltfound IS FALSE THEN
			RAISE 'ExistsCountryLocation(VARCHAR): Critical error. Multiple location types for location_type = Country found.';
		END IF;
END;
$_$;


--
-- TOC entry 1053 (class 1255 OID 16589)
-- Name: existsdataset(character varying, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existsdataset(character varying, integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	cscode		ALIAS FOR $1;
	contextid	ALIAS FOR $2;
	dsid		INTEGER;
BEGIN
	SELECT dataset_id INTO STRICT dsid FROM tbl_datasets
	WHERE dataset_name = cscode
	AND data_type_id = contextid;
	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		RAISE WARNING 'ExistsDataset(VARCHAR,INTEGER): Multiple datasets with countsheetcode = % data_type_id = %',cscode,contextid;
		EXECUTE BugsDataError('tbl_datasets','tbl_bugs_tcountsheet','dataset_id','CountsheetCODE,SheetContext',
			FORMAT('SELECT * FROM tbl_datasets WHERE dataset_name = %s AND data_type_id = %s',csheetrow.countsheetcode, contextid),
			FORMAT('SELECT * FROM tbl_bugs_tcountsheet WHERE "CountsheetCODE" = %s',csheetrow.countsheetcode)
			);
		EXECUTE BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),
			'DUPLICATE DATASET More than one countsheet on bugs_sample_groups.bugs_countsheetcode and data_type_id. HINT:The SheetContext and CountsheetCODE make a unique dataset_id');
		RETURN TRUE;
END;
$_$;


--
-- TOC entry 1054 (class 1255 OID 16590)
-- Name: existsduplicatecode(numeric); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existsduplicatecode(numeric) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	tcount	INTEGER;
BEGIN
	SELECT COUNT(*) INTO tcount FROM tbl_taxonomic_order
	WHERE 	taxonomic_code = $1;
	IF tcount > 1 THEN
		RAISE WARNING E'Ecocodes:  Duplicate taxon for code = %',$1;
		RETURN TRUE;
	END IF;
	RETURN FALSE;
END;
$_$;


--
-- TOC entry 1055 (class 1255 OID 16591)
-- Name: existsduplicateecocodedefintion(integer, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existsduplicateecocodedefintion(integer, character varying) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	edcount	INTEGER;
BEGIN
	SELECT COUNT(*) INTO edcount FROM tbl_ecocode_definitions
	WHERE	ecocode_group_id = $1
	AND	abbreviation = $2;
	IF edcount > 1 THEN
		RAISE WARNING E'Multiple ecocode definitions ecogroupid = % BugsEcoCODE = % EcoLabel = % Notes = % SortOrder = %',$1,$2,$3,$4,$5;
		RETURN TRUE;
	END IF;
	RETURN FALSE;
END;
$_$;


--
-- TOC entry 1056 (class 1255 OID 16592)
-- Name: existsduplicateecocodegroup(integer, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existsduplicateecocodegroup(integer, character varying) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	egcount	INTEGER;
BEGIN
	SELECT COUNT(*) INTO egcount FROM tbl_ecocode_groups
	WHERE 	ecocode_system_id = $1
	AND	label = $2;

	IF egcount > 1 THEN
		RAISE WARNING E'More than one ecocode group with ecocode_system_id = % label = %',$1,$2;
		RETURN TRUE;
	END IF;
	RETURN FALSE;
END;
$_$;


--
-- TOC entry 1057 (class 1255 OID 16593)
-- Name: existsduplicateecocodesystem(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existsduplicateecocodesystem(character varying) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	escount	INTEGER;
BEGIN
	SELECT COUNT(*) INTO escount FROM tbl_ecocode_systems
	WHERE 	name = $1;
	IF escount > 1 THEN
		RAISE WARNING E'More than one ecocode system with name = %',$1;
		RETURN TRUE;
	END IF;
	RETURN FALSE;
END;	
$_$;


--
-- TOC entry 1058 (class 1255 OID 16594)
-- Name: existsecocode(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existsecocode(integer, integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	ecount	INTEGER;
BEGIN
	SELECT COUNT(*) INTO ecount
	FROM	tbl_ecocodes
	WHERE	taxon_id = $1
	AND	ecocode_definition_id = $2;

	IF ecount > 1 THEN
		RAISE WARNING E'!!!Duplicate ecocode taxon_id = % ecocode_definition_id = %',$1,$2;
		RETURN TRUE;
	END IF;
	IF ecount = 0 THEN
		RETURN FALSE;
	END IF;
	RETURN TRUE;
END;
$_$;


--
-- TOC entry 1059 (class 1255 OID 16595)
-- Name: existsecocodedefinition(integer, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existsecocodedefinition(integer, character varying) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	edid		INTEGER;
	grouplabel	VARCHAR;
	Bugs		VARCHAR;
	KochGroup	VARCHAR;
BEGIN
	Bugs = 'Bugs';
	KochGroup = 'KochGroup';
	
	SELECT GetEcogroupLabelById($1) INTO grouplabel;

	--IF grouplabel = Bugs THEN
		IF ExistsDuplicateEcocodeDefintion($1,$2) IS TRUE THEN
			RETURN TRUE;
		END IF;
		
		SELECT ecocode_definition_id INTO edid FROM tbl_ecocode_definitions
		WHERE	ecocode_group_id = $1
		AND	abbreviation = $2;
		IF edid IS NULL THEN
			RETURN FALSE;
		END IF;
		RETURN TRUE;
END;
$_$;


--
-- TOC entry 1060 (class 1255 OID 16596)
-- Name: existsecocodegroup(integer, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existsecocodegroup(integer, character varying) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	egid	INTEGER;
BEGIN
	SELECT ecocode_group_id INTO egid FROM tbl_ecocode_groups
	WHERE	ecocode_system_id = $1
	AND	label = $2;
	IF egid IS NULL THEN
		RETURN FALSE;
	END IF;
	RETURN TRUE;
END;
$_$;


--
-- TOC entry 1061 (class 1255 OID 16597)
-- Name: existsecocodesystem(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existsecocodesystem(character varying) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	esid	INTEGER;

BEGIN	
	SELECT ecocode_system_id INTO esid FROM tbl_ecocode_systems
	WHERE 	name = $1;
	IF esid IS NULL THEN
		RETURN FALSE;
	END IF;
	RETURN TRUE;
END;
$_$;


--
-- TOC entry 1062 (class 1255 OID 16598)
-- Name: existsrdb(trdb, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existsrdb(trdb, integer, integer, integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	rdb	ALIAS FOR $1;
	tid	ALIAS FOR $2;
	rdbcid	ALIAS FOR $3;
	lid	ALIAS FOR $4;
	rdbid	INTEGER;
BEGIN
	SELECT rdb_id INTO STRICT rdbid FROM tbl_rdb
	WHERE taxon_id = tid
	AND rdb_code_id = rdbcid
	AND location_id = lid;
	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN 
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		RAISE WARNING 'ExistsRDB(trdb,INTEGER,INTEGER,INTEGER): TODO: bugs_error HANDLING. More than one RDB with data %, taxon_id = %, rdb_code = %, location_id = %',rdb,tid,rdbcid,lid;
		RETURN TRUE;
END;
$_$;


--
-- TOC entry 1063 (class 1255 OID 16599)
-- Name: existsrdbcode(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existsrdbcode(integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	rdbcid	INTEGER;
BEGIN
	SELECT rdb_code_id INTO STRICT rdbcid
	FROM tbl_rdb_codes
	WHERE rdb_code_id = $1;
	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RAISE WARNING 'ExistsRDBCode(INTEGER): TODO bugs_error SHOULD EXIST!! No rdb_code_id = %',$1;
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		RAISE 'ExistsRDBCode(INTEGER): TODO bugs_error TOO MANY rdb_code_id. More than one rdb_code_id = %',$1;
END;
$_$;


--
-- TOC entry 1051 (class 1255 OID 16600)
-- Name: existsrdbcode(trdbcode); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existsrdbcode(trdbcode) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	rdbcode	ALIAS FOR $1;
	rdbcid	INTEGER;
	
BEGIN
	SELECT rdb_code_id INTO STRICT rdbcid FROM tbl_rdb_codes
	WHERE rdb_category = rdbcode.category
	AND rdb_definition = rdbcode.rdbdef
	AND rdb_system_id = rdbcode.rdbsyscode
	AND rdb_code_id = rdbcode.rdbcode;
	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		RAISE 'ExistsRDBCode(trdbcode): More than one rdb_code exists for %',rdbcode;
END;
$_$;


--
-- TOC entry 959 (class 1255 OID 16601)
-- Name: existsrdbsystem(trdbsystem); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existsrdbsystem(trdbsystem) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	rdbsys		ALIAS FOR $1;
	rdbsysid	INTEGER;
BEGIN
	SELECT rdb_system_id INTO STRICT rdbsysid FROM tbl_rdb_systems
	WHERE rdb_system_id = rdbsys.rdbsyscode;
	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		RAISE WARNING 'ExistsRDBSystem(trdbsystem): TODO: ADD bugs_error HERE!!! More than one system found.';
END;
$_$;


--
-- TOC entry 1064 (class 1255 OID 16602)
-- Name: existsseasonality(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existsseasonality(integer, integer, integer, integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	scount	INTEGER;
BEGIN
	SELECT COUNT(*) INTO scount
	FROM	tbl_taxa_seasonality
	WHERE	activity_type_id = $1
	AND	location_id = $2
	AND	season_id = $3
	AND	taxon_id = $4;

	IF scount > 1 THEN
		RAISE WARNING E'ExistsSeasonality(INTEGER,INTEGER,INTEGER,INTEGER):
		Multiple seasonalities found for location_id = %, season_id = %, taxon_id = %', $2,$3,$4;
		EXECUTE BugsDataError('tbl_taxa_seasonality','tbl_bugs_tseasonactiveadult','taxon_id','"CODE"',
			FORMAT('SELECT * FROM tbl_taxa_seasonality WHERE taxon_id = %s;',$4),
			FORMAT('SELECT * FROM tbl_bugs_tseasonactiveadult WHERE "CODE" = get_code_from_taxon_id')
			);
		EXECUTE BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),
			'SEASONALITY multiple tbl_taxa_seasonality found on taxon_id. Check ExistsSeasonality(INTEGER,INTEGER,INTEGER,INTEGER)');
		RETURN TRUE;
	END IF;
	IF scount = 0 THEN
		RETURN FALSE;
	END IF;
	RETURN TRUE;
END;
$_$;


--
-- TOC entry 1065 (class 1255 OID 16603)
-- Name: existssiteotherrecord(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existssiteotherrecord(integer, integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	result	INTEGER;
BEGIN
	SELECT COUNT(*) INTO result FROM tbl_site_other_records
	WHERE	site_id = $1
	AND	record_type_id = $2;
	IF result >= 1 THEN
		RETURN TRUE;
	END IF;
	RETURN FALSE;
END;
$_$;


--
-- TOC entry 1066 (class 1255 OID 16604)
-- Name: existstablecolumnvalues(character varying, character varying[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existstablecolumnvalues(character varying, character varying[]) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	table_name	ALIAS FOR $1;
	field_data_arr	ALIAS FOR $2;
	m		VARCHAR[3];
	field_names	VARCHAR[5];
	field_data	VARCHAR[5];
	i		INTEGER := 0;
	j		INTEGER := 0;
	tempx		VARCHAR;
	tempy		VARCHAR;
	query_string	VARCHAR;
BEGIN
	FOREACH m SLICE 1 IN ARRAY field_data_arr LOOP
		tempx = (m[1] || '::');
		tempy = m[2];
		field_names[i] = tempx || tempy;
		field_data[i] = m[3];
		--RAISE NOTICE 'm[1] = %, m[2] = %, together make:  %',m[1],m[2],field_names[i];
		i = i+1;
	END LOOP;

	query_string = FORMAT('SELECT COUNT(*) FROM %s WHERE ',table_name);
	i = array_length(field_names,1);
	FOR j IN 0..i-1
	LOOP
		query_string = query_string || field_names[j];
		query_string = query_string || ' = ';
		--RAISE NOTICE '%',regexp_matches(field_names[j],'(varchar)');
		
		IF regexp_matches(field_names[j],'(varchar)') IS NOT NULL THEN
			query_string = query_string || quote_literal(field_data[j]);
		ELSE 
			IF regexp_matches(field_names[j],'(integer)') IS NULL THEN
				RAISE WARNING 'Found null integer value  in %s for data_field = %s, data_entry = %s', table_name,field_names[0],field_data[0];
				RETURN FALSE;
			END IF;
			query_string = query_string || field_data[j];
		END IF;
		
		IF j != i-1 THEN
			query_string = query_string || ' AND ';
		ELSE
			query_string = query_string || ';';
		END IF;
		--RAISE NOTICE '%',query_string;
	END LOOP;
	
	IF query_string IS NULL THEN
	--TODO: make this loop for all fields and data
		RAISE WARNING 'table_name = %, field_name_1 = %, data_1 = %,field_name_2 = %, data_2 = %', 
			table_name,field_names[0],field_data[0],field_names[1],field_data[1];
		RETURN FALSE;
	END IF;
	EXECUTE FORMAT(query_string,table_name)
	INTO i;
	IF i = 0 THEN
		RETURN FALSE;
	END IF;

	IF i > 1 THEN
		RAISE WARNING 'More than one entry in %s for data_field = %s, data_entry = %s', table_name,field_names[0],field_data[0];
	END IF;
	RETURN TRUE;
END;
$_$;


--
-- TOC entry 1067 (class 1255 OID 16605)
-- Name: existstableonecolumnvalue(character varying, character varying, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existstableonecolumnvalue(character varying, character varying, character varying) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	table_name 	ALIAS FOR $1;
	field_name	ALIAS FOR $2;
	field_data	ALIAS FOR $3;
	row_count	INTEGER := 0;
BEGIN
	EXECUTE FORMAT('SELECT COUNT(*) FROM %s WHERE %s = ' || quote_literal(field_data) ||';',table_name,field_name)
	INTO	row_count;

	IF row_count <= 0 THEN
		RETURN FALSE;
	END IF;

	IF row_count > 1 THEN
		RAISE WARNING 'More than one entry found in %s for field_name = %s and field_data = %s',table_name,field_name,field_data;
		RETURN TRUE;
	END IF;

	RETURN TRUE;
END;
$_$;


--
-- TOC entry 1068 (class 1255 OID 16606)
-- Name: existstaxaauthority(tindex); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existstaxaauthority(tindex) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	irow		ALIAS FOR $1;
	a_id		INTEGER;
BEGIN
	SELECT author_id INTO STRICT a_id FROM tbl_taxa_tree_authors
	WHERE author_name = irow.bugsauthority;
	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		RAISE USING 
			MESSAGE = FORMAT('ExistsTaxaAuthority(tindex): More than one authority found in sead for tindex = %s',irow),
			HINT = 'Search for duplicates, check the insert authors area.';
END;
$_$;


--
-- TOC entry 1069 (class 1255 OID 16607)
-- Name: existstaxafamily(tindex, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existstaxafamily(tindex, integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	irow		ALIAS FOR $1;
	o_id		ALIAS FOR $2;
	f_id		INTEGER;
BEGIN
	SELECT family_id INTO STRICT f_id FROM tbl_taxa_tree_families
	WHERE order_id = o_id
	AND family_name = irow.bugsfamily;
	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		IF o_id IS NULL THEN
			RAISE USING
				MESSAGE = FORMAT('ExistsTaxaFamily(tindex): No order with order_name = ORDER PENDING CLASSIFICATION'),
				HINT = 'Make the addition in the UpdateTaxonomyTree query';
		END IF;
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		IF o_id IS NULL THEN
			RAISE USING
				MESSAGE = FORMAT('ExistsTaxaFamily(tindex): More than one order with order_name = ORDER PENDING CLASSIFICATION'),
				HINT = 'Check the orders, check the update script isnt over-adding orders';
		END IF;
		RAISE USING
			MESSAGE = FORMAT('ExistsTaxaFamily(tindex): More than one family_name in irow = %',irow),
			HINT = 'This function adds all families to ORDER PENDING CLASSIFICATION, further update is required manually.';
END;
$_$;


--
-- TOC entry 1070 (class 1255 OID 16608)
-- Name: existstaxagenera(tindex, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existstaxagenera(tindex, integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	irow		ALIAS FOR $1;
	f_id		ALIAS FOR $2;
	g_id 		INTEGER;
BEGIN
	SELECT genus_id INTO STRICT g_id FROM tbl_taxa_tree_genera
	WHERE family_id = f_id
	AND genus_name = irow.bugsgenus;
	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		RAISE USING 
			MESSAGE = FORMAT('ExistsTaxaGenera(tindex,INTEGER): More than one genus with family_id = %s, tindex = %s',
				f_id,irow),
			HINT = 'Check for duplication in family inserts.';
END;
$_$;


--
-- TOC entry 1071 (class 1255 OID 16609)
-- Name: existstaxon(numeric, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existstaxon(numeric, integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	tid	INTEGER;
BEGIN
	SELECT taxon_id INTO STRICT tid FROM tbl_taxonomic_order
	WHERE taxonomic_code = $1 AND taxonomic_order_system_id = $2;
	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		--RAISE WARNING 'ExistsTaxon(NUMERIC,INTEGER): Couldn't find taxon for code = %, system_id = %',$1,$2;
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
	--TODO: Similar bugserror as species associations
		RAISE WARNING 'ExistsTaxon(NUMERIC,INTEGER): Multiple taxons found for code = %, system_id = %',$1,$2;
		RETURN TRUE;
END;
$_$;


--
-- TOC entry 1072 (class 1255 OID 16610)
-- Name: existstaxon(tindex, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existstaxon(tindex, integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	irow		ALIAS FOR $1;
	f_id		ALIAS FOR $2;
	a_id		INTEGER;
	a_is_set	BOOLEAN := FALSE;
	g_id		INTEGER;
	g_is_set	BOOLEAN := FALSE;
	t_id		INTEGER;
BEGIN
	IF irow.bugsauthority IS NOT NULL THEN
		SELECT author_id INTO STRICT a_id FROM tbl_taxa_tree_authors
		WHERE author_name = irow.bugsauthority;
	END IF;
	a_is_set = TRUE; -- tag to catch author exception

	SELECT genus_id INTO STRICT g_id FROM tbl_taxa_tree_genera
	WHERE family_id = f_id
	AND genus_name = irow.bugsgenus;
	g_is_set = TRUE; -- tag to catch genus exception

	
	SELECT A.taxon_id INTO STRICT t_id FROM tbl_taxa_tree_master AS A
	INNER JOIN tbl_taxonomic_order AS B
	ON A.taxon_id = B.taxon_id
	WHERE genus_id = g_id
	AND (a_id IS NULL OR author_id = a_id)
	AND (irow.bugsspecies IS NULL OR species = irow.bugsspecies);
	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		IF a_is_set IS FALSE THEN
			RAISE 'ExistsTaxon(tindex,INTEGER): No author found, tindex = %',irow;
		ELSIF g_is_set IS FALSE THEN
			RAISE 'ExistsTaxon(tindex,INTEGER): No genus found, tindex = %',irow;
		END IF;
		--RAISE INFO 'no taxon found irow = %', irow;
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		IF a_is_set IS FALSE THEN
			RAISE 'ExistsTaxon(tindex,INTEGER): More than one author found, tindex = %',irow;
		ELSIF g_is_set IS FALSE THEN
			RAISE 'ExistsTaxon(tindex,INTEGER): More than one genus found, tindex = %',irow;
		END IF;
		RAISE WARNING 'ExistsTaxon(tindex,INTEGER): More than one taxon found for irow = %', irow;
END;
$_$;


--
-- TOC entry 1073 (class 1255 OID 16611)
-- Name: existstaxonid(numeric); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existstaxonid(numeric) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	code		ALIAS FOR $1;
	tid		INTEGER;
	tsid		INTEGER;
	tsfound		BOOLEAN:=FALSE;
BEGIN
	SELECT taxonomic_order_system_id INTO STRICT tsid 
	FROM tbl_taxonomic_order_systems
	WHERE system_name = 'BugsCEP taxonomic order';
	tsfound = TRUE;
	
	SELECT taxon_id INTO STRICT tid FROM tbl_taxonomic_order
	WHERE taxonomic_code = code
	AND taxonomic_order_system_id = tsid;
	RETURN TRUE;
	
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		IF tsfound IS FALSE THEN
			RAISE 'ExistsTaxonId(NUMERIC(18,10)): No taxonomic_system_id with system_name = BugsCEP taxonomic order';
		END IF;
		RAISE WARNING 'ExistsTaxonId(NUMERIC(18,10)): TODO: bugs_error REQUIRED. No taxon_id found for code = %, in the bugs cep system',code;
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		RAISE WARNING 'ExistsTaxonId(NUMERIC(18,10)): TODO: bugs_error REQUIRED. ERROR: More than one taxon_id found for code = %, in the bugs cep system',code;
END;
$_$;


--
-- TOC entry 1074 (class 1255 OID 16612)
-- Name: existstaxonomiccode(tindex); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existstaxonomiccode(tindex) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	irow		ALIAS FOR $1;
	c_count		INTEGER;
	t_code		NUMERIC(18,10);
BEGIN
	SELECT taxonomic_code INTO STRICT t_code FROM tbl_taxonomic_order
	WHERE taxonomic_code = irow.bugscode;
	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		--TODO
		RAISE INFO 'ExistsTaxonomicCode(tindex): Multiple taxonomic_code entries for tindex = %', irow;
		RETURN TRUE;
END;
$_$;


--
-- TOC entry 1075 (class 1255 OID 16613)
-- Name: existstbiblio(tbiblio); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existstbiblio(tbiblio) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	bibrow		ALIAS FOR $1;
	bid		INTEGER;
BEGIN
	SELECT biblio_id INTO STRICT bid FROM tbl_bugs_biblio
	WHERE bugs_reference = bibrow.reference;
	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		RAISE WARNING 'ExistsTBiblio(tbiblio): Multiple records found for bugs_reference = % biblio_record = %',bibrow.reference, bibrow;
		EXECUTE BugsDataError('tbl_bugs_biblio','tbl_bugs_tbiblio','bugs_reference','REFERENCE',
			FORMAT('SELECT * FROM tbl_bugs_biblio WHERE "bugs_reference" = %s',bibrow.reference),
			FORMAT('SELECT * FROM tbl_bugs_tbiblio WHERE "REFERENCE" = %s',bibrow.reference)
			);
		EXECUTE BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),
			'MULTIPLE bugs_reference FOUND bugs_biblio.bugs_reference must be unique. Multiple biblio_id records exist for this bugs_reference.');
		RETURN TRUE;
END;
$_$;


--
-- TOC entry 1076 (class 1255 OID 16614)
-- Name: existstbiology(tbiology); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existstbiology(tbiology) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	biorow		ALIAS FOR $1;
	bioid		INTEGER;
	bid		INTEGER;
	tid		INTEGER;
	bibfound	BOOLEAN;
	tfound		BOOLEAN;
BEGIN
	bibfound = FALSE;
	tfound = FALSE;
	SELECT biblio_id INTO STRICT bid FROM tbl_bugs_biblio
	WHERE bugs_reference = biorow.ref;
	bibfound = TRUE;
	
	SELECT taxon_id INTO STRICT tid FROM tbl_taxonomic_order
	WHERE taxonomic_code = biorow.code;
	tfound = TRUE;
	
	IF biorow.data IS NULL THEN
		SELECT biology_id INTO STRICT bioid FROM tbl_text_biology
		WHERE biblio_id = bid AND taxon_id = tid AND biology_text IS NULL;
	ELSE
		SELECT biology_id INTO STRICT bioid FROM tbl_text_biology
		WHERE biblio_id = bid AND taxon_id = tid AND biology_text = biorow.data AND biology_text IS NOT NULL;
	END IF;

	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		IF bibfound IS FALSE THEN
			PERFORM BugsDataError('tbl_text_biology','tbl_bugs_tbiology','biblio_id',biorow.ref,
				NULL,
				FORMAT('SELECT * FROM tbl_bugs_tbiology WHERE "Ref" = %s',biorow.ref)
			);
			PERFORM BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),'No biblio_id found for the given reference. Either add the reference to sead or update in the updates area of notes.');
			RAISE WARNING 'ExistsTBiology(tbiology): No biblio_id found for Ref = %', biorow.ref;
			RETURN TRUE;
		ELSIF tfound IS FALSE THEN
			PERFORM BugsDataError('tbl_text_biology','tbl_bugs_tbiology','taxon_id',biorow.code::TEXT,
				NULL,
				FORMAT('SELECT * FROM tbl_bugs_tbiology WHERE "CODE" = %s',biorow.code)
			);
			PERFORM BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),'No taxon_id found for the given taxonomic_code. Either add the taxon to sead or update in the updates area of notes.');
			RAISE WARNING 'ExistsTBiology(tbiology): No taxon_id found for CODE = %', biorow.code;
			RETURN TRUE;
		END IF;
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		IF bibfound IS FALSE THEN
			RAISE 'ExistsTBiology(tbiology): Multiple biblio_id found for Ref = %', biorow.ref;
		ELSIF tfound IS FALSE THEN
			RAISE WARNING 'ExistsTBiology(tbiology): Not added. Multiple taxon_id found for CODE = %', biorow.code;
			PERFORM BugsDataError('tbl_text_biology','tbl-bugs_tbiology','taxon_id','code',
				FORMAT('SELECT * FROM tbl_taxonomic_order WHERE taxonomic_code = %s',biorow.code),
				FORMAT('%s',biorow)
			);
			PERFORM BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'), 'Manually add the biology text, multiple taxonomic_code entries'); 
			RETURN TRUE;
		END IF;
		RAISE WARNING 'ExistsTBiology(tbiology): Duplicates found biology note = %, taxon_id = %',biorow,tid;
		RETURN TRUE;
END;
$_$;


--
-- TOC entry 1077 (class 1255 OID 16615)
-- Name: existstcalendar(tdatescalendar); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existstcalendar(tdatescalendar) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	dcrow		ALIAS FOR $1;
	ra_id		INTEGER;
	bcadbp		VARCHAR;
	abbrev 		VARCHAR;
BEGIN
	--RAISE INFO 'abbrev = %, date = %, dcrow = %',
	--	concat('CAL_',dcrow.calendardate),dcrow.calendardate,dcrow;

	-- TODO: check this! Default to BP if null.
	IF dcrow.bcadbp IS NULL THEN
		bcadbp = 'BP';
	ELSE
		bcadbp = dcrow.bcadbp;
	END IF;

	abbrev = concat('CAL_',dcrow.calendardate,dcrow.bcadbp);
	
	SELECT relative_age_id INTO STRICT ra_id FROM tbl_relative_ages
	WHERE "Abbreviation" = abbrev;
	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		RAISE USING
			MESSAGE = FORMAT('ExistsTCalendar(tdatescalendar): 
			More than one abbreviation = %s for tdatescalendar = %s',
			abbrev,dcrow),
			HINT = 'May need to make an exception, though it should be unique on abbreviation';
END;
$_$;


--
-- TOC entry 1078 (class 1255 OID 16616)
-- Name: existstcountsheet(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existstcountsheet(character varying) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	sgroup_id	INTEGER;
BEGIN
	SELECT sample_group_id INTO STRICT sgroup_id FROM tbl_bugs_sample_groups
	WHERE bugs_countsheetcode = $1;
	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RAISE WARNING 'ExistsTCountsheet(VARCHAR): No bugs_countsheetcode = % found in sead',$1;
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		RAISE WARNING 'ExistsTCountsheet(VARCHAR): Multiple rows found for bugs_countsheetcode = %
		TODO: Error handling', $1;
END;
$_$;


--
-- TOC entry 1079 (class 1255 OID 16617)
-- Name: existstcountsheet(tcountsheet); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existstcountsheet(tcountsheet) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	csheetrow	ALIAS FOR $1;
	sgid		INTEGER;
BEGIN
	SELECT sample_group_id INTO STRICT sgid
	FROM tbl_bugs_sample_groups
	WHERE bugs_countsheetcode = csheetrow.countsheetcode;
	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		RAISE WARNING 'ExistsTCountsheet(tcountsheet): Multiple sample groups found for bugs_countsheetcode = %',csheetrow.countsheetcode;
		EXECUTE BugsDataError('tbl_bugs_sample_groups','tbl_bugs_tcountsheet','bugs_countsheetcode','CountsheetCODE',
			FORMAT('SELECT * FROM tbl_bugs_sample_groups WHERE bugs_countsheetcode = %s',csheetrow.countsheetcode),
			FORMAT('SELECT * FROM tbl_bugs_tcountsheet WHERE "CountsheetCODE" = %s',csheetrow.countsheetcode)
			);
		EXECUTE BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),
			'DUPLICATE COUNTSHEET More than one countsheet on bugs_sample_groups.bugs_countsheetcode. HINT:Check the ExistsTCountsheet(tcountsheet) to see why this is added.');
		RETURN TRUE;
END;
$_$;


--
-- TOC entry 1080 (class 1255 OID 16618)
-- Name: existstdatescalendar(tdatescalendar); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existstdatescalendar(tdatescalendar) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	rd_count	INTEGER;
	rd_id		INTEGER;
	dcrow		ALIAS FOR $1;
BEGIN
	SELECT relative_date_id INTO STRICT rd_id FROM tbl_bugs_dates_calendar
	WHERE	bugs_calendarcode = dcrow.calendarcode
	AND	bugs_samplecode = dcrow.samplecode;
	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		RAISE 'More than one relative_date with calendarcode = %,samplecode = %',dprow.calendarcode,dprow.samplecode;

END;
$_$;


--
-- TOC entry 1081 (class 1255 OID 16619)
-- Name: existstdatesperiod(tdatesperiod); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existstdatesperiod(tdatesperiod) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	rd_count	INTEGER;
	rd_id		INTEGER;
	dprow		ALIAS FOR $1;
BEGIN
	SELECT relative_date_id INTO STRICT rd_id FROM tbl_bugs_dates_period
	WHERE	bugs_perioddatecode = dprow.perioddatecode
	AND	bugs_samplecode = dprow.samplecode;
	RETURN TRUE;
EXCEPTION
		WHEN NO_DATA_FOUND THEN
			RETURN FALSE;
		WHEN TOO_MANY_ROWS THEN
			RAISE 'More than one relative_date with perioddatecode = %,samplecode = %',dprow.perioddatecode,dprow.samplecode;

END;
$_$;


--
-- TOC entry 971 (class 1255 OID 16620)
-- Name: existstdatesradio(tdatesradio); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existstdatesradio(tdatesradio) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	drrow		ALIAS FOR $1;
	drrec		RECORD;
BEGIN
	IF drrow.samplecode IS NULL THEN
		RAISE WARNING 'ExistsTDatesRadio(tdatesradio):
		NULL samplecode for tdatesradio = %',drrow;
	ELSIF drrow.datecode IS NULL THEN
		RAISE USING
			MESSAGE = FORMAT('ExistsTDatesRadio(tdatesradio):
			NULL datecode for tdatesradio = %s',drrow),
			HINT = 'Fix in the update, needs to be non-null.';
	END IF;
	
	SELECT * INTO STRICT drrec FROM tbl_bugs_dates_radio
	WHERE bugs_datecode = drrow.datecode
	AND bugs_samplecode = drrow.samplecode;
	RETURN TRUE;
EXCEPTION
		WHEN NO_DATA_FOUND THEN
			RETURN FALSE;
		WHEN TOO_MANY_ROWS THEN
			RAISE 'More than one bugs_datecode with datecode = %',dprow.perioddatecode;

END;
$_$;


--
-- TOC entry 1082 (class 1255 OID 16621)
-- Name: existstdistrib(tdistrib); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existstdistrib(tdistrib) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	distrow		ALIAS FOR $1;
	distid		INTEGER;
	bid		INTEGER;
	tid		INTEGER;
	bibfound	BOOLEAN;
	tfound		BOOLEAN;
BEGIN
	bibfound = FALSE;
	tfound = FALSE;
	SELECT biblio_id INTO STRICT bid FROM tbl_bugs_biblio
	WHERE bugs_reference = distrow.ref;
	bibfound = TRUE;
	
	SELECT taxon_id INTO STRICT tid FROM tbl_taxonomic_order
	WHERE taxonomic_code = distrow.code;
	tfound = TRUE;
	
	IF distrow.data IS NULL THEN
		SELECT distribution_id INTO STRICT distid FROM tbl_text_distribution
		WHERE biblio_id = bid AND taxon_id = tid;
	ELSE
		SELECT distribution_id INTO STRICT distid FROM tbl_text_distribution
		WHERE biblio_id = bid AND taxon_id = tid AND distribution_text = distrow.data;
	END IF;

	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		IF bibfound IS FALSE THEN
			PERFORM BugsDataError('tbl_text_distribution','tbl_bugs_tdist','biblio_id',distrow.ref,
				NULL,
				FORMAT('SELECT * FROM tbl_bugs_tdistrib WHERE "Ref" = %s',distrow.ref)
			);
			PERFORM BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),'No biblio_id found for the given reference. Either add the reference to sead or update in the updates area of notes.');
			RAISE WARNING 'ExistsTDist(tdist): No biblio_id found for Ref = %', distrow.ref;
			RETURN TRUE;
		ELSIF tfound IS FALSE THEN
			PERFORM BugsDataError('tbl_text_distribution','tbl_bugs_tdistrib','taxon_id',distrow.code::TEXT,
				NULL,
				FORMAT('SELECT * FROM tbl_bugs_tdistrib WHERE "CODE" = %s',distrow.code)
			);
			PERFORM BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),'No taxon_id found for the given taxonomic_code. Either add the taxon to sead or update in the updates area of notes.');
			RAISE WARNING 'ExistsTDist(tdist): No taxon_id found for CODE = %', distrow.code;
			RETURN TRUE;
		END IF;
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		IF bibfound IS FALSE THEN
			RAISE 'ExistsTDist(tdist): Multiple biblio_id found for Ref = %', distrow.ref;
		ELSIF tfound IS FALSE THEN
			RAISE WARNING 'ExistsTDist(tdist): Not added. Multiple taxon_id found for CODE = %', distrow.code;
			PERFORM BugsDataError('tbl_text_distribution','tbl_bugs_tdistrib','taxon_id','code',
				FORMAT('SELECT * FROM tbl_taxonomic_order WHERE taxonomic_code = %s',distrow.code),
				FORMAT('%s',taxorow)
			);
			PERFORM BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'), 'Manually add the distribution text, multiple taxonomic_code entries'); 
			RETURN TRUE;
		END IF;
		RAISE WARNING 'ExistsTDist(tdist): Duplicates found distribution note = %, taxon_id = %',distrow,tid;
		RETURN TRUE;
END;
$_$;


--
-- TOC entry 1083 (class 1255 OID 16622)
-- Name: existstfossil(tfossil); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existstfossil(tfossil) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	frow		ALIAS FOR $1;
	bugs_acode_id	INTEGER;
BEGIN
	--Fossils are distinct on FossilBugsCODE, need be aware of consistency across database instances
	--in the case that the codes are not distinct in different databases
	SELECT bugs_abundance_code_id INTO STRICT bugs_acode_id 
	FROM tbl_bugs_abundance_codes
	WHERE bugs_fossilbugscode = frow.fossilbugscode;
	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		RAISE WARNING 'ExistsTFossil(tfossil): TODO: Add error handling, Multiple entries found for bugs_fossilbugscode = %',frow.fossilbugscode;
		RETURN TRUE;
END;
$_$;


--
-- TOC entry 1084 (class 1255 OID 16623)
-- Name: existstkey(tkey); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existstkey(tkey) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	keyrow		ALIAS FOR $1;
	keyid		INTEGER;
	bid		INTEGER;
	tid		INTEGER;
	bibfound	BOOLEAN;
	tfound		BOOLEAN;
BEGIN
	bibfound = FALSE;
	tfound = FALSE;
	SELECT biblio_id INTO STRICT bid FROM tbl_bugs_biblio
	WHERE bugs_reference = keyrow.ref;
	bibfound = TRUE;
	
	SELECT taxon_id INTO STRICT tid FROM tbl_taxonomic_order
	WHERE taxonomic_code = keyrow.code;
	tfound = TRUE;
	
	IF keyrow.data IS NULL THEN
		SELECT key_id INTO STRICT keyid FROM tbl_text_identification_keys
		WHERE biblio_id = bid AND taxon_id = tid;
	ELSE
		SELECT key_id INTO STRICT keyid FROM tbl_text_identification_keys
		WHERE biblio_id = bid AND taxon_id = tid AND key_text = keyrow.data;
	END IF;

	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		IF bibfound IS FALSE THEN
			PERFORM BugsDataError('tbl_text_identification_keys','tbl_bugs_tkeys','biblio_id',keyrow.ref,
				NULL,
				FORMAT('SELECT * FROM tbl_bugs_tkeys WHERE "Ref" = %s',keyrow.ref)
			);
			PERFORM BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),'No biblio_id found for the given reference. Either add the reference to sead or update in the updates area of notes.');
			RAISE WARNING 'ExistsTKey(tkey): No biblio_id found for Ref = %', keyrow.ref;
			RETURN TRUE;
		ELSIF tfound IS FALSE THEN
			PERFORM BugsDataError('tbl_text_identification_keys','tbl_bugs_tkeys','taxon_id',keyrow.code::TEXT,
				NULL,
				FORMAT('SELECT * FROM tbl_bugs_tkeys WHERE "CODE" = %s',keyrow.code)
			);
			PERFORM BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),'No taxon_id found for the given taxonomic_code. Either add the taxon to sead or update in the updates area of notes.');
			RAISE WARNING 'ExistsTKey(tkey): No taxon_id found for CODE = %', keyrow.code;
			RETURN TRUE;
		END IF;
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		IF bibfound IS FALSE THEN
			RAISE 'ExistsTKey(tkey): Multiple biblio_id found for Ref = %', keyrow.ref;
		ELSIF tfound IS FALSE THEN
			RAISE WARNING 'ExistsTKey(tkey): Not added. Multiple taxon_id found for CODE = %', keyrow.code;
			PERFORM BugsDataError('tbl_text_identification_keys','tbl_bugs_tkeys','taxon_id','code',
				FORMAT('SELECT * FROM tbl_taxonomic_order WHERE taxonomic_code = %s',keyrow.code),
				FORMAT('%s',keyrow)
			);
			PERFORM BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'), 'Manually add the identification key text, multiple taxonomic_code entries'); 
			RETURN TRUE;
		END IF;
		RAISE WARNING 'ExistsTKey(tkey): Duplicates found identification key = %, taxon_id = %',keyrow, tid;
		RETURN TRUE;
END;
$_$;


--
-- TOC entry 1085 (class 1255 OID 16624)
-- Name: existstlab(tlab); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existstlab(tlab) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	l_count		INTEGER;
	l_id		INTEGER;
	lrow		ALIAS FOR $1;
BEGIN
	SELECT dating_lab_id INTO STRICT l_id FROM tbl_dating_labs
	WHERE	international_lab_id = lrow.labid
	AND	lab_name = lrow.labname
	AND	lrow.country = LookupVarcharValue('tbl_locations','location_id','location_name',country_id);
	RETURN TRUE;
EXCEPTION
		WHEN NO_DATA_FOUND THEN
			RETURN FALSE;
		WHEN TOO_MANY_ROWS THEN
			RAISE 'More than one lab with labid = %,labname = %, country = %',lrow.labid,lrow.labname,lrow.country;
END;
$_$;


--
-- TOC entry 1086 (class 1255 OID 16625)
-- Name: existstmcrdata(tmcrdata, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existstmcrdata(tmcrdata, integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	mcrdata		ALIAS FOR $1;
	new_tid		ALIAS FOR $2;
	found_tid 	INTEGER;
BEGIN
	--RAISE INFO 'taxon_id = %',new_tid;
	SELECT taxon_id INTO STRICT found_tid
	FROM tbl_mcrdata_birmbeetledat
	WHERE taxon_id = new_tid
	AND mcr_row = mcrdata.mcrrow;
	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		RAISE WARNING 'ExistsTMCRData(tmcrdata,INTEGER):
		TODO: Create bugs_error. 
		More than one taxon_id found for mcrdata = %,taxon_id =%',mcrdata,new_tid;
		RETURN TRUE;
END;
$_$;


--
-- TOC entry 1087 (class 1255 OID 16626)
-- Name: existstmcrname(tmcrname, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existstmcrname(tmcrname, integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	mcrname 	ALIAS FOR $1;
	new_tid		ALIAS FOR $2;
	found_tid	INTEGER;
BEGIN
	--RAISE INFO 'taxon_id = %',new_tid;
	SELECT taxon_id INTO STRICT found_tid
	FROM tbl_mcr_names
	WHERE taxon_id = new_tid;
	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN 
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		RAISE WARNING 'ExistsMCRName(tmcrname,INTEGER): 
			TODO: Create bugs_error. 
			More than one taxon_id found for mcrname = %, taxon_id = %', mcrname,new_tid;
		RETURN TRUE;
END;
$_$;


--
-- TOC entry 1088 (class 1255 OID 16627)
-- Name: existstmcrsummarydata(tmcrsummarydata, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existstmcrsummarydata(tmcrsummarydata, integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	mcrsummarydata	ALIAS FOR $1;
	new_tid		ALIAS FOR $2;
	found_tid	INTEGER;
BEGIN
	--RAISE INFO 'taxon_id = %',new_tid;
	SELECT taxon_id INTO STRICT found_tid
	FROM tbl_mcr_summary_data
	WHERE taxon_id = new_tid;
	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		RAISE WARNING 'ExistsTMCRSummaryData(tmcrsummarydata,INTEGER):
		TODO: Create bugs_error
		More than one taxon_id found for mcrsummarydata = %, taxon_id = %',mcrsummarydata,new_tid;
		RETURN TRUE;
END;
$_$;


--
-- TOC entry 1089 (class 1255 OID 16628)
-- Name: existstperiod(tperiod); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existstperiod(tperiod) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	ra_count	INTEGER; --relative_age counter
	ra_id		INTEGER; -- relative_age_id
BEGIN
	SELECT relative_age_id INTO STRICT ra_id  FROM tbl_bugs_periods
	WHERE	bugs_periodcode = $1.periodcode;
	RETURN TRUE;
EXCEPTION
		WHEN NO_DATA_FOUND THEN
			RETURN FALSE;
		WHEN TOO_MANY_ROWS THEN
			RAISE 'Too many rows found';
END;
$_$;


--
-- TOC entry 1090 (class 1255 OID 16629)
-- Name: existstperiodgeographicalregion(tperiod); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existstperiodgeographicalregion(tperiod) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
  period      ALIAS FOR $1;
  loc_id  INTEGER;
BEGIN
  IF period.periodgeog IS NULL THEN
    RAISE USING 
			-- error handling here
			--
			MESSAGE = FORMAT('ExistsTPeriodGeographicalRegion(tperiod): NULL period geographical region for PeriodCode = %s',period.periodcode),
			HINT = 'Each period need a geographical region? Fix in updates -- should have location = unspecified.';
  END IF;
  SELECT location_id INTO STRICT loc_id FROM tbl_locations 
  WHERE location_name = period.periodgeog;
  RETURN TRUE;
 EXCEPTION
  WHEN NO_DATA_FOUND THEN
    RETURN FALSE;
  WHEN TOO_MANY_ROWS THEN
    RAISE USING
			MESSAGE = FORMAT('ExistsTPeriodGeographicalRegion(tperiod): Too many rows for geographical region = %s',period.periodgeog),
			HINT = FORMAT('SELECT * FROM tbl_locations WHERE location_name = %s;',period.periodgeog);
END;
$_$;


--
-- TOC entry 1092 (class 1255 OID 16630)
-- Name: existstsample(tsample); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existstsample(tsample) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	smplrow		ALIAS FOR $1;
	smplid		INTEGER;
	bugs_samplecode_found	BOOLEAN;
	analysis_count	INTEGER;
BEGIN
	bugs_samplecode_found = FALSE;
	analysis_count = 0;
	SELECT physical_sample_id INTO STRICT smplid
	FROM tbl_bugs_physical_samples
	WHERE bugs_samplecode = smplrow.samplecode;
	bugs_samplecode_found = TRUE;

	SELECT COUNT(*) INTO analysis_count 
	FROM tbl_analysis_entities AS A
	INNER JOIN tbl_bugs_physical_samples AS B
	ON A.physical_sample_id = B.physical_sample_id
	WHERE B.bugs_samplecode = smplrow.samplecode;
	--RAISE INFO 'analysis_count = % for samplecode = %',analysis_count, smplrow.samplecode;
	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		IF bugs_samplecode_found IS FALSE THEN
			RETURN FALSE;
		END IF;
		RAISE WARNING 'ExistsTSample(tsample): bugs_samplecode = %, exists, still fails',smplrow.samplecode;
		--TODO error handling
	WHEN TOO_MANY_ROWS THEN
		RAISE WARNING 'ExistsTSample(tsample): Multiple sample records for bugs_samplecode = %',smplrow.samplecode;
		--TODO error handling
		RETURN TRUE;
END;
$_$;


--
-- TOC entry 1093 (class 1255 OID 16631)
-- Name: existstsite(tsite); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existstsite(tsite) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	tsrow		ALIAS FOR $1;
	s_id		INTEGER;
	sitecode	VARCHAR;
BEGIN
	--sitecode = srow.sitecode;
	SELECT site_id INTO STRICT s_id FROM tbl_bugs_sites
	WHERE bugs_sitecode = tsrow.sitecode;
	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		RAISE USING
			MESSAGE = FORMAT('ExistsTSite(tsite): Multiple TSite references found. tsite = %s',tsrow),
			HINT = 'Try changing the TSite.SiteCODE to unique id during the UpdatedSitesData Script.';
END;
$_$;


--
-- TOC entry 1094 (class 1255 OID 16632)
-- Name: existstsitecountrylocation(tsite); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existstsitecountrylocation(tsite) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	srow		ALIAS FOR $1;
	l_id		INTEGER;
	
BEGIN
	
	IF srow.country IS NULL THEN
		--RAISE ERROR: Change to a bugstransfer_error using the handling in the comment
		RAISE USING 
			-- error handling here
			--
			MESSAGE = FORMAT('ExistsTSiteCountryLocation(tsite): NULL Country for SiteCODE = %s',srow.sitecode),
			HINT = 'Each site MUST have a country, fix in the updates.';
	END IF;
	
	SELECT location_id INTO STRICT l_id FROM tbl_locations AS A
	INNER JOIN tbl_location_types AS B
	ON A.location_type_id = B.location_type_id
	WHERE B.location_type = 'Country'
	AND location_name = srow.country;
	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		RAISE USING
			MESSAGE = FORMAT('ExistsTSiteCountryLocation(tsite): Too many rows for Country = %s',srow.country),
			HINT = FORMAT('SELECT * FROM tbl_locations WHERE location_name = %s;',srow.country);
END;
$_$;


--
-- TOC entry 1095 (class 1255 OID 16633)
-- Name: existstsiteref(tsiteref); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existstsiteref(tsiteref) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	srrow		ALIAS FOR $1;
	s_id		INTEGER;
	b_id		INTEGER;
	sr_id		INTEGER;
BEGIN
	-- check that the TBiblio.Ref exists in tbl_bugs_biblio
	SELECT biblio_id INTO STRICT b_id FROM tbl_bugs_biblio
	WHERE bugs_reference = srrow.bugsref;
	--RAISE INFO 'biblio_id = %',b_id;
	-- check that the TSite.SiteCODE exists in tbl_bugs_sites
	SELECT site_id INTO STRICT s_id FROM tbl_bugs_sites
	WHERE bugs_sitecode = srrow.sitecode;
	--RAISE INFO 'site_id = %',s_id;


	SELECT site_reference_id INTO STRICT sr_id FROM tbl_site_references
	WHERE 	site_id = s_id
	AND 	biblio_id = b_id;
	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		--TODO
		--raise info 'no site_id = % or biblio_id = %, tsiteref = %',s_id,b_id,srrow;
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		RAISE USING
			MESSAGE = FORMAT('ExistsTSiteRef(tsiteref): Multiple site_refs,sites or biblios are found for tsiteref = %s',srrow),
			HINT = 'Investigate the tbl_site_references, tbl_bugs_biblio and tbl_bugs_sites: error is in these areas.';
END;
$_$;


--
-- TOC entry 1096 (class 1255 OID 16634)
-- Name: existstsiteregionlocation(tsite); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existstsiteregionlocation(tsite) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	srow		ALIAS FOR $1;
	l_id		INTEGER;
	lt_id		INTEGER;
BEGIN
	IF srow.region IS NULL THEN
		RETURN TRUE; -- allows for NULL regions
	END IF;

	/* This fails without correct lookup on the location_types
	EG, London is no longer recorded as a 'Sub-country administrative region' causing duplication
	
	SELECT location_id INTO STRICT l_id FROM tbl_locations AS A
	INNER JOIN tbl_location_types AS B
	ON A.location_type_id = B.location_type_id
	WHERE B.location_type = 'Sub-country administrative region'
	AND location_name = srow.region;
	*/

	-- LOCATION EXCEPTION:
	-- May need to add exceptions here.
	-- Eg,
	CASE
	WHEN srow.region = 'Isle of Man' THEN -- location_name
		--RAISE INFO 'srow.country = %', srow.country; -- England
		SELECT location_type_id INTO STRICT lt_id FROM tbl_location_types
		WHERE location_type = 'Sub-country administrative region'; -- also exists as 'Water Body'
		SELECT location_id INTO STRICT l_id FROM tbl_locations
		WHERE location_name = srow.region
		AND location_type_id = lt_id;
		RETURN TRUE;
	WHEN srow.region = 'Jersey' THEN -- location_name
		--RAISE INFO 'srow.country = %', srow.country; -- Channel Islands
		SELECT location_type_id INTO STRICT lt_id FROM tbl_location_types
		WHERE location_type = 'Sub-country administrative region'; -- also exists as 'Water Body'
		SELECT location_id INTO STRICT l_id FROM tbl_locations
		WHERE location_name = srow.region
		AND location_type_id = lt_id;
		RETURN TRUE;
	WHEN srow.region = 'Guernsey' THEN -- location_name
		--RAISE INFO 'srow.country = %', srow.country; -- Channel Islands
		SELECT location_type_id INTO STRICT lt_id FROM tbl_location_types
		WHERE location_type = 'Sub-country administrative region'; -- also exists as 'Water Body'
		SELECT location_id INTO STRICT l_id FROM tbl_locations
		WHERE location_name = srow.region
		AND location_type_id = lt_id;
		RETURN TRUE;
	ELSE
		SELECT location_id INTO STRICT l_id FROM tbl_locations
		WHERE location_name = srow.region;
	END CASE;
	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		RAISE USING
			MESSAGE = FORMAT('ExistsTSiteRegionLocation(tsite): Too many rows for Region = %s',srow.region),
			HINT = FORMAT('SELECT * FROM tbl_locations WHERE location_name = %s;',srow.region);
END;
$_$;


--
-- TOC entry 1097 (class 1255 OID 16635)
-- Name: existstspeciesassoc(tspeciesassociation, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existstspeciesassoc(tspeciesassociation, integer, integer, integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	spassoc		ALIAS FOR $1;
	tid		ALIAS FOR $2;
	assoctid	ALIAS FOR $3;
	bid 		ALIAS FOR $4;
	spassocid	INTEGER;
BEGIN	
	SELECT species_association_id INTO STRICT spassocid
	FROM tbl_species_associations
	WHERE associated_taxon_id = assoctid
	AND taxon_id = tid
	AND biblio_id = bid;
	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
			-- DEPRTODO: bugs_error handling
		RAISE WARNING 'ExistsTSpeciesAssoc(tspeciesassociations,INTEGER,INTEGER):

		More than on species association found for spassoc = %, taxon_id = %, associated_taxon_id = %',spassoc,tid,assoctid;
		EXECUTE BugsDataError('tbl_taxonomic_order','tbl_bugs_tspeciesassociations','taxonomic_code','"CODE","AssociatedSpeciesCODE"',
			FORMAT('SELECT * FROM tbl_taxonomic_order WHERE taxonomic_code = %s OR taxonomic_code = %s;',spassoc.bugscode,spassoc.associatedspeciescode),
			FORMAT('SELECT * FROM tbl_bugs_tspeciesassociation WHERE "CODE" = %s OR "AssociatedSpeciesCODE" = %s',spassoc.bugscode,spassoc.associatedspeciescode)
			);
		EXECUTE BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),
			'NO SPECIES CODE OR ASSOCIATED SPECIES CODE bugs_tspeciesassocitions.code or associatedspeciescode not in sead. Add this to taxonomy');
		RETURN TRUE;
END;		
$_$;


--
-- TOC entry 1098 (class 1255 OID 16636)
-- Name: existsttaxo(ttaxo); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existsttaxo(ttaxo) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	taxorow		ALIAS FOR $1;
	taxoid		INTEGER;
	bid		INTEGER;
	tid		INTEGER;
	bibfound	BOOLEAN;
	tfound		BOOLEAN;
BEGIN
	bibfound = FALSE;
	tfound = FALSE;
	SELECT biblio_id INTO STRICT bid FROM tbl_bugs_biblio
	WHERE bugs_reference = taxorow.ref;
	bibfound = TRUE;
	
	SELECT taxon_id INTO STRICT tid FROM tbl_taxonomic_order
	WHERE taxonomic_code = taxorow.code;
	tfound = TRUE;

	--TODO: See the biology section (if it works :) ) to deal with duplicates on biblio,taxon and one note being null
	IF taxorow.data IS NULL THEN
		SELECT taxonomy_notes_id INTO STRICT taxoid FROM tbl_taxonomy_notes
		WHERE biblio_id = bid AND taxon_id = tid;
	ELSE
		SELECT taxonomy_notes_id INTO STRICT taxoid FROM tbl_taxonomy_notes
		WHERE biblio_id = bid AND taxon_id = tid AND taxonomy_notes = taxorow.data;
	END IF;

	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		IF bibfound IS FALSE THEN
			PERFORM BugsDataError('tbl_taxonomy_notes','tbl_bugs_ttaxonotes','biblio_id',taxorow.ref,
				NULL,
				FORMAT('SELECT * FROM tbl_bugs_ttaxonotes WHERE "Ref" = %s',taxorow.ref)
			);
			PERFORM BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),'No biblio_id found for the given reference. Either add the reference to sead or update in the updates area of notes.');
			RAISE WARNING 'ExistsTTaxo(ttaxo): No biblio_id found for Ref = %', taxorow.ref;
			RETURN TRUE;
		ELSIF tfound IS FALSE THEN
			PERFORM BugsDataError('tbl_taxonomy_notes','tbl_bugs_ttaxonotes','taxon_id',taxorow.code::TEXT,
				NULL,
				FORMAT('SELECT * FROM tbl_bugs_ttaxonotes WHERE "CODE" = %s',taxorow.code)
			);
			PERFORM BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),'No taxon_id found for the given taxonomic_code. Either add the taxon to sead or update in the updates area of notes.');
			RAISE WARNING 'ExistsTTaxo(ttaxo): No taxon_id found for CODE = %', taxorow.code;
			RETURN TRUE;
		END IF;
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		IF bibfound IS FALSE THEN
			RAISE 'ExistsTTaxo(ttaxo): Multiple biblio_id found for Ref = %', taxorow.ref;
		ELSIF tfound IS FALSE THEN
			RAISE WARNING 'ExistsTTaxo(ttaxo): Not added. Multiple taxon_id found for CODE = %', taxorow.code;
			PERFORM BugsDataError('tbl_taxonomy_notes','tbl_bugs_ttaxonotes','taxon_id','code',
				FORMAT('SELECT * FROM tbl_taxonomic_order WHERE taxonomic_code = %s',taxorow.code),
				FORMAT('%s',taxorow)
			);
			PERFORM BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'), 'Manually add the taxonote, multiple taxonomic_code entries'); 
			RETURN TRUE;
		END IF;
		RAISE WARNING 'ExistsTTaxo(ttaxo): Duplicates found taxonomy note = %, taxon_id = %',taxorow,tid;
		RETURN TRUE;
END;
$_$;


--
-- TOC entry 1099 (class 1255 OID 16637)
-- Name: existswithsametaxondata(tindex, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION existswithsametaxondata(tindex, integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	irow		ALIAS FOR $1;
	f_id		ALIAS FOR $2;
	tc_count	INTEGER;
	a_id		INTEGER;
	a_is_set	BOOLEAN := FALSE;
	g_id		INTEGER;
	g_is_set	BOOLEAN := FALSE;
	t_id		INTEGER;
BEGIN
	SELECT COUNT(*) INTO tc_count FROM tbl_taxonomic_order
	WHERE taxonomic_code = irow.bugscode;
	IF tc_count > 1 THEN
		RETURN FALSE; -- further checks for duplicate codes handled in ExistsAsDuplicateTaxon(tindex,INTEGER)
	END IF;

	-- only one taxonomic_code associated
	IF irow.bugsauthority IS NOT NULL THEN
		SELECT author_id INTO STRICT a_id FROM tbl_taxa_tree_authors
		WHERE author_name = irow.bugsauthority;
	END IF;
	a_is_set = TRUE; -- tag to catch author exception

	SELECT genus_id INTO STRICT g_id FROM tbl_taxa_tree_genera
	WHERE family_id = f_id
	AND genus_name = irow.bugsgenus;
	g_is_set = TRUE; -- tag to catch genus exception

	IF a_id IS NULL AND irow.bugsspecies IS NOT NULL THEN
		SELECT A.taxon_id INTO STRICT t_id FROM tbl_taxa_tree_master AS A
		INNER JOIN tbl_taxonomic_order AS B
		ON A.taxon_id = B.taxon_id
		WHERE B.taxonomic_code = irow.bugscode
		AND A.genus_id = g_id
		AND A.species = irow.bugsspecies
		AND A.author_id IS NULL;
	ELSIF a_id IS NOT NULL AND irow.bugsspecies IS NULL THEN
		SELECT A.taxon_id INTO STRICT t_id FROM tbl_taxa_tree_master AS A
		INNER JOIN tbl_taxonomic_order AS B
		ON A.taxon_id = B.taxon_id
		WHERE B.taxonomic_code = irow.bugscode
		AND A.genus_id = g_id
		AND A.species IS NULL
		AND A.author_id = a_id;
	ELSIF a_id IS NULL AND irow.bugsspecies IS NULL THEN
		SELECT A.taxon_id INTO STRICT t_id FROM tbl_taxa_tree_master AS A
		INNER JOIN tbl_taxonomic_order AS B
		ON A.taxon_id = B.taxon_id
		WHERE B.taxonomic_code = irow.bugscode
		AND A.genus_id = g_id
		AND A.species IS NULL
		AND A.author_id IS NULL;
	ELSE
		SELECT A.taxon_id INTO STRICT t_id FROM tbl_taxa_tree_master AS A
		INNER JOIN tbl_taxonomic_order AS B
		ON A.taxon_id = B.taxon_id
		WHERE B.taxonomic_code = irow.bugscode
		AND A.genus_id = g_id
		AND A.species = irow.bugsspecies
		AND A.author_id = a_id;
	END IF;
	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		IF a_is_set IS FALSE THEN
			RAISE 'ExistsWithSameTaxonData(tindex,INTEGER): No author found, tindex = %',irow;
		ELSIF g_is_set IS FALSE THEN
			RAISE 'ExistsWithSameTaxonData(tindex,INTEGER): No genus found, tindex = %',irow;
		END IF;
		--RAISE INFO 'no taxon found irow = %', irow;
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		IF a_is_set IS FALSE THEN
			RAISE 'ExistsWithSameTaxonData(tindex,INTEGER): More than one author found, tindex = %',irow;
		ELSIF g_is_set IS FALSE THEN
			RAISE 'ExistsWithSameTaxonData(tindex,INTEGER): More than one genus found, tindex = %',irow;
		END IF;
		RAISE 'ExistsWithSameTaxonData(tindex,INTEGER): More than one taxon found for irow = %', irow;
END;
$_$;


--
-- TOC entry 1100 (class 1255 OID 16638)
-- Name: get_transform_string(character varying, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION get_transform_string(method_name character varying, target_srid integer DEFAULT 4326) RETURNS text
    LANGUAGE plpgsql
    AS $$
declare
   srid		integer := -1;
   n_adj	integer := 0;
   e_adj	integer := 0;
   result_string text := '';
begin
   case
	when method_name = 'WGS84_UTM_zone_32' then
	  srid := 32632;
	when method_name = 'EPSG:4326' then 
	  srid := 4326;
	when method_name = 'UTM_U32_euref89' then
	  srid := 4647;
	when method_name = 'Swedish_RT90[2.5_gon_V]' then
	  srid := 3021;
	when method_name = 'RT90_5_gon_V' then 
	  srid := 3020;
	when method_name = 'SWEREF_99_TM_(Swedish)' then 
	  srid := 3006;
	when method_name = 'Truncated_RT90_5_gon_V_(6M,_1M_adjustment)' then
	  srid := 3020;
	  n_adj := 6000000;
	  e_adj := 1000000;
	when method_name = 'WGS84_UTM_zone_33N' then
	  srid := 32633;
	else
	  raise warning 'no matching coordinate method id found for method %', method_name;
	  return '-1';
   end case;

	result_string :=
		'st_transform(st_setsrid(st_point('
		|| method_name || '.y + ' || n_adj || ',' 
		|| method_name || '.x + ' || e_adj
		|| '), '
		|| srid
		|| '), ' 
		|| target_srid
		|| ')';
	return result_string;
		
   
end;
$$;


--
-- TOC entry 1101 (class 1255 OID 16639)
-- Name: getactivitytypeidbytype(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION getactivitytypeidbytype(character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	at_id	INTEGER;
BEGIN
	SELECT activity_type_id INTO at_id
	FROM	tbl_activity_types
	WHERE 	activity_type = $1;

	IF at_id >= 0 THEN
		RETURN	at_id;
	ELSE
		--TODO: Change to warning with error?
		RAISE E'No activity type id for type=%',$1;
	END IF;
	RETURN -1;
END;
$_$;


--
-- TOC entry 1102 (class 1255 OID 16640)
-- Name: getanalysisentity(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION getanalysisentity(integer, integer) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	psid		ALIAS FOR $1;
	dsid		ALIAS FOR $2;
	aeid		INTEGER;
BEGIN
	SELECT analysis_entity_id INTO STRICT aeid FROM tbl_analysis_entities
	WHERE physical_sample_id = psid
	AND dataset_id = dsid;
	RETURN aeid;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RAISE WARNING ' GetAnalysisEntity(INTEGER,INTEGER): No analysis_entity for physical_sample_id = % and dataset_id = %, TODO Error handling',psid,dsid;
		RETURN -1;
	WHEN TOO_MANY_ROWS THEN
		RAISE ' GetAnalysisEntity(INTEGER,INTEGER): Multiple analysis entities for physical_sample_id = % and dataset_id = %, TODO Error handling',psid,dsid;
END;
$_$;


--
-- TOC entry 1103 (class 1255 OID 16641)
-- Name: getanalysisentityfromsamplecode(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION getanalysisentityfromsamplecode(character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	samplecode	ALIAS FOR $1;
	a_entity_id	INTEGER;
BEGIN
	SELECT A.analysis_entity_id INTO STRICT a_entity_id
	FROM tbl_analysis_entities AS A
	INNER JOIN tbl_bugs_physical_samples AS B
	ON A.physical_sample_id = B.physical_sample_id
	WHERE B.bugs_samplecode = samplecode;
	RETURN a_entity_id;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RAISE WARNING 'GetAnalysisEntity(VARCHAR): No analysis entity for bugs_samplecode = %
		TODO: Error handling', samplecode;
		RETURN -1;
	WHEN TOO_MANY_ROWS THEN
		RAISE 'GetAnalysisEntity(VARCHAR): Multiple analysis entities for bugs_samplecode = %
		TODO: Error handling, consider changing function to meet this requirement', samplecode;
END;
$_$;


--
-- TOC entry 1104 (class 1255 OID 16642)
-- Name: getassociationtypeidbyatype(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION getassociationtypeidbyatype(character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	atype_id	INTEGER;
BEGIN
	SELECT association_type_id INTO STRICT atype_id
	FROM 	tbl_species_association_types
	WHERE	association_type_name = $1;
	RETURN atype_id;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RAISE WARNING 'GetAssociationTypeIdByAType(VARCHAR): NULL type added
		No association_type_name = %',$1;
		--TODO: add if not duplicate error handling!!
-- 		EXECUTE BugsDataError('tbl_bugs_biblio','tbl_bugs_tspeciesassociations','bugs_reference','"Ref"',
-- 			FORMAT('SELECT * FROM tbl_bugs_biblio WHERE bugs_reference = %s;',spassoc.bugsref),
-- 			FORMAT('SELECT * FROM tbl_bugs_tspeciesassociation WHERE "Ref" = %s',spassoc.bugsref)
-- 			);
-- 		EXECUTE BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),
-- 			'NO SPECIES REFERENCE bugs_tspeciesassocitions.ref not in sead. Add this type to tbl_biblio');
		RETURN NULL;
	WHEN TOO_MANY_ROWS THEN
		RAISE 'GetAssociationTypeIdByAType(VARCHAR): NOT ADDED, ERROR
		More than one id for association_type_name = %',$1;
END;
$_$;


--
-- TOC entry 1105 (class 1255 OID 16643)
-- Name: getbiblioidbybugsref(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION getbiblioidbybugsref(character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	bid 		INTEGER;
	bidcount	INTEGER;
BEGIN
	SELECT INTO bidcount COUNT(*) FROM tbl_bugs_biblio
	WHERE 	$1 = bugs_reference;
	IF bidcount > 1 THEN
		RAISE WARNING 'GetBiblioIDByBugsRef:  Found more than one biblio_id for bugs_reference:  %',$1;
		RETURN NULL;
	END IF;
	
	SELECT INTO bid biblio_id FROM tbl_bugs_biblio
	WHERE bugs_reference = $1;
	IF bid IS NULL THEN
		RAISE WARNING 'GetBiblioIDByBugsRef:  Found no biblio_id for bugs_reference:  %',$1;
		RETURN NULL;
	END IF;
	RETURN bid;
END;
$_$;


--
-- TOC entry 1106 (class 1255 OID 16644)
-- Name: getcalendarage(numeric, character varying, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION getcalendarage(numeric, character varying, character varying) RETURNS numeric
    LANGUAGE plpgsql
    AS $_$
DECLARE
	date_value	ALIAS FOR $1;
	bcad_value	ALIAS FOR $2;
	age_direction	ALIAS FOR $3;
BEGIN
	IF date_value IS NULL THEN
		RETURN NULL;
	END IF;

	IF bcad_value = 'BP' THEN -- dates remain the same
		IF age_direction = 'younger' THEN
			RETURN date_value;
		ELSIF age_direction = 'older' THEN
			RETURN date_value;
		END IF;
	ELSIF bcad_value = 'AD' OR bcad_value = 'BC' THEN -- calendar dates: adjust to 1950
		IF age_direction = 'younger' THEN
			IF bcad_value = 'BC' THEN
				RETURN date_value + 1950;
			ELSIF bcad_value = 'AD' THEN
				RETURN 1950 - date_value;
			END IF;
		ELSIF age_direction = 'older' THEN
			IF bcad_value = 'BC' THEN
				RETURN date_value + 1950;
			ELSIF bcad_value = 'AD' THEN
				RETURN 1950 - date_value;
			END IF;
		END IF;
	END IF;
	RAISE WARNING 'GetCalendarAge(NUMERIC(20,5),VARCHAR,VARCHAR) RETURNS NUMERIC(20,5):
	Treat as BP. date_value = % ,bcad_value = %, age_direction = %', date_value,bcad_value,age_direction;
	RETURN date_value;
END;
$_$;


--
-- TOC entry 1107 (class 1255 OID 16645)
-- Name: getcontactidbybothnames(character varying, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION getcontactidbybothnames(character varying, character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	cid	INTEGER;
BEGIN
	SELECT contact_id INTO cid FROM tbl_contacts
	WHERE	first_name = $1
	AND	last_name = $2;

	RETURN cid;
END;
$_$;


--
-- TOC entry 982 (class 1255 OID 16646)
-- Name: getcountryidbyname(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION getcountryidbyname(character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	cid 		INTEGER;
	cidcount	INTEGER;
BEGIN
	SELECT INTO cidcount COUNT(*) FROM tbl_countries
	WHERE 	$1 = country_name;
	IF cidcount > 1 THEN
		RAISE WARNING 'GetCountryIDByName:  More than one country_id for country_name:  %',$1;
		RETURN NULL;
	END IF;
	SELECT INTO cid country_id FROM tbl_countries
	WHERE country_name = $1;
	IF cid IS NULL THEN
		RAISE WARNING 'GetCountryIDByName:  No country_id for country_name:  %',$1;
		RETURN NULL;
	END IF;
	RETURN cid;
END;
$_$;


--
-- TOC entry 989 (class 1255 OID 16647)
-- Name: getdatasetmastersetbyname(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION getdatasetmastersetbyname(character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	msid	INTEGER;
BEGIN
	SELECT master_set_id INTO STRICT msid FROM tbl_dataset_masters
	WHERE	master_name = $1;
	RETURN msid;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RETURN NULL;
	WHEN TOO_MANY_ROWS THEN
		RAISE 'GetDatasetMasterSetByName(VARCHAR): Multiple master_set_id with master_name = %',$1;
END;
$_$;


--
-- TOC entry 1091 (class 1255 OID 16648)
-- Name: getdatatypeidbyname(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION getdatatypeidbyname(character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	dtid INTEGER;
BEGIN
	SELECT INTO dtid data_type_id FROM tbl_data_types
	WHERE 	$1 = data_type_name;
	IF $1 IS NULL THEN
		RAISE WARNING 'GetDataTypeIDByName:  Could not find data_type_name:  %',$1;
		RETURN NULL;
	END IF;
	RETURN dtid;
END;
$_$;


--
-- TOC entry 1108 (class 1255 OID 16649)
-- Name: getdatatypeidbysheettype(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION getdatatypeidbysheettype(character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
BEGIN
	CASE
		WHEN $1='Presence/Absence' THEN
			RETURN GetDataTypeIDByName('Presence');
		WHEN $1='Abundances' THEN
			RETURN GetDataTypeIDByName('Abundance');
		WHEN $1='Abundance' THEN
			RETURN GetDataTypeIDByName('Abundance');
		WHEN $1='Partial abundances' THEN
			RETURN GetDataTypeIDByName('Partial abundance');
		WHEN $1='Partial Abundance' THEN
			RETURN GetDataTypeIDByName('Partial abundance');
		WHEN $1='Other' THEN
			RETURN GetDataTypeIDByName('Undefined other');
		ELSE
			RAISE WARNING 'GetDataTypeIDBySheetType: Found anomolous TCountsheet.SheetType: %',$1;
			RETURN -1;
	END CASE;
END;
$_$;


--
-- TOC entry 1109 (class 1255 OID 16650)
-- Name: getecocodedefinition(character varying, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION getecocodedefinition(character varying, character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	ecodefid	INTEGER;
	ecosysid 	INTEGER;
	EcocodeSystem	VARCHAR;
	BugsSystem	VARCHAR;
	KochSystem	VARCHAR;
	BugsGroup	VARCHAR;
	KochGroup	VARCHAR;
BEGIN
	BugsSystem = 'Bugs Ecocodes';
	KochSystem = 'Koch Ecology Codes';
	BugsGroup = 'Bugs';
	KochGroup = 'KochGroup';
	
	IF $2 = BugsGroup THEN
		EcocodeSystem = BugsSystem;
	ELSIF $2 = KochGroup THEN
		EcocodeSystem = KochSystem;
	ELSE
		RAISE WARNING E'!!! Unknown ecogroup label = %',$2;
		RETURN -1;
	END IF;

	SELECT GetEcocodeSystemIdByName(EcocodeSystem) INTO ecosysid;

	SELECT ecocode_definition_id INTO ecodefid
	FROM 	tbl_ecocode_definitions
	WHERE	ecocode_group_id = GetEcocodeGroupIdBySystemId_Label(ecosysid,$2)
	AND	abbreviation = $1;
	RETURN 	ecodefid;
END;
$_$;


--
-- TOC entry 1110 (class 1255 OID 16651)
-- Name: getecocodegroupidbysystemid_label(integer, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION getecocodegroupidbysystemid_label(integer, character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	egid	INTEGER;
BEGIN
	IF ExistsEcocodeGroup($1,$2) IS TRUE THEN
		IF ExistsDuplicateEcocodeGroup($1,$2) IS FALSE THEN
			SELECT ecocode_group_id INTO egid 
			FROM tbl_ecocode_groups
			WHERE	ecocode_system_id = $1
			AND	label = $2;
			RETURN egid;
		ELSE
			RETURN -1;
		END IF;
	END IF;
	RETURN -1;
END;
$_$;


--
-- TOC entry 1111 (class 1255 OID 16652)
-- Name: getecocodesystemidbyname(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION getecocodesystemidbyname(character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	ecsid 		INTEGER;
BEGIN
	IF ExistsEcocodeSystem($1) IS TRUE THEN
		IF ExistsDuplicateEcocodeSystem($1) IS FALSE THEN
			SELECT ecocode_system_id INTO ecsid 
			FROM tbl_ecocode_systems
			WHERE 	name = $1;
			RETURN ecsid;
		ELSE
			RETURN -1;
		END IF;
	END IF;
	RETURN -1;
END;
$_$;


--
-- TOC entry 1112 (class 1255 OID 16653)
-- Name: getecogrouplabelbyid(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION getecogrouplabelbyid(integer) RETURNS character varying
    LANGUAGE plpgsql
    AS $_$
DECLARE
	grouplabel	VARCHAR;
BEGIN
	SELECT label INTO grouplabel FROM tbl_ecocode_groups
	WHERE	ecocode_group_id = $1;
	RETURN grouplabel;
	
END;
$_$;


--
-- TOC entry 1113 (class 1255 OID 16654)
-- Name: getfamilyid(character varying, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION getfamilyid(character varying, integer) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	f_name	ALIAS FOR $1;
	o_id	ALIAS FOR $2;
	f_id	INTEGER;
BEGIN
	SELECT family_id INTO STRICT f_id FROM tbl_taxa_tree_families
	WHERE 	family_name = f_name
	AND	order_id = o_id;
	RETURN f_id;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RAISE 'GetFamilyId(VARCHAR,INTEGER): No family_id found for family_name = %,o_id = %',f_name,o_id;
	WHEN TOO_MANY_ROWS THEN
		RAISE 'GetFamilyId(VARCHAR,INTEGER): Multiple family_id found for family_name = %,o_id = %',f_name,o_id;
END;
$_$;


--
-- TOC entry 1114 (class 1255 OID 16655)
-- Name: getidonbugscode(text, text, text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION getidonbugscode(text, text, text, text, OUT result integer) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	reccount	INTEGER;
	recid		INTEGER;
	table_name	ALIAS FOR $1;
	sead_id_col	ALIAS FOR $2;
	sead_bugs_col	ALIAS FOR $3;
	bugs_code	ALIAS FOR $4;
BEGIN
	IF bugs_code IS NULL THEN
		--RAISE WARNING 'Null bugs_code for % lookup on column %',table_name,sead_bugs_col;
		RETURN;
	END IF;

	EXECUTE FORMAT('SELECT COUNT(*) FROM %s WHERE %s = ' || quote_literal(bugs_code) || ';',table_name,sead_bugs_col)
	INTO	reccount;

	IF reccount > 1 THEN
		RAISE WARNING 'Multiple entries in % for % = %',table_name,sead_bugs_col,bugs_code;
		result = -1;
		RETURN;
	END IF;

	IF reccount = 0 THEN
		RAISE WARNING 'No % found in % for % = %', sead_id_col, table_name, sead_bugs_col,bugs_code;
		RETURN;
	END IF;

	EXECUTE FORMAT('SELECT %s FROM %s WHERE %s = ' || quote_literal(bugs_code) || ';',sead_id_col,table_name,sead_bugs_col)
	INTO	recid;

	result = recid;
END;
$_$;


--
-- TOC entry 1115 (class 1255 OID 16656)
-- Name: getlocationidbycountrycode(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION getlocationidbycountrycode(character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	lid	INTEGER;
	ltid	INTEGER;
	ltfound	BOOLEAN;
BEGIN

	ltfound = FALSE;
	SELECT GetLocationTypeIdByLocationType('Country') INTO STRICT ltid;
	ltfound = TRUE;
	
	-- TODO: see the notes above in the ExistsCountryLocation method
	IF $1 = 'UK' THEN
		lid = LookupIntegerValue2_IntVar('tbl_locations','location_id',
					'location_type_id','location_name',ltid,quote_literal('United Kingdom'));
		/*
		SELECT location_id INTO STRICT lid FROM tbl_locations
		WHERE location_type_id = ltid
		AND location_name = '';
		*/
	ELSIF $1 = 'Int' THEN
		lid = LookupIntegerValue2_IntVar('tbl_locations','location_id',
					'location_type_id','location_name',ltid,quote_literal('International'));
	ELSIF $1 = 'Swe' THEN
		lid = LookupIntegerValue2_IntVar('tbl_locations','location_id',
					'location_type_id','location_name',ltid,quote_literal('Sweden'));
	ELSIF $1 = 'Ger' THEN
		lid = LookupIntegerValue2_IntVar('tbl_locations','location_id',
					'location_type_id','location_name',ltid,quote_literal('Germany'));
	ELSE
		SELECT LookupIntegerValue2_IntVar('tbl_locations','location_id',
					'location_type_id','location_name',ltid,quote_literal($1))
		INTO STRICT lid;
	END IF;
	-------------------------------------------
	RETURN lid;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		IF ltfound IS FALSE THEN
			RAISE 'GetLocationIdByCountryCode(VARCHAR): DATA ERROR. No location type = Country';
		END IF;
		RAISE WARNING 'GetLocationIdByCountryCode(VARCHAR): TODO BUGS ERROR. No location_id for countrycode = %',$1;
	WHEN TOO_MANY_ROWS THEN
		RAISE 'GetLocationIdByCountryCode(VARCHAR): TODO BUGS ERROR. More than one location with country code = %',$1;
END;
$_$;


--
-- TOC entry 1118 (class 1255 OID 16657)
-- Name: getlocationidbycountrycode2(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION getlocationidbycountrycode2(character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	lid	INTEGER;
BEGIN
	IF $1 = 'UK' THEN
		SELECT location_id INTO lid FROM tbl_locations
		WHERE 	location_type_id = LookupIdByUniqueValue('tbl_location_types','location_type_id','location_type','Country')
		AND 	location_name = 'United Kingdom';
	ELSIF $1 = 'Swe' THEN
		SELECT location_id INTO lid FROM tbl_locations
		WHERE 	location_type_id = LookupIdByUniqueValue('tbl_location_types','location_type_id','location_type','Country')
		AND 	location_name = 'Sweden';
	ELSIF $1 = 'Int' THEN
		SELECT location_id INTO lid FROM tbl_locations
		WHERE 	location_type_id = LookupIdByUniqueValue('tbl_location_types','location_type_id','location_type','Country')
		AND 	location_name = 'International';
	ELSIF $1 = 'Ger' THEN
		SELECT location_id INTO lid FROM tbl_locations
		WHERE 	location_type_id = LookupIdByUniqueValue('tbl_location_types','location_type_id','location_type','Country')
		AND 	location_name = 'Germany';
	ELSIF $1 = 'Eg' THEN
		SELECT location_id INTO lid FROM tbl_locations
		WHERE 	location_type_id = LookupIdByUniqueValue('tbl_location_types','location_type_id','location_type','Country')
		AND 	location_name = 'Egypt';
		--RAISE WARNING E'Setting the country_code=Eg to country_name=Egypt';
	ELSE
		RAISE INFO 'GetLocationIdByCountryCode(VARCHAR): BUG CHANGE HERE';
		SELECT location_id INTO lid FROM tbl_locations
		WHERE location_type_id = LookupIdByUniqueValue('tbl_location_types','location_type_id','location_type','Country')
		AND location_name = $1;
		--TODO: Change to warning with error?
		RAISE E'GetLocationIdByCountryCode(VARCHAR): Seasons System Imports (fix in here):  No country code found for country_code = %', $1;
	END IF;
	RETURN lid;
END;
$_$;


--
-- TOC entry 1119 (class 1255 OID 16658)
-- Name: getlocationidbytypename_name(character varying, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION getlocationidbytypename_name(character varying, character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	lid	INTEGER;
BEGIN
	SELECT location_id INTO lid FROM tbl_locations
	WHERE	location_type_id = LookupIdByUniqueValue('tbl_location_types','location_type_id','location_type',$1) --GetLocationTypeIdByName($1)
	AND	location_name = $2;

	RETURN lid;
END;
$_$;


--
-- TOC entry 1120 (class 1255 OID 16659)
-- Name: getlocationtypeidbylocationtype(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION getlocationtypeidbylocationtype(character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	ltid 		INTEGER;
	ltidcount	INTEGER;
BEGIN
	SELECT INTO ltidcount COUNT(*) FROM tbl_location_types
	WHERE 	$1 = location_type;
	IF ltidcount > 1 THEN
		RAISE WARNING 'GetLocationTypeIDByLocationType:  More than one location_type_id for location_type:  %',$1;
		RETURN NULL;
	END IF;
	
	SELECT INTO ltid location_type_id FROM tbl_location_types
	WHERE 	$1 = location_type;
	IF ltid IS NULL THEN
		RAISE WARNING 'GetLocationTypeIDByLocationType:  No location_type_id found for location_type:  %',$1;
		RETURN NULL;
	END IF;
	RETURN ltid;
END;
$_$;


--
-- TOC entry 1121 (class 1255 OID 16660)
-- Name: getmcrdatastring(tmcrdata); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION getmcrdatastring(tmcrdata) RETURNS text
    LANGUAGE plpgsql
    AS $_$
DECLARE
	mcrdata		ALIAS FOR $1;
	result		TEXT;
BEGIN
	result = mcrdata.field1::bit(1) 
		|| mcrdata.field2::bit(1) 
		|| mcrdata.field3::bit(1) 
		|| mcrdata.field4::bit(1) 
		|| mcrdata.field5::bit(1)
		|| mcrdata.field6::bit(1) 
		|| mcrdata.field7::bit(1) 
		|| mcrdata.field8::bit(1) 
		|| mcrdata.field9::bit(1) 
		|| mcrdata.field10::bit(1) 
		|| mcrdata.field11::bit(1) 
		|| mcrdata.field12::bit(1) 
		|| mcrdata.field13::bit(1) 
		|| mcrdata.field14::bit(1) 
		|| mcrdata.field15::bit(1) 
		|| mcrdata.field16::bit(1) 
		|| mcrdata.field17::bit(1) 
		|| mcrdata.field18::bit(1) 
		|| mcrdata.field19::bit(1) 
		|| mcrdata.field20::bit(1) 
		|| mcrdata.field21::bit(1) 
		|| mcrdata.field22::bit(1) 
		|| mcrdata.field23::bit(1) 
		|| mcrdata.field24::bit(1) 
		|| mcrdata.field25::bit(1) 
		|| mcrdata.field26::bit(1) 
		|| mcrdata.field27::bit(1) 
		|| mcrdata.field28::bit(1) 
		|| mcrdata.field29::bit(1) 
		|| mcrdata.field30::bit(1) 
		|| mcrdata.field31::bit(1) 
		|| mcrdata.field32::bit(1) 
		|| mcrdata.field33::bit(1) 
		|| mcrdata.field34::bit(1) 
		|| mcrdata.field35::bit(1) 
		|| mcrdata.field36::bit(1) 
		|| mcrdata.field37::bit(1) 
		|| mcrdata.field38::bit(1) 
		|| mcrdata.field39::bit(1) 
		|| mcrdata.field40::bit(1) 
		|| mcrdata.field41::bit(1) 
		|| mcrdata.field42::bit(1) 
		|| mcrdata.field43::bit(1) 
		|| mcrdata.field44::bit(1) 
		|| mcrdata.field45::bit(1) 
		|| mcrdata.field46::bit(1) 
		|| mcrdata.field47::bit(1) 
		|| mcrdata.field48::bit(1) 
		|| mcrdata.field49::bit(1) 
		|| mcrdata.field50::bit(1) 
		|| mcrdata.field51::bit(1) 
		|| mcrdata.field52::bit(1) 
		|| mcrdata.field53::bit(1) 
		|| mcrdata.field54::bit(1) 
		|| mcrdata.field55::bit(1) 
		|| mcrdata.field56::bit(1) 
		|| mcrdata.field57::bit(1) 
		|| mcrdata.field58::bit(1) 
		|| mcrdata.field59::bit(1) 
		|| mcrdata.field60::bit(1);
		RETURN result;
END;
$_$;


--
-- TOC entry 1122 (class 1255 OID 16661)
-- Name: getperiodage(numeric, character varying, character varying, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION getperiodage(numeric, character varying, character varying, character varying) RETURNS numeric
    LANGUAGE plpgsql
    AS $_$
DECLARE
	date_value	ALIAS FOR $1;
	bcad_value	ALIAS FOR $2;
	age_direction	ALIAS FOR $3;
	age_type	ALIAS FOR $4;
BEGIN
	
	IF date_value IS NULL THEN
		RETURN NULL;
	END IF;
	IF bcad_value IS NULL AND date_value = 0 THEN
		IF age_type = 'c14' THEN
			RETURN 0::NUMERIC(20,5);
		END IF;
		RETURN NULL;
	END IF;
	IF bcad_value = 'BP' THEN -- dates remain the same
		IF age_type = 'cal' THEN
			RETURN NULL;
		END IF;
		IF age_direction = 'beginbcad' THEN
			RETURN date_value;
		ELSIF age_direction = 'endbcad' THEN
			RETURN date_value;
		END IF;
	ELSIF bcad_value = 'AD' OR bcad_value = 'BC' THEN -- calendar dates: adjust to 1950
		IF age_type = 'c14' THEN
			RETURN NULL;
		END IF;
		IF age_direction = 'beginbcad' THEN
			IF bcad_value = 'BC' THEN
				RETURN date_value + 1950;
			ELSIF bcad_value = 'AD' THEN
				RETURN 1950 - date_value;
			END IF;
		ELSIF age_direction = 'endbcad' THEN
			IF bcad_value = 'BC' THEN
				RETURN date_value + 1950;
			ELSIF bcad_value = 'AD' THEN
				RETURN 1950 - date_value;
			END IF;
		END IF;
	END IF;
	RAISE WARNING 'date_value = % ,bcad_value = %, age_direction = %, age_type = %', date_value,bcad_value,age_direction,age_type;
	RETURN -1;
END;
$_$;


--
-- TOC entry 1123 (class 1255 OID 16662)
-- Name: getphysicalsampleid(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION getphysicalsampleid(character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	samplecode 	ALIAS FOR $1;
	psid		INTEGER;
BEGIN
	SELECT physical_sample_id INTO STRICT psid FROM tbl_bugs_physical_samples
	WHERE bugs_samplecode = samplecode;
	RETURN psid;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RAISE WARNING 'GetPhysicalSampleId(VARCHAR): No physical samples exists for bugs_samplecode = %',samplecode;
		RAISE WARNING 'GetPhysicalSampleId(VARCHAR): TODO: Error handling';
		RETURN -1;
	WHEN TOO_MANY_ROWS THEN
		RAISE 'GetPhysicalSampleId(VARCHAR): Multiple physical_samples for bugs_samplecode = % TODO: error handling',samplecode;
END;
$_$;


--
-- TOC entry 1124 (class 1255 OID 16663)
-- Name: getphysicalsampleidbysamplecode(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION getphysicalsampleidbysamplecode(character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	psid	INTEGER;
	pscount	INTEGER;
BEGIN
	SELECT COUNT(*) INTO pscount  FROM tbl_bugs_physical_samples
	WHERE	bugs_samplecode = $1;

	IF pscount = 0 THEN
		RAISE WARNING E'GetPhysicalSampleIdBySampleCode:  No physical sample id found for sample code %', $1;
	END IF;
	IF pscount > 1 THEN
		RAISE WARNING E'GetPhysicalSampleIdBySampleCode:  More than one physical sample id found for sample code %', $1;
	END IF;
	
	SELECT INTO psid physical_sample_id 
	FROM 	tbl_bugs_physical_samples
	WHERE	bugs_samplecode = $1;

	RETURN psid;
END;
$_$;


--
-- TOC entry 1125 (class 1255 OID 16664)
-- Name: getrecordtypeidbyname(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION getrecordtypeidbyname(character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	rtcount	INTEGER;
	rtid	INTEGER;
BEGIN
	SELECT COUNT(*) INTO rtcount FROM tbl_record_types
	WHERE record_type_name = $1;

	IF rtcount = 0 THEN
		RAISE WARNING E'No record_type_name %',$1;
		RETURN -1;
	END IF;

	IF rtcount > 1 THEN 
		RAISE WARNING E'Duplication!!! record_type_name % has % records',$1,rtcount;
		RETURN -1;
	END IF;
	
	SELECT record_type_id INTO rtid FROM tbl_record_types
	WHERE	record_type_name = $1;
	RETURN rtid;
END;
$_$;


--
-- TOC entry 1126 (class 1255 OID 16665)
-- Name: getsamplegroupidbycountsheetcode(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION getsamplegroupidbycountsheetcode(character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	sgid		INTEGER;
	idcount		INTEGER;
BEGIN
	SELECT INTO idcount COUNT(*) FROM (
		SELECT	sample_group_id
		FROM	tbl_bugs_sample_groups
		WHERE	bugs_countsheetcode = $1  ) AS A;

	IF idcount = 0 THEN
		RAISE WARNING E'GetSampleGroupIdByCountsheetCode:  No sample_group_id found for countsheet code: %',$1;
		RAISE INFO E'\tADD SQL HERE';
		RAISE INFO '';
		RETURN -1;
	ELSIF idcount > 1 THEN
		RAISE WARNING E'GetSampleGroupIdByCountsheetCode:  Multiple sample_group_id found for countsheet code: %',$1;
		RAISE INFO E'\tADD SQL HERE';
		RAISE INFO '';
		RETURN -1;		
	END IF;

	SELECT INTO sgid sample_group_id FROM tbl_bugs_sample_groups
	WHERE 	bugs_countsheetcode = $1;

	RETURN sgid;
END;
$_$;


--
-- TOC entry 1116 (class 1255 OID 16666)
-- Name: getsampletypeidbyname(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION getsampletypeidbyname(character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	stid	INTEGER;
BEGIN
	SELECT sample_type_id INTO stid FROM tbl_sample_types
	WHERE 	type_name = $1;

	IF stid IS NULL THEN
		RAISE WARNING E'No sample_type_name of %', $1;
		stid = -1;
	END IF;

	RETURN stid;
END;
$_$;


--
-- TOC entry 1117 (class 1255 OID 16667)
-- Name: getsamplingcontextidbycontext(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION getsamplingcontextidbycontext(character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	scid INTEGER;
BEGIN
	SELECT INTO scid sampling_context_id FROM tbl_sample_group_sampling_contexts
	WHERE $1 = sampling_context;
	IF scid IS NULL THEN
		RAISE WARNING 'GetSamplingContextIDByContext:  Found no entry for sampling_context: %',$1;
		RETURN NULL;
	END IF;
	RETURN scid;
END;
$_$;


--
-- TOC entry 1127 (class 1255 OID 16668)
-- Name: getsamplingcontextidbysheetcontext(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION getsamplingcontextidbysheetcontext(character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE 
	id INTEGER;
BEGIN
	CASE 
		WHEN $1='Archaeological contexts' THEN
			RETURN GetSamplingContextIDByContext('Archaeological site');
		WHEN $1='Other Palaeo' THEN
			RETURN GetSamplingContextIDByContext('Other palaeo');
		WHEN $1='Pitfall traps' THEN
			RETURN GetSamplingContextIDByContext('Pitfall traps');
		WHEN $1='Other Modern' THEN
			RETURN GetSamplingContextIDByContext('Other modern');
		WHEN $1='Stratigraphic sequence' THEN
			RETURN GetSamplingContextIDByContext('Stratigraphic sequence');
		ELSE
			RAISE WARNING 'GetSamplingContextIDBySheetContext:  TCountsheet.SheetContext has no such sampling_context: %
				HINT: add new sampling context',$1;
			EXECUTE BugsDataError('tbl_sample_group_sampling_contexts','tbl_bugs_tcountsheet','sampling_context','SheetContext',
				NULL,
				FORMAT('SELECT * FROM tbl_bugs_tcountsheet WHERE "SheetContext" = %s',$1)
				);
			EXECUTE BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),
				'COUNTSHEET SHEETCONTEXT Does not exist. Need to have a valid SheetContext in sead to add');
			RETURN -1;
	END CASE;
END;
$_$;


--
-- TOC entry 1128 (class 1255 OID 16669)
-- Name: getseasonidbyname(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION getseasonidbyname(character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	sid	INTEGER;
	season	VARCHAR;
BEGIN
	--season = $1;
	SELECT 
		CASE $1 WHEN 'Ja' THEN 'January'
			WHEN 'Fe' THEN 'February'
			WHEN 'Mr' THEN 'March'
			WHEN 'Ap' THEN 'April'
			WHEN 'My' THEN 'May'
			WHEN 'Jn' THEN 'June'
			WHEN 'Jy' THEN 'July'
			WHEN 'Au' THEN 'August'
			WHEN 'Se' THEN 'September'
			WHEN 'Oc' THEN 'October'
			WHEN 'No' THEN 'November'
			WHEN 'De' THEN 'December'
			ELSE ''
		END
	INTO season;

	SELECT season_id INTO sid FROM tbl_seasons
	WHERE 	season_name = season;

	IF season = '' THEN
		RAISE WARNING E'Null season_id for season_name = %', $1;
		EXECUTE BugsDataError('tbl_seasons','tbl_bugs_tseasonactiveadult','season_name','"HSeason"',
			FORMAT('SELECT * FROM tbl_seasons WHERE season_name = %s;',$1),
			FORMAT('SELECT * FROM tbl_bugs_tseasonactiveadult WHERE "HSeason" = %s',$1)
			);
		EXECUTE BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),
			'NO SEASON tbl_bugs_tseasonactiveadult.hseason not in sead. Add to tbl_seasons');
		RETURN -1;
	END IF;
	
	RETURN sid;
END;
$_$;


--
-- TOC entry 1129 (class 1255 OID 16670)
-- Name: getsiteidbybugssitecode(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION getsiteidbybugssitecode(code character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	sid 		INTEGER;
	sidcount	INTEGER;
BEGIN
	SELECT INTO sidcount COUNT(*) FROM tbl_bugs_sites
	WHERE 	$1 = bugs_sitecode;
	IF sidcount > 1 THEN
		RAISE WARNING 'GetSiteIDByBugsSiteCode: Bugs Sitecode does not exist in SEAD: %',code;
		RETURN NULL;
	END IF;
	SELECT INTO sid site_id FROM tbl_bugs_sites
	WHERE bugs_sitecode = code;
	IF sid IS NULL THEN
		RAISE WARNING 'GetSiteIDByBugsSiteCode: No : %',code;
		RETURN NULL;
	END IF;
	RETURN sid;
END;
$_$;


--
-- TOC entry 1130 (class 1255 OID 16671)
-- Name: gettablecolumnvarcharonid(text, text, text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION gettablecolumnvarcharonid(text, text, text, integer, OUT result character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $_$
DECLARE
	table_name	ALIAS FOR $1;
	id_col	 	ALIAS FOR $2;
	data_col	ALIAS FOR $3;
	id		ALIAS FOR $4;
BEGIN
	EXECUTE FORMAT('SELECT %s FROM %s WHERE %s = ' || quote_literal(id) || ';',data_col,table_name,id_col)
	INTO result;
END
$_$;


--
-- TOC entry 1131 (class 1255 OID 16672)
-- Name: gettableidbyonecolumnnamevalue(character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION gettableidbyonecolumnnamevalue(character varying, character varying, character varying, character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	id		INTEGER;
	rec_count	INTEGER;
	sead_table_name ALIAS FOR $1;
	sead_id_col	ALIAS FOR $2;
	sead_value_col	ALIAS FOR $3;
	bugs_value	ALIAS FOR $4;
BEGIN
	IF bugs_value IS NULL THEN
		RETURN NULL;
	END IF;
	EXECUTE FORMAT('SELECT COUNT(*) FROM %s WHERE %s = ' || quote_literal(bugs_value) || ';',sead_table_name,sead_value_col)
	INTO	rec_count;

	IF rec_count = 0 THEN
		RAISE WARNING E'No records found for table % with % = %',sead_table_name,sead_value_col,bugs_value;
		RETURN -1;
	END IF;

	IF rec_count > 1 THEN
		RAISE WARNING E'Multiple records (%) found for table % with % = %',reccount,sead_table,sead_value_col,bugs_value;
		RETURN -1;
	END IF;

	EXECUTE FORMAT('SELECT %s FROM %s WHERE %s = ' || quote_literal(bugs_value) || ';',sead_id_col, sead_table_name, sead_value_col,bugs_value)
	INTO	id;
	RETURN id;
END;
$_$;


--
-- TOC entry 1132 (class 1255 OID 16673)
-- Name: gettableidbyvarcharcolumnintcolumndatalookup(character varying, character varying, character varying, character varying, character varying, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION gettableidbyvarcharcolumnintcolumndatalookup(character varying, character varying, character varying, character varying, character varying, integer, OUT result integer) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	table_name 	ALIAS FOR $1;
	id_field_name	ALIAS FOR $2;
	field_name_1	ALIAS FOR $3;
	field_data_1	ALIAS FOR $4;
	field_name_2	ALIAS FOR $5;
	field_data_2	ALIAS FOR $6;
BEGIN
	IF field_data_1 IS NULL OR field_data_2 IS NULL OR field_data_1 = '' THEN
		RAISE NOTICE 'NULL field_data given for % :: % = %  and % = %', table_name,field_name_1,
									field_data_1,field_name_2,field_data_2;
		RETURN;
	END IF;

	IF ExistsTableColumnValues(table_name,ARRAY[
		ARRAY[field_name_1,'varchar',field_data_1],
		ARRAY[field_name_2,'integer',field_data_2::VARCHAR]
		]) IS FALSE THEN
		RAISE WARNING 'No data in for % :: % = %  and % = %', table_name,field_name_1,
									field_data_1,field_name_2,field_data_2;
		RETURN;
	END IF;
	
	EXECUTE FORMAT('SELECT %s FROM %s WHERE %s = ' || quote_literal(field_data_1) 
					|| ' AND %s = ' || quote_literal(field_data_2) || ';',
					id_field_name, table_name, field_name_1, field_name_2)
	INTO result;
END;
$_$;


--
-- TOC entry 1133 (class 1255 OID 16674)
-- Name: gettaxonid(numeric, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION gettaxonid(numeric, integer) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	code	ALIAS FOR $1;
	tsid	ALIAS FOR $2;
	tid	INTEGER;
BEGIN
	SELECT taxon_id INTO STRICT tid
	FROM tbl_taxonomic_order 
	WHERE taxonomic_code = code
	AND taxonomic_order_system_id = tsid;
	RETURN tid;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		--DEPRTODO: Create bugs_error, speciesassociation not added
		RAISE WARNING 'GetTaxonId(NUMERIC(18,10),INTEGER):
			No taxon_id found for code = % and taxonomic_order_system_id = %',code,tsid;
			EXECUTE BugsDataError('tbl_taxonomic_order','tbl_bugs_tspeciesassociations','taxonomic_code','"CODE","AssociatedSpeciesCODE"',
				FORMAT('SELECT * FROM tbl_taxonomic_order WHERE taxonomic_code = %s AND taxonomic_order_system_id ? %s;',code,tsid),
				FORMAT('SELECT * FROM tbl_bugs_tspeciesassociation WHERE "CODE" = %s OR "AssociatedSpeciesCODE" = %s',code,code)
				);
			EXECUTE BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),
				'SPECIES ASSOCIATION NO TAXON Given taxonomic_code not in sead. Need to add the taxon.');
		RETURN NULL;
	WHEN TOO_MANY_ROWS THEN
		--DEPRTODO: Create bugs_error, speciesassociation not added
		RAISE WARNING 'GetTaxonId(NUMERIC(18,10),INTEGER):
			More than one taxon_id found for code = % and taxonomic_order_system_id = %',code,tsid;
			EXECUTE BugsDataError('tbl_taxonomic_order','tbl_bugs_tspeciesassociations','taxonomic_code','"CODE","AssociatedSpeciesCODE"',
				FORMAT('SELECT * FROM tbl_taxonomic_order WHERE taxonomic_code = %s AND taxonomic_order_system_id ? %s;',code,tsid),
				FORMAT('SELECT * FROM tbl_bugs_tspeciesassociation WHERE "CODE" = %s OR "AssociatedSpeciesCODE" = %s',code,code)
				);
			EXECUTE BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),
				'SPECIES ASSOCIATION MULTIPLE TAXONS Given taxonomic_code duplicated for the taxonomic order system in sead. Need to change the system and deal with this TODO.');
		RETURN NULL;
END;
$_$;


--
-- TOC entry 1134 (class 1255 OID 16675)
-- Name: gettaxonidbycode(numeric); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION gettaxonidbycode(numeric) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	code		ALIAS FOR $1;
	tid		INTEGER;
	tsid		INTEGER;
	tsfound		BOOLEAN:=FALSE;
BEGIN
	SELECT taxonomic_order_system_id INTO STRICT tsid 
	FROM tbl_taxonomic_order_systems
	WHERE system_name = 'BugsCEP taxonomic order';
	tsfound = TRUE;

	SELECT taxon_id INTO STRICT tid FROM tbl_taxonomic_order
	WHERE taxonomic_code = code
	AND taxonomic_order_system_id = tsid;
	RETURN tid;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		IF tsfound IS FALSE THEN
			RAISE 'ExistsTaxonId(NUMERIC(18,10)): No taxonomic_system_id with system_name = BugsCEP taxonomic order';
		END IF;
		RAISE WARNING 'ExistsTaxonId(NUMERIC(18,10)): TODO: bugs_error REQUIRED. No taxon_id found for code = %, in the bugs cep system',code;
		RETURN NULL;
	WHEN TOO_MANY_ROWS THEN
		RAISE WARNING 'ExistsTaxonId(NUMERIC(18,10)): TODO: bugs_error REQUIRED. ERROR: More than one taxon_id found for code = %, in the bugs cep system',code;
	
END;
$_$;


--
-- TOC entry 966 (class 1255 OID 16676)
-- Name: gettaxonidbycode_systemid(numeric, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION gettaxonidbycode_systemid(numeric, integer) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	tid	INTEGER;
BEGIN
	SELECT taxon_id INTO tid 
	FROM	tbl_taxonomic_order
	WHERE	taxonomic_code = $1
	AND	taxonomic_order_system_id = $2;
	RETURN tid;
	
END;
$_$;


--
-- TOC entry 1135 (class 1255 OID 16677)
-- Name: gettaxonidbycode_systemname(numeric, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION gettaxonidbycode_systemname(numeric, character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	tid		INTEGER;
	tosysid		INTEGER;
	SystemName	VARCHAR;
BEGIN

	SELECT GetTaxonomicOrderSystemByName($2) INTO tosysid;
	
	IF ExistsTaxon($1,tosysid) IS TRUE THEN
		SELECT taxon_id INTO tid FROM tbl_taxonomic_order
		WHERE	taxonomic_order_system_id = tosysid
		AND	taxonomic_code = $1;
		IF ExistsDuplicateCode($1) IS TRUE THEN
			RAISE WARNING E'DEBUG: TODO: Duplicate found - - > Implement action here';
		END IF;
		RETURN tid;
	END IF;
	RAISE WARNING E'No taxon_id found for code = %',$1;
	RETURN -1;
END;
$_$;


--
-- TOC entry 1136 (class 1255 OID 16678)
-- Name: gettaxonidbytcode(numeric); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION gettaxonidbytcode(numeric) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	tid 		INTEGER;
	tidcount	INTEGER;
BEGIN
	SELECT INTO tidcount COUNT(*) FROM tbl_taxonomic_order
	WHERE $1 = taxonomic_code;
	IF tidcount > 1 THEN
		RAISE WARNING 'GetTaxonIDByTCode:  More than one taxon_id found for taxonomic_code:  %',$1;
		RETURN NULL;
	END IF;
	
	SELECT INTO tid taxon_id FROM tbl_taxonomic_order
	WHERE $1 = taxonomic_code;
	IF tid IS NULL THEN
		RAISE WARNING 'GetTaxonIDByTCode:  No taxon_id found for taxonomic_code:  %',$1;
		RETURN NULL;
	END IF;
	RETURN tid;
END;
$_$;


--
-- TOC entry 1137 (class 1255 OID 16679)
-- Name: gettaxonomicordersystembyname(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION gettaxonomicordersystembyname(character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	tosid	INTEGER;
BEGIN
	SELECT taxonomic_order_system_id INTO tosid
	FROM	tbl_taxonomic_order_systems
	WHERE	system_name = $1;

	IF tosid IS NULL THEN
		RAISE WARNING E'!!! Taxonomic system absent system_name = % - - > Fix to continue',$1;
		RETURN -1;
	END IF;
	RETURN tosid;
END;
$_$;


--
-- TOC entry 1138 (class 1255 OID 16680)
-- Name: gettaxonomicsystemidbyname(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION gettaxonomicsystemidbyname(character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	sysname ALIAS FOR $1;
	tsid	INTEGER;
BEGIN
	SELECT taxonomic_order_system_id INTO STRICT tsid
	FROM tbl_taxonomic_order_systems
	WHERE system_name = sysname;
	RETURN tsid;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		-- RAISE Bugs error, no system found is problematic!!
		RAISE 'GetTaxonomicSystemIdByName(VARCHAR): ERROR: No taxonomic order system found for %',$1;
	WHEN TOO_MANY_ROWS THEN
		-- RAISE bugs error, more than one found is also a problem.
		RAISE 'GetTaxonomicSystemIdByName(VARCHAR): ERROR More than one taxonomic order system found for %',$1;
END;
$_$;


--
-- TOC entry 1139 (class 1255 OID 16681)
-- Name: importlocations(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION importlocations() RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN

  -- This is updated to handle more than just site locations.
  -- By Erik J Eriksson 20140404
  
  PERFORM ImportTSiteLocations();
  PERFORM ImportTPeriodLocations();
END;
$$;


--
-- TOC entry 1140 (class 1255 OID 16682)
-- Name: importmcrdata(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION importmcrdata() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	mcrdata		tmcrdata;
	tid		INTEGER;
	tsid		INTEGER;
	taxonomic_system	VARCHAR;
	mcrdatastring	TEXT;
	cnt_inserts	integer :=0;
BEGIN
	taxonomic_system = 'BugsCEP taxonomic order';
	tsid = GetTaxonomicSystemIdByName(taxonomic_system);
	FOR mcrdata IN (SELECT * FROM tbl_bugs_tbirmbeetledat) LOOP
		mcrdatastring = GetMCRDataString(mcrdata);
		--RAISE INFO 'mcrdatastring = %',mcrdatastring;
		tid = GetTaxonId(mcrdata.code,tsid);
		IF ExistsTMCRData(mcrdata,tid) THEN
			PERFORM IsConsistentMCRData(mcrdata,tid);
		ELSE
			PERFORM InsertMCRData(mcrdata,tid);
			cnt_inserts := cnt_inserts + 1;
		END IF;
	END LOOP;
	Perform BugsTransferLog('tbl_mcrdata_birmbeetledat', 'I', 
		Format('Inserted %s MCR data', cnt_inserts));
END;
$$;


--
-- TOC entry 1141 (class 1255 OID 16683)
-- Name: importmcrnames(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION importmcrnames() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	mcrname		tmcrname;
	tid		INTEGER;
	tsid		INTEGER;
	taxonomic_system	VARCHAR;
BEGIN
	taxonomic_system = 'BugsCEP taxonomic order';
	tsid = GetTaxonomicSystemIdByName(taxonomic_system);
	FOR mcrname IN (SELECT * FROM tbl_bugs_tmcrnames) LOOP
		tid = GetTaxonId(mcrname.code,tsid);
		IF ExistsTMCRName(mcrname,tid) THEN
			PERFORM IsConsistentMCRName(mcrname,tid);
		ELSE
			PERFORM InsertMCRName(mcrname,tid);
		END IF;
	END LOOP;
END;
$$;


--
-- TOC entry 1142 (class 1255 OID 16684)
-- Name: importmcrsummarydata(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION importmcrsummarydata() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	mcrsummarydata	tmcrsummarydata;
	tid		INTEGER;
	tsid		INTEGER;
	taxonomic_system	VARCHAR;
BEGIN
	taxonomic_system = 'BugsCEP taxonomic order';
	tsid = GetTaxonomicSystemIdByName(taxonomic_system);
	FOR mcrsummarydata IN (SELECT * FROM tbl_bugs_tmcrsummarydata) LOOP
		tid = GetTaxonId(mcrsummarydata.code,tsid);
		IF ExistsTMCRSummaryData(mcrsummarydata,tid) THEN
			PERFORM IsConsistentMCRSummaryData(mcrsummarydata,tid);
		ELSE 
			PERFORM InsertMCRSummaryData(mcrsummarydata,tid);
		END IF;
	END LOOP;
END;
$$;


--
-- TOC entry 1143 (class 1255 OID 16685)
-- Name: importnotes(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION importnotes() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	biorow		tbiology;
	taxrow		ttaxo;
	distrow		tdistrib;
	keyrow		tkey;
	cnt_inserts	integer := 0;
	
BEGIN

	FOR biorow IN (SELECT * FROM tbl_bugs_tbiology) LOOP
		IF ExistsTBiology(biorow) THEN
			--PERFORM IsConsistentTBiology(tbiology);
		ELSE
			PERFORM InsertTBioloby(biorow);
			cnt_inserts = cnt_inserts + 1;
		END IF;
	END LOOP;
	
	Perform BugsTransferLog('tbl_text_biology', 'I', 
		Format('Inserted %s biology notes', cnt_inserts));
	cnt_inserts  := 0;
	
	FOR taxrow IN (SELECT * FROM tbl_bugs_ttaxonotes) LOOP
		IF ExistsTTaxo(taxrow) THEN
			--PERFORM IsConsistentTTaxo(taxrow);
		ELSE
			PERFORM InsertTTaxo(taxrow);
			cnt_inserts = cnt_inserts + 1 ;
		END IF;
	END LOOP;
	
	Perform BugsTransferLog('tbl_taxonomy_notes', 'I', 
		Format('Inserted %s notes', cnt_inserts));
	cnt_inserts := 0;
	
	FOR distrow IN (SELECT * FROM tbl_bugs_tdistrib) LOOP
		IF ExistsTDistrib(distrow) THEN
			--PERFORM IsConsistentTDistrib(distrow);
		ELSE
			PERFORM InsertTDistrib(distrow);
			cnt_inserts := cnt_inserts + 1;
		END IF;
	END LOOP;
	
	Perform BugsTransferLog('tbl_text_distributions', 'I', 
		Format('Inserted %s distribution notes', cnt_inserts));
	cnt_inserts := 0;
	
	FOR keyrow IN (SELECT * FROM tbl_bugs_tkeys) LOOP
		IF ExistsTKey(keyrow) THEN
			--PERFORM IsConsistentTKey(keyrow);
		ELSE
			PERFORM InsertTKey(keyrow);
			cnt_inserts := cnt_inserts + 1;
		END IF;
	END LOOP;
	
	Perform BugsTransferLog('tbl_text_identification_keys', 'I', 
		Format('Inserted %s taxa keys', cnt_inserts));
END;
$$;


--
-- TOC entry 1144 (class 1255 OID 16686)
-- Name: importrdbcode(trdbcode); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION importrdbcode(trdbcode) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	rdbcode		ALIAS FOR $1;
BEGIN
	INSERT INTO tbl_rdb_codes (
		rdb_code_id,
		date_updated,
		rdb_category,
		rdb_definition,
		rdb_system_id 
	) VALUES (
		rdbcode.rdbcode, --nextval('tbl_rdb_codes_rdb_code_id_seq'),
		Now(),
		rdbcode.category,
		rdbcode.rdbdef,
		rdbcode.rdbsyscode
	);
END;
$_$;


--
-- TOC entry 1145 (class 1255 OID 16687)
-- Name: importrdbcodes(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION importrdbcodes() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	rdbcode		trdbcode;
	cnt_inserts	integer := 0;
BEGIN
	FOR rdbcode IN (SELECT * FROM tbl_bugs_trdbcodes) LOOP
		IF ExistsRDBCode(rdbcode) IS FALSE THEN
			PERFORM ImportRDBCode(rdbcode);
			cnt_inserts := cnt_inserts + 1;
		END IF;
	END LOOP;
	
	Perform BugsTransferLog('tbl_rdb_codes', 'I', 
		Format('Inserted %s rdb codes', cnt_inserts));
END;
$$;


--
-- TOC entry 1146 (class 1255 OID 16688)
-- Name: importrdbs(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION importrdbs() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	rdb	trdb;
	tid	INTEGER;
	rdbcid	INTEGER;
	lid	INTEGER;
	rdbcidfound	BOOLEAN:=FALSE;
	tidfound	BOOLEAN:=FALSE;
	lidfound	BOOLEAN:=FALSE;
	cnt_inserts	integer:=0;
BEGIN
	FOR rdb IN (SELECT * FROM tbl_bugs_trdb) LOOP
		IF ExistsRDBCode(rdb.rdbcode) THEN
			SELECT rdb_code_id INTO STRICT rdbcid FROM tbl_rdb_codes WHERE rdb_code_id = rdb.rdbcode;
			rdbcidfound = TRUE;
		END IF;

		IF ExistsTaxonId(rdb.code) THEN
			SELECT GetTaxonIdByCode(rdb.code) INTO STRICT tid;
			tidfound = TRUE;
		END IF;

		-- Functions declared at rdbsystems area
		IF ExistsCountryLocation(rdb.countrycode) THEN
			SELECT GetLocationIdByCountryCode(rdb.countrycode) INTO STRICT lid;
			lidfound = TRUE;
		END IF;
		
		IF ExistsRDB(rdb,tid,rdbcid,lid) IS FALSE THEN
			PERFORM InsertRDB(rdb,tid,rdbcid,lid);
			cnt_inserts := cnt_inserts + 1;
		END IF;
	END LOOP;
	
	Perform BugsTransferLog('tbl_rdb', 'I', 
		Format('Inserted %s rdb', cnt_inserts));
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		IF rdbcidfound IS FALSE THEN
			RAISE 'ImportRDBs(): TODO: bugs_error HANDLING. rdb_code_id not found. trdb = %',rdb;
		ELSIF tidfound IS FALSE THEN
			RAISE 'ImportRDBs(): TODO: bugs_error HANDLING. taxon_id not found. trdb = %',rdb;
		ELSIF lidfound IS FALSE THEN
			RAISE 'ImportRDBs(): TODO: bugs_error HANDLING. location_id not found. trdb = %',rdb;
		ELSE
			RAISE 'ImportRDBs(): Unknown error. Found rdbcid, tid, and lid. Still NO_DATA_FOUND';
		END IF;
	WHEN TOO_MANY_ROWS THEN
		IF rdbcidfound IS FALSE THEN
			RAISE 'ImportRDBs(): TODO: bugs_error HANDLING. rdb_code_id multiples found. trdb = %',rdb;
		ELSIF tidfound IS FALSE THEN
			RAISE 'ImportRDBs(): TODO: bugs_error HANDLING. taxon_id multiples found. trdb = %',rdb;
		ELSIF lidfound IS FALSE THEN
			RAISE 'ImportRDBs(): TODO: bugs_error HANDLING. location_id multiples found. trdb = %',rdb;
		ELSE
			RAISE 'ImportRDBs(): Unknown error. Found rdbcid, tid, and lid. Still NO_DATA_FOUND';
		END IF;
	/*WHEN OTHERS THEN
		RAISE 'ImportRDBs(): Unknown error. Needs debugging, some other exception thrown than NO_DATA_FOUND and TOO_MANY_ROWS
			rdb = %
			rdbcidfound = %
			tidfound = %
			lidfound = %',rdb,rdbcidfound,tidfound,lidfound;
			*/
END;
$$;


--
-- TOC entry 1147 (class 1255 OID 16689)
-- Name: importsiteotherproxies(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION importsiteotherproxies() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	hasPollen 			INTEGER = 0;
	hasPlantMacro 			INTEGER = 0;
	hasDiatoms 			INTEGER = 0;
	hasChironomids 			INTEGER = 0;
	hasSoilChemistry 		INTEGER = 0;
	hasIsotopes 			INTEGER = 0;
	hasAnimalBones 			INTEGER = 0;
	hasArchaeology 			INTEGER = 0;
	hasMolluscs 			INTEGER = 0;
	oprow				tsiteop;
	sid				INTEGER;
BEGIN
	FOR oprow IN (SELECT * FROM tbl_bugs_tsiteotherproxies) LOOP
		IF SiteExists(oprow.sitecode) THEN
			sid = LookupIdByUniqueValue('tbl_bugs_sites','site_id','bugs_sitecode',oprow.sitecode);

			--"External pollen data"
			IF 	oprow.haspollen= '1' 
				AND ExistsSiteOtherRecord(sid,GetRecordTypeIdByName('External pollen data')) IS FALSE 
			THEN
				INSERT INTO tbl_site_other_records (
					site_other_records_id,
					site_id,
					record_type_id,
					date_updated
					)
				VALUES (
					nextval('tbl_site_other_records_site_other_records_id_seq'),
					sid,
					GetRecordTypeIdByName('External pollen data'),--17 hard-coded id from sead_master_4a lookup
					Now()
					);
				hasPollen := hasPollen + 1;
			END IF;
			--"External plant macro data"
			IF 	oprow.hasplantmacro= '1' 
				AND ExistsSiteOtherRecord(sid,GetRecordTypeIdByName('External plant macro data')) IS FALSE 
			THEN
				INSERT INTO tbl_site_other_records (
					site_other_records_id,
					site_id,
					record_type_id,
					date_updated
					)
				VALUES (
					nextval('tbl_site_other_records_site_other_records_id_seq'),
					sid,
					GetRecordTypeIdByName('External plant macro data'),--18 hard-coded id from sead_master_4a lookup
					Now()
					);
				hasPlantMacro := hasPlantMacro + 1;
			END IF;
			--"Diatoms"
			IF 	oprow.hasdiatoms = '1' 
				AND ExistsSiteOtherRecord(sid,GetRecordTypeIdByName('Diatoms')) IS FALSE 
			THEN
				INSERT INTO tbl_site_other_records (
					site_other_records_id,
					site_id,
					record_type_id,
					date_updated
					)
				VALUES (
					nextval('tbl_site_other_records_site_other_records_id_seq'),
					sid,
					GetRecordTypeIdByName('Diatoms'),--5 hard-coded id from sead_master_4a lookup
					Now()
					);
				hasDiatoms := hasDiatoms + 1;
			END IF;
			--"Chironomids"
			IF 	oprow.haschironomids = '1' 
				AND ExistsSiteOtherRecord(sid,GetRecordTypeIdByName('Chironomids')) IS FALSE 
			THEN
				INSERT INTO tbl_site_other_records (
					site_other_records_id,
					site_id,
					record_type_id,
					date_updated
					)
				VALUES (
					nextval('tbl_site_other_records_site_other_records_id_seq'),
					sid,
					GetRecordTypeIdByName('Chironomids'),--7 hard-coded id from sead_master_4a lookup
					Now()
					);
				hasChironomids := hasChironomids + 1;
			END IF;
			--"Soil chemistry/properties"
			IF 	oprow.hassoilchemistry= '1' 
				AND ExistsSiteOtherRecord(sid,GetRecordTypeIdByName('Soil chemistry/properties')) IS FALSE 
			THEN
				INSERT INTO tbl_site_other_records (
					site_other_records_id,
					site_id,
					record_type_id,
					date_updated
					)
				VALUES (
					nextval('tbl_site_other_records_site_other_records_id_seq'),
					sid,
					GetRecordTypeIdByName('Soil chemistry/properties'),--12 hard-coded id from sead_master_4a lookup
					Now()
					);
				hasSoilChemistry := hasSoilChemistry + 1;
			END IF;
			--"Isotopes"
			IF 	oprow.hasisotopes = '1' 
				AND ExistsSiteOtherRecord(sid,GetRecordTypeIdByName('Isotopes')) IS FALSE 
			THEN
				INSERT INTO tbl_site_other_records (
					site_other_records_id,
					site_id,
					record_type_id,
					date_updated
					)
				VALUES (
					nextval('tbl_site_other_records_site_other_records_id_seq'),
					sid,
					GetRecordTypeIdByName('Isotopes'),--13 hard-coded id from sead_master_4a lookup
					Now()
					);
				hasIsotopes := hasIsotopes + 1;
			END IF;
			/*
			--"External plant macro data"
			IF oprow.hasplantmacro= '1' THEN
				INSERT INTO tbl_site_other_records (
					site_other_records_id,
					site_id,
					record_type_id,
					date_updated
					)
				VALUES (
					nextval('tbl_site_other_records_site_other_records_id_seq'),
					( SELECT site_id FROM tbl_bugs_sites
					WHERE oprow."SiteCODE" = bugs_sitecode ),
					GetRecordTypeIdByName('External plant macro data'),--18 hard-coded id from sead_master_4a lookup
					Now()
					);
				hasPlantMacro := hasPlantMacro + 1;
			END IF;
			*/
			--"Animal bones"
			IF 	oprow.hasanimalbones = '1' 
				AND ExistsSiteOtherRecord(sid,GetRecordTypeIdByName('Animal bones')) IS FALSE 
			THEN
				INSERT INTO tbl_site_other_records (
					site_other_records_id,
					site_id,
					record_type_id,
					date_updated
					)
				VALUES (
					nextval('tbl_site_other_records_site_other_records_id_seq'),
					sid,
					GetRecordTypeIdByName('Animal bones'),--14 hard-coded id from sead_master_4a lookup
					Now()
					);
				hasAnimalBones := hasAnimalBones + 1;
			END IF;
			--"Other archaeology"
			IF 	oprow.hasarchaeology = '1' 
				AND ExistsSiteOtherRecord(sid,GetRecordTypeIdByName('Other archaeology')) IS FALSE 
			THEN
				INSERT INTO tbl_site_other_records (
					site_other_records_id,
					site_id,
					record_type_id,
					date_updated
					)
				VALUES (
					nextval('tbl_site_other_records_site_other_records_id_seq'),
					sid,
					GetRecordTypeIdByName('Other archaeology'),--16 hard-coded id from sead_master_4a lookup
					Now()
					);
				hasArchaeology := hasArchaeology + 1;
			END IF;
			--"Molluscs"
			IF 	oprow.hasmolluscs = '1' 
				AND ExistsSiteOtherRecord(sid,GetRecordTypeIdByName('Molluscs')) IS FALSE 
			THEN
				INSERT INTO tbl_site_other_records (
					site_other_records_id,
					site_id,
					record_type_id,
					date_updated
					)
				VALUES (
					nextval('tbl_site_other_records_site_other_records_id_seq'),
					sid,
					GetRecordTypeIdByName('Molluscs'),--4 hard-coded id from sead_master_4a lookup
					Now()
					);
				hasMolluscs := hasMolluscs + 1;
			END IF;
		END IF;
	END LOOP;
END;
$$;


--
-- TOC entry 1148 (class 1255 OID 16690)
-- Name: importspeciesassociations(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION importspeciesassociations() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	spassoc		tspeciesassociation;
	tid		INTEGER;
	assoctid	INTEGER;
	bid		INTEGER;
	taxonomic_system	VARCHAR;
	tsid		INTEGER;
	cnt_inserts	integer := 0;
BEGIN
	-- EXCEPTIONS
	RAISE WARNING 'ImportSpeciesAssociations(): Biblio Exceptions, need handling:
	bugs_reference = Eyre & Luff 1994
	bugs_reference = Bilton 1988b
	THIS NEEDS BETTER HANDLING';
	EXECUTE BugsDataError('tbl_species_association_types','tbl_bugs_tspeciesassociations','biblio_id','"Ref"',
		NULL,
		NULL
		);
	EXECUTE BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),
		'ImportSpeciesAssociations(): Missing biblio records need to be moved to the update area rather than hardcoded. See species associations report');

	---------------

	taxonomic_system = 'BugsCEP taxonomic order';
	tsid = GetTaxonomicSystemIdByName(taxonomic_system); -- similar issues to MCRNames taxon functions
	FOR spassoc IN (SELECT * FROM tbl_bugs_tspeciesassociations) LOOP
		tid = GetTaxonId(spassoc.code,tsid);
		assoctid = GetTaxonId(spassoc.associatedspeciescode,tsid);
		
		IF 	spassoc.bugsref IS NOT NULL 
			AND spassoc.bugsref != 'Eyre & Luff 1994'
			AND spassoc.bugsref != 'Bilton 1988b'
		THEN	
			bid = LookupIdByUniqueValue('tbl_bugs_biblio','biblio_id','bugs_reference',spassoc.bugsref);
		END IF;
		IF tid IS NULL THEN
			RAISE WARNING 'ImportSpeciesAssociations(): Issue with taxon_id
			tspeciesassociation = %
			NOT ADDED!',spassoc;
		ELSIF assoctid IS NULL THEN
			RAISE WARNING 'ImportSpeciesAssociations(): Issue with taxon_id for the associated species
			tspeciesassociation = %
			NOT ADDED!',spassoc;
		ELSIF bid IS NULL THEN
			RAISE WARNING 'ImportSpeciesAssociations(): Need to add the bugs_reference in updates
			tspeciesassociation = %
			NOT ADDED!',spassoc;
		ELSE
			IF ExistsTSpeciesAssoc(spassoc,tid,assoctid,bid) THEN
				PERFORM IsConsistentSpeciesAssoc(spassoc,tid,assoctid,bid);
			ELSE
				PERFORM InsertSpeciesAssoc(spassoc,tid,assoctid,bid);
				cnt_inserts := cnt_inserts + 1;
			END IF;
		END IF;
	END LOOP;
	PERFORM BugsTransferLog('species_association_id','I',
		Format('Inserted %s associations', cnt_inserts));
END;
$$;


--
-- TOC entry 1149 (class 1255 OID 16691)
-- Name: importtaxonomictree(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION importtaxonomictree() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	irow		tindex;
	o_id		INTEGER;
	f_id		INTEGER;
	cnt_inserts	integer := 0;
BEGIN
	SELECT order_id INTO STRICT o_id FROM tbl_taxa_tree_orders
	WHERE order_name = 'ORDER PENDING CLASSIFICATION';

	/*
	--EXCEPTIONS
	CASE 
	WHEN irow.bugsfamily = (FAMILY_WITH_KNOWN_OTHER_ORDER) THEN
		SELECT order_id INTO STRICT o_id FROM tbl_taxa_tree_orders
		WHERE order_name = KNOWN_OTHER_ORDER_NAME;
	ELSE
		SELECT family_id INTO STRICT f_id FROM tbl_taxa_tree_families
		WHERE order_id = o_id
		AND family_name = irow.bugsfamily;
	END CASE
	*/
	
	FOR irow IN (SELECT * FROM tbl_bugs_tindex) LOOP
		IF irow.bugsfamily IS NULL OR irow.bugsgenus IS NULL OR irow.bugscode IS NULL THEN
			RAISE 'ImportTaxonomicTree(): Badly formed tindex (NULLs), fix in the update. tindex = %',irow;
		END IF;
		
		--TODO: Check with Phil, will each family name be unique? Will oid='ORDER PENDING CLASSIFICATION' be ok
		IF ExistsTaxaFamily(irow,o_id) THEN
			--PERFORM IsConsistentTaxaFamilyData();
		ELSE
			PERFORM InsertTaxaFamily(irow,o_id); -- using transfer bugs order

			
			-- Add bugserror log here to signify that the family requires order review
			EXECUTE BugsDataError('tbl_taxa_tree_families','tbl_bugs_tindex','order_id','FAMILY',
			FORMAT('SELECT * FROM tbl_taxa_tree_families AS A INNER JOIN tbl_taxa_tree_orders AS B ON A.order_id = B.order_id WHERE A.family_name = %s AND B.order_name = ORDER PENDING CLASSIFICATION',irow.bugsfamily),
			NULL
			);
			EXECUTE BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),
				'TEMPORARY ORDER taxa_tree_families.order_id. Needs review.');

		END IF;

		f_id = GetFamilyId(irow.bugsfamily,o_id);

		IF ExistsTaxaGenera(irow,f_id) THEN
			--PERFORM IsConsistentTaxaGeneraData(irow,f_id);
		ELSE
			PERFORM InsertTaxaGenera(irow,f_id); 
		END IF;

		IF irow.bugsauthority IS NOT NULL THEN
			IF ExistsTaxaAuthority(irow) THEN
				--PERFORM IsConsistentTaxaAuthorityData(irow);
			ELSE
				PERFORM InsertTaxaAuthority(irow); 
			END IF;
		END IF;

		IF ExistsTaxonomicCode(irow) THEN
			IF ExistsWithSameTaxonData(irow,f_id) THEN -- check the code is both unique and to the same taxon
				--TODO
			ELSIF ExistsAsDuplicateTaxon(irow,f_id) IS FALSE THEN -- check through each taxon with the same code
				PERFORM InsertDuplicateCodeTaxon(irow,f_id);
			END IF;
		ELSIF ExistsTaxon(irow,f_id) IS FALSE THEN -- see if the taxon exists on another code
			PERFORM InsertNewCodeTaxon(irow,f_id); -- add the new taxon
			cnt_inserts = cnt_inserts + 1;
		ELSE
			RAISE WARNING 'Duplicate taxa found for bugs taxa: %', irow;
		END IF;
	END LOOP;
	Perform BugsTransferLog('tbl_taxa_tree_master', 'I', 
		Format('Inserted %s taxa', cnt_inserts));
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RAISE 'Check order exists. No order data found for ORDER PENDING CLASSIFICATION';
END;
$$;


--
-- TOC entry 1150 (class 1255 OID 16692)
-- Name: importtbiblios(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION importtbiblios() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	bibrow		tbiblio;
	cnt_inserts	integer := 0;
BEGIN

	--Perform SmallBiblioUpdates();
	FOR bibrow IN (SELECT * FROM tbl_bugs_tbiblio) LOOP
		IF ExistsTBiblio(bibrow) THEN
			PERFORM IsConsistentTBiblio(bibrow);
		ELSE
			PERFORM InsertTBiblio(bibrow);
			cnt_inserts := cnt_inserts + 1;
		END IF;
	END LOOP;
	
	Perform BugsTransferLog('tbl_biblio', 'I', 
		Format('Inserted %s references', cnt_inserts));
END;
$$;


--
-- TOC entry 1151 (class 1255 OID 16693)
-- Name: importtcalendars(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION importtcalendars() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	dcrow		tdatescalendar;
	cnt_inserts	integer := 0;
BEGIN
	FOR dcrow IN (SELECT * FROM tbl_bugs_tdatescalendar) LOOP

		IF ExistsTCalendar(dcrow) THEN	
			-- TODO  Not fully implemented
			PERFORM IsConsistentRelativeAgeCalendarData(dcrow);
		ELSE
			--RAISE INFO 'NOT FOUND: dcrow = %',dcrow;
			PERFORM InsertTCalendar(dcrow);
			cnt_inserts := cnt_inserts +1 ;
		END IF;
	
		--RAISE INFO 'ImportTCalendars prow = %',dcrow;
	END LOOP;
	Perform BugsTransferLog('tbl_relative_ages', 'I', 
		Format('Inserted %s calendar dates', cnt_inserts));
END;
$$;


--
-- TOC entry 1152 (class 1255 OID 16694)
-- Name: importtcountsheets(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION importtcountsheets() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	csheetrow	tcountsheet;
	sid		INTEGER;
	scontextid	INTEGER;
	datatypeid	INTEGER;
	cnt_inserts	integer := 0;
BEGIN
	FOR csheetrow IN (SELECT * FROM tbl_bugs_tcountsheet) LOOP
		-- check sites exist, raise warning if not, add bugserror
		IF SiteExists(csheetrow.sitecode) THEN
			sid = LookupIdByUniqueValue('tbl_bugs_sites','site_id','bugs_sitecode',csheetrow.sitecode);
			scontextid = GetSamplingContextIDBySheetContext(csheetrow.sheetcontext);
			datatypeid = GetDataTypeIDBySheetType(csheetrow.sheettype);
			-- added 20140414 to handle the unexpected sampling context missing. 
			-- this should probably be handled in the update section, but added so 
			-- that we do not crash all of a sudden.
			if datatypeid = -1 then
				PERFORM BugsDataError('tbl_sites','tbl_bugs_tcountsheet','site_id','CountsheetCODE',
				NULL,
				FORMAT('SELECT * FROM tbl_bugs_tcountsheet WHERE "CountsheetCODE" = %s',csheetrow.countsheetcode)
				);
				EXECUTE BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),
				'NOT ADDED COUNTSHEET No sampling context data. HINT: Add the sampling context and the countsheet addition will work.');
				CONTINUE;
			end if;
			-- this is commented out as datasets and data should be added elsewhere.
			IF ExistsTCountsheet(csheetrow) THEN
				--TODO: PERFORM IsConsistentCountsheetData(csheetrow);
--				IF ExistsDataset(csheetrow.countsheetcode,datatypeid) IS FALSE THEN
--					PERFORM InsertDatasheet(csheetrow.countsheetcode,datatypeid);
--					cnt_inserts = cnt_inserts + 1;
--				END IF;
			ELSE
				PERFORM InsertTCountsheet(csheetrow,sid,scontextid);
--				PERFORM InsertDatasheet(csheetrow.countsheetcode, datatypeid);
				cnt_inserts = cnt_inserts + 1;

				--check datasets are consistent here too
			END IF;
		ELSE
			RAISE WARNING 'ImportTCountsheets(): No site added sitecode = %',csheetrow.sitecode;
			EXECUTE BugsDataError('tbl_sites','tbl_bugs_tcountsheet','site_id','CountsheetCODE',
				NULL,
				FORMAT('SELECT * FROM tbl_bugs_tcountsheet WHERE "CountsheetCODE" = %s',csheetrow.countsheetcode)
				);
			EXECUTE BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),
				'NOT ADDED COUNTSHEET No site data. HINT: Add the site and the countsheet addition will work.');
		END IF;
	END LOOP;
	
	Perform BugsTransferLog('tbl_sample_groups', 'I', 
		Format('Inserted %s groups from countsheets', cnt_inserts));
END;
$$;


--
-- TOC entry 1153 (class 1255 OID 16695)
-- Name: importtdatesgroups(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION importtdatesgroups() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	dprow	tdatesperiod;
	dcrow	tdatescalendar;
	drrow	tdatesradio;
	cnt_inserts	integer :=0;
BEGIN

	FOR dprow IN (SELECT * FROM tbl_bugs_tdatesperiod) LOOP
		IF ExistsTDatesPeriod(dprow) THEN
			--RAISE INFO 'Existing tdatesperiod dprow = %',dprow;
			--PERFORM IsConsistentRelativeDatePeriodData(dprow);
		ELSE
			--RAISE INFO 'New tdatesperiod dprow = %',dprow;
			PERFORM InsertTDatesPeriod(dprow);
			cnt_inserts := cnt_inserts +1 ;
		END IF;
	END LOOP;
	Perform BugsTransferLog('tbl_relative_dates', 'I', 
		Format('Inserted %s dates periods', cnt_inserts));
	cnt_inserts := 0;

	FOR dcrow IN (SELECT * FROM tbl_bugs_tdatescalendar) LOOP
		IF ExistsTDatesCalendar(dcrow) THEN
			--RAISE INFO 'Existing tdatescalendar dcrow = %',dcrow;
			--PERFORM IsConsistentRelativeDateCalendarData(dcrow);
		ELSE
			--RAISE INFO 'New tdatescalendar dcrow = %',dcrow;
			PERFORM InsertTDatesCalendar(dcrow);
			cnt_inserts := cnt_inserts + 1;
		END IF;
	END LOOP;
	Perform BugsTransferLog('tbl_relative_dates', 'I', 
		Format('Inserted %s dates calendar', cnt_inserts));
	cnt_inserts := 0;
	

	FOR drrow IN (SELECT * FROM tbl_bugs_tdatesradio) LOOP
		IF ExistsTDatesRadio(drrow) THEN
			--RAISE INFO 'Existing tdatesradio drrow = %',drrow;
			--PERFORM IsConsistentRelativeDateData(drrow);
		ELSE
			--RAISE INFO 'New tdatesradio drrow = %',drrow;
			PERFORM InsertTDatesRadio(drrow);
			cnt_inserts := cnt_inserts + 1;
		END IF;
	END LOOP;
	Perform BugsTransferLog('tbl_relative_dates', 'I', 
		Format('Inserted %s dates radio', cnt_inserts));
END;
$$;


--
-- TOC entry 1154 (class 1255 OID 16696)
-- Name: importtfossils(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION importtfossils() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	--Note that tfossil is extended to include three integer values, see types
	-- taxon_id, abundance_element_id, analysis_entity_id
	frow		tfossil;
	tid		INTEGER;
	ab_entity_id	INTEGER;
	analysis_ent_id	INTEGER;
	tsys_id		INTEGER;
	psid		INTEGER;
	dsid		INTEGER;
	cnt_dataset_inserts	Integer :=0;
	cnt_ae_inserts	Integer :=0;
	cnt_inserts	integer :=0;
	fossilCnt	Integer :=0;
	rowCnt		Integer :=0;
BEGIN
	tsys_id = LookupIdByUniqueValue('tbl_taxonomic_order_systems','taxonomic_order_system_id',
			'system_name','BugsCEP taxonomic order');
	ab_entity_id = LookupIdByUniqueValue('tbl_abundance_elements','abundance_element_id',
			'element_name','MNI');
			
	Select count(*) Into fossilCnt From tbl_bugs_tfossil;
			
	--TODO: check for duplicates on the taxonomic_code, may need to create the view first
	FOR frow IN (SELECT * FROM tbl_bugs_tfossil) LOOP
		--RAISE INFO 'ImportTFossils(): read next';

		Select 
		  d.dataset_id,
		  ae.analysis_entity_id,
		  ps.physical_sample_id,
		  taxaO.taxon_id
		Into 
		  dsid,
		  analysis_ent_id, 
		  psid, 
		  tid
		From 
		  tbl_bugs_tsample ts
		join 
		  tbl_bugs_tcountsheet cs
		  on cs."CountsheetCODE" = ts."CountsheetCODE"
		left join 
		  tbl_datasets d
		  on d.dataset_name = cs."CountsheetName"
		left join 
		  tbl_bugs_physical_samples ps
		  on ps.bugs_samplecode = ts."SampleCODE"
		left join 
		  tbl_taxonomic_order taxaO
		  on (taxaO.taxonomic_code = frow.code and taxaO.taxonomic_order_system_id = tsys_id)
		left join 
		  tbl_analysis_entities ae
		  on (d.dataset_id = ae.dataset_id and ps.physical_sample_id = ae.physical_sample_id)
		where ts."SampleCODE" = frow.samplecode;
		
		--tid = GetTaxonId(frow.code,tsys_id);
		IF tid is not null THEN
			IF ExistsTFossil(frow) THEN --check to tbl_bugs_abundance_codes
				--PERFORM IsConsistentTFossil(frow);
			ELSIF psid Is Not Null Then
				--psid = GetPhysicalSampleId(frow.samplecode);
				--dsid = GetDatasetId(frow.samplecode); -- samples over datasets
				--analysis_ent_id = GetAnalysisEntity(psid,dsid);
				--analysis_ent_id = GetAnalysisEntityFromSampleCode(frow.samplecode);
				If dsid Is Null Then 
					dsid = CreateDataset(frow);
					If dsid = -1 Then
						Continue;
					End If;
					cnt_dataset_inserts = cnt_dataset_inserts + 1;
				End If;
				If analysis_ent_id Is Null Then
					analysis_ent_id = CreateAnalysisEntity(psid, dsid);
					cnt_ae_inserts = cnt_ae_inserts + 1;
				End If;
				PERFORM InsertTFossil(frow,tid,ab_entity_id,analysis_ent_id);
				cnt_inserts = cnt_inserts + 1;
				--IF analysis_ent_id > -1 THEN
					--RAISE INFO 'ImportTFossils(): analysis_entity_id = % tfossil = %',analysis_ent_id,frow;
					--PERFORM InsertTFossil(frow,tid,ab_entity_id,analysis_ent_id);
					--cnt_inserts = cnt_inserts + 1;
				--END IF;
			ELSE
				RAISE WARNING 'Failed to find sample for tfossil = %', frow;
			END IF;
		ELSE
			RAISE WARNING 'ImportTFossils(): Not adding abundances for tfossil = %',frow;
		END IF;
		rowCnt = rowCnt + 1;
		If rowCnt % (fossilCnt / 100) = 0 Then
		   Raise Info 'inserting fossil abundance data (% / %) @ %', rowCnt, fossilCnt, to_char(clock_timestamp(), 'HH24:MI:SS');
		End If;
		-- If rowCnt > (fossilCnt / 100) * 5 Then
		-- 	Exit;
		-- End If;
	END LOOP;

	Perform BugsTransferLog('tbl_datasets', 'I', 
		Format('Inserted %s datasets', cnt_dataset_inserts));
	Perform BugsTransferLog('tbl_analysis_entities', 'I', 
		Format('Inserted %s analysis entities', cnt_ae_inserts));	
	Perform BugsTransferLog('tbl_abundances', 'I', 
		Format('Inserted %s abundance values', cnt_inserts));
END;
$$;


--
-- TOC entry 1155 (class 1255 OID 16697)
-- Name: importtlabs(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION importtlabs() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	lrow		tlab;
	cnt_inserts	integer := 0;
BEGIN
	FOR lrow IN (SELECT * FROM tbl_bugs_tlab) LOOP
		IF ExistsTLab(lrow) THEN	
			PERFORM IsConsistentDatingLabData(lrow);
		ELSE
			--RAISE INFO 'NOT FOUND: prow = %',lrow; -- TODO: add to bugstransfer_error table
			PERFORM InsertTLab(lrow);
			cnt_inserts := cnt_inserts + 1;
		END IF;
	
		--RAISE INFO 'ImportTLabs(tlab) lrow = %',lrow;
	END LOOP;
	Perform BugsTransferLog('tbl_dating_labs', 'I', 
		Format('Inserted %s labs', cnt_inserts));
END;
$$;


--
-- TOC entry 1156 (class 1255 OID 16698)
-- Name: importtperiodlocations(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION importtperiodlocations() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
  srow  tperiod;
BEGIN
  FOR srow in (SELECT * FROM tbl_bugs_tperiods) LOOP
    IF ExistsTPeriodGeographicalRegion(srow) THEN
      -- do something?
    ELSE
      PERFORM InsertTPeriodGeographicalRegion(srow);
    END IF;
  END LOOP;
END;
$$;


--
-- TOC entry 1157 (class 1255 OID 16699)
-- Name: importtperiods(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION importtperiods() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	prow		tperiod;
	cnt_inserts	integer := 0;
BEGIN
	FOR prow IN (SELECT * FROM tbl_bugs_tperiods) LOOP
	
		IF ExistsTPeriod(prow) THEN			
			PERFORM IsConsistentRelativeAgeData(prow);
		ELSE
			--RAISE INFO 'NOT FOUND: prow = %',prow;
			PERFORM InsertTPeriod(prow);
			cnt_inserts := cnt_inserts + 1;
		END IF;
	
		--RAISE INFO 'ImportTPeriods prow = %',prow;
	END LOOP;
	Perform BugsTransferLog('tbl_relative_ages', 'I', 
		Format('Inserted %s periods', cnt_inserts));
END;
$$;


--
-- TOC entry 1158 (class 1255 OID 16700)
-- Name: importtrdbsystems(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION importtrdbsystems() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	rdbsys		trdbsystem;
	bid		INTEGER;
	lid		INTEGER;
	cnt_inserts 	integer := 0;
BEGIN
	FOR rdbsys IN (SELECT * FROM tbl_bugs_trdbsystems) LOOP
		IF ExistsBiblio(rdbsys.bugsref) AND ExistsCountryLocation(rdbsys.countrycode) THEN
			bid = LookupIdByUniqueValue('tbl_bugs_biblio','biblio_id','bugs_reference',rdbsys.bugsref);
			--RAISE INFO 'bid=%,bugs_ref=%',bid,rdbsys.bugsref;
			lid = GetLocationIdByCountryCode(rdbsys.countrycode);
			--RAISE INFO 'lid = %, countrycode = %',lid,rdbsys.countrycode;
			IF ExistsRDBSystem(rdbsys) IS FALSE THEN

					INSERT INTO tbl_rdb_systems (
						rdb_system_id,
						biblio_id,
						location_id,
						rdb_first_published,
						rdb_system,
						rdb_system_date,
						rdb_version,
						date_updated
					)
					VALUES (
						rdbsys.rdbsyscode,
						bid,
						lid,
						rdbsys.rdbfirstpub,
						rdbsys.rdbsys,
						rdbsys.rdbsysdate,
						rdbsys.rdbversion,
						Now()
					);
					cnt_inserts := cnt_inserts + 1;
			END IF;
		END IF;
	END LOOP;
	
	Perform BugsTransferLog('tbl_rdb_systems', 'I', 
		Format('Inserted %s rdb systems', cnt_inserts));
END;
$$;


--
-- TOC entry 1159 (class 1255 OID 16701)
-- Name: importtsamples(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION importtsamples() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	smplrow		tsample;
	reftype_id	INTEGER;
	sgroup_id	INTEGER;
	rtypefound	BOOLEAN:=FALSE;
	sgroupfound	BOOLEAN:=FALSE;
	cnt_inserts	integer :=0;
	--cnt_ae_inserts	integer :=0;
BEGIN
	FOR smplrow IN (SELECT * FROM tbl_bugs_tsample) LOOP
		IF ExistsTSample(smplrow) THEN
			--PERFORM IsConsistentSampleData(smplrow);
			--IF ExistsAnalysisEntity(smplrow) THEN
				--PERFORM IsConsistentAnalysisEntity(smplrow);
			--ELSE
			--	PERFORM InsertAnalysisEntity(smplrow);
			--	cnt_ae_inserts = cnt_ae_inserts + 1;
			--END IF;
		ELSE
			--RAISE INFO 'Add samplecode = %',smplrow.samplecode;
			reftype_id = LookupIdByUniqueValue('tbl_alt_ref_types','alt_ref_type_id','alt_ref_type','Other alternative sample name');
			rtypefound = TRUE;
			
			IF ExistsTCountsheet(smplrow.countsheetcode) THEN
				sgroup_id = LookupIdByUniqueValue('tbl_bugs_sample_groups','sample_group_id','bugs_countsheetcode',smplrow.countsheetcode);
				sgroupfound = TRUE;
			END IF;
			IF sgroupfound THEN
				PERFORM InsertTSample(smplrow,reftype_id,sgroup_id);
				cnt_inserts = cnt_inserts + 1;
				--PERFROM InsertTSample_AnalysisEntities(smplrow);
			END IF;
		END IF;
	END LOOP;

	RAISE INFO 'Look into this, analysis_entities should only be added when data is added (dating or abundance).';
	Perform BugsTransferLog('tbl_physical_samples', 'I', 
		Format('Inserted %s samples', cnt_inserts));
		
	--Perform BugsTransferLog('tbl_analysis_entities', 'I', 
	--	Format('Inserted %s analysis entities', cnt_ae_inserts));
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		IF rtypefound IS FALSE THEN
			RAISE 'ImportTSamples(): Could not find the alt_ref_type = Other alternative sample name in tbl_alt_ref_types';
		ELSIF sgroupfound IS FALSE THEN
			RAISE WARNING 'ImportTSamples(): No sample group for bugs_countsheetcode = %
			TODO: Error handling, skipping the data related to this countsheet.',smplrow.countsheetcode;
		ELSE
			RAISE WARNING 'ImportTSamples():Another error, tcountsheet = %',smplrow;
		END IF;
END;
$$;


--
-- TOC entry 1160 (class 1255 OID 16702)
-- Name: importtsitelocations(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION importtsitelocations() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	srow	tsite;
BEGIN
	FOR srow IN (SELECT * FROM tbl_bugs_tsite) LOOP
		IF ExistsTSiteCountryLocation(srow) THEN
			-- This will fail without a lookup for each location record with correctly
			-- mapped location_type_id. Consequence is all new region locations added to 
			-- Sead with location_type = 'Unprocessed Bugs Transfer'
			--PERFORM IsConsistentCountryLocationData(srow);
		ELSE
			--RAISE INFO 'Add country location = %',srow.country;
			PERFORM InsertTSiteCountryLocation(srow);
		END IF;
		IF ExistsTSiteRegionLocation(srow) THEN
			-- See message above
			--PERFORM IsConsistentRegionLocationData(srow);
		ELSE
			--RAISE INFO 'Add region location = %',srow.region;
			PERFORM InsertTSiteRegionLocation(srow);
			--RAISE WARNING E'SELECT * FROM tbl_bugstransfer_errors WHERE sead_table = tbl_locations;';
		END IF;
	END LOOP;
END;
$$;


--
-- TOC entry 1161 (class 1255 OID 16703)
-- Name: importtsites(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION importtsites() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	srow	tsite;
	srrow	tsiteref;
	cnt_inserts integer :=0;
BEGIN
	-- add the tsite records
	FOR srow IN (SELECT * FROM tbl_bugs_tsite) LOOP
		IF ExistsTSite(srow) THEN
			PERFORM IsConsistentSiteData(srow);
		ELSE
			--RAISE INFO 'NOT FOUND: srow = %', srow;
			PERFORM InsertTSite(srow);
			cnt_inserts := cnt_inserts +1;
		END IF;
	END LOOP;
	Perform BugsTransferLog('tbl_sites', 'I', 
		Format('Inserted %s sites', cnt_inserts));

	cnt_inserts := 0;
	-- add the tsiteref records
	FOR srrow IN (SELECT * FROM tbl_bugs_tsiteref) LOOP
		IF ExistsTSiteRef(srrow) THEN
			PERFORM IsConsistentSiteReferenceData(srrow);
		ELSE
			--RAISE INFO 'NOT FOUND: srrow = %', srrow;
			PERFORM InsertTSiteRef(srrow);
			cnt_inserts := cnt_inserts +1;
		END IF;
	END LOOP;
	
	Perform BugsTransferLog('tbl_sites', 'I', 
		Format('Inserted %s site references', cnt_inserts));

	-- duplicate checking
	-- see locations report for duplicate checking
END;
$$;


--
-- TOC entry 1162 (class 1255 OID 16704)
-- Name: initialisenewassociatedspeciestaxonomicsystem(character varying, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION initialisenewassociatedspeciestaxonomicsystem(character varying, character varying) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	tscount	INTEGER;
BEGIN
	SELECT COUNT(*) INTO tscount
	FROM 	tbl_taxonomic_order_systems
	WHERE	system_name = $1;

	IF tscount > 1 THEN
		RAISE WARNING E'Duplicate taxonomic_order_system with system_name=%',$1;
		RETURN FALSE;
	END IF;

	IF tscount = 0 THEN
		INSERT INTO tbl_taxonomic_order_systems(
			taxonomic_order_system_id,
			date_updated,
			system_description,
			system_name )
		VALUES (
			nextval('tbl_taxonomic_order_systems_taxonomic_order_system_id_seq'),
			Now(),
			$2,
			$1 );
		PERFORM BugsTransferLog('tbl_taxonomic_order_systems','I',currval('tbl_taxonomic_order_systems_taxonomic_order_system_id_seq'),$1);
	END IF;
	RETURN TRUE;
END;
$_$;


--
-- TOC entry 1163 (class 1255 OID 16705)
-- Name: insertanalysisentity(tsample); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION insertanalysisentity(tsample) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	srow		ALIAS FOR $1;
	sid 		INTEGER;
	did		INTEGER;
	sfound		BOOLEAN:=FALSE;
	dfound		BOOLEAN:=FALSE;
BEGIN
	SELECT physical_sample_id INTO STRICT sid FROM tbl_bugs_physical_samples
	WHERE bugs_samplecode = srow.samplecode;
	sfound = TRUE;

	SELECT dataset_id INTO STRICT did FROM tbl_datasets
	WHERE dataset_name = srow.countsheetcode;
	dfound = TRUE;
	
	--RAISE INFO 'InsertAnaysisEntity(tsample): Adding analysis_entity for tsample = %',srow;
	
	INSERT INTO tbl_analysis_entities(
		analysis_entity_id,
		dataset_id,
		date_updated,
		physical_sample_id )
	VALUES(
		nextval('tbl_analysis_entities_analysis_entity_id_seq'),
		did,
		Now(),
		sid
	);
	--FROM	tbl_datasets
	--WHERE	srow.countsheetcode = dataset_name;

EXCEPTION
	WHEN NO_DATA_FOUND THEN
		IF sfound IS FALSE THEN
			RAISE 'InsertAnaysisEntity(tsample): No physical_sample_id found for tsample = %
			TODO: Error handling', srow;
		ELSIF dfound IS FALSE THEN
			RAISE WARNING 'InsertAnaysisEntity(tsample): No dataset_id found for tsample = %
			TODO: Error handling, no analysis entity added, countsheetcode = %', srow,srow.countsheetcode;
		ELSE
			RAISE 'InsertAnaysisEntity(tsample): Unknown error, no_data_found tsample = %',srow;
		END IF;
	WHEN TOO_MANY_ROWS THEN
		IF sfound IS FALSE THEN
			RAISE 'InsertAnaysisEntity(tsample): More than one physical_sample_id found for tsample = %
			TODO: Error handling', srow;
		ELSIF dfound IS FALSE THEN
			RAISE 'InsertAnaysisEntity(tsample): More than one dataset_id found for tsample = %
			TODO: Error handling', srow;
		ELSE
			RAISE 'InsertAnaysisEntity(tsample): Unknown error, too_many_rows tsample = %',srow;
		END IF;
END;
$_$;


--
-- TOC entry 1164 (class 1255 OID 16706)
-- Name: insertdatasheet(character varying, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION insertdatasheet(character varying, integer) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	cscode		ALIAS FOR $1;
	contextid	ALIAS FOR $2;
BEGIN
	--RAISE INFO 'InsertDatasheet(VARCHAR,INTEGER):
	--data_type_id = %',contextid;
	
	INSERT INTO tbl_datasets(
		dataset_id,
		dataset_name,
		master_set_id,
		method_id,
		data_type_id,
		date_updated
	)
	VALUES (
		nextval('tbl_datasets_dataset_id_seq'),
		cscode,
		LookupIdByUniqueValue('tbl_dataset_masters','master_set_id','master_name','Bugs database'), 
		LookupIdByUniqueValue('tbl_methods','method_id','method_name','Palaeoentomology'), 
		contextid, 
		Now()
		);
END;
$_$;


--
-- TOC entry 1165 (class 1255 OID 16707)
-- Name: insertduplicatecodetaxon(tindex, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION insertduplicatecodetaxon(tindex, integer) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	irow		ALIAS FOR $1;
BEGIN
	--TODO:
	RAISE INFO 'InsertDuplicateCodeTaxon(tindex,INTEGER): NOT ADDED: TODO ADD TAXONOMY DUPLICATES HERE: tindex = %',irow;
END;
$_$;


--
-- TOC entry 1166 (class 1255 OID 16708)
-- Name: insertecocodedefinitions(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION insertecocodedefinitions() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	ecosysid	INTEGER;
	ecogroupid	INTEGER;
	edref		RECORD;
	edcounter	INTEGER;
	EcocodeSystem	VARCHAR;
	EcocodeGroup	VARCHAR;
BEGIN
	EcocodeSystem = 'Bugs Ecocodes';
	EcocodeGroup = 'Bugs';
	edcounter = 0;
	SELECT GetEcocodeSystemIdByName(EcocodeSystem) INTO ecosysid;
	SELECT GetEcocodeGroupIdBySystemId_Label(ecosysid,EcocodeGroup) INTO ecogroupid;
	--RAISE INFO 'EcocodeSystem = % ecosysid = % EcocodeGroup = % ecogroupid = %',EcocodeSystem, ecosysid,EcocodeGroup, ecogroupid;
	
	FOR edref IN (
		SELECT * FROM tbl_bugs_tecodefbugs )
	LOOP
		IF ExistsEcocodeDefinition(
				ecogroupid,
				edref."BugsEcoCODE") IS FALSE THEN
			edcounter = edcounter + 1;
			--RAISE INFO E'% ecocode_group_id = % BugsEcoCODE = % EcoLabel = % Notes = % SortOrder = %',edcounter,ecogroupid
			--	,edref."BugsEcoCODE",edref."EcoLabel",edref."Notes",edref."SortOrder";
			-- do the insert
			INSERT INTO tbl_ecocode_definitions(
				ecocode_definition_id,
				abbreviation,
				date_updated,
				definition,
				ecocode_group_id,
				label,
				notes,
				sort_order
			)
			VALUES(
				nextval('tbl_ecocode_definitions_ecocode_definition_id_seq'),
				edref."BugsEcoCODE", --abbreviation
				Now(), --date_updated
				edref."Notes", --definition
				ecogroupid,
				edref."EcoLabel", --label
				edref."Notes", --notes
				edref."SortOrder" --sort_order
			);
		END IF;
		IF ExistsDuplicateEcocodeDefintion(
				ecogroupid,
				edref."BugsEcoCODE") IS TRUE THEN
			RAISE WARNING E'DEBUG: DUP: TODO:  Perform system stop - - > Until fixed lookup';
		END IF;
	END LOOP;

	EcocodeSystem = 'Koch Ecology Codes';
	EcocodeGroup = 'KochGroup';
	--edcounter = 0;
	SELECT GetEcocodeSystemIdByName(EcocodeSystem) INTO ecosysid;
	SELECT GetEcocodeGroupIdBySystemId_Label(ecosysid,EcocodeGroup) INTO ecogroupid;
	--RAISE INFO 'EcocodeSystem = % ecosysid = % EcocodeGroup = % ecogroupid = %',EcocodeSystem, ecosysid,EcocodeGroup, ecogroupid;
	
	FOR edref IN (
		SELECT * FROM tbl_bugs_tecodefkoch )
	LOOP
		-- ecogroupid,abbreviation,label,definition,sort_order
		IF ExistsEcocodeDefinition(
				ecogroupid,
				edref."BugsKochCode") IS FALSE THEN
			edcounter = edcounter + 1;
		--	RAISE INFO E'% ecocode_group_id = % BugsKochCode = % FullName = % Notes = % SortOrder = %',edcounter,ecogroupid
		--		,edref."BugsKochCode",edref."FullName",edref."Notes",-1;
			-- do the insert
			INSERT INTO tbl_ecocode_definitions(
				ecocode_definition_id,
				abbreviation,
				date_updated,
				definition,
				ecocode_group_id,
				label,
				notes,
				sort_order
			)
			VALUES(
				nextval('tbl_ecocode_definitions_ecocode_definition_id_seq'),
				edref."BugsKochCode", --abbreviation
				Now(), --date_updated
				edref."Notes", --definition
				ecogroupid,
				edref."FullName", --label
				NULL, --notes
				NULL --sort_order
			);
		END IF;
		-- ecogroupid,abbreviation,label,definition,sort_order
		IF ExistsDuplicateEcocodeDefintion(
				ecogroupid,
				edref."BugsKochCode") IS TRUE THEN
			RAISE WARNING E'DEBUG: TODO:  Perform system stop - - > Until fixed lookup';
		END IF;
	END LOOP;
END;
$$;


--
-- TOC entry 1168 (class 1255 OID 16709)
-- Name: insertecocodes(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION insertecocodes() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	TaxonomicSystem	VARCHAR;
	EcocodeGroup	VARCHAR;
	erec		RECORD;
	cnt_inserts	integer := 0;
BEGIN
	TaxonomicSystem =  'BugsCEP taxonomic order';
	EcocodeGroup = 'Bugs';
	FOR erec IN (
		SELECT 
			GetTaxonIdByCode_SystemName("CODE",TaxonomicSystem) AS taxon_id,
			GetEcocodeDefinition("BugsEcoCODE",EcocodeGroup) AS ecocode_def_id
		FROM	tbl_bugs_tecobugs ) 
	LOOP
		IF IsValidEcocodeData(erec.taxon_id,erec.ecocode_def_id) IS TRUE THEN
			IF ExistsEcocode(erec.taxon_id,erec.ecocode_def_id) IS FALSE THEN
				INSERT INTO tbl_ecocodes(
					ecocode_id,
					date_updated,
					ecocode_definition_id,
					taxon_id
				)
				VALUES(
					nextval('tbl_ecocodes_ecocode_id_seq'),
					Now(),
					erec.ecocode_def_id,
					erec.taxon_id
				);
				cnt_inserts := cnt_inserts + 1;
			END IF;
		END IF;
	END LOOP;
	
	Perform BugsTransferLog('tbl_ecocodes', 'I', 
		Format('Inserted %s ecocodes for BugsCEP taxonomic order, group Bugs', cnt_inserts));
	cnt_inserts := 0;
	EcocodeGroup = 'KochGroup';
	FOR erec IN (
		SELECT 
			GetTaxonIdByCode_SystemName("CODE",TaxonomicSystem) AS taxon_id,
			GetEcocodeDefinition("BugsKochCode",EcocodeGroup) AS ecocode_def_id
		FROM	tbl_bugs_tecokoch ) 
	LOOP
		IF IsValidEcocodeData(erec.taxon_id,erec.ecocode_def_id) IS TRUE THEN
			IF ExistsEcocode(erec.taxon_id,erec.ecocode_def_id) IS FALSE THEN
				INSERT INTO tbl_ecocodes(
					ecocode_id,
					date_updated,
					ecocode_definition_id,
					taxon_id
				)
				VALUES(
					nextval('tbl_ecocodes_ecocode_id_seq'),
					Now(),
					erec.ecocode_def_id,
					erec.taxon_id
				);
				cnt_inserts := cnt_inserts + 1;		
			END IF;
		END IF;
	END LOOP;
	Perform BugsTransferLog('tbl_ecocodes', 'I', 
		Format('Inserted %s ecocodes for BugsCEP taxonomic order, group KochGroup', cnt_inserts));
END;
$$;


--
-- TOC entry 1169 (class 1255 OID 16710)
-- Name: insertmcrdata(tmcrdata, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION insertmcrdata(tmcrdata, integer) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	mcrdata		ALIAS FOR $1;
	tid		ALIAS FOR $2;
	mcrdatastring	TEXT;
BEGIN
	mcrdatastring = GetMCRDataString(mcrdata);
	INSERT INTO tbl_mcrdata_birmbeetledat(
		mcrdata_birmbeetledat_id,
		date_updated,
		mcr_data,
		mcr_row,
		taxon_id
	)
	VALUES(
		nextval('tbl_mcrdata_birmbeetledat_mcrdata_birmbeetledat_id_seq'),
		Now(),
		mcrdatastring,
		mcrdata.mcrrow,
		tid
	);
END;
$_$;


--
-- TOC entry 1170 (class 1255 OID 16711)
-- Name: insertmcrname(tmcrname, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION insertmcrname(tmcrname, integer) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	mcrname 	ALIAS FOR $1;
	tid		ALIAS FOR $2;
BEGIN
	INSERT INTO tbl_mcr_names (
		taxon_id,
		comparison_notes,
		date_updated,
		mcr_name_trim,
		mcr_number,
		mcr_species_name 
	)
	VALUES (
		tid,
		mcrname.comparestatus,
		Now(),
		mcrname.mcrnametrim,
		mcrname.mcrnumber,
		mcrname.mcrname
	);
END;
$_$;


--
-- TOC entry 1171 (class 1255 OID 16712)
-- Name: insertmcrsummarydata(tmcrsummarydata, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION insertmcrsummarydata(tmcrsummarydata, integer) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	mcrsummarydata	ALIAS FOR $1;
	tid 		ALIAS FOR $2;
BEGIN
	INSERT INTO tbl_mcr_summary_data(
		mcr_summary_data_id,
		cog_mid_tmax,
		cog_mid_trange,
		date_updated,
		taxon_id,
		tmax_hi,
		tmax_lo,
		tmin_hi,
		tmin_lo,
		trange_hi,
		trange_lo
	)
	VALUES(
		nextval('tbl_mcr_summary_data_mcr_summary_data_id_seq'),
		mcrsummarydata.cogmidtmax,
		mcrsummarydata.cogmidtrange,
		Now(),
		tid,
		mcrsummarydata.tmaxhi,
		mcrsummarydata.tmaxlo,
		mcrsummarydata.tminhi,
		mcrsummarydata.tminlo,
		mcrsummarydata.trangehi,
		mcrsummarydata.trangelo
	);
END;
$_$;


--
-- TOC entry 1172 (class 1255 OID 16713)
-- Name: insertnewcodetaxon(tindex, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION insertnewcodetaxon(tindex, integer) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	irow		ALIAS FOR $1;
	f_id		ALIAS FOR $2;
	a_id		INTEGER;
	a_is_set	BOOLEAN := FALSE;
	g_id		INTEGER;
	g_is_set	BOOLEAN := FALSE;
	t_id		INTEGER;
	tc_id 		INTEGER;
BEGIN
	IF irow.bugsauthority IS NOT NULL THEN
		SELECT author_id INTO STRICT a_id FROM tbl_taxa_tree_authors
		WHERE author_name = irow.bugsauthority;
	END IF;
	a_is_set = TRUE; -- tag to catch author exception

	SELECT genus_id INTO STRICT g_id FROM tbl_taxa_tree_genera
	WHERE family_id = f_id
	AND genus_name = irow.bugsgenus;
	g_is_set = TRUE; -- tag to catch genus exception

	INSERT INTO tbl_taxa_tree_master (
		taxon_id,
		author_id,
		date_updated,
		genus_id,
		species
	)
	VALUES (
		nextval('tbl_taxa_tree_master_taxon_id_seq'),
		a_id,
		Now(),
		g_id,
		irow.bugsspecies
	);
	-- default taxonomic_order_system = "BugsCEP taxonomic order"
	SELECT taxonomic_order_system_id INTO STRICT tc_id FROM tbl_taxonomic_order_systems
	WHERE system_name = 'BugsCEP taxonomic order';
	INSERT INTO tbl_taxonomic_order (
		taxonomic_order_id,
		date_updated,
		taxon_id,
		taxonomic_code,
		taxonomic_order_system_id
	)
	VALUES (
		nextval('tbl_taxonomic_order_taxonomic_order_id_seq'),
		Now(),
		currval('tbl_taxa_tree_master_taxon_id_seq'),
		irow.bugscode,
		tc_id
	);
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		IF a_is_set IS FALSE THEN
			RAISE 'ExistsTaxon(tindex,INTEGER): No author found, tindex = %',irow;
		ELSIF g_is_set IS FALSE THEN
			RAISE 'ExistsTaxon(tindex,INTEGER): No genus found, tindex = %',irow;
		END IF;
	WHEN TOO_MANY_ROWS THEN
		IF a_is_set IS FALSE THEN
			RAISE 'ExistsTaxon(tindex,INTEGER): More than one author found, tindex = %',irow;
		ELSIF g_is_set IS FALSE THEN
			RAISE 'ExistsTaxon(tindex,INTEGER): More than one genus found, tindex = %',irow;
		END IF;
END;
$_$;


--
-- TOC entry 1173 (class 1255 OID 16714)
-- Name: insertrdb(trdb, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION insertrdb(trdb, integer, integer, integer) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	rdb	ALIAS FOR $1;
	tid	ALIAS FOR $2;
	rdbcid	ALIAS FOR $3;
	lid	ALIAS FOR $4;
BEGIN
	INSERT INTO tbl_rdb(
		rdb_id,
		location_id,
		rdb_code_id,
		taxon_id,
		date_updated
	) VALUES (
		nextval('tbl_rdb_rdb_id_seq'),--rdb.rdbcode, --uncertain if this is secure on uniqueness
		lid,
		rdbcid,
		lid,
		Now()
	);
END;
$_$;


--
-- TOC entry 1174 (class 1255 OID 16715)
-- Name: insertrelativeageref(integer, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION insertrelativeageref(integer, character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	rel_age_id	INTEGER;
	result 		INTEGER;
BEGIN
	INSERT INTO tbl_relative_age_refs(
		relative_age_ref_id,
		biblio_id, 
		date_updated,
		relative_age_id )	
	VALUES (
		nextval('tbl_relative_age_refs_relative_age_ref_id_seq'),
		GetIdOnBugsCode('tbl_bugs_biblio','biblio_id','bugs_reference',$2),
		Now(),
		$1 );
	result =  currval('tbl_relative_age_refs_relative_age_ref_id_seq');

	SELECT relative_age_ref_id INTO rel_age_id FROM tbl_relative_age_refs
	WHERE	relative_age_ref = result
	AND 	relative_age_id = $1;

	IF rel_age_id = NULL THEN
		RAISE WARNING 'Could not add relative_age_ref for relative_age_id = %', $1;
		RETURN -1;
	END IF;
	
	RETURN result;
END;
$_$;


--
-- TOC entry 1176 (class 1255 OID 16716)
-- Name: insertseasonalities(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION insertseasonalities() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	seasonrec		RECORD;
	taxonomic_system	VARCHAR;
	ts_id			INTEGER;
	tid			INTEGER;
	sid			INTEGER;
	atid			INTEGER;
	lid			INTEGER;
	cnt_inserts		integer:=0;
BEGIN
	taxonomic_system = 'BugsCEP taxonomic order';
	SELECT GetTaxonomicSystemIdByName(taxonomic_system) INTO ts_id;
	FOR seasonrec IN (
		SELECT * FROM tbl_bugs_tseasonactiveadult
	)
	LOOP
		IF ExistsTaxon(seasonrec."CODE",ts_id) IS FALSE THEN
			RAISE WARNING 'No taxon for code=%',seasonrec."CODE";
		ELSE
			SELECT GetTaxonIdByCode_SystemId(seasonrec."CODE",ts_id) INTO tid;
			SELECT GetActivityTypeIdByType('Adult active') INTO atid;
			SELECT GetSeasonIdByName(seasonrec."HSeason") INTO sid;
			SELECT GetLocationIdByCountryCode2(seasonrec."CountryCode") INTO lid;
			IF ExistsSeasonality(atid,lid,sid,tid) IS FALSE THEN
				INSERT INTO tbl_taxa_seasonality(
					seasonality_id,
					activity_type_id,
					date_updated,
					location_id,
					season_id,
					taxon_id )
				VALUES(
					nextval('tbl_taxa_seasonality_seasonality_id_seq'),
					atid,
					Now(),
					lid,
					sid,
					tid );
				cnt_inserts := cnt_inserts + 1;
			END IF;
		END IF;
	END LOOP;
	Perform BugsTransferLog('tbl_seasonality', 'I', 
		Format('Inserted %s seasonalities', cnt_inserts));
END;
$$;


--
-- TOC entry 1177 (class 1255 OID 16717)
-- Name: insertspeciesassoc(tspeciesassociation, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION insertspeciesassoc(tspeciesassociation, integer, integer, integer) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	spassoc		ALIAS FOR $1;
	tid		ALIAS FOR $2;
	assoctid	ALIAS FOR $3;
	bid 		ALIAS FOR $4;
BEGIN
	IF spassoc.associatedtype IS NULL THEN
		-- this should no longer be correct a null association type is wrong.
--		INSERT INTO tbl_species_associations (
--			species_association_id,
--			associated_taxon_id,
--			biblio_id,
--			date_updated,
--			taxon_id,
--			association_type_id,
--			referencing_type
--		)
--		VALUES (
--			nextval('tbl_species_associations_species_association_id_seq'),
--			assoctid,
--			bid,
--			Now(),
--			tid ,
--			NULL,
--			NULL --referencing_type
--		);
--		PERFORM BugsTransferLog('species_association_id','I',nextval('tbl_species_associations_species_association_id_seq'),'');

	ELSIF ExistsAssociationType(spassoc) THEN
		INSERT INTO tbl_species_associations (
			species_association_id,
			associated_taxon_id,
			biblio_id,
			date_updated,
			taxon_id,
			association_type_id,
			referencing_type
		)
		VALUES (
			nextval('tbl_species_associations_species_association_id_seq'),
			assoctid,
			bid,
			Now(),
			tid ,
			GetAssociationTypeIdByAType(spassoc.associatedtype),
			NULL --referencing_type
			
		);
	ELSE
		RAISE WARNING 'InsertSpeciesAssoc(tspeciesassociation,INTEGER,INTEGER,INTEGER) 
		TODO: bugs_error handling
		NOT ADDED, association type does not exist. tspeciesassociation = %',spassoc;
		EXECUTE BugsDataError('tbl_species_association_types','tbl_bugs_tspeciesassociations','association_type_name','"AssociationType"',
			FORMAT('SELECT * FROM tbl_species_association_types WHERE association_type_name = %s;',spassoc.associatedtype),
			FORMAT('SELECT * FROM tbl_bugs_tspeciesassociation WHERE "AssociationType" = %s',spassoc.associatedtype)
			);
		EXECUTE BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),
			'NO SPECIES ASSOCIATION TYPE bugs_tspeciesassocitions.associatedtype not in sead. Add this type to tbl_species_association_types');

	END IF;
END;
$_$;


--
-- TOC entry 1178 (class 1255 OID 16718)
-- Name: insertspeciesassociationtypeifneeded(character varying, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION insertspeciesassociationtypeifneeded(assoc_type character varying, description text DEFAULT 'ASSOCIATION NEEDS DESCRIPTION'::text) RETURNS boolean
    LANGUAGE plpgsql
    AS $$
BEGIN
	IF ExistsTableOneColumnValue('tbl_species_association_types', 'association_type_name', assoc_type) IS FALSE THEN
		INSERT INTO tbl_species_association_types 
			(association_type_name, association_description)
		VALUES
			(assoc_type, description);
		PERFORM BugsTransferLog('tbl_species_association_types','I',currval('tbl_species_associations_species_association_id_seq'),assoc_type);
		return TRUE;
	END IF;
	return FALSE;
END;
$$;


--
-- TOC entry 1179 (class 1255 OID 16719)
-- Name: inserttaxaauthority(tindex); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION inserttaxaauthority(tindex) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	irow		ALIAS FOR $1;
BEGIN
	INSERT INTO tbl_taxa_tree_authors (
		author_id,
		author_name,
		date_updated
	)
	VALUES (
		nextval('tbl_taxa_tree_authors_author_id_seq'),
		irow.bugsauthority,
		Now()
	);
END;
$_$;


--
-- TOC entry 1180 (class 1255 OID 16720)
-- Name: inserttaxafamily(tindex, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION inserttaxafamily(tindex, integer) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	irow		ALIAS FOR $1;
	o_id		ALIAS FOR $2;
	f_id		INTEGER;
	alt_o_name	VARCHAR;
BEGIN
	SELECT A.family_id,B.order_name INTO f_id,alt_o_name FROM tbl_taxa_tree_families AS A
	INNER JOIN tbl_taxa_tree_orders AS B
	ON A.order_id = B.order_id
	WHERE family_name = irow.bugsfamily;

	IF f_id IS NOT NULL OR alt_o_name IS NOT NULL THEN
		RAISE WARNING 'InsertTaxaFamily(tindex,VARCHAR): There is a family with the same name and different order. 
			family = %, family_id = %,order_name = %',irow.bugsfamily,f_id,alt_o_name;
	END IF;

/*
	SELECT order_id INTO STRICT o_id FROM tbl_taxa_tree_orders
	WHERE order_name = bugs_o_name;
*/
	INSERT INTO tbl_taxa_tree_families (
		family_id,
		date_updated,
		family_name,
		order_id
	)
	VALUES (
		nextval('tbl_taxa_tree_families_family_id_seq'),
		Now(),
		irow.bugsfamily,
		o_id
	);
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RAISE 'InsertTaxaFamily(tindex,VARCHAR): No order found for order_name = %',bugs_o_name;
	WHEN TOO_MANY_ROWS THEN
		RAISE 'InsertTaxaFamily(tindex,VARCHAR): More than one order found for order_name = %',bugs_o_name;
END;
$_$;


--
-- TOC entry 1181 (class 1255 OID 16721)
-- Name: inserttaxagenera(tindex, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION inserttaxagenera(tindex, integer) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	irow		ALIAS FOR $1;
	f_id		ALIAS FOR $2;
BEGIN
	INSERT INTO tbl_taxa_tree_genera (
		genus_id,
		date_updated,
		family_id,
		genus_name
	)
	VALUES (
		nextval('tbl_taxa_tree_genera_genus_id_seq'),
		Now(),
		f_id,
		irow.bugsgenus
	);
END;
$_$;


--
-- TOC entry 1182 (class 1255 OID 16722)
-- Name: inserttbiblio(tbiblio); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION inserttbiblio(tbiblio) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	bibrow		ALIAS FOR $1;
BEGIN
	INSERT INTO tbl_biblio (
		biblio_id, 
		bugs_reference, 
		bugs_author,
		bugs_title,
		notes,
		date_updated )
	VALUES ( 
		nextval('tbl_biblio_biblio_id_seq'),
		bibrow.reference,
		bibrow.author,
		bibrow.title,
		bibrow.notes,
		Now()  
	);
		
	INSERT INTO tbl_bugs_biblio (
		bugs_biblio_id,
		biblio_id,
 		bugs_reference,
		date_updated )
	VALUES (
		nextval('tbl_bugs_biblio_bugs_biblio_id_seq'),
		currval('tbl_biblio_biblio_id_seq'),
 		bibrow.reference,
		Now() 
	);
END;
$_$;


--
-- TOC entry 1183 (class 1255 OID 16723)
-- Name: inserttbioloby(tbiology); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION inserttbioloby(tbiology) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	biorow		ALIAS FOR $1;
	tid		INTEGER;
	bid		INTEGER;
BEGIN
	SELECT biblio_id INTO STRICT bid FROM tbl_bugs_biblio
	WHERE bugs_reference = biorow.ref;
	SELECT taxon_id INTO STRICT tid FROM tbl_taxonomic_order
	WHERE taxonomic_code = biorow.code;
	
	INSERT INTO tbl_text_biology (
		biology_id,
		taxon_id,
		biblio_id,
		biology_text,
		date_updated )
	VALUES (
		nextval('tbl_text_biology_biology_id_seq'),
		tid,
		bid,
		biorow.data,
		Now() );
EXCEPTION
	WHEN OTHERS THEN
		RAISE 'InsertTBioloby(biorow): Error on tbiology = %',biorow;
END;
$_$;


--
-- TOC entry 1185 (class 1255 OID 16724)
-- Name: inserttcalendar(tdatescalendar); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION inserttcalendar(tdatescalendar) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	dcrow		ALIAS FOR $1;
	bcadbp		VARCHAR;
	abbrev 		VARCHAR;
	use_warnings	BOOLEAN := TRUE;
	num1		NUMERIC(20,5);
BEGIN
	-- exceptions: add any spcific exceptions here or fix in the updates area --
	-- eg, (see the update file to see that this is dealt with but could do so here)
	IF dcrow.calendardate IS NULL THEN
		RAISE WARNING 'InsertTCalendar(tdatescalendar): 
		Not adding tcalendar = % (null calendar date)',dcrow;
		--TODO
		RETURN;
	END IF;

	-- default to bcadbp = bp when null
	IF dcrow.bcadbp IS NULL THEN
		bcadbp = 'BP';
	ELSE
		bcadbp = dcrow.bcadbp;
	END IF;
	----------------------------------------------------------------------------

	abbrev = concat('CAL_',dcrow.calendardate,dcrow.bcadbp);
	--RAISE INFO 'age = %',GetCalendarAge(string_to_numeric(dcrow.calendardate)::NUMERIC(20,5),bcadbp,'older');
	num1 = GetCalendarAge(string_to_numeric(dcrow.calendardate)::NUMERIC(20,5),bcadbp,'older');
	INSERT INTO tbl_relative_ages(
		relative_age_id,
		relative_age_type_id,
		relative_age_name,
		description,
		c14_age_older,
		c14_age_younger,
		cal_age_older,
		cal_age_younger,
		notes,
		date_updated,
		location_id,
		"Abbreviation" ) --TODO: change to abbreviation
	VALUES (
		nextval('tbl_relative_ages_relative_age_id_seq'),
		LookupIntegerValue('tbl_relative_age_types','relative_age_type_id','age_type','Calendar date'), -- as relative_age_id
		'CAL_PERIOD_'|| dcrow.calendardate, --as relative_age_name
		'Calendar date', --  as description
		NULL, -- as c14_age_older
		NULL, -- as c14_age_younger
		num1, -- as cal_age_older
		NULL,--  as cal_age_younger
		--TODO
		-- COULD BE ?? GetCalendarAge(string_to_numeric(dcrow.calendardate)::NUMERIC(20,5),dcrow.bcadbp,'older') as cal_age_younger,
		NULL, -- as notes
		Now(), --as date_updated
		NULL, -- as location_id
		abbrev -- as "Abbreviation"
	);
EXCEPTION
	WHEN OTHERS THEN
		RAISE 'InsertTCalendar(tdatescalendar):
		Insert Error % abbrev = % num1 = % dcrow.calendardate = %
		relative_age_type_id = %', dcrow, abbrev, num1, dcrow.calendardate,
		LookupIntegerValue('tbl_relative_age_types','relative_age_type_id','age_type','Calendar date');
END;
$_$;


--
-- TOC entry 1186 (class 1255 OID 16725)
-- Name: inserttcountsheet(tcountsheet, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION inserttcountsheet(tcountsheet, integer, integer) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	csheetrow	ALIAS FOR $1;
	sid		ALIAS FOR $2;
	scontextid	ALIAS FOR $3;
	
BEGIN
	INSERT INTO tbl_sample_groups ( 
		sample_group_id,
		site_id,
		sampling_context_id,
		sample_group_name,
		method_id,
		date_updated 
		)
	VALUES ( 
		nextval('tbl_sample_groups_sample_group_id_seq'),
		sid,
		scontextid,
		csheetrow.countsheetname,
		LookupIdByUniqueValue('tbl_methods','method_id','method_name','Temporary record'), -- 61,  --TODO:  need to make the lookup!!
		Now() 
		);
		
	INSERT INTO tbl_bugs_sample_groups (
		bugs_sample_group_id,
		bugs_countsheetcode,
		sample_group_id,
		date_updated 
		)
	VALUES ( 
		nextval('tbl_bugs_sample_groups_bugs_sample_group_id_seq'),
		csheetrow.countsheetcode,
		currval('tbl_sample_groups_sample_group_id_seq'),
		Now() 
		);
/*EXCEPTION
	WHEN OTHERS THEN
		RAISE  'InsertTCountsheet(tcountsheet,INTEGER,INTEGER): Error on tcountsheet = %, site_id = %, sampling_context_id = %',csheetrow,sid,scontextid;
*/
END;
$_$;


--
-- TOC entry 1187 (class 1255 OID 16726)
-- Name: inserttdatescalendar(tdatescalendar); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION inserttdatescalendar(tdatescalendar) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	dcrow		ALIAS FOR $1;
	abbrev		VARCHAR;
	int_var1	INTEGER;
	int_var2	INTEGER;
	int_var3	INTEGER;
	int_var4	INTEGER;
BEGIN
	-- build the relative_age abbreviation
	abbrev = concat('CAL_',dcrow.calendardate,dcrow.bcadbp);
	
	-- TODO: Add as bugstransfer_error.
	-- check null perioddatecode
	--null periodcode
	-- non-exiting period
	IF dcrow.calendarcode IS NULL THEN
		RAISE USING
			MESSAGE = 'InsertTDatesCalendar(tdatescalendar): 
			NULL PeriodDateCODE found in tbl_bugs_tdatescalendar.',
			HINT = 'Cannot be NULL. Use TDatesGroupingUpdates.sql to fix this.';
	ELSIF dcrow.calendardate IS NULL THEN
	--TODOs Create BugsErrors
	/*
		RAISE USING
			MESSAGE = FORMAT('InsertTDatesPeriod(tdatesperiod): NULL PeriodCODE found in tbl_bugs_tdatesperiod. tdatesperiod = %s',dprow),
			HINT = 'Needs to be fixed in the update area, must have a periodcode';
		*/
		RAISE WARNING 'InsertTDatesCalendar(tdatescalendar): 
		Not adding relative_date entry due to Date is NULL. tdatescalendar= %',dcrow;
		RETURN;
	ELSIF ExistsTableOneColumnValue('tbl_relative_ages','"Abbreviation"',abbrev) IS FALSE THEN
		-- TODO: Add a bugs_error here
		RAISE WARNING 'InsertTDatesCalendar(tdatescalendar): 
		Not adding relative_date entry due to calendar period abbreviation not added to sead. 
		abvreviation = % tdatesperiod = %',abbrev,dcrow;
		RETURN;
	END IF;

	int_var1 = LookupIntegerValue('tbl_relative_ages','relative_age_id','"Abbreviation"',abbrev);
	--RAISE INFO 'int_var1 = %, abbrev = %', int_var1,abbrev;

	-- check if bad lookup
	IF int_var1 IS NULL THEN
	-- TODO: Add as bugstransfer_error.
		RAISE WARNING 'InsertTDatesCalendar(tdatescalendar):
		Relative_age_id not found for tbl_bugs_tdatescalendar = %
		abbrev = %
		Not added to tbl_relative_dates!',dcrow,abbrev;
		RETURN;
	END IF;
	
	-- TODO: Add as bugstransfer_error.
	-- check samplecode is not null
	-- exists as a physical_sample in tbl_bugs_physical_samples
	IF dcrow.samplecode IS NULL THEN
		RAISE USING
			MESSAGE = FORMAT('InsertTDatesCalendar(tdatescalendar):
			No SampleCODE found in tbl_bugs_physical_samples for tdatescalendar.samplecode = %s.',
			dcrow.samplecode),
			HINT = 'Changes to TCalendar are in ??TPeriodUpdates.sql. 
			Changes to TDatesCalendar are in UpdateDatingMethods.sql. 
			Use TDatesGroupingUpdates.sql to fix this.';
	ELSIF ExistsTableOneColumnValue('tbl_bugs_physical_samples','bugs_samplecode',dcrow.samplecode) IS FALSE THEN
		-- TODO: Add a bugs_error here
		RAISE WARNING 'InsertTDatesCalendar(tdatescalendar):
		Not adding relative_date entry due to physical_sample not added to sead. tdatescalendar = %',dcrow;
		RETURN; 
	END IF;
	int_var2 = LookupIntegerValue('tbl_bugs_physical_samples','physical_sample_id','bugs_samplecode',
				dcrow.samplecode); --physical_sample_id lookup on SampleCODE
	-- TODO: Add as bugstransfer_error.
	IF int_var2 IS NULL THEN
	-- TODO: Add as bugstransfer_error.
		RAISE WARNING 'InsertTDatesCalendar(tdatescalendar): 
		physical_sample_id not found for tbl_tdatescalendar.samplecode = %
		Not added to tbl_relative_dates!',dcrow.samplecode;
		RETURN;
	END IF;

	-- TODO: deal with the ' ' in a better way
	-- TODO: Add as bugstransfer_error.??
	IF dcrow.datingmethod IS NOT NULL AND dcrow.datingmethod != ' ' THEN
		int_var3 = LookupIntegerValue('tbl_methods','method_id','method_abbrev_or_alt_name',
				dcrow.datingmethod); --method_id lookup on DatingMethod
				
		IF int_var3 IS NULL THEN
			RAISE WARNING 'InsertTDatesCalendar(tdatescalendar): 
		method_id not found for tbl_tdatescalendar.datingmethod = %
		Not added to tbl_relative_dates!',dcrow.datingmethod;
			RETURN;
		END IF;
	END IF;

	-- TODO: deal with the ' ' in a better way
	-- TODO: Add as bugstransfer_error.??
	IF dcrow.uncertainty IS NOT NULL AND dcrow.uncertainty != ' ' THEN
		int_var4 = LookupIntegerValue('tbl_dating_uncertainty','dating_uncertainty_id','uncertainty',
				dcrow.uncertainty); -- dating_uncertainty_id lookup on Uncertainty
				
		IF int_var4 IS NULL THEN
			RAISE WARNING 'InsertTDatesCalendar(tdatescalendar):
		dating_uncertainty_id not found for tbl_tdatescalendar.uncertainty = %
		Not added to tbl_relative_dates!',dcrow.uncertainty;
			RETURN;
		END IF;
	END IF;

	INSERT INTO tbl_relative_dates (
		relative_date_id,
		relative_age_id,
		physical_sample_id,
		method_id,
		notes,
		date_updated,
		dating_uncertainty_id
	)
	VALUES (
		nextval('tbl_relative_dates_relative_date_id_seq'),
		int_var1,
		int_var2,
		int_var3,
		dcrow.notes,
		Now(),
		int_var4
	);

	INSERT INTO tbl_bugs_dates_calendar (
		bugs_dates_calendar_id,
		relative_date_id,
		date_updated,
		bugs_calendarcode,
		bugs_samplecode
	)
	VALUES (
		nextval('tbl_bugs_dates_calendar_bugs_dates_relative_id_seq'),
		currval('tbl_relative_dates_relative_date_id_seq'),
		Now(),
		dcrow.calendarcode,
		dcrow.samplecode
	);
	
END;
$_$;


--
-- TOC entry 1188 (class 1255 OID 16727)
-- Name: inserttdatesperiod(tdatesperiod); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION inserttdatesperiod(tdatesperiod) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	dprow		ALIAS FOR $1;
	int_var1	INTEGER;
	int_var2	INTEGER;
	int_var3	INTEGER;
	int_var4	INTEGER;
BEGIN
	-- TODO: Add as bugstransfer_error.
	-- check null perioddatecode
	--null periodcode
	-- non-exiting period
	IF dprow.perioddatecode IS NULL THEN
		RAISE USING
			MESSAGE = 'InsertTDatesPeriod(tdatesperiod): 
			NULL PeriodDateCODE found in tbl_bugs_tdatesperiod.',
			HINT = 'Changes to TPeriod are in TPeriodUpdates.sql. Changes to TDatesPeriod are in UpdateDatingMethods.sql. Use TDatesGroupingUpdates.sql to fix this.';
	ELSIF dprow.periodcode IS NULL THEN
	--TODOs Create BugsErrors
	/*
		RAISE USING
			MESSAGE = FORMAT('InsertTDatesPeriod(tdatesperiod): NULL PeriodCODE found in tbl_bugs_tdatesperiod. tdatesperiod = %s',dprow),
			HINT = 'Needs to be fixed in the update area, must have a periodcode';
		*/
		RAISE WARNING 'InsertTDatesPeriod(tdatesperiod): 
		Not adding relative_date entry due to PeriodCODE is NULL. tdatesperiod = %',dprow;
		RETURN;
	ELSIF ExistsTableOneColumnValue('tbl_bugs_periods','bugs_periodcode',dprow.periodcode) IS FALSE THEN
		-- TODO: Add a bugs_error here
		RAISE WARNING 'InsertTDatesPeriod(tdatesperiod): 
		Not adding relative_date entry due to Period not added to sead. tdatesperiod = %',dprow;
		RETURN;
	END IF;
	int_var1 = LookupIntegerValue('tbl_bugs_periods','relative_age_id','bugs_periodcode',
				dprow.periodcode); --relative_age_id lookup on PeriodDateCODE

	-- check if bad lookup
	IF int_var1 IS NULL THEN
	-- TODO: Add as bugstransfer_error.
		RAISE WARNING 'InsertTDatesPeriod(tdatesperiod): 
		Relative_age_id not found for tbl_tdatesperiod.bugs_perioddatecode = %
		Not added to tbl_relative_dates!',dprow.perioddatecode;
		RETURN;
	END IF;

	-- TODO: Add as bugstransfer_error.
	-- check samplecode is not null
	-- exists as a physical_sample in tbl_bugs_physical_samples
	IF dprow.samplecode IS NULL THEN
		RAISE USING
			MESSAGE = FORMAT('InsertTDatesPeriod(tdatesperiod): 
			No SampleCODE found in tbl_bugs_physical_samples for tdatesperiod.samplecode = %s.',dprow.samplecode),
			HINT = 'Changes to TPeriod are in TPeriodUpdates.sql. Changes to TDatesPeriod are in UpdateDatingMethods.sql. Use TDatesGroupingUpdates.sql to fix this.';
	ELSIF ExistsTableOneColumnValue('tbl_bugs_physical_samples','bugs_samplecode',dprow.samplecode) IS FALSE THEN
		-- TODO: Add a bugs_error here
		RAISE WARNING 'InsertTDatesPeriod(tdatesperiod): 
		Not adding relative_date entry due to physical_sample not added to sead. tdatesperiod = %',dprow;
		RETURN; 
	END IF;
	int_var2 = LookupIntegerValue('tbl_bugs_physical_samples','physical_sample_id','bugs_samplecode',
				dprow.samplecode); --physical_sample_id lookup on SampleCODE
	-- TODO: Add as bugstransfer_error.
	IF int_var2 IS NULL THEN
	-- TODO: Add as bugstransfer_error.
		RAISE WARNING 'InsertTDatesPeriod(tdatesperiod): 
		physical_sample_id not found for tbl_tdatesperiod.samplecode = %
		Not added to tbl_relative_dates!',dprow.samplecode;
		RETURN;
	END IF;

	-- TODO: deal with the ' ' in a better way
	-- TODO: Add as bugstransfer_error.??
	IF dprow.datingmethod IS NOT NULL AND dprow.datingmethod != ' ' THEN
		int_var3 = LookupIntegerValue('tbl_methods','method_id','method_abbrev_or_alt_name',
				dprow.datingmethod); --method_id lookup on DatingMethod
				
		IF int_var3 IS NULL THEN
			RAISE WARNING 'InsertTDatesPeriod(tdatesperiod): 
		method_id not found for tbl_tdatesperiod.datingmethod = %
		Not added to tbl_relative_dates!',dprow.datingmethod;
			RETURN;
		END IF;
	END IF;

	-- TODO: deal with the ' ' in a better way
	-- TODO: Add as bugstransfer_error.??
	IF dprow.uncertainty IS NOT NULL AND dprow.uncertainty != ' ' THEN
		int_var4 = LookupIntegerValue('tbl_dating_uncertainty','dating_uncertainty_id','uncertainty',
				dprow.uncertainty); -- dating_uncertainty_id lookup on Uncertainty
				
		IF int_var4 IS NULL THEN
			RAISE WARNING 'InsertTDatesPeriod(tdatesperiod): 
		dating_uncertainty_id not found for tbl_tdatesperiod.uncertainty = %
		Not added to tbl_relative_dates!',dprow.uncertainty;
			RETURN;
		END IF;
	END IF;
	
	INSERT INTO tbl_relative_dates (
		relative_date_id,
		relative_age_id,
		physical_sample_id,
		method_id,
		notes,
		date_updated,
		dating_uncertainty_id
	)
	VALUES (
		nextval('tbl_relative_dates_relative_date_id_seq'),
		int_var1,
		int_var2,
		int_var3,
		dprow.notes,
		Now(),
		int_var4
	);

	INSERT INTO tbl_bugs_dates_period (
		bugs_dates_period_id,
		relative_date_id,
		bugs_perioddatecode,
		date_updated,
		bugs_samplecode
	)
	VALUES (
		nextval('tbl_bugs_dates_period_bugs_dates_period_id_seq'),
		currval('tbl_relative_dates_relative_date_id_seq'),
		dprow.perioddatecode,
		Now(),
		dprow.samplecode
	);
END;
$_$;


--
-- TOC entry 1189 (class 1255 OID 16728)
-- Name: inserttdatesradio(tdatesradio); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION inserttdatesradio(tdatesradio) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	drrow		ALIAS FOR $1;
	int_var1	INTEGER;
	int_var2	INTEGER;
	int_var3	INTEGER;
	int_var4	INTEGER;
	num_var1	NUMERIC(20,5);
	num_var2	NUMERIC(20,5);
	num_var3	NUMERIC(20,5);
	text_var1	VARCHAR;
	text_var2	VARCHAR;
	text_var3	VARCHAR;
	text_var4 	VARCHAR;
	text_var5	VARCHAR;
BEGIN
	num_var1 = string_to_numeric(drrow.ageerrororpluserror)::NUMERIC(20,5);
	num_var2 = string_to_numeric(drrow.ageerrorminus)::NUMERIC(20,5);
	text_var1 = drrow.labnr;
	num_var3 = string_to_numeric(drrow.perioddate)::NUMERIC(20,5); --TODO: badly named in the type creation, change to radiodate
	text_var2 = drrow.notes;
	text_var3 = drrow.datecode;
	text_var4 = drrow.samplecode;
	text_var5 = drrow.materialtype;

	IF drrow.uncertainty IS NULL OR drrow.uncertainty = ' ' THEN
		
	ELSIF ExistsTableOneColumnValue('tbl_dating_uncertainty','uncertainty',drrow.uncertainty) IS FALSE THEN
		RAISE USING
			MESSAGE = FORMAT('InsertTDatesRadio(tdatesradio):
			Uncertainty not found, uncertainty = %s, tdatesradio = %s',drrow.uncertainty,drrow),
			HINT = 'Either clean or add in the TDatingGroupUpdate.';
			
	ELSE
		int_var1 = LookupIntegerValue('tbl_dating_uncertainty','dating_uncertainty_id','uncertainty',drrow.uncertainty);
	END IF;

	IF drrow.datingmethod IS NULL OR drrow.datingmethod = ' ' THEN

	ELSIF ExistsTableOneColumnValue('tbl_methods','method_abbrev_or_alt_name',drrow.datingmethod) IS FALSE THEN
		RAISE USING
			MESSAGE = FORMAT('InsertTDatesRadio(tdatesradio):
			Dating method not found, datingmethod = %s, tdatesradio = %s',drrow.datingmethod,drrow),
			HINT = 'Either clean or add in the TDatingGroupUpdate.';
	ELSE
		int_var2 = LookupIntegerValue('tbl_methods','method_id','method_abbrev_or_alt_name',drrow.datingmethod);
	END IF;

	IF drrow.labid IS NULL OR drrow.labid = ' ' THEN

	ELSIF ExistsTableOneColumnValue('tbl_dating_labs','international_lab_id',drrow.labid) IS FALSE THEN
		RAISE WARNING USING
			MESSAGE = FORMAT('InsertTDatesRadio(tdatesradio): NOT ADDED
			LabID not found, labid = %s, tdatesradio = %s',drrow.labid,drrow),
			HINT = 'Either clean or add in the TDatingGroupUpdate.';
			PERFORM BugsDataError('tbl_geochronology','tbl_bugs_tdatesradio','international_lab_id',drrow.labid,
				FORMAT('SELECT * FROM tbl_dating_labs WHERE international_lab_id = %s',drrow.labid),
				FORMAT('SELECT * FROM tbl_bugs_tdatesradio WHERE "LabID" = %s',drrow.labid)
			);
			PERFORM BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'), 'LabID not found, either add the lab or make the update in UpdateTDatesGroups and then re-run the import.');
		RETURN;
	ELSE
		int_var3 = LookupIntegerValue('tbl_dating_labs','dating_lab_id','international_lab_id',drrow.labid);
	END IF;

	IF drrow.samplecode IS NOT NULL THEN

	ELSIF ExistsTableOneColumnValue('tbl_bugs_samples','bugs_samplecode',drrow.sample_code) IS FALSE THEN
		RAISE USING
			MESSAGE = FORMAT('InsertTDatesRadio(tdatesradio):
			Sample code not found, samplecode = %s, tdatesradio = %s',drrow.samplecode,drrow),
			HINT = 'Either clean or add in the TDatingGroupUpdate.';
	ELSE
		int_var4 = LookupIntegerValue('tbl_bugs_samples','bugs_samplecode','physical_sample_id',drrow.samplecode);
	END IF;

	-- TODO: using data_type_id = 7 to create the datasets, dataset_name is the datecode, method_id is the dating method
	INSERT INTO tbl_datasets (
		dataset_id,
		master_set_id,
		data_type_id,
		method_id,
		biblio_id,
		updated_dataset_id,
		project_id,
		dataset_name,
		date_updated
	)
	VALUES (
		nextval('tbl_datasets_dataset_id_seq'),
		NULL,
		LookupIntegerValue('tbl_data_types','data_type_id','data_type_name','Undefined other'),-- data_type_id based on data_type_name = ''
		int_var2, -- method_id
		NULL,
		NULL,
		NULL,
		text_var3,  --drrow.datecode, --dataset name is based on the date code
		Now()
	);

	-- tbl_analysis_entities
	INSERT INTO tbl_analysis_entities (
		analysis_entity_id,
		physical_sample_id,
		dataset_id,
		date_updated
	)
	VALUES (
		nextval('tbl_analysis_entities_analysis_entity_id_seq'),
		int_var4,
		currval('tbl_datasets_dataset_id_seq'),
		Now()
	);

	-- tbl_geochronology
	INSERT INTO tbl_geochronology (
		geochron_id,
		analysis_entity_id,
		dating_lab_id,
		lab_number,
		age,
		error_older,
		error_younger,
		delta_13c,
		notes,
		date_updated,
		dating_uncertainty_id
	)
	VALUES (
		nextval('tbl_geochronology_geochron_id_seq'),
		currval('tbl_analysis_entities_analysis_entity_id_seq'),
		int_var3, -- dating_lab_id
		text_var1, -- labnr
		num_var3, --drrow.age
		num_var1, -- drrow.ageerrororpluserror, num_var2 = ageerrorminus
		CASE
			WHEN num_var2 IS NULL THEN num_var1
			--WHEN num_var2 = ' ' THEN num_var1
			ELSE num_var2 
		END,
		NULL,
		text_var2, --drrow.notes
		Now(),
		int_var1
	);

	-- tbl_bugs_dates_radio
	INSERT INTO tbl_bugs_dates_radio (
		--bugs_dates_radio_id,
		bugs_datecode,
		date_updated,
		geochron_id,
		bugs_samplecode,
		bugs_materialtype
	)
	VALUES (
		--nextval(''),
		text_var3,-- drrow.datecode,
		Now(),
		currval('tbl_geochronology_geochron_id_seq'),
		text_var4, --drrow.samplecode
		text_var5 -- drrow.materialtype
	);
END;
$_$;


--
-- TOC entry 1167 (class 1255 OID 16729)
-- Name: inserttdistrib(tdistrib); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION inserttdistrib(tdistrib) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	distrow		ALIAS FOR $1;
	tid		INTEGER;
	bid		INTEGER;
BEGIN
	SELECT biblio_id INTO STRICT bid FROM tbl_bugs_biblio
	WHERE bugs_reference = distrow.ref;
	SELECT taxon_id INTO STRICT tid FROM tbl_taxonomic_order
	WHERE taxonomic_code = distrow.code;

	INSERT INTO tbl_text_distribution (
		distribution_id,
		taxon_id,
		biblio_id,
		distribution_text,
		date_updated )
	VALUES (
		nextval('tbl_text_distribution_distribution_id_seq'),
		tid,
		bid,
		distrow.data,
		Now() );
		/*
EXCEPTION
	WHEN OTHERS THEN
		RAISE 'InsertTDistrib(distrow): Error on tdistrib = %',distrow;
		*/
END;
$_$;


--
-- TOC entry 1175 (class 1255 OID 16730)
-- Name: inserttfossil(tfossil, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION inserttfossil(tfossil, integer, integer, integer) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	frow		ALIAS FOR $1;
	tid		ALIAS FOR $2;
	aelement_id	ALIAS FOR $3;
	aentity_id	ALIAS FOR $4;
BEGIN
	INSERT INTO tbl_abundances (
		abundance_id,
		taxon_id,
		abundance,
		abundance_element_id,
		analysis_entity_id,
		date_updated )
	VALUES ( 
		nextval('tbl_abundances_abundance_id_seq'),
		tid,
		frow.abundance,
		aelement_id,
		aentity_id,
		Now() );

	INSERT INTO tbl_bugs_abundance_codes (
		bugs_abundance_code_id,
		bugs_fossilbugscode,
		bugs_samplecode,
		abundance_id,
		date_updated )
	VALUES (
		nextval('tbl_bugs_abundance_codes_bugs_abundance_code_id_seq'),
		frow.fossilbugscode,
		frow.samplecode,
		currval('tbl_abundances_abundance_id_seq'),
		Now() );
END;
$_$;


--
-- TOC entry 1184 (class 1255 OID 16731)
-- Name: inserttkey(tkey); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION inserttkey(tkey) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	keyrow		ALIAS FOR $1;
	tid		INTEGER;
	bid		INTEGER;
BEGIN
	SELECT biblio_id INTO STRICT bid FROM tbl_bugs_biblio
	WHERE bugs_reference = keyrow.ref;
	SELECT taxon_id INTO STRICT tid FROM tbl_taxonomic_order
	WHERE taxonomic_code = keyrow.code;

	INSERT INTO tbl_text_identification_keys (
		key_id,
		taxon_id,
		biblio_id,
		key_text,
		date_updated )
	VALUES (
		nextval('tbl_text_distribution_distribution_id_seq'),
		tid,
		bid,
		keyrow.data,
		Now() );
EXCEPTION
	WHEN OTHERS THEN
		RAISE 'InsertTKey(tkey): Error on tkey = %',keyrow;
END;
$_$;


--
-- TOC entry 1190 (class 1255 OID 16732)
-- Name: inserttlab(tlab); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION inserttlab(tlab) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	lrow		ALIAS FOR $1;
	int_var1	INTEGER;
	int_var2	INTEGER;
BEGIN
	-- exceptions: either skip the bugs_tlab here or delete from the tbl_bugs_tlab in the updates area
	IF lrow.labid = 'Code' THEN
		RAISE WARNING 'InsertTLab(tlab):
		TODO: bugs_error required OR in this case bugs_exception?
		Skipping the dating lab entry with tlab = %',lrow;
		RETURN;
	END IF;
	
	-- get the location_id (Note this is using loacation_type_id for 'Country', exceptions need to be added if needed)
	IF lrow.country IS NOT NULL THEN
		int_var1 = LookupIntegerValue('tbl_location_types','location_type_id','location_type','Country');
		int_var2 = LookupIntegerValue2_IntVar('tbl_locations','location_id','location_type_id','location_name',int_var1,quote_literal(lrow.country));
	END IF;
	INSERT INTO tbl_dating_labs(
		dating_lab_id,
		international_lab_id,
		lab_name,
		country_id,
		date_updated
	)
	VALUES (
		nextval('tbl_dating_labs_dating_lab_id_seq'),
		lrow.labid,
		lrow.labname,
		int_var2,
		Now()
	);
END;
$_$;


--
-- TOC entry 1191 (class 1255 OID 16733)
-- Name: inserttperiod(tperiod); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION inserttperiod(tperiod) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	prow	ALIAS FOR $1;
BEGIN

	-- exceptions: add any specific exceptions here or fix in the updates area --
	-- eg, (see the update file to see that this is dealt with but could do so here)
	IF prow.periodcode = '?' THEN
		RAISE WARNING 'InsertTPeriod(tperiod): 
		Not adding tperiod = %',prow;
		RETURN;
	END IF;

	----------------------------------------------------------------------------
	
	INSERT INTO tbl_relative_ages(
		relative_age_id,
		relative_age_type_id,
		relative_age_name,
		description,
		c14_age_older,
		c14_age_younger,
		cal_age_older,
		cal_age_younger,
		notes,
		date_updated,
		location_id,
		"Abbreviation" ) --TODO: change to abbreviation
	VALUES (
		nextval('tbl_relative_ages_relative_age_id_seq'),
		GetTableIdByOneColumnNameValue('tbl_relative_age_types',
		'relative_age_type_id','age_type',prow.periodtype),
		prow.periodname,
		prow.perioddesc,
		GetPeriodAge(prow.periodbegin,prow.beginbcad,'beginbcad','c14'),
		GetPeriodAge(prow.periodend,prow.endbcad,'endbcad','c14'),
		GetPeriodAge(prow.periodbegin,prow.beginbcad,'beginbcad','cal'),
		GetPeriodAge(prow.periodend,prow.endbcad,'endbcad','cal'),
		NULL,
		Now(),
		GetTableIdByOneColumnNameValue('tbl_locations',
				'location_id','location_name',prow.periodgeog),
		prow.periodcode );

	-- Filter out the null refernces
	IF prow.periodref IS NOT NULL THEN
		INSERT INTO tbl_relative_age_refs(
			relative_age_ref_id,
			biblio_id, 
			date_updated,
			relative_age_id )	
		VALUES (
			nextval('tbl_relative_age_refs_relative_age_ref_id_seq'),
			GetIdOnBugsCode('tbl_bugs_biblio','biblio_id','bugs_reference',prow.periodref),
			Now(),
			currval('tbl_relative_ages_relative_age_id_seq') );
	END IF;
		
	INSERT INTO tbl_bugs_periods (
		bugs_dates_relative_id,
		bugs_periodcode,
		date_updated,
		relative_age_id )
	VALUES (
		nextval('tbl_bugs_periods_bugs_dates_relative_id_seq'),
		prow.periodcode,
		Now(),
		currval('tbl_relative_ages_relative_age_id_seq') );
END;
$_$;


--
-- TOC entry 1192 (class 1255 OID 16734)
-- Name: inserttperiodgeographicalregion(tperiod); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION inserttperiodgeographicalregion(tperiod) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
  period  ALIAS FOR $1;
  loc_t_id  INTEGER;
BEGIN

  -- location_type_id for 'Unprocessed Bugs Transfer'
  --select * INTO STRICT location_type_id
  --FROM LookupIdByUniqueValue('tbl_location_types', 'location_type_id', 'location_type', 'Unprocessed Bugs Transfer');
	SELECT location_type_id INTO STRICT loc_t_id FROM tbl_location_types
	WHERE location_type = 'Unprocessed Bugs Transfer';
	
	INSERT INTO tbl_locations(
		location_id,
		location_name,
		location_type_id,
		default_lat_dd,
		default_long_dd,
		date_updated
	)
	VALUES (
		nextval('tbl_locations_location_id_seq'),
		period.periodgeog,
		loc_t_id,
		NULL,
		NULL,
		Now()
	);
	
	PERFORM BugsDataError('tbl_locations','tbl_bugs_tperiods','location_name','PeriodGeog',
		FORMAT('SELECT * FROM tbl_locations WHERE location_id = %s',currval('tbl_locations_location_id_seq')),
		FORMAT('SELECT * FROM tbl_bugs_tperiods WHERE "PeriodGeog" = %s',period.periodgeog)
		);
	PERFORM BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'), 'Location needs to be altered on location_type. USE:  SELECT * FROM tbl_locations AS A INNER JOIN tbl_location_types AS B ON A.location_type_id = B.location_type_id WHERE B.location_type = Unprocessed Bugs Transfer;');

END;
$_$;


--
-- TOC entry 1193 (class 1255 OID 16735)
-- Name: inserttsample(tsample, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION inserttsample(tsample, integer, integer) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	smplrow		ALIAS FOR $1;
	reftype_id	ALIAS FOR $2;
	sgroup_id	ALIAS FOR $3;
	didtop		INTEGER;
	didbot		INTEGER;
	mid		INTEGER;
BEGIN
	INSERT INTO tbl_physical_samples (
		physical_sample_id,
		alt_ref_type_id,
		date_sampled,
		date_updated,
		sample_group_id,
		sample_name,
		sample_type_id	)
		
	/*	x,
		y,
		depth_top,
		depth_bottom */
		
	VALUES (
		nextval('tbl_physical_samples_physical_sample_id_seq'),
		reftype_id, --added samples with this alt_ref
		NULL, -- No date sampled!!
		Now(),
		sgroup_id,
		smplrow.refnrcontext, -- sample name data in Bugs, RefNrContext
		GetSampleTypeIdByName('Unspecified') ); -- 9, hard-coding from ealier version
		
		/*  Now added adds sample notes
		NEW."X", -- ADDED AS sample note X
		NEW."Y", -- ADDED AS sample note Y
		NEW."ZorDepthTop", -- dimension "Upper boundary depth from unknown reference" ??
		NEW."ZorDepthBot", -- dimension "Lower boundary depth from unknown reference" ??
		*/
	SELECT dimension_id INTO STRICT didtop FROM tbl_dimensions
	WHERE dimension_name = 'Upper boundary depth from unknown reference';

	SELECT dimension_id INTO STRICT didbot FROM tbl_dimensions
	WHERE dimension_name = 'Lower boundary depth from unknown reference';

	SELECT method_id INTO STRICT mid FROM tbl_methods
	WHERE method_abbrev_or_alt_name = 'Depth from datum';

	IF smplrow.zordepthtop IS NOT NULL THEN
		--ZorDepthTop
		INSERT INTO tbl_sample_dimensions(
			sample_dimension_id,
			physical_sample_id,
			dimension_id,
			method_id,
			dimension_value,
			date_updated
		)
		VALUES (
			nextval('tbl_sample_dimensions_sample_dimension_id_seq'),
			currval('tbl_physical_samples_physical_sample_id_seq'),
			didtop,
			mid,
			smplrow.zordepthtop,
			Now()
		);
	ELSE
		--RAISE WARNING 'InsertTSample(tsample,INTEGER,INTEGER): No dimension added because null ZorDeptTop for sample = %',smplrow;
	END IF;

	--ZorDepthBot
	IF smplrow.zordepthbot IS NOT NULL THEN
		INSERT INTO tbl_sample_dimensions(
			sample_dimension_id,
			physical_sample_id,
			dimension_id,
			method_id,
			dimension_value,
			date_updated
		)
		VALUES (
			nextval('tbl_sample_dimensions_sample_dimension_id_seq'),
			currval('tbl_physical_samples_physical_sample_id_seq'),
			didbot,
			mid,
			smplrow.zordepthbot,
			Now()
		);
	ELSE
		--RAISE WARNING 'InsertTSample(tsample,INTEGER,INTEGER): No dimension added because null ZorDeptBot for sample = %',smplrow;
	END IF;
		
	INSERT INTO tbl_bugs_physical_samples (
		bugs_physical_sample_id,
		physical_sample_id,
		bugs_samplecode,
		date_updated  )
	VALUES (
		nextval('tbl_bugs_physical_samples_bugs_physical_sample_id_seq'),
		currval('tbl_physical_samples_physical_sample_id_seq'),
		smplrow.samplecode,
		Now()  );

	--Analysis entries
	--INSERT INTO tbl_analysis_entities (
	--	analysis_entity_id,
	--	dataset_id,
	--	date_updated,
	--	physical_sample_id )
	--SELECT
	--	nextval('tbl_analysis_entities_analysis_entity_id_seq'),
	--	dataset_id,
	--	Now(),
	--	currval('tbl_physical_samples_physical_sample_id_seq') 
	--FROM	tbl_datasets
	--WHERE	smplrow.countsheetcode = dataset_name;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RAISE 'InsertTSample(tsample,INTEGER,INTEGER): NO_DATA_FOUND';
	WHEN TOO_MANY_ROWS THEN
		RAISE 'InsertTSample(tsample,INTEGER,INTEGER): TOO_MANY_ROWS';
END;
$_$;


--
-- TOC entry 1194 (class 1255 OID 16736)
-- Name: inserttsite(tsite); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION inserttsite(tsite) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	srow		ALIAS FOR $1;
	int_var1	INTEGER;
	int_var2	INTEGER;
BEGIN
	-- exceptions: add here or to the update query--
	--
	
	------------------------------------------------

	-- Get the location data
	IF srow.country IS NULL THEN
		RAISE USING
			MESSAGE = FORMAT('InsertTSite(tsite): NULL country for tsite = %s',srow),
			HINT = 'Fix this in the UpdateSitesData area, NULL country is not permitted.';
	END IF;

	-- tbl_bugs_site.Country maps to a location_type = 'Country'
	int_var1 = LookupIntegerValue('tbl_location_types','location_type_id','location_type','Country');

	IF srow.region IS NOT NULL AND srow.region != ' ' THEN
		-- Use this to get the locations added from the Region field in TSite
		int_var2 = BugsRegionLocationLookup(srow.region);
	END IF;

	-- tbl_sites insert
	INSERT INTO tbl_sites (
		site_id,
		altitude,
		date_updated,
		latitude_dd,
		longitude_dd,
		national_site_identifier,
		site_description,						
		site_name,
		site_preservation_status_id 
	)
	VALUES (
		nextval('tbl_sites_site_id_seq'), 
		srow.alt,		
		Now(),
		srow.latdd,
		srow.longdd,
		srow.ngr,
		srow.interp,
		srow.sitename,
		NULL
	);

	-- tbl_bugs_sites
	INSERT INTO tbl_bugs_sites(
		bugs_sites_id,
		bugs_sitecode,
		site_id,
		date_updated 
	)
	VALUES (
		nextval('tbl_bugs_sites_bugs_sites_id_seq'),
		srow.sitecode,
		currval('tbl_sites_site_id_seq'),
		Now() 
	);

	-- tbl_site_locations (int_var1 = country_id)
	INSERT INTO tbl_site_locations (
		site_location_id,
		date_updated,
		location_id,
		site_id 
	)
	VALUES (
		nextval('tbl_site_locations_site_location_id_seq'),
		Now(),
		int_var1,
		currval('tbl_sites_site_id_seq')
	);

	-- tbl_site_locations (int_var2 = region_id)
	IF int_var2 IS NOT NULL THEN
		INSERT INTO tbl_site_locations (
			site_location_id,
			date_updated,
			location_id,
			site_id )
		VALUES (
			nextval('tbl_site_locations_site_location_id_seq'),
			Now(),
			int_var2,
			currval('tbl_sites_site_id_seq') );
	END IF;
	
	RETURN;
END;
$_$;


--
-- TOC entry 1195 (class 1255 OID 16737)
-- Name: inserttsitecountrylocation(tsite); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION inserttsitecountrylocation(tsite) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
-- see InsertTSiteRegionLocation(tsite) for implementation
BEGIN
	--RAISE 'InsertTSiteCountryLocation(tsite): 
	--Needs implementation, look to ImportTSiteLocations at InsertTSiteRegionLocation(tsite)';
END;
$$;


--
-- TOC entry 1196 (class 1255 OID 16738)
-- Name: inserttsiteref(tsiteref); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION inserttsiteref(tsiteref) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	srrow		ALIAS FOR $1;
	s_id		INTEGER;
	b_id		INTEGER;
	i		integer;
	sead_update_query	TEXT;
	bugs_update_query	TEXT;
BEGIN
	-- exceptions: add them here --

	-------------------------------
	IF (srrow.sitecode IS NOT NULL AND srrow.sitecode != ' ') IS FALSE THEN
		RAISE WARNING 'InsertTSiteRef(tsiteref): site_reference not added. Badly formed tsiteref = %',srrow;
	ELSIF (srrow.bugsref IS NOT NULL AND srrow.bugsref != ' ') IS FALSE THEN
		RAISE WARNING 'InsertTSiteRef(tsiteref): site_reference not added. Badly formed tsiteref = %',srrow;
	END IF;
/*
	IF srrow.sitecode = 'SITE000328' THEN
		for i in (SELECT site_id FROM tbl_bugs_sites WHERE bugs_sitecode = srrow.sitecode) Loop
			RAISE INFO 'site_id = %, srrow.sitecode = %',i,srrow.sitecode;
		END LOOP;
	END IF;
*/
	

	IF srrow.bugsref IS NOT NULL AND srrow.sitecode IS NOT NULL THEN
		SELECT site_id INTO STRICT s_id FROM tbl_bugs_sites
		WHERE bugs_sitecode = srrow.sitecode;
		SELECT biblio_id INTO STRICT b_id FROM tbl_bugs_biblio
		WHERE bugs_reference = srrow.bugsref;

		INSERT INTO tbl_site_references (
			site_reference_id,
			site_id,
			biblio_id,
			date_updated
		)
		VALUES (
			nextval('tbl_site_references_site_reference_id_seq'),
			s_id,
			b_id,
			Now()
		);
	END IF;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
	
		RAISE WARNING 'InsertTSiteRef(tsiteref): Check sites and biblios exist. No data found for tsiteref = %',srrow;
		-- add a data_error entry to the tbl_bugstransfer_errors
		sead_update_query = '';
		bugs_update_query = FORMAT('SELECT * FROM tbl_bugs_tsiteref WHERE "SiteCode" = %s;',
					srrow.sitecode);
		PERFORM BugsDataError('tbl_site_references','tbl_bugs_tsiteref','','',sead_update_query,bugs_update_query);
		PERFORM BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),'Either biblio or site is not in sead');
	WHEN TOO_MANY_ROWS THEN
		RAISE 'InsertTSiteRef(tsiteref): Multiple site_id or biblio_id found. Check data and fix to continue. tsiteref = %',srrow;
END;
$_$;


--
-- TOC entry 1197 (class 1255 OID 16739)
-- Name: inserttsiteregionlocation(tsite); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION inserttsiteregionlocation(tsite) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	srow		ALIAS FOR $1;
	lt_id		INTEGER;
BEGIN
	
	-- location_type_id for 'Unprocessed Bugs Transfer'
	SELECT location_type_id INTO STRICT lt_id FROM tbl_location_types
	WHERE location_type = 'Unprocessed Bugs Transfer';

	INSERT INTO tbl_locations(
		location_id,
		location_name,
		location_type_id,
		default_lat_dd,
		default_long_dd,
		date_updated
	)
	VALUES (
		nextval('tbl_locations_location_id_seq'),
		srow.region,
		lt_id,
		NULL,
		NULL,
		Now()
	);

	PERFORM BugsDataError('tbl_locations','tbl_bugs_tsite','location_name','Region',
		FORMAT('SELECT * FROM tbl_locations WHERE location_id = %s',currval('tbl_locations_location_id_seq')),
		FORMAT('SELECT * FROM tbl_bugs_tsite WHERE "Region" = %s',srow.region)
		);
	PERFORM BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'), 'Location needs to be altered on location_type. USE:  SELECT * FROM tbl_locations AS A INNER JOIN tbl_location_types AS B ON A.location_type_id = B.location_type_id WHERE B.location_type = Unprocessed Bugs Transfer;');
END;
$_$;


--
-- TOC entry 1198 (class 1255 OID 16740)
-- Name: insertttaxo(ttaxo); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION insertttaxo(ttaxo) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	taxorow		ALIAS FOR $1;
	tid		INTEGER;
	bid		INTEGER;
BEGIN
	SELECT biblio_id INTO STRICT bid FROM tbl_bugs_biblio
	WHERE bugs_reference = taxorow.ref;
	SELECT taxon_id INTO STRICT tid FROM tbl_taxonomic_order
	WHERE taxonomic_code = taxorow.code;
	
	INSERT INTO tbl_taxonomy_notes (
		taxonomy_notes_id,
		taxon_id,
		biblio_id,
		taxonomy_notes,
		date_updated )
	VALUES (
		nextval('tbl_taxonomy_notes_taxonomy_notes_id_seq'),
		tid,
		bid,
		taxorow.data,
		Now() );
EXCEPTION
	WHEN OTHERS THEN
		RAISE 'InsertTTaxo(taxorow): Error on ttaxo = %',taxorow;
END;
$_$;


--
-- TOC entry 1199 (class 1255 OID 16741)
-- Name: isconsistentdatinglabdata(tlab); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION isconsistentdatinglabdata(tlab) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	lrow			ALIAS FOR $1;
	dlrec			RECORD;
	sead_update_query	TEXT;
	bugs_update_query 	TEXT;
	error_found		BOOLEAN := FALSE;
	text_var1		VARCHAR;
BEGIN
	SELECT * INTO STRICT dlrec FROM tbl_dating_labs
	WHERE	international_lab_id = lrow.labid;
	--AND	lab_name = lrow.labname
	--AND	lrow.country = LookupVarcharValue('tbl_locations','location_id','location_name',country_id);

	-- Check tranlations to this instance of Bugs (only uses the fields international_lab_id,lab_name,country_id
	-- Labname = lab_name
	IF (lrow.labname != dlrec.lab_name) THEN
		-- add a data_error to the tbl_bugstransfer_errors
		sead_update_query = FORMAT('UPDATE tbl_dating_labs SET lab_name = %s WHERE dating_lab_id = %;',
					lrow.labname,dlrec.dating_lab_id);
		bugs_update_query = FORMAT('UPDATE tbl_bugs_tlab SET "Labname" = %s WHERE "LabID" = %s;',
					dlrec.lab_name,lrow.labid);
		PERFORM BugsDataError('tbl_dating_labs','tbl_bugs_tlab','lab_name','Labname',sead_update_query,bugs_update_query);
		error_found = TRUE;
	END IF;
	-- Country = LookupVarcharValue('tbl_locations','location_id','location_name',country_id);
	IF dlrec.country_id IS NULL THEN
		RAISE 'Null country_id for tbl_dating_labs.dating_lab_id = %',dlrec.dating_labe_id;
	END IF;
	text_var1 = LookupVarcharValue('tbl_locations','location_id','location_name',dlrec.country_id);
	IF text_var1 IS NULL THEN
		RAISE 'Null country_name found for country_id = %',dlrec.country_id;
	END IF;
	IF text_var1 != lrow.country THEN
		-- add a data_error to the tbl_bugstransfer_errors
		sead_update_query = FORMAT('UPDATE tbl_dating_labs SET country_id = (LOOKUP ID FOR country_name = %s) WHERE dating_lab_id = %;',
					lrow.country,dlrec.dating_lab_id);
		bugs_update_query = FORMAT('UPDATE tbl_bugs_tlab SET "Country" = %s WHERE "LabID" = %s;',
					text_var1,lrow.labid);
		PERFORM BugsDataError('tbl_dating_labs','tbl_bugs_tlab','country_id','Country',sead_update_query,bugs_update_query);
		error_found = TRUE;
	END IF;

	IF error_found THEN
		RAISE WARNING 'Errors exist: SELECT * FROM tbl_bugstransfer_errors WHERE sead_table = %',quote_literal('tbl_dating_labs');
	END IF;
	RETURN error_found;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		RAISE 'tbl_dating_labs Multiple dating_labs have international_lab_id = %',lrow.labid;
END;
$_$;


--
-- TOC entry 1200 (class 1255 OID 16742)
-- Name: isconsistentmcrdata(tmcrdata, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION isconsistentmcrdata(tmcrdata, integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	mcrdata		ALIAS FOR $1;
	new_tid		ALIAS FOR $2;
	found_tid	INTEGER;
	bugs_data	TEXT;
BEGIN
	bugs_data = GetMCRDataString(mcrdata);
	SELECT taxon_id INTO STRICT found_tid
	FROM tbl_mcrdata_birmbeetledat
	WHERE taxon_id = new_tid
	AND mcr_row = mcrdata.mcrrow
	AND mcr_data = bugs_data;
	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RAISE WARNING 'IsConsistentMCRData(tmcrdata,INTEGER):
		TODO: bugs_error required, mcrdata NOT ADDED.
		TODO: consider revision of taxon_id primary constraint here
		Inconsistent data found for tmcrdata = %, taxon_id = %', mcrdata,new_tid;
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		RAISE WARNING 'IsConsistentMCRName(tmcrname,INTEGER):
		TODO: bugs_error required
		TODO: consider revision of taxon_id primary constraint here
		More than one row found for tmcrname = %, taxon_id = %',mcrname,new_tid;
		RETURN TRUE;
END;
$_$;


--
-- TOC entry 1201 (class 1255 OID 16743)
-- Name: isconsistentmcrname(tmcrname, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION isconsistentmcrname(tmcrname, integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	mcrname 	ALIAS FOR $1;
	new_tid		ALIAS FOR $2;
	found_tid	INTEGER;
BEGIN
	--RAISE INFO 'consistency check for taxon_id = %', new_tid;
	SELECT taxon_id INTO STRICT found_tid
	FROM tbl_mcr_names
	WHERE taxon_id = new_tid
	AND comparison_notes = mcrname.comparestatus
	AND mcr_name_trim = mcrname.mcrnametrim
	AND mcr_number = mcrname.mcrnumber
	AND mcr_species_name = mcrname.mcrname;
	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RAISE WARNING 'IsConsistentMCRName(tmcrname,INTEGER):
		TODO: bugs_error required, mcrname NOT ADDED
		TODO: consider revision of taxon_id primary constraint here
		Inconsistent data found for tmcrname = %, taxon_id = %',mcrname,new_tid;
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		RAISE 'IsConsistentMCRName(tmcrname,INTEGER):
		TODO: bugs_error required
		More than one row found for tmcrname = %, taxon_id = %',mcrname,new_tid;
		RETURN TRUE;
END;
$_$;


--
-- TOC entry 1202 (class 1255 OID 16744)
-- Name: isconsistentmcrsummarydata(tmcrsummarydata, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION isconsistentmcrsummarydata(tmcrsummarydata, integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	mcrsummarydata	ALIAS FOR $1;
	new_tid		ALIAS FOR $2;
	found_tid	INTEGER;
BEGIN
	--RAISE INFO 'consistency check for taxon_id = %',new_tid;
	SELECT taxon_id INTO STRICT found_tid
	FROM tbl_mcr_summary_data
	WHERE taxon_id = new_tid
	AND cog_mid_tmax = mcrsummarydata.cogmidtmax
	AND cog_mid_trange = mcrsummarydata.cogmidtrange
	AND tmax_hi = mcrsummarydata.tmaxhi
	AND tmax_lo = mcrsummarydata.tmaxlo
	AND tmin_hi = mcrsummarydata.tminhi
	AND tmin_lo = mcrsummarydata.tminlo
	AND trange_hi = mcrsummarydata.trangehi
	AND trange_lo = mcrsummarydata.trangelo;
	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RAISE WARNING 'IsConsistentMCRSummaryData(tmcrsummarydata,INTEGER):
		TODO: bugs_error required, mcrsummarydata NOT ADDED
		TODO: consider revision of taxon_id primary constraint here
		Inconsistent data found for tmcrsummarydata = %, taxon_id = %',mcrsummarydata,new_tid;
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		RAISE WARNING 'IsConsistentMCRSummaryData(tmcrsummarydata,INTEGER):
		TODO: bugs_error required
		More than one row found for tmcrsummarydata = %, taxon_id = %',mcrsummarydata,new_tid;
		RETURN TRUE;
END;
$_$;


--
-- TOC entry 1204 (class 1255 OID 16745)
-- Name: isconsistentrelativeagecalendardata(tdatescalendar); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION isconsistentrelativeagecalendardata(tdatescalendar) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	dcrow		ALIAS FOR $1;
	rarec		RECORD;
	abbrev		VARCHAR;
	bcadbp		VARCHAR;
BEGIN
	-- TODO: check this! Default to BP if null.
	IF dcrow.bcadbp IS NULL THEN
		bcadbp = 'BP';
	ELSE
		bcadbp = dcrow.bcadbp;
	END IF;

	abbrev = concat('CAL_',dcrow.calendardate,dcrow.bcadbp);
	
	SELECT * INTO STRICT rarec FROM tbl_relative_ages
	WHERE "Abbreviation" = abbrev;

	--RAISE INFO 'cal_age_older = %, from_formula: %',rarec.cal_age_older,GetCalendarAge(string_to_numeric(dcrow.calendardate)::NUMERIC(20,5),
	--					bcadbp,'older');
	
	-- Just check the date is correct
	IF rarec.cal_age_older IS NULL THEN
		RAISE 'IsConsistentRelativeAgeCalendarData(tdatescalendar): NULL
			Needs to be implemented for a bugstransfer_error, insconsistent data. 
			tdatescalendar = %',dcrow;
	END IF;
	
--	RAISE INFO 'cal_age_older = %, formula = %',rarec.cal_age_older,
--			GetCalendarAge(string_to_numeric(dcrow.calendardate)::NUMERIC(20,5),bcadbp,'older');
			
	IF rarec.cal_age_older != GetCalendarAge(string_to_numeric(dcrow.calendardate)::NUMERIC(20,5),
						bcadbp,'older') THEN
		-- bugstransfer_error
		RAISE 'IsConsistentRelativeAgeCalendarData(tdatescalendar): date is incorrect
		Needs to be implemented for a bugstransfer_error, insconsistent data. 
		tdatescalendar = %',dcrow;
	END IF;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		-- bugstransfer_error
		RAISE 'IsConsistentRelativeAgeCalendarData(tdatescalendar): row not found
		Needs to be implemented for a bugstransfer_error, insconsistent data. tdatescalendar = %',dcrow;
	WHEN TOO_MANY_ROWS THEN
		-- bugstransfer_error
		RAISE 'IsConsistentRelativeAgeCalendarData(tdatescalendar): too many rows
		Needs to be implemented for a bugstransfer_error, insconsistent data. tdatescalendar = %',dcrow;
END;
$_$;


--
-- TOC entry 1205 (class 1255 OID 16746)
-- Name: isconsistentrelativeagedata(tperiod); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION isconsistentrelativeagedata(tperiod) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	prow			ALIAS FOR $1;
	relagerow		relative_age;
	age_type		VARCHAR;
	sead_update_query	TEXT;
	bugs_update_query 	TEXT;
	error_found		BOOLEAN := FALSE;
	text_var1		VARCHAR;
	text_var2		VARCHAR;
	text_var3		VARCHAR;
	int_var1		INTEGER;
	int_var2		INTEGER;
	int_var3		INTEGER;
	int_var4		INTEGER;	
	numeric_var1		NUMERIC(20,5);
	numeric_var2		NUMERIC(20,5);
	numeric_var3		NUMERIC(20,5);
	numeric_var4		NUMERIC(20,5);
BEGIN
	SELECT A.* INTO STRICT relagerow FROM tbl_relative_ages AS A
	INNER JOIN tbl_bugs_periods AS B
	ON A.relative_age_id = B.relative_age_id
	WHERE B.bugs_periodcode = $1.periodcode;

	-- Check translations to this instance of Bugs
	-- TODO: THese tests must be made on '=' to capture the NULL cases
	-- eg, IF var1 = var2 THEN .. always goes to else just like '!=' if either or both is null.
	-- PeriodName = relative_age_name
	IF (prow.periodname != relagerow.relative_age_name) THEN
		-- add a data_error entry to the tbl_bugstransfer_errors
		sead_update_query = FORMAT('UPDATE tbl_relative_ages SET relative_age_name = %s WHERE relative_age_id = %;',
					prow.periodname,relagerow.relative_age_id);
		bugs_update_query = FORMAT('UPDATE tbl_bugs_tperiod SET "PeriodName" = %s WHERE "PeriodCODE" = %s;',
					relagerow.relative_age_name,prow.periodcode);
		PERFORM BugsDataError('tbl_relative_ages','tbl_bugs_tperiod','PeriodName','relative_age_name',sead_update_query,bugs_update_query);
		error_found = TRUE;
	END IF;
	
	-- PeriodType = age_type (on relative_age_type_id)
	IF relagerow.relative_age_type_id IS NULL THEN
		RAISE 'Null relative_age_type_id for PeriodCODE = %',prow.periodcode;
	END IF;
	age_type = LookupVarcharValue('tbl_relative_age_types','relative_age_type_id','age_type',relagerow.relative_age_type_id);
	IF age_type IS NULL THEN
		sead_update_query = FORMAT('SELECT relative_age_id,relative_age_type_id FROM tbl_relative_ages WHERE relative_age_id = %s;',
					relagerow.relative_age_id);
		bugs_update_query = FORMAT('SELECT * FROM tbl_bugs_tperiod WHERE "PeriodType" = %s AND "PeriodCODE" = %s;',
					prow.periodtype,prow.periodcode);
		PERFORM BugsDataError('tbl_relative_age_types','tbl_bugs_tperiod','PeriodType',sead_update_query,bugs_update_query);
		error_found = TRUE;
	END IF;
	IF age_type != prow.periodtype THEN
		sead_update_query = FORMAT('UPDATE tbl_relative_ages SET relative_age_type_id = (INSERT age_type FOR %s HERE) WHERE relative_age_type = %s',
					prow.periodtype,relagerow.relative_age_id);
		bugs_update_query = FORMAT('UPDATE tbl_bugs_tperiod SET "PeriodType" = %s WHERE "PeriodCODE" = %s;',
					age_type,prow.periodcode);
		PERFORM BugsDataError('tbl_relative_ages','tbl_bugs_tperiod','PeriodName','relative_age_name',sead_update_query,bugs_update_query);
		error_found = TRUE;

	END IF;
	
	-- PeriodDesc = description
	IF relagerow.description != prow.perioddesc THEN
		sead_update_query = FORMAT('UPDATE tbl_relative_ages SET description = %s WHERE relative_age_id = %',
					prow.perioddesc,relagerow.relative_age_id);
		bugs_update_query = FORMAT('UPDATE tbl_bugs_tperiod SET "PeriodDesc" = %s WHERE "PeriodCODE" = %s',
					relagerow.description,prow.periodcode);
		PERFORM BugsDataError('tbl_relative_ages','tbl_bugs_tperiod','PeriodName','relative_age_name',sead_update_query,bugs_update_query);
		error_found = TRUE;
	END IF;
	-- PeriodRef = biblio_id (on bugs_reference)
	-- biblio_id's
	IF prow.periodref IS NOT NULL THEN
		int_var1 = LookupIntegerValue('tbl_bugs_biblio','biblio_id','bugs_reference',prow.periodref);
		IF int_var1 IS NULL THEN
			RAISE INFO 'No biblio_id for PeriodRef = %',prow.periodref;
		END IF;
		int_var2 = LookupIntegerValue1_Int('tbl_relative_age_refs','biblio_id','relative_age_id',relagerow.relative_age_id);
		IF int_var1 != int_var2 THEN
			sead_update_query = FORMAT('SELECT * FROM tbl_relative_age_refs WHERE relative_age_id = %;',
						relagerow.relative_age_id);
			bugs_update_query = FORMAT('SELECT * FROM tbl_bugs_tperiod WHERE "PeriodCODE" = %s',
						prow.periodcode);
			PERFORM BugsDataError('tbl_relative_age_refs','tbl_bugs_tperiod','biblio_id','PeriodRef',
				sead_update_query,bugs_update_query);
			error_found = TRUE;
		END IF;
	END IF;

	-- PeriodGeog = location_id (on location_type = 'Country' and location_name)
	--Exceptions: 'Eastern Mediterranean','World','New World','Europe'
	IF 	prow.periodgeog = 'Eastern Mediterranean' 
		OR prow.periodgeog = 'World'
		OR prow.periodgeog = 'New World'
	THEN
		int_var3 = LookupIntegerValue('tbl_location_types','location_type_id','location_type','Aggregate/non-admin geographical region');
	ELSIF	prow.periodgeog = 'Europe' THEN
		int_var3 = LookupIntegerValue('tbl_location_types','location_type_id','location_type','Continent');
	ELSIF prow.periodgeog = 'Unspecified' THEN -- added 20140404 to handle the newly fixed unspecified geographical region
		int_var3 = LookupIntegerValue('tbl_location_types','location_type_id','location_type','Geographical area');
	ELSE
		int_var3 = LookupIntegerValue('tbl_location_types','location_type_id','location_type','Country');
	END IF;
	
	
	IF prow.periodgeog IS NOT NULL THEN
		--RAISE INFO 'getting location id for % and type_id = %', prow.periodgeog, int_var3;
		int_var4 := LookupIntegerValue2_IntVarCheck('tbl_locations','location_id','location_type_id','location_name',int_var3,quote_literal(prow.periodgeog),FALSE);
		IF int_var4 = -1 THEN
			RAISE WARNING 'Using Unprocessed Bugs Transfer as a backup location type for getting the target location for location %',prow.periodgeog;
			int_var3 := LookupIntegerValue('tbl_location_types','location_type_id','location_type','Unprocessed Bugs Transfer');
			int_var4 := LookupIntegerValue2_IntVar('tbl_locations','location_id','location_type_id','location_name',int_var3,quote_literal(prow.periodgeog));
		END IF;
		--RAISE INFO 'using % for location id', int_var4;
		IF int_var4 IS NULL THEN
			RAISE 'No location_id found for country = %',prow.periodgeog;
		END IF;
		IF int_var4 != relagerow.location_id THEN
			sead_update_query = FORMAT('UPDATE tbl_relative_ages SET location_id = %s;',
						int_var4);
			bugs_update_query = FORMAT('UPDATE tbl_bugs_tperiods SET "PeriodGeog" = (GET location_name FOR location_id =%s)',
						relagerow.location_id);
			PERFORM BugsDataError('tbl_relative_age_refs','tbl_bugs_tperiod','biblio_id','PeriodRef',
				sead_update_query,bugs_update_query);
			error_found = TRUE;			
		END IF;
	END IF;

	-- c14_age_older
	IF relagerow.c14_age_older IS NOT NULL AND prow.beginbcad IS NOT NULL THEN
		numeric_var1 = GetPeriodAge(prow.periodbegin,prow.beginbcad,'beginbcad','c14');
		IF relagerow.c14_age_older != numeric_var1 THEN
			sead_update_query = FORMAT('SELECT * FROM tbl_relative_ages WHERE relative_age_id = %s;',
						relagerow.relative_age_id);
			bugs_update_query = FORMAT('SELECT * FROM tbl_bugs_tperiods WHERE "PeriodCODE" = %s',
						quote_literal(prow.periodcode));
			PERFORM BugsDataError('tbl_relative_ages','tbl_bugs_tperiods','Begin','c14_age_older',
				sead_update_query,bugs_update_query);
			error_found = TRUE;
		END IF;
	END IF;

	-- c14_age_younger
	IF relagerow.c14_age_younger IS NOT NULL AND prow.endbcad IS NOT NULL THEN
		numeric_var2 = GetPeriodAge(prow.periodend,prow.endbcad,'endbcad','c14');
		IF relagerow.c14_age_younger != numeric_var2 THEN
			sead_update_query = FORMAT('SELECT * FROM tbl_relative_ages WHERE relative_age_id = %s;',
						relagerow.relative_age_id);
			bugs_update_query = FORMAT('SELECT * FROM tbl_bugs_tperiods WHERE "PeriodCODE" = %s',
						quote_literal(prow.periodcode));
			PERFORM BugsDataError('tbl_relative_ages','tbl_bugs_tperiods','End','c14_age_younger',
				sead_update_query,bugs_update_query);
			error_found = TRUE;
		END IF;
	END IF;
	
	-- cal_age_older
	IF relagerow.cal_age_older IS NOT NULL AND prow.beginbcad IS NOT NULL THEN
		numeric_var3 = GetPeriodAge(prow.periodbegin,prow.beginbcad,'beginbcad','cal');
		IF relagerow.cal_age_older != numeric_var3 THEN
			RAISE INFO 'cal_age_older = %, begin= %, beginbcad = % value = %',relagerow.cal_age_older,prow.periodbegin,prow.beginbcad,numeric_var3;
			sead_update_query = FORMAT('SELECT * FROM tbl_relative_ages WHERE relative_age_id = %s;',
						relagerow.relative_age_id);
			bugs_update_query = FORMAT('SELECT * FROM tbl_bugs_tperiod WHERE "PeriodCODE" = %s',
						quote_literal(prow.periodcode));
			PERFORM BugsDataError('tbl_relative_ages','tbl_bugs_tperiods','Begin','cal_age_older',
				sead_update_query,bugs_update_query);
			error_found = TRUE;
		END IF;
	END IF;
	
	-- cal_age_younger
	IF relagerow.cal_age_younger IS NOT NULL AND prow.endbcad IS NOT NULL THEN
		numeric_var4 = GetPeriodAge(prow.periodend,prow.endbcad,'endbcad','cal');
		IF relagerow.cal_age_younger != numeric_var2 THEN
			sead_update_query = FORMAT('SELECT * FROM tbl_relative_ages WHERE relative_age_id = %;',
						relagerow.relative_age_id);
			bugs_update_query = FORMAT('SELECT * FROM tbl_bugs_tperiod WHERE "PeriodCODE" = %s',
						quote_literal(prow.periodcode));
			PERFORM BugsDataError('tbl_relative_ages','tbl_bugs_tperiod','End','cal_age_younger',
				sead_update_query,bugs_update_query);
			error_found = TRUE;
		END IF;
	END IF;
	
	-- YearsType :: TODO: see bugzilla for where this data check appears (TDatesPeriod)

	IF error_found THEN
		RAISE WARNING 'Errors exist: SELECT * FROM tbl_bugstransfer_errors WHERE sead_table = %',quote_literal('tbl_relative_ages');
	END IF;
	RETURN error_found;
END;
$_$;


--
-- TOC entry 1206 (class 1255 OID 16748)
-- Name: isconsistentsitedata(tsite); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION isconsistentsitedata(tsite) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	tsrow			ALIAS FOR $1;
	srec			RECORD;
	sead_update_query	TEXT;
	bugs_update_query	TEXT;
	error_found		BOOLEAN :=  FALSE;
	sitecode		VARCHAR;
BEGIN
	--sitecode = tsrow.sitecode;
	SELECT A.* INTO STRICT srec FROM tbl_sites AS A
	INNER JOIN tbl_bugs_sites AS B
	ON A.site_id = B.site_id
	WHERE B.bugs_sitecode = tsrow.sitecode;

	-- Check tranlsations to this instance of Bugs
	-- Alt = altitude
	IF (tsrow.alt IS NULL AND srec.altitude IS NULL) IS FALSE THEN
		IF tsrow.alt = srec.altitude THEN
			 -- case where both are exactly equal
		ELSE
			-- Conflict BugsError
			RAISE WARNING 'IsConsistentSiteData(tsite): tsite.alt = %, site.altitude = %',
				tsrow.alt,srec.altitude;
			-- add a data_error entry to the tbl_bugstransfer_errors
			sead_update_query = FORMAT('UPDATE tbl_sites SET altitude = %s WHERE site_id = %s;',
						tsrow.alt,srec.site_id);
			bugs_update_query = FORMAT('UPDATE tbl_bugs_tsite SET "Alt" = %s WHERE "SiteCODE"= %s;',
						srec.altitude,quote_literal(tsrow.sitecode));
			PERFORM BugsDataError('tbl_sites','tbl_bugs_tsite','Alt','altitude',sead_update_query,bugs_update_query);
			PERFORM BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),'Discrepency on the altitude data between sead and bugs');
			error_found = TRUE;
		END IF;
	END IF;
	
	-- LatDD = latitude_dd
	IF (tsrow.latdd IS NULL AND srec.latitude_dd IS NULL) IS FALSE THEN
		IF tsrow.latdd = srec.latitude_dd THEN
			 -- case where both are exactly equal
		ELSE
			-- Conflict BugsError
			RAISE WARNING 'IsConsistentSiteData(tsite): tsite.latdd = %, site.latitude_dd = %',
				tsrow.latdd,srec.latitude_dd;
			-- add a data_error entry to the tbl_bugstransfer_errors
			sead_update_query = FORMAT('UPDATE tbl_sites SET latitude_dd = %s WHERE site_id = %s;',
						tsrow.latdd,srec.site_id);
			bugs_update_query = FORMAT('UPDATE tbl_bugs_tsite SET "LatDD" = %s WHERE "SiteCODE"= %s;',
						srec.latitude_dd,quote_literal(tsrow.sitecode));
			PERFORM BugsDataError('tbl_sites','tbl_bugs_tsite','LatDD','latitude_dd',sead_update_query,bugs_update_query);
			PERFORM BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),'Discrepency on the latitude data between sead and bugs');
			error_found = TRUE;
		END IF;
	END IF;

	-- LongDD = longitude_dd
	IF (tsrow.longdd IS NULL AND srec.longitude_dd IS NULL) IS FALSE THEN
		IF tsrow.longdd = srec.longitude_dd THEN
			 -- case where both are exactly equal
		ELSE
			-- Conflict BugsError
			RAISE WARNING 'IsConsistentSiteData(tsite): tsite.longdd = %, site.longitude_dd = %',
				tsrow.longdd,srec.longitude_dd;
			-- add a data_error entry to the tbl_bugstransfer_errors
			sead_update_query = FORMAT('UPDATE tbl_sites SET longitude_dd = %s WHERE site_id = %s;',
						tsrow.longdd,srec.site_id);
			bugs_update_query = FORMAT('UPDATE tbl_bugs_tsite SET "LongDD" = %s WHERE "SiteCODE"= %s;',
						srec.longitude_dd,quote_literal(tsrow.sitecode));
			PERFORM BugsDataError('tbl_sites','tbl_bugs_tsite','LongDD','longitude_dd',sead_update_query,bugs_update_query);
			PERFORM BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),'Discrepency on the longitude data between sead and bugs');
			error_found = TRUE;
		END IF;
	END IF;

	-- NGR = national_site_identifier
	IF (tsrow.ngr IS NULL AND srec.national_site_identifier IS NULL) IS FALSE THEN
		IF tsrow.ngr = srec.national_site_identifier THEN
			 -- case where both are exactly equal
		ELSE
			-- Conflict BugsError
			RAISE WARNING 'IsConsistentSiteData(tsite): tsite.ngr = %, site.national_site_identifier = %',
				tsrow.ngr,srec.national_site_identifier;
			-- add a data_error entry to the tbl_bugstransfer_errors
			sead_update_query = FORMAT('UPDATE tbl_sites SET national_site_identifier = %s WHERE site_id = %s;',
						quote_literal(tsrow.ngr),srec.site_id);
			bugs_update_query = FORMAT('UPDATE tbl_bugs_tsite SET "Ngr" = %s WHERE "SiteCODE"= %s;',
						quote_literal(srec.national_site_identifier),quote_literal(tsrow.sitecode));
			PERFORM BugsDataError('tbl_sites','tbl_bugs_tsite','Ngr','national_site_identifier',sead_update_query,bugs_update_query);
			PERFORM BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),'Discrepency on the national site identifier data between sead and bugs');
			error_found = TRUE;
		END IF;
	END IF;
	
	-- Interp = site_description
	IF (tsrow.interp IS NULL AND srec.site_description IS NULL) IS FALSE THEN
		IF tsrow.interp = srec.site_description THEN
			 -- case where both are exactly equal
		ELSE
			-- Conflict BugsError
			RAISE WARNING 'IsConsistentSiteData(tsite): tsite.interp = %, site.site_description = %',
				tsrow.interp,srec.site_description;
			-- add a data_error entry to the tbl_bugstransfer_errors
			sead_update_query = FORMAT('UPDATE tbl_sites SET site_description = %s WHERE site_id = %s;',
						quote_literal(tsrow.interp),srec.site_id);
			bugs_update_query = FORMAT('UPDATE tbl_bugs_tsite SET "Interp" = %s WHERE "SiteCODE"= %s;',
						quote_literal(srec.site_description),quote_literal(tsrow.sitecode));
			PERFORM BugsDataError('tbl_sites','tbl_bugs_tsite','Interp','site_description',sead_update_query,bugs_update_query);
			PERFORM BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),'Discrepency on the interpretation data between sead and bugs');
			error_found = TRUE;
		END IF;
	END IF;
	
	-- SiteName = site_name
	IF (tsrow.sitename IS NULL AND srec.site_name IS NULL) IS FALSE THEN
		IF tsrow.sitename = srec.site_name THEN
			 -- case where both are exactly equal
		ELSE
			-- Conflict BugsError
			RAISE WARNING 'IsConsistentSiteData(tsite): tsite.sitename = %, site.site_name = %',
				tsrow.sitename,srec.site_name;
			-- add a data_error entry to the tbl_bugstransfer_errors
			sead_update_query = FORMAT('UPDATE tbl_sites SET site_name = %s WHERE site_id=%s;',
						quote_literal(tsrow.sitename),srec.site_id);
			bugs_update_query = FORMAT('UPDATE tbl_bugs_tsite SET "SiteName" = %s WHERE "SiteCODE"= %s;',
						quote_literal(srec.site_name),quote_literal(tsrow.sitecode));
			PERFORM BugsDataError('tbl_sites','tbl_bugs_tsite','SiteName','site_name',sead_update_query,bugs_update_query);
			PERFORM BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),'Discrepency on the site name data between sead and bugs');
			error_found = TRUE;
		END IF;
	END IF;

	-- Site Locations

	-- Site References

	-- error reporting to tbl_bugstransfer_errors
	IF error_found THEN
		RAISE WARNING 'IsConsistentSiteData(tsite): Errors exist: 
		SELECT * FROM tbl_bugstransfer_errors WHERE sead_table = %',quote_literal('tbl_sites');
	END IF;
	RETURN error_found;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		RAISE 'IsConsistentSiteData(tsite): tbl_sites multiple sites found tsite = %, site = %',tsrow,srec;
END;
$_$;


--
-- TOC entry 1207 (class 1255 OID 16749)
-- Name: isconsistentsitereferencedata(tsiteref); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION isconsistentsitereferencedata(tsiteref) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	srrow			ALIAS FOR $1;
	srrec			RECORD;
	sead_update_query	TEXT;
	bugs_update_query	TEXT;
	error_found		BOOLEAN :=  FALSE;
BEGIN
	SELECT * INTO STRICT srrec FROM tbl_site_references AS A
	INNER JOIN tbl_bugs_sites AS B
	ON A.site_id = B.site_id
	INNER JOIN tbl_bugs_biblio AS C
	ON A.biblio_id = C.biblio_id
	WHERE 	B.bugs_sitecode = srrow.sitecode
	AND	C.bugs_reference = srrow.bugsref;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RAISE USING
			MESSAGE = FORMAT('IsConsistentSiteData(tsiteref): No data found for the tsiteref = %',srrow),
			HINT = 'This should be picked up in the function: ExistsTSiteRef(tsiteref)';
	WHEN TOO_MANY_ROWS THEN
		RAISE WARNING 'IsConsistentSiteData(tsite): tsite.sitename = %, site.site_name = %',
			srow.sitename,srec.site_name;
		-- add a data_error entry to the tbl_bugstransfer_errors
		sead_update_query = FORMAT('SELECT * FROM tbl_site_references AS A 
					INNER JOIN tbl_bugs_sites AS B ON A.site_id = B.site_id 
					INNER JOIN tbl_bugs_biblio AS C ON A.biblio_id = C.biblio_id 
					WHERE B.bugs_sitecode = %s AND C.bugs_reference = %s;',
					srrow.sitecode,srrow.bugsref);
		bugs_update_query = FORMAT('SELECT * FROM tbl_site_references AS A 
					INNER JOIN tbl_bugs_sites AS B ON A.site_id = B.site_id 
					INNER JOIN tbl_bugs_biblio AS C ON A.biblio_id = C.biblio_id 
					WHERE B.bugs_sitecode = %s AND C.bugs_reference = %s;',
					srrow.sitecode,srrow.bugsref);
		PERFORM BugsDataError('tbl_site_references','tbl_bugs_tsiteref','','',sead_update_query,bugs_update_query);
		PERFORM BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),'Multiple site references found');
		error_found = TRUE;
END;
$_$;


--
-- TOC entry 1208 (class 1255 OID 16750)
-- Name: isconsistentspeciesassoc(tspeciesassociation, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION isconsistentspeciesassoc(tspeciesassociation, integer, integer, integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	spassoc		ALIAS FOR $1;
	tid		ALIAS FOR $2;
	assoctid	ALIAS FOR $3;
	bid 		ALIAS FOR $4;
	spassocid	INTEGER;
	bfound		BOOLEAN:=TRUE;
BEGIN
	IF spassoc.associatedtype IS NOT NULL THEN
		SELECT species_association_id INTO STRICT spassocid
		FROM tbl_species_associations
		WHERE associated_taxon_id = assoctid
		AND taxon_id = tid
		AND biblio_id = bid
		AND association_type_id = GetAssociationTypeIdByAType(spassoc.associatedtype);
		RETURN TRUE;
	END IF;
	SELECT species_association_id INTO STRICT spassocid
	FROM tbl_species_associations
	WHERE associated_taxon_id = assoctid
	AND taxon_id = tid
	AND biblio_id = bid
	AND association_type_id IS NULL;
	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		IF bfound IS FALSE THEN
				--DEPR_TODO : bugs_error handling
			RAISE WARNING 'ExistsTSpeciesAssoc(tspeciesassociations,INTEGER,INTEGER):
			No biblio record found for %. Add this insert/update to the updates area.
			Species association IS NOT CONSISTENT',spassoc.bugsref;
			EXECUTE BugsDataError('tbl_bugs_biblio','tbl_bugs_tspeciesassociations','bugs_reference','"Ref"',
				FORMAT('SELECT * FROM tbl_bugs_biblio WHERE bugs_reference = %s;',spassoc.bugsref),
				FORMAT('SELECT * FROM tbl_bugs_tspeciesassociation WHERE "Ref" = %s',spassoc.bugsref)
				);
			EXECUTE BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),
				'NO SPECIES REFERENCE bugs_tspeciesassocitions.ref not in sead. Add this to tbl_biblio');
			RETURN TRUE;
		END IF;
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		IF bfound IS FALSE THEN
			RAISE WARNING 'ExistsTSpeciesAssoc(tspeciesassociations,INTEGER,INTEGER):
			TODO: bugs_error handling
			More than one biblio record found for %. Add this insert/update to the updates area.
			Species association IS NOT CONSISTENT
			speciesassociation = %',spassoc.bugsref,spassoc;
			RETURN TRUE;
		END IF;
		RAISE WARNING 'ExistsTSpeciesAssoc(tspeciesassociations,INTEGER,INTEGER):
		TODO: bugs_error handling
		More than on species association found for spassoc = %, taxon_id = %, associated_taxon_id = %',spassoc,tid,assoctid;
		RETURN TRUE;
END;
$_$;


--
-- TOC entry 1209 (class 1255 OID 16751)
-- Name: isconsistenttaxaauthoritydata(tindex, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION isconsistenttaxaauthoritydata(tindex, integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	irow	ALIAS FOR $1;
	tid	ALIAS FOR $2;
	aid	INTEGER;
BEGIN
	SELECT author_id INTO STRICT aid FROM tbl_taxa_tree_master AS A
	INNER JOIN tbl_taxa_tree_authors AS B
	ON A.author_id = B.author_id
	WHERE B.author_name = irow.bugsauthor
	AND A.taxon_id = tid;
	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RAISE 'IsConsistentTaxaAuthorityData(tindex,INTEGER): ERROR Could not find the author_id, should exist from ExistsTaxaAuthority(irow) test. tindex = %',irow;
	WHEN TOO_MANY_ROWS THEN
		EXECUTE BugsDataError('tbl_taxa_tree_author','tbl_bugs_tindex','author_id','AUTHORITY',
		FORMAT('SELECT * FROM tbl_taxa_tree_authors WHERE author_name = %',irow.bugsauthor),
		FORMAT('SELECT * FROM tbl_bugs_tindex WHERE "CODE" = %s',irow.bugscode)
		);
		EXECUTE BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),
			'DUPLICATE GENUS tbl_taxa_tree_genera. A duplicate authority was found. HINT: Check for rogue NULLS');
		RETURN FALSE;
END;
$_$;


--
-- TOC entry 1203 (class 1255 OID 16752)
-- Name: isconsistenttaxageneradata(tindex, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION isconsistenttaxageneradata(tindex, integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	irow		ALIAS FOR $1;
	fid		ALIAS FOR $2;
	gid		INTEGER;
BEGIN
/*	TODO: make the consistency check once the taxon_id has been found!!
	SELECT A.genus_id INTO STRICT gid FROM tbl_taxa_tree_master AS A
	INNER JOIN tbl_taxa_tree_genera AS B
	ON A.genus_id = B.genus_id
	WHERE B.family_id = fid
	AND B.genus_name = irow.bugsgenus;
	*/
	SELECT genus_id INTO STRICT gid FROM tbl_taxa_tree_genera 
	WHERE family_id = fid
	AND genus_name = irow.bugsgenus;
	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RAISE 'IsConsistentTaxaGeneraData(tindex,INTEGER): ERROR Could not find the genus_id, should exist from ExistsTaxaGenera(irow,f_id) test. tindex = %',irow;
	WHEN TOO_MANY_ROWS THEN
		EXECUTE BugsDataError('tbl_taxa_tree_genera','tbl_bugs_tindex','genus_id','GENUS',
		FORMAT('SELECT * FROM tbl_taxa_tree_genera WHERE family_id = %s AND genus_name = %',fid,irow.bugsgenus),
		FORMAT('SELECT * FROM tbl_bugs_tindex WHERE "CODE" = %s',irow.bugscode)
		);
		EXECUTE BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),
			'DUPLICATE GENUS tbl_taxa_tree_genera. A duplicate genus was found. HINT: Check for rogue NULLS');
		RETURN FALSE;
END;
$_$;


--
-- TOC entry 1210 (class 1255 OID 16753)
-- Name: isconsistenttbiblio(tbiblio); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION isconsistenttbiblio(tbiblio) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	bibrow		ALIAS FOR $1;
	bid 		INTEGER;
	bfound		BOOLEAN:=FALSE;
	bcount		INTEGER;
BEGIN
	IF bibrow.reference IS NULL THEN
		RAISE WARNING 'IsConsistentTBiblio(tbiblio): Null reference found for tbiblio = %',bibrow;
		EXECUTE BugsDataError('tbl_bugs_biblio','tbl_bugs_tbiblio','bugs_reference','REFERENCE',
			NULL,
			FORMAT('SELECT * FROM tbl_bugs_tbiblio WHERE "REFERENCE"IS NULL')
			);
		EXECUTE BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),
			'NULL REFERENCE bugs_biblio.bugs_reference must not be null.');
		RETURN FALSE;
	END IF;

	SELECT biblio_id INTO STRICT bid FROM tbl_bugs_biblio
	WHERE bugs_reference = bibrow.reference;
	bfound = TRUE;

	-- need to deal with null cases separately
	SELECT COUNT(*) INTO bcount FROM tbl_biblio
	WHERE biblio_id = bid
	OR bugs_reference = bibrow.reference;

	IF bcount != 1 THEN
		RAISE WARNING 'IsConsistentTBiblio(tbiblio): More than one value with biblio_id = % or bugs_reference = %',bid,bibrow.reference;
		EXECUTE BugsDataError('tbl_bugs_biblio','tbl_bugs_tbiblio','bugs_reference','REFERENCE',
			FORMAT('SELECT * FROM tbl_bugs_biblio WHERE bugs_reference = %s OR biblio_id = %s',bid,bibrow.reference),
			NULL
			);
		EXECUTE BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),
			'INCONSISTENT REFERENCE bugs_biblio.bugs_reference and bugs_biblio.biblio_id must the same for a record.');
		RETURN FALSE;
	END IF;

	bcount = 0;
 	SELECT COUNT(*) INTO bcount FROM tbl_biblio
 	WHERE biblio_id = bid
	AND bugs_author = bibrow.author
	AND bugs_author IS NOT NULL
	AND bibrow.author IS NOT NULL;

	IF bibrow.author IS NULL THEN
		SELECT COUNT(*) INTO bcount FROM tbl_biblio
		WHERE biblio_id = bid
		AND bugs_author IS NULL;
	END IF;

	IF bcount != 1 THEN
		--RAISE WARNING 'IsConsistentTBiblio(tbiblio): Nulls on bugs_author or tbiblio.author could trigger this.';
		RAISE WARNING 'IsConsistentTBiblio(tbiblio): Inconsistent bugs_author data for biblio_id = % or bugs_reference = %',bid,bibrow.reference;
		EXECUTE BugsDataError('tbl_bugs_biblio','tbl_bugs_tbiblio','bugs_reference','REFERENCE',
			FORMAT('SELECT * FROM tbl_biblio WHERE biblio_id = %s',bid),
			FORMAT('SELECT * FROM tbl_bugs_tbiblio WHERE "REFERENCE" = %s',bibrow.reference)
			);
		EXECUTE BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),
			'INCONSISTENT AUTHOR biblio.bugs_author and bugs_tbiblio."AUTHOR" are not the same.');
		RETURN FALSE;
	END IF;

	bcount = 0;
 	SELECT COUNT(*) INTO bcount FROM tbl_biblio
 	WHERE biblio_id = bid
	AND bugs_title = bibrow.title
	AND bugs_title IS NOT NULL
	AND bibrow.title IS NOT NULL;

	IF bibrow.title IS NULL THEN
		SELECT COUNT(*) INTO bcount FROM tbl_biblio
		WHERE biblio_id = bid
		AND bugs_title IS NULL;
	END IF;
	
	IF bcount != 1 THEN
		--RAISE WARNING 'IsConsistentTBiblio(tbiblio): Nulls on bugs_title or tbiblio.title could trigger this.';
		RAISE WARNING 'IsConsistentTBiblio(tbiblio): Inconsistent bugs_title data for biblio_id = % or bugs_reference = %',bid,bibrow.reference;
		EXECUTE BugsDataError('tbl_bugs_biblio','tbl_bugs_tbiblio','bugs_reference','REFERENCE',
			FORMAT('SELECT * FROM tbl_biblio WHERE biblio_id = %s',bid),
			FORMAT('SELECT * FROM tbl_bugs_tbiblio WHERE "REFERENCE" = %s',bibrow.reference)
			);
		EXECUTE BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),
			'INCONSISTENT TITLE biblio.bugs_title and bugs_tbiblio."TITLE" are not the same.');
		RETURN FALSE;
	END IF;

	bcount = 0;
 	SELECT COUNT(*) INTO bcount FROM tbl_biblio
 	WHERE biblio_id = bid
	AND notes = bibrow.notes
	AND notes IS NOT NULL
	AND bibrow.notes IS NOT NULL;

	IF bibrow.notes IS NULL THEN
		SELECT COUNT(*) INTO bcount FROM tbl_biblio
		WHERE biblio_id = bid
		AND notes IS NULL;
	END IF;
	
	IF bcount != 1 THEN
		--RAISE WARNING 'IsConsistentTBiblio(tbiblio): Nulls on notes or tbiblio.notes could trigger this.';
		RAISE WARNING 'IsConsistentTBiblio(tbiblio): Inconsistent notes data for biblio_id = % or bugs_reference = %',bid,bibrow.reference;
		EXECUTE BugsDataError('tbl_bugs_biblio','tbl_bugs_tbiblio','bugs_reference','REFERENCE',
			FORMAT('SELECT * FROM tbl_biblio WHERE biblio_id = %s',bid),
			FORMAT('SELECT * FROM tbl_bugs_tbiblio WHERE "REFERENCE" = %s',bibrow.reference)
			);
		EXECUTE BugsErrorNote(currval('tbl_bugstransfer_errors_bugs_error_id_seq'),
			'INCONSISTENT NOTES biblio.notes and bugs_tbiblio."Notes" are not the same.');
		RETURN FALSE;
	END IF;

	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		IF bfound IS FALSE THEN
			RAISE 'IsConsistentTBiblio(tbiblio): No biblio_id found for bugs_reference = %. 
			HINT: This should have been picked up in ExistsTBiblio(tbiblio)', bibrow.reference;
		END IF;
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		RAISE 'IsConsistentTBiblio(tbiblio): Multiple biblio records found for bugs_reference = %
		HINT: Check the ExistsTBiblio(tbiblio) function to see why the reference is not being picked up before being added.',bibrow.reference;
		RETURN FALSE;
END;
$_$;


--
-- TOC entry 1211 (class 1255 OID 16754)
-- Name: isvalidecocodedata(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION isvalidecocodedata(integer, integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
BEGIN
	IF $1 > -1 AND $2 > -1 THEN
		RETURN TRUE;
	END IF;
	RETURN FALSE;
END;
$_$;


--
-- TOC entry 1212 (class 1255 OID 16755)
-- Name: lookupidbyuniquevalue(character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lookupidbyuniquevalue(character varying, character varying, character varying, character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	id	INTEGER;
	sead_table_name ALIAS FOR $1;
	sead_id_col	ALIAS FOR $2;
	sead_value_col	ALIAS FOR $3;
	bugs_value	ALIAS FOR $4;
BEGIN
	EXECUTE FORMAT('SELECT %s FROM %s WHERE %s = ' || quote_literal(bugs_value) || ';',sead_id_col, sead_table_name, sead_value_col,bugs_value)
	INTO STRICT id;
	RETURN id;
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			RAISE 'NO_DATA_FOUND: sead_table = %,sead_id = %,sead_data_field = %,bugs_data = %',sead_table_name,sead_id_col,sead_value_col,bugs_value;
		WHEN TOO_MANY_ROWS THEN
			RAISE 'TOO_MANY_ROWS: sead_table = %,sead_id = %,sead_data_field = %,bugs_data = %',sead_table_name,sead_id_col,sead_value_col,bugs_value;
END;
$_$;


--
-- TOC entry 1213 (class 1255 OID 16756)
-- Name: lookupintegervalue(character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lookupintegervalue(character varying, character varying, character varying, character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	sead_id			INTEGER;
	sead_table_name 	ALIAS FOR $1;
	sead_id_col		ALIAS FOR $2;
	sead_value_col		ALIAS FOR $3;
	sead_value		ALIAS FOR $4;
BEGIN
	EXECUTE FORMAT('SELECT %s FROM %s WHERE %s = ' || quote_literal(sead_value) || ';',
			sead_id_col, sead_table_name, sead_value_col)
	INTO STRICT sead_id;
	RETURN sead_id;
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			RAISE E'LookupIntegerValue(VARCHAR,VARCHAR,VARCHAR,VARCHAR): SEAD_ERROR
			NO_DATA_FOUND: %.% IS NULL WHEN %.% = %\n',
			sead_table_name,sead_id_col,sead_table_name,sead_value_col,sead_value;
		WHEN TOO_MANY_ROWS THEN
			RAISE E'LookupIntegerValue(VARCHAR,VARCHAR,VARCHAR,VARCHAR): SEAD_ERROR
			TOO_MANY_ROWS: %.% HAS MULTIPLE RECORDS FOR %.% = %\n',
			sead_table_name,sead_id_col,sead_table_name,sead_value_col,sead_value;
END;
$_$;


--
-- TOC entry 1214 (class 1255 OID 16757)
-- Name: lookupintegervalue1_int(character varying, character varying, character varying, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lookupintegervalue1_int(character varying, character varying, character varying, integer) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	sead_id			INTEGER;
	sead_table_name 	ALIAS FOR $1;
	sead_id_col		ALIAS FOR $2;
	sead_fk_col		ALIAS FOR $3;
	fk_value		ALIAS FOR $4;
BEGIN
	EXECUTE FORMAT('SELECT %s FROM %s WHERE %s = ' || fk_value || ';',
			sead_id_col, sead_table_name, sead_fk_col)
	INTO STRICT sead_id;
	RETURN sead_id;
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			RAISE E'LookupIntegerValue1_Int(VARCHAR,VARCHAR,VARCHAR,INTEGER): SEAD_ERROR
			NO_DATA_FOUND: %.% IS NULL WHEN %.% = %\n',
			sead_table_name,sead_id_col,sead_table_name,sead_fk_col,fk_value;
		WHEN TOO_MANY_ROWS THEN
			RAISE E'LookupIntegerValue1_Int(VARCHAR,VARCHAR,VARCHAR,INTEGER): SEAD_ERROR
			TOO_MANY_ROWS: %.% HAS MULTIPLE RECORDS FOR %.% = %\n',
			sead_table_name,sead_id_col,sead_table_name,sead_fk_col,fk_value;
END;
$_$;


--
-- TOC entry 1215 (class 1255 OID 16758)
-- Name: lookupintegervalue2_intvar(character varying, character varying, character varying, character varying, integer, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lookupintegervalue2_intvar(character varying, character varying, character varying, character varying, integer, character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	sead_id			INTEGER;
	sead_table_name 	ALIAS FOR $1;
	sead_id_col		ALIAS FOR $2;
	sead_fk_col		ALIAS FOR $3;
	sead_value_col		ALIAS FOR $4;
	sead_fkvalue		ALIAS FOR $5;
	bugs_value		ALIAS FOR $6;
	
BEGIN
	--RAISE INFO 'SELECT % FROM % WHERE % = % AND % = %;',
	--		sead_id_col, sead_table_name, sead_fk_col,sead_fkvalue,sead_value_col,bugs_value;
	EXECUTE FORMAT('SELECT %s FROM %s WHERE %s = %s AND %s = %s;',
			sead_id_col, sead_table_name, sead_fk_col,sead_fkvalue,sead_value_col,bugs_value)
	INTO STRICT sead_id;
	RETURN sead_id;
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			RAISE E'LookupIntegerValue2_IntVar(VARCHAR,VARCHAR,VARCHAR,VARCHAR,INTEGER,VARCHAR): SEAD_ERROR
			NO_DATA_FOUND: %.% IS NULL WHEN %.% = % AND %.% = %\n',
			sead_table_name,sead_id_col,sead_table_name,sead_fk_col,sead_fkvalue,sead_table_name,sead_value_col,bugs_value;
		WHEN TOO_MANY_ROWS THEN
			RAISE E'LookupIntegerValue2_IntVar(VARCHAR,VARCHAR,VARCHAR,VARCHAR,INTEGER,VARCHAR): SEAD_ERROR
			TOO_MANY_ROWS: %.% HAS MULTIPLE RECORDS FOR %.% = % AND %.% = %\n',
			sead_table_name,sead_id_col,sead_table_name,sead_fk_col,sead_fkvalue,sead_table_name,sead_value_col,bugs_value;
END;
$_$;


--
-- TOC entry 1216 (class 1255 OID 16759)
-- Name: lookupintegervalue2_intvarcheck(character varying, character varying, character varying, character varying, integer, character varying, boolean); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lookupintegervalue2_intvarcheck(character varying, character varying, character varying, character varying, integer, character varying, boolean) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
DECLARE
	sead_id			INTEGER;
	sead_table_name 	ALIAS FOR $1;
	sead_id_col		ALIAS FOR $2;
	sead_fk_col		ALIAS FOR $3;
	sead_value_col		ALIAS FOR $4;
	sead_fkvalue		ALIAS FOR $5;
	bugs_value		ALIAS FOR $6;
	use_strict		ALIAS FOR $7;
	
BEGIN
	--RAISE INFO 'SELECT % FROM % WHERE % = % AND % = %;',
	--		sead_id_col, sead_table_name, sead_fk_col,sead_fkvalue,sead_value_col,bugs_value;
	IF use_strict = TRUE THEN
		PERFORM LookupIntegerValue2_IntVar(sead_id, sead_table_name, sead_id_col, sead_fk_col, sead_value_col, sead_fkvalue, bugs_value);
	ELSE
		BEGIN
			EXECUTE FORMAT('SELECT %s FROM %s WHERE %s = %s AND %s = %s;',
					sead_id_col, sead_table_name, sead_fk_col,sead_fkvalue,sead_value_col,bugs_value)
			INTO STRICT sead_id;
			RETURN sead_id;
		EXCEPTION
			WHEN NO_DATA_FOUND THEN
				--RAISE WARNING 'LookupIntegerValue2_IntVarCheck(VARCHAR,VARCHAR,VARCHAR,VARCHAR,INTEGER,VARCHAR,BOOLEAN): SEAD_ERROR
				--NO_DATA_FOUND: %.% IS NULL WHEN %.% = % AND %.% = %\n',
				--sead_table_name,sead_id_col,sead_table_name,sead_fk_col,sead_fkvalue,sead_table_name,sead_value_col,bugs_value;
				RETURN -1;
			WHEN TOO_MANY_ROWS THEN
				RAISE WARNING 'LookupIntegerValue2_IntVarCheck(VARCHAR,VARCHAR,VARCHAR,VARCHAR,INTEGER,VARCHAR,BOOLEAN): SEAD_ERROR
				TOO_MANY_ROWS: %.% HAS MULTIPLE RECORDS FOR %.% = % AND %.% = %\n',
				sead_table_name,sead_id_col,sead_table_name,sead_fk_col,sead_fkvalue,sead_table_name,sead_value_col,bugs_value;
				RETURN -1;
		END;
	END IF;
END;
$_$;


--
-- TOC entry 1219 (class 1255 OID 16760)
-- Name: lookupnumericvalue(character varying, character varying, character varying, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lookupnumericvalue(character varying, character varying, character varying, integer) RETURNS numeric
    LANGUAGE plpgsql
    AS $_$
DECLARE
	bugs_value		NUMERIC;
	sead_table_name 	ALIAS FOR $1;
	sead_id_col		ALIAS FOR $2;
	sead_value_col		ALIAS FOR $3;
	id_value		ALIAS FOR $4;
BEGIN
	EXECUTE FORMAT('SELECT %s FROM %s WHERE %s = ' || quote_literal(id_value) || ';',
			sead_value_col, sead_table_name, sead_id_col,id_value)
	INTO STRICT bugs_value;
	RETURN bugs_value;
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			RAISE E'LookupNumericValue(VARCHAR,VARCHAR,VARCHAR,INTEGER): SEAD_ERROR
			NO_DATA_FOUND: %.% IS NULL WHEN %.% = %\n',
			sead_table_name,sead_value_col,sead_table_name,sead_id_col,id_value;
		WHEN TOO_MANY_ROWS THEN
			RAISE E'LookupNumericValue(VARCHAR,VARCHAR,VARCHAR,INTEGER): SEAD_ERROR
			TOO_MANY_ROWS: %.% HAS MULTIPLE RECORDS FOR %.% = %\n',
			sead_table_name,sead_value_col,sead_table_name,sead_id_col,id_value;
END;
$_$;


--
-- TOC entry 1220 (class 1255 OID 16761)
-- Name: lookupvarcharvalue(character varying, character varying, character varying, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lookupvarcharvalue(character varying, character varying, character varying, integer) RETURNS character varying
    LANGUAGE plpgsql
    AS $_$
DECLARE
	bugs_value	VARCHAR;
	sead_table_name ALIAS FOR $1;
	sead_id_col	ALIAS FOR $2;
	sead_value_col	ALIAS FOR $3;
	id_value	ALIAS FOR $4;
BEGIN
	EXECUTE FORMAT('SELECT %s FROM %s WHERE %s = ' || quote_literal(id_value) || ';',
			sead_value_col, sead_table_name, sead_id_col,id_value)
	INTO STRICT bugs_value;
	RETURN bugs_value;
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			RAISE E'LookupVarcharValue(VARCHAR,VARCHAR,VARCHAR,INTEGER): SEAD_ERROR
			NO_DATA_FOUND: %.% IS NULL WHEN %.% = %\n',
			sead_table_name,sead_value_col,sead_table_name,sead_id_col,id_value;
		WHEN TOO_MANY_ROWS THEN
			RAISE E'LookupVarcharValue(VARCHAR,VARCHAR,VARCHAR,INTEGER): SEAD_ERROR
			TOO_MANY_ROWS: %.% HAS MULTIPLE RECORDS FOR %.% = %\n',
			sead_table_name,sead_value_col,sead_table_name,sead_id_col,id_value;
END;
$_$;


--
-- TOC entry 1221 (class 1255 OID 16762)
-- Name: mapdatingmethod(character varying, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mapdatingmethod(character varying, character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $_$
DECLARE
	dm	ALIAS FOR $1;
	ytype	ALIAS FOR $2;
BEGIN
	CASE
	WHEN dm = 'Tephra' AND ytype = 'Calendar' THEN
		--RAISE INFO 'Get the new abbreviation % = TephraCal',dm;
		RETURN 'TephraCal';
	WHEN dm = 'Tephra' AND ytype = 'C14' THEN
		RETURN 'TephraC14';
	WHEN dm = 'Typo' AND ytype = 'Calendar' THEN
		RETURN 'TypoCal';
	WHEN dm = 'Typo' AND ytype = 'Radiometric' THEN
		RETURN 'TypoRadio';
	WHEN dm = 'ArchPer' AND ytype = 'Calendar' THEN
		RETURN 'ArchPerCal';
	WHEN dm = 'ArchPer' AND ytype = 'C14' THEN
		RETURN 'ArchPerC14';
	WHEN dm = 'GeolPer' AND ytype = 'Calendar' THEN
		RETURN 'GeolPerCal';
	WHEN dm = 'GeolPer' AND ytype = 'C14' THEN
		RETURN 'GeolPerC14';
	WHEN dm = 'GeolPer' AND ytype = 'Radiometric' THEN
		RETURN 'GeolPerRadio';
	WHEN dm = 'Humous' THEN
		RETURN 'C14 Humous';
	WHEN dm = 'Pollen' THEN
		RETURN 'PollenZone';	
	ELSE
	END CASE;
	RETURN dm;
END;
$_$;


--
-- TOC entry 1222 (class 1255 OID 16763)
-- Name: numericifycolumn(character varying, character varying, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION numericifycolumn(t_name character varying, col_name character varying, numeric_type character varying DEFAULT 'numeric(18,10)'::character varying) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	tmp_col varchar;
	check_var varchar;
BEGIN
	-- sanity check so we dont try to force this again and again, 
	-- string_to_numeric does not accept numeric column values.
	select data_type from information_schema.columns
		where table_name = t_name and column_name = col_name 
		into check_var ;
	if numeric_type like check_var || '%' then 
		return;
	end if;

	tmp_col := col_name || '_num';

--	raise info 'alter table "%" add column % %', 
--		   t_name, tmp_col, numeric_type;
--	raise info 'update "%" set "%" = string_to_numeric("%")',
--		   t_name, tmp_col, col_name;
--	raise info 'alter table "%" rename "%" "%"', 
--		   t_name, col_name, col_name || '_OLD';
--	raise info 'alter table "%" rename % "%"', 
--		   t_name, tmp_col, col_name;
	-- create a new column temporary with the numeric representation 
	-- of the current columns data
	Execute Format('alter table "%s" add column %s %s', 
		   t_name, tmp_col, numeric_type);
	Execute Format('update "%s" set %s = string_to_numeric("%s")',
		   t_name, tmp_col, col_name);
	-- move the old column to a column as an archieve.
	Execute Format('alter table "%s" rename "%s" to "%s"', 
		   t_name, col_name, col_name || '_OLD');
	-- rename the new column with the old col name
	-- completing the type replacement.
	Execute Format('alter table "%s" rename %s to "%s"', 
		   t_name, tmp_col, col_name);
	Perform BugsTransferLog(t_name, 'U', 'changed ' || col_name || ' to numeric with type ' || numeric_type);
END;
$$;


--
-- TOC entry 1223 (class 1255 OID 16764)
-- Name: populateecocodedata(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION populateecocodedata() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	
BEGIN
	--PERFORM UpdatePrimaryEcocodeSystems();
	--PERFORM UpdatePrimaryEcocodeGroups();
	PERFORM InsertEcocodeDefinitions();
	PERFORM InsertEcocodes();
END;
$$;


--
-- TOC entry 1224 (class 1255 OID 16765)
-- Name: recordexistsonbugskey(text, text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION recordexistsonbugskey(text, text, text, OUT result boolean) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	reccount	INTEGER;
	recid		INTEGER;
	table_name	ALIAS FOR $1;
	sead_bugs_col	ALIAS FOR $2;
	bugs_code	ALIAS FOR $3;
BEGIN
	IF bugs_code IS NULL THEN
		RAISE WARNING 'Null bugs_code for % lookup on column %',table_name,sead_bugs_col;
		result = FALSE;
		RETURN;
	END IF;
	EXECUTE FORMAT('SELECT COUNT(*) FROM %s WHERE %s = ' || quote_literal(bugs_code) || ';',table_name,sead_bugs_col)
	INTO	reccount;

	IF reccount = 0 THEN
		result = FALSE;
		RETURN;
	END IF;

	IF reccount > 1 THEN
		RAISE WARNING 'Multiple entries in % for % = %',table_name,sead_bugs_col,bugs_code;
	END IF;
	result = TRUE;
END;
$_$;


--
-- TOC entry 1225 (class 1255 OID 16766)
-- Name: recordisconsistent(text, text, text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION recordisconsistent(text, text, text, text, OUT result boolean) RETURNS boolean
    LANGUAGE plpgsql
    AS $$
DECLARE

BEGIN
	result = FALSE;
END;
$$;


--
-- TOC entry 1226 (class 1255 OID 16767)
-- Name: requiredtablestructurechanges(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION requiredtablestructurechanges() RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	ALTER TABLE tbl_bugs_tsite ALTER COLUMN "Country" TYPE character varying(255);
	Perform BugsTransferLog('tbl_bugs_tsite', 'U', 'alter table, alter column "Country" type character varying(255)');

	Perform NumericifyColumn(
		t_name :=    'tbl_bugs_tspeciesassociations', 
		col_name :=  'CODE');
	Perform NumericifyColumn(
		t_name :=    'tbl_bugs_tspeciesassociations', 
		col_name :=  'AssociatedSpeciesCODE');
	Perform NumericifyColumn(
		t_name :=    'tbl_bugs_tecodefbugs', 
		col_name :=  'SortOrder',
		numeric_type := 'smallint');
	Perform NumericifyColumn(
		t_name :=    'tbl_bugs_tecobugs', 
		col_name :=  'CODE');
	Perform NumericifyColumn(
		t_name :=    'tbl_bugs_tecokoch', 
		col_name :=  'CODE');
	Perform NumericifyColumn(
		t_name :=    'tbl_bugs_tseasonactiveadult', 
		col_name :=  'CODE');
	Perform NumericifyColumn(
		t_name :=    'tbl_bugs_tperiods', 
		col_name :=  'Begin');
	Perform NumericifyColumn(
		t_name :=    'tbl_bugs_tperiods', 
		col_name :=  'End');		
END;
$$;


--
-- TOC entry 1228 (class 1255 OID 16768)
-- Name: setdatasetmastersetbyname(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION setdatasetmastersetbyname(character varying) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	-- Add the required dataset biblio record
	RAISE INFO 'SetDatasetMasterSetByName(VARCHAR):
		Adding the default dataset reference: Buckland & Buckland 2006';
/*		
	INSERT INTO tbl_biblio (
		biblio_id, 
		bugs_reference, 
		bugs_author,
		bugs_title,
		notes,
		date_updated
	)
	VALUES (
		nextval('tbl_biblio_biblio_id_seq'),
		'Buckland & Buckland 2006',
		'Buckland P.I. & Buckland P.C (2006)',
		'Buckland P.I. & Buckland P.C. (2006) Bugs Coleopteran Ecology Package [Components used: versions] [Downloaded/CDROM: DATE].',
		NULL,
		Now()
	);
	PERFORM BugsTransferLog('tbl_biblio','I',currval('tbl_biblio_biblio_id_seq'),'');
	
	INSERT INTO tbl_bugs_biblio (
		bugs_biblio_id,
		biblio_id,
 		bugs_reference,
		date_updated 
	)
	VALUES (
		nextval('tbl_bugs_biblio_bugs_biblio_id_seq'),
		currval('tbl_biblio_biblio_id_seq'),
 		'Buckland & Buckland 2006',
 		Now()
	);
	PERFORM BugsTransferLog('tbl_bugs_biblio','I',currval('tbl_bugs_biblio_bugs_biblio_id_seq'),'');
	*/
	
	INSERT INTO tbl_dataset_masters (
		master_set_id,
		contact_id,
		biblio_id,
		master_name,
		master_notes,
		url,
		date_updated )
	VALUES (
		nextval('tbl_dataset_masters_master_set_id_seq'),
		GetContactIdByBothNames('Philip','Buckland'),
		LookupIntegerValue('tbl_bugs_biblio','biblio_id','bugs_reference','Buckland & Buckland 2006'),
		--GetBiblioIdByReference('Buckland & Buckland 2006'),
		'Bugs database',
		'The Bugs Coleopteran Ecology Package (BugsCEP).
Data imported from this system or marked as belonging to it.
Represents all records of Quaternary fossil insects.',
		'http://www.bugscep.com/',
		Now() );

		PERFORM BugsTransferLog('tbl_dataset_masters','I',currval('tbl_dataset_masters_master_set_id_seq'),'');
END;
$$;


--
-- TOC entry 1229 (class 1255 OID 16769)
-- Name: setprimarycontact(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION setprimarycontact() RETURNS boolean
    LANGUAGE plpgsql
    AS $$
BEGIN
	INSERT INTO tbl_contacts (
		contact_id,
		address_1,
		address_2,
		location_id,
		email,
		first_name,
		last_name,
		phone_number,
		url,
		date_updated )
	VALUES (
		nextval('tbl_contacts_contact_id_seq'),
		'Environmental Archaeology Lab
 Dept. of Philosophical, Historical & Religious Studes',
		'Umeå University
SE-90187  Umeå',
		GetLocationIdByTypeName_Name('Country','Sweden'),
		'phil.buckland@arke.umu.se',
		'Philip',
		'Buckland',
		'+46 (0)90 786 5292',
		'http://www.idesam.umu.se/om/personal/visa-person/?uid=phbu0001&guise=anst1',
		Now() );

	PERFORM BugsTransferLog('tbl_contacts','I',currval('tbl_contacts_contact_id_seq'),'');
	
	RETURN TRUE;
END;
$$;


--
-- TOC entry 1230 (class 1255 OID 16770)
-- Name: siteexists(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION siteexists(character varying) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
	sitecode	ALIAS FOR $1;
	sid		INTEGER;
BEGIN
	SELECT site_id INTO STRICT sitecode FROM tbl_bugs_sites
	WHERE bugs_sitecode = sitecode;
	RETURN TRUE;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RETURN FALSE;
	WHEN TOO_MANY_ROWS THEN
		RAISE 'SiteExists(VARCHAR): More than one sitecode = % HINT: Should be dealt with in the sites area not countsheets area', sitecode;
END;
$_$;


--
-- TOC entry 1231 (class 1255 OID 16771)
-- Name: smallbiblioupdates(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION smallbiblioupdates() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	cnt_Lott2010 integer := -1;
BEGIN
	select count(*) from tbl_bugs_tbiblio 
		where "REFERENCE" like 'Lott 2010%'
		into cnt_Lott2010;
	if cnt_Lott2010 = 1 then
		-- small fix to handle the current state of 
		-- bugs, this should be ineffective after 
		-- fixes in original data.
		update tbl_bugs_tbiblio
		set "REFERENCE" = 'Lott 2010'
		where "REFERENCE" = 'Lott 2010a';
	end if;
END;
$$;


--
-- TOC entry 1232 (class 1255 OID 16772)
-- Name: string_to_numeric(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION string_to_numeric(stringtoconvert character varying) RETURNS numeric
    LANGUAGE sql STRICT
    AS $_$select case when trim($1) similar to '[-0-9/.]+'
then cast(trim($1) as numeric) 
else null end;$_$;


--
-- TOC entry 1233 (class 1255 OID 16773)
-- Name: syncsequences(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION syncsequences() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	sql record;
BEGIN
	FOR sql in SELECT 'SELECT SETVAL(' ||
				quote_literal(quote_ident(PGT.schemaname)|| 
				'.'||quote_ident(S.relname))|| 
				', MAX(' ||quote_ident(C.attname)|| 
				') ) FROM ' ||
				quote_ident(PGT.schemaname)|| '.'||quote_ident(T.relname)|| ';' as fix_query
			FROM pg_class AS S, pg_depend AS D, pg_class AS T, pg_attribute AS C, pg_tables AS PGT
			WHERE S.relkind = 'S'
			    AND S.oid = D.objid
			    AND D.refobjid = T.oid
			    AND D.refobjid = C.attrelid
			    AND D.refobjsubid = C.attnum
			    AND T.relname = PGT.tablename
			ORDER BY S.relname LOOP
		EXECUTE sql.fix_query;
	END LOOP;	
END;
$$;


--
-- TOC entry 1234 (class 1255 OID 16774)
-- Name: tcalendarupdates(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION tcalendarupdates() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN
	IF ExistsTableOneColumnValue('tbl_relative_age_types','age_type','Calendar date') IS FALSE THEN
		INSERT INTO tbl_relative_age_types(
				relative_age_type_id,
				age_type,
				description,
				date_updated )
		VALUES (
				nextval('tbl_relative_age_types_relative_age_type_id_seq'),
				'Calendar date',
				'Date or range of dates in calendar years',
				Now() );
		PERFORM BugsTransferLog('tbl_relative_age_types','I',currval('tbl_relative_age_types_relative_age_type_id_seq'),'Calendar date');
				
	END IF;
END;
$$;


--
-- TOC entry 1235 (class 1255 OID 16775)
-- Name: tdatesgroupsupdate(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION tdatesgroupsupdate() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE

BEGIN
	-- uncertainties map to tbl_dating_uncertainty
	IF ExistsTableOneColumnValue('tbl_dating_uncertainty','uncertainty','?') IS FALSE THEN
		INSERT INTO tbl_dating_uncertainty (
			dating_uncertainty_id,
			uncertainty,
			description,
			date_updated
		)
		VALUES (
			nextval('tbl_dating_uncertainty_dating_uncertainty_id_seq'),
			'?',
			'Dating is disputable.',
			Now()
		);
		PERFORM BugsTransferLog('tbl_dating_uncertainty','I',currval('tbl_dating_uncertainty_dating_uncertainty_id_seq'),'?');
	END IF;

	UPDATE tbl_bugs_tdatesradio
	SET "Uncertainty" = 'Ca.'
	WHERE "Uncertainty" = 'c';
	PERFORM BugsTransferLog('tbl_bugs_tdatesradio','U','SET Uncertainty = Ca. WHERE Uncertainty = c');

	UPDATE tbl_bugs_tdatesradio
	SET "Uncertainty" = 'Ca.'
	WHERE "Uncertainty" = 'ca.';
	PERFORM BugsTransferLog('tbl_bugs_tdatesradio','U','SET Uncertainty = Ca. WHERE Uncertainty = ca');

	UPDATE tbl_bugs_tdatesradio
	SET "Uncertainty" = 'Ca.'
	WHERE "Uncertainty" = 'ca';
	PERFORM BugsTransferLog('tbl_dating_uncertainty','U','SET Uncertainty = Ca. WHERE Uncertainty = ca');

	UPDATE tbl_bugs_tdatesradio
	SET "Uncertainty" = 'From'
	WHERE "Uncertainty" = 'from';
	PERFORM BugsTransferLog('tbl_bugs_tdatesradio','U','SET Uncertainty = From WHERE Uncertainty = from');

	UPDATE tbl_bugs_tdatesradio
	SET "Uncertainty" = 'To'
	WHERE "Uncertainty" = 'to';
	PERFORM BugsTransferLog('tbl_bugs_tdatesradio','U','SET Uncertainty = To WHERE Uncertainty = to');

	UPDATE tbl_bugs_tdatesradio
	SET "LabID" = 'Birm'
	WHERE "LabID" = 'Birmingham' or 
	      "LabID" = 'Birm.' or 
	      "LabID" = 'Birmigham';
	PERFORM BugsTransferLog('tbl_bugs_tdatesradio','U','SET LabID = Birm WHERE LabID = Birmingham or Birm. or Birmigham');
	
	update tbl_bugs_tdatesradio
	set "LabID" = 'HAR*'
	where "LabID" = 'HAR';
	PERFORM BugsTransferLog('tbl_bugs_tdatesradio','U','SET LabID = HAR* WHERE LabID = HAR');

	update tbl_bugs_tdatesradio
	set "LabID" = 'Y*'
	where "LabID" = 'Y';
	PERFORM BugsTransferLog('tbl_bugs_tdatesradio','U','SET LabID = Y* WHERE LabID = Y');

	update tbl_bugs_tdatesradio
	set "Uncertainty" = '>'
	where "Uncertainty" = ' >';
	PERFORM BugsTransferLog('tbl_bugs_tdatesradio','U','SET Uncertainty = ">" WHERE Uncertainty = " >"');
	
	UPDATE tbl_bugs_tdatescalendar
	SET "Uncertainty" = 'From ca.'
	WHERE "Uncertainty" = 'from ca.';
	PERFORM BugsTransferLog('tbl_bugs_tdatescalendar','U','SET Uncertainty = "From ca." WHERE Uncertainty = "from ca."');

	UPDATE tbl_bugs_tdatescalendar
	SET "Uncertainty" = '>'
	WHERE "Uncertainty" = 'To >';
	PERFORM BugsTransferLog('tbl_bugs_tdatescalendar','U','SET Uncertainty = ">" WHERE Uncertainty = "To >"');

	UPDATE tbl_bugs_tdatescalendar
	SET "Uncertainty" = 'To ca.'
	WHERE "Uncertainty" = 'Tc ca.';
	PERFORM BugsTransferLog('tbl_bugs_tdatescalendar','U','SET Uncertainty = "To ca." WHERE Uncertainty = "Tc ca."');

	UPDATE tbl_bugs_tdatescalendar
	SET "Uncertainty" = 'Ca.'
	WHERE "Uncertainty" = 'Ca,';
	PERFORM BugsTransferLog('tbl_bugs_tdatescalendar','U','SET Uncertainty = "Ca." WHERE Uncertainty = "Ca,"');

	-- datesperiod
	-- added by Erik J. Eriksson 20140404, adding fixes for PeriodCODE mismatches.
	Update tbl_bugs_tdatesperiod
	Set "PeriodCODE" = 'MIS-12'
	Where "PeriodCODE" = 'OIS-12';
	PERFORM BugsTransferLog('tbl_bugs_tdatesperiod','U','SET PeriodCODE = "MIS-12" WHERE PeriodCODE = "OIS-12"');

	Update tbl_bugs_tdatesperiod
	Set "PeriodCODE" = 'MIS-07'
	Where "PeriodCODE" = 'OIS-07';
	PERFORM BugsTransferLog('tbl_bugs_tdatesperiod','U','SET PeriodCODE = "MIS-07" WHERE PeriodCODE = "OIS-07"');

	Update tbl_bugs_tdatesperiod
	Set "PeriodCODE" = 'MIS-06'
	Where "PeriodCODE" = 'OIS-06';
	PERFORM BugsTransferLog('tbl_bugs_tdatesperiod','U','SET PeriodCODE = "MIS-06" WHERE PeriodCODE = "OIS-06"');

	Update tbl_bugs_tdatesperiod
	Set "PeriodCODE" = 'MIS-05e'
	Where "PeriodCODE" = 'OIS-05e';
	PERFORM BugsTransferLog('tbl_bugs_tdatesperiod','U','SET PeriodCODE = "MIS-05e" WHERE PeriodCODE = "OIS-05e"');

	Update tbl_bugs_tdatesperiod
	Set "PeriodCODE" = 'MIS-09'
	Where "PeriodCODE" = 'OIS-09';
	PERFORM BugsTransferLog('tbl_bugs_tdatesperiod','U','SET PeriodCODE = "MIS-09" WHERE PeriodCODE = "OIS-09"');

	Update tbl_bugs_tdatesperiod
	Set "PeriodCODE" = 'MIS-13'
	Where "PeriodCODE" = 'OIS-13';
	PERFORM BugsTransferLog('tbl_bugs_tdatesperiod','U','SET PeriodCODE = "MIS-13" WHERE PeriodCODE = "OIS-13"');
	--RAISE INFO 'TDatesGroupsUpdate():  FINISHED WITH THE UPDATES';
END;
$$;


--
-- TOC entry 1236 (class 1255 OID 16776)
-- Name: tperiodupdates(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION tperiodupdates() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	col_name	VARCHAR;
	datatype	VARCHAR;
	tbl_name	VARCHAR;
BEGIN
	/*
	-- For safety consider:
	UPDATE tbl_bugs_tdatesperiod
	SET "PeriodCODE" = 'Unknown'
	WHERE "PeriodCODE" = '?';
	*/

	-- missing relative_age_type = "Geological period"
	IF ExistsTableOneColumnValue('tbl_relative_age_types','age_type','Geological period') IS FALSE THEN
		INSERT INTO tbl_relative_age_types (
			relative_age_type_id,
			age_type,
			description,
			date_updated
		)
		VALUES(
			nextval('tbl_relative_age_types_relative_age_type_id_seq'),
			'Geological period',
			'Subdivision of geological time period which is divided into epochs.',
			Now()
		);
		PERFORM BugsTransferLog('tbl_relative_age_types','I',currval('tbl_relative_age_types_relative_age_type_id_seq'),'Geological period');
	END IF;

	/*
	-- commented out due to fixed elsewhere (Update locations + importLocations)
	-- 20140404 Erik J. Eriksson	
	IF ExistsTableColumnValues('tbl_locations',ARRAY[
		ARRAY['location_name','varchar','World'],
		ARRAY['location_type_id','integer',
			GetTableIdByOneColumnNameValue('tbl_location_types',
				'location_type_id','location_type',
				'Aggregate/non-admin geographical region'
				)::VARCHAR
	]]) IS FALSE THEN
		INSERT INTO tbl_locations(
				location_id,
				location_name,
				location_type_id,
				default_lat_dd,
				default_long_dd,
				date_updated )
		VALUES (
				nextval('tbl_locations_location_id_seq'),
				'World',
				GetTableIdByOneColumnNameValue('tbl_location_types','location_type_id','location_type','Aggregate/non-admin geographical region'),
				NULL,
				NULL,
				Now() );
		PERFORM BugsTransferLog('tbl_locations','I',currval('tbl_locations_location_id_seq'),'TPeriodUpdates()');
	END IF;

	IF ExistsTableColumnValues('tbl_locations',ARRAY[
		ARRAY['location_name','varchar','Eastern Mediterranean'],
		ARRAY['location_type_id','integer',
			GetTableIdByOneColumnNameValue('tbl_location_types',
				'location_type_id','location_type',
				'Aggregate/non-admin geographical region'
				)::VARCHAR
	]]) IS FALSE THEN
		INSERT INTO tbl_locations(
				location_id,
				location_name,
				location_type_id,
				default_lat_dd,
				default_long_dd,
				date_updated )
		VALUES (
				nextval('tbl_locations_location_id_seq'),
				'Eastern Mediterranean',
				GetTableIdByOneColumnNameValue('tbl_location_types','location_type_id','location_type','Aggregate/non-admin geographical region'),
				NULL,
				NULL,
				Now() );
		PERFORM BugsTransferLog('tbl_locations','I',currval('tbl_locations_location_id_seq'),'TPeriodUpdates()');
	END IF;

	IF ExistsTableColumnValues('tbl_locations',ARRAY[
		ARRAY['location_name','varchar','New World'],
		ARRAY['location_type_id','integer',
			GetTableIdByOneColumnNameValue('tbl_location_types',
				'location_type_id','location_type',
				'Aggregate/non-admin geographical region'
				)::VARCHAR
	]]) IS FALSE THEN
		INSERT INTO tbl_locations(
				location_id,
				location_name,
				location_type_id,
				default_lat_dd,
				default_long_dd,
				date_updated )
		VALUES (
				nextval('tbl_locations_location_id_seq'),
				'New World',
				GetTableIdByOneColumnNameValue('tbl_location_types','location_type_id','location_type','Aggregate/non-admin geographical region'),
				NULL,
				NULL,
				Now() );
		PERFORM BugsTransferLog('tbl_locations','I',currval('tbl_locations_location_id_seq'),'TPeriodUpdates()');
	END IF;

	IF ExistsTableColumnValues('tbl_locations',ARRAY[
		ARRAY['location_name','varchar','Europe'],
		ARRAY['location_type_id','integer',
			GetTableIdByOneColumnNameValue('tbl_location_types',
				'location_type_id','location_type',
				'Continent'
				)::VARCHAR
	]]) IS FALSE THEN
		INSERT INTO tbl_locations(
				location_id,
				location_name,
				location_type_id,
				default_lat_dd,
				default_long_dd,
				date_updated )
		VALUES (
				nextval('tbl_locations_location_id_seq'),
				'Europe',
				GetTableIdByOneColumnNameValue('tbl_location_types','location_type_id','location_type','Continent'),
				NULL,
				NULL,
				Now() );
		PERFORM BugsTransferLog('tbl_locations','I',currval('tbl_locations_location_id_seq'),'TPeriodUpdates()');
	END IF;


	IF ExistsTableColumnValues('tbl_locations',ARRAY[
		ARRAY['location_name','varchar','North America'],
		ARRAY['location_type_id','integer',
			GetTableIdByOneColumnNameValue('tbl_location_types',
				'location_type_id','location_type',
				'Continent'
				)::VARCHAR
	]]) IS FALSE THEN
		INSERT INTO tbl_locations(
				location_id,
				location_name,
				location_type_id,
				default_lat_dd,
				default_long_dd,
				date_updated )
		VALUES (
				nextval('tbl_locations_location_id_seq'),
				'North America',
				GetTableIdByOneColumnNameValue('tbl_location_types','location_type_id','location_type','Continent'),
				NULL,
				NULL,
				Now() );
		PERFORM BugsTransferLog('tbl_locations','I',currval('tbl_locations_location_id_seq'),'TPeriodUpdates()');
	END IF;

	IF ExistsTableColumnValues('tbl_locations',ARRAY[
		ARRAY['location_name','varchar','North & South America'],
		ARRAY['location_type_id','integer',
			GetTableIdByOneColumnNameValue('tbl_location_types',
				'location_type_id','location_type',
				'Aggregate/non-admin geographical region'
				)::VARCHAR
	]]) IS FALSE THEN
		RAISE NOTICE 'Inserting North & South America into tbl_locations';
		INSERT INTO tbl_locations(
				location_id,
				location_name,
				location_type_id,
				default_lat_dd,
				default_long_dd,
				date_updated )
		VALUES (
				nextval('tbl_locations_location_id_seq'),
				'North & South America',
				GetTableIdByOneColumnNameValue('tbl_location_types','location_type_id','location_type','Aggregate/non-admin geographical region'),
				NULL,
				NULL,
				Now() );
		PERFORM BugsTransferLog('tbl_locations','I',currval('tbl_locations_location_id_seq'),'TPeriodUpdates()');
	END IF;
	*/
	
/*
	UPDATE	tbl_bugs_tperiods
	SET	"PeriodGeog" = 'Germany'
	WHERE	"PeriodGeog" = 'Germany';
	*/

	IF ExistsTableOneColumnValue('tbl_relative_age_types','age_type','Geological') IS FALSE THEN
		INSERT INTO tbl_relative_age_types(
				relative_age_type_id,
				age_type,
				description,
				date_updated )
		VALUES (
				nextval('tbl_relative_age_types_relative_age_type_id_seq'),
				'Geological',
				'General geological age. Either crosses established temporal type definitions, or may need correctly assigning.',
				Now() );
		PERFORM BugsTransferLog('tbl_relative_age_types','I',currval('tbl_relative_age_types_relative_age_type_id_seq'),'Geological');
				
	END IF;

	IF ExistsTableOneColumnValue('tbl_relative_age_types','age_type','Other age type') IS FALSE THEN
		INSERT INTO tbl_relative_age_types(
				relative_age_type_id,
				age_type,
				description,
				date_updated )
		VALUES (
				nextval('tbl_relative_age_types_relative_age_type_id_seq'),
				'Other age type',
				'Age type either undefined or questioned',
				Now() );
		PERFORM BugsTransferLog('tbl_relative_age_types','I',currval('tbl_relative_age_types_relative_age_type_id_seq'),'Other age type');
	END IF;

	-- "PeriodGeog"
	UPDATE	tbl_bugs_tperiods
	SET	"PeriodGeog" = 'United Kingdom'
	WHERE	"PeriodGeog" = 'UK';
	PERFORM BugsTransferLog('tbl_bugs_tperiods','U','SET PeriodGeog = United Kingdom WHERE PeriodGeog = UK');

	update tbl_bugs_tperiods
	set 
	   "PeriodName" = 'Interglacial, uncertain age',
	   "PeriodCODE" = 'InterG',
	   "PeriodDesc" = 'Samples from interglacial period of uncertain time origin'
	where "PeriodName" = 'unknown/not given';
	PERFORM BugsTransferLog('tbl_bugs_tperiods','U','SET PeriodName = Interglacial of uncertain age WHERE PeriodName = unknown/not given');

	-- "PeriodType"
	UPDATE tbl_bugs_tperiods
	SET	"PeriodType" = 'Archaeological period'
	WHERE 	"PeriodType" = 'Archaeological';
	PERFORM BugsTransferLog('tbl_bugs_tperiods','U','SET PeriodType = Archaeological period WHERE PeriodType = Archaeological');

	UPDATE 	tbl_bugs_tperiods
	SET	"PeriodType" = 'Geological period'
	WHERE 	"PeriodType" = 'Geological';
	PERFORM BugsTransferLog('tbl_bugs_tperiods','U','SET PeriodType = Archaeological period WHERE PeriodType = Archaeological');

	UPDATE 	tbl_bugs_tperiods
	SET	"PeriodType" = 'Other age type'
	WHERE 	"PeriodType" = 'Other';
	PERFORM BugsTransferLog('tbl_bugs_tperiods','U','SET PeriodType = Other age type WHERE PeriodType = Other');

	UPDATE 	tbl_bugs_tperiods
	SET	"PeriodType" = 'Historical period'
	WHERE 	"PeriodType" = 'Historical';
	PERFORM BugsTransferLog('tbl_bugs_tperiods','U','SET PeriodType = Historical period WHERE PeriodType = Historical');

	-- "YearsType"
	UPDATE 	tbl_bugs_tperiods
	SET	"YearsType" = 'Calendar'
	WHERE	"YearsType" = 'Calender';
	PERFORM BugsTransferLog('tbl_bugs_tperiods','U','SET YearsType = Calendar WHERE YearsType = Calender');

	-- "Begin"
	UPDATE tbl_bugs_tperiods
	SET "Begin" = null 
	where "Begin" = 0 and "PeriodName" like 'Oxygen Isotop%' and "PeriodName" not like '%Stage 1';
	PERFORM BugsTransferLog('tbl_bugs_tperiods','U','SET Begin = null WHERE Begin = 0 and PeriodName like Oxygen Isotop% and PeriodName not like %Stage 1');

	-- "PeriodCode"
	-- Bug 233 Fix
	UPDATE tbl_bugs_tperiods 
	SET "PeriodCODE" = 'Unknown'
	WHERE "PeriodCODE" = '?';
	PERFORM BugsTransferLog('tbl_bugs_tperiods','U','SET PeriodCODE = Unknown, Islamic Republic of WHERE PeriodCODE = ?');
	/*
	-- doing table construction alteration loses data at this point. moved to structural changes script.
	-- Erik J. Eriksson 20140404
	-- alter column names if not done so
	SELECT 	col_name,datatype,tbl_name
	INTO 	col_name,datatype,tbl_name
	FROM 	information_schema.columns
	WHERE	column_name = 'Begin';

	IF datatype != 'numeric' AND tbl_name = 'tbl_bugs_tperiods' THEN
		ALTER TABLE tbl_bugs_tperiods
		ALTER COLUMN "Begin" TYPE NUMERIC(20,5)
		USING string_to_numeric("Begin");
		PERFORM BugsTransferLog('tbl_bugs_tperiods','O','ALTER COLUMN Begin TYPE NUMERIC(20,5)');
	END IF;

	SELECT 	col_name,datatype,tbl_name
	INTO 	col_name,datatype,tbl_name
	FROM 	information_schema.columns
	WHERE	column_name = 'End';

	IF datatype != 'numeric' AND tbl_name = 'tbl_bugs_tperiods' THEN
		ALTER TABLE tbl_bugs_tperiods
		ALTER COLUMN "End" TYPE NUMERIC(20,5)
		USING string_to_numeric("End");
		PERFORM BugsTransferLog('tbl_bugs_tperiods','O','ALTER COLUMN End TYPE NUMERIC(20,5)');
	END IF;
	*/
	/*
	ALTER TABLE tbl_bugs_tperiods
	ALTER COLUMN "Begin" TYPE NUMERIC(20,5)
	USING string_to_numeric("Begin"),
	ALTER COLUMN "End" TYPE NUMERIC(20,5)
	USING string_to_numeric("End");
	*/
	
END;
$$;


--
-- TOC entry 1241 (class 1255 OID 16778)
-- Name: updatecountsheetdata(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION updatecountsheetdata() RETURNS boolean
    LANGUAGE plpgsql
    AS $$
BEGIN
	-- bugs data cleaning
	-- clean the data in countsheets needing to be edited before import
	UPDATE 	tbl_bugs_tcountsheet
	SET	"SheetType" = 'Presence/Absence'
	WHERE	"CountsheetCODE" = 'COUN001414' 
	 And "SheetType" is null;
	PERFORM BugsTransferLog('tbl_bugs_tcountsheet','U','SheetType = Presence/Absence WHERE CountsheetCODE = COUN001414');

	UPDATE 	tbl_bugs_tcountsheet
	SET	"SheetType" = 'Presence/Absence'
	WHERE	"CountsheetCODE" = 'COUN001127';
	PERFORM BugsTransferLog('tbl_bugs_tcountsheet','U','SheetType = Presence/Absence WHERE CountsheetCODE = COUN001127');

	UPDATE 	tbl_bugs_tcountsheet
	SET	"SheetType" = 'Presence/Absence'
	WHERE	"CountsheetCODE" = 'COUN001127';
	PERFORM BugsTransferLog('tbl_bugs_tcountsheet','U','SheetType = Presence/Absence WHERE CountsheetCODE = COUN001127');

	UPDATE 	tbl_bugs_tcountsheet
	SET	"SheetType" = 'Abundances'
	WHERE	"CountsheetCODE" = 'COUN001363'
	  And "SheetType" is null;
	PERFORM BugsTransferLog('tbl_bugs_tcountsheet','U','SheetType = Presence/Absence WHERE CountsheetCODE = COUN001363');

	-- remove trivial countsheets from bugs table before import
	DELETE FROM tbl_bugs_tcountsheet
	WHERE	"CountsheetCODE" = 'COUN000509';
	PERFORM BugsTransferLog('tbl_bugs_tcountsheet','U','SheetType = Presence/Absence WHERE CountsheetCODE = COUN000509');

	DELETE FROM tbl_bugs_tcountsheet
	WHERE	"CountsheetCODE" = 'COUN000733';
	PERFORM BugsTransferLog('tbl_bugs_tcountsheet','U','SheetType = Presence/Absence WHERE CountsheetCODE = COUN000733');

	-- sead data cleaning
	-- fix badly named sead sample groups
	-- this should not be a problem when running from a completely new item, adding check before each 
	-- update, Erik J. Eriksson 20140415
	
	UPDATE tbl_sample_groups SET sample_group_name='Roberts Creek European Spp' 
	WHERE sample_group_id=GetSampleGroupIdByCountsheetCode('COUN000507')
	and not (sample_group_name = 'Roberts Creek European Spp');
	PERFORM BugsTransferLog('tbl_sample_groups','U','SET sample_group_name = Roberts Creek European Spp WHERE CountsheetCODE = COUN000507');

	UPDATE tbl_sample_groups SET sample_group_name='Langelandselv 443a_bugsdata' 
	WHERE sample_group_id=GetSampleGroupIdByCountsheetCode('COUN000558')
	and not (sample_group_name='Langelandselv 443a_bugsdata');
	PERFORM BugsTransferLog('tbl_sample_groups','U','SET sample_group_name = Langelandselv 443a_bugsdata WHERE CountsheetCODE = COUN000558');
	
	UPDATE tbl_sample_groups SET sample_group_name='Langelandselv 443b_bugsdata' 
	WHERE sample_group_id=GetSampleGroupIdByCountsheetCode('COUN000573')
	and not (sample_group_name='Langelandselv 443b_bugsdata');
	PERFORM BugsTransferLog('tbl_sample_groups','U','SET sample_group_name = Langelandselv 443b_bugsdata WHERE CountsheetCODE = COUN000573');

	UPDATE tbl_sample_groups SET sample_group_name='Hull 37 High Street' 
	WHERE sample_group_id=GetSampleGroupIdByCountsheetCode('COUN000666')
	and not (sample_group_name='Hull 37 High Street');
	PERFORM BugsTransferLog('tbl_sample_groups','U','SET sample_group_name = Hull 37 High Street WHERE CountsheetCODE = COUN000666');
	
	UPDATE tbl_sample_groups SET sample_group_name='Winchester The Brooks Complete List 1996' 
	WHERE sample_group_id=GetSampleGroupIdByCountsheetCode('COUN000780')
	and not (sample_group_name='Winchester The Brooks Complete List 1996');
	PERFORM BugsTransferLog('tbl_sample_groups','U','SET sample_group_name = Winchester The Brooks Complete List 1996 WHERE CountsheetCODE = COUN000780');
	
	UPDATE tbl_sample_groups SET sample_group_name='Hull Magistrates Court 1' 
	WHERE sample_group_id=GetSampleGroupIdByCountsheetCode('COUN000784')
	and not (sample_group_name='Hull Magistrates Court 1');
	PERFORM BugsTransferLog('tbl_sample_groups','U','SET sample_group_name = Hull Magistrates Court 1 WHERE CountsheetCODE = COUN000784');

	UPDATE tbl_sample_groups SET sample_group_name='Hoxne: Ashton et al.' 
	WHERE sample_group_id=GetSampleGroupIdByCountsheetCode('COUN000852')
	and not (sample_group_name='Hoxne: Ashton et al.');
	PERFORM BugsTransferLog('tbl_sample_groups','U','SET sample_group_name = Hoxne: Ashton et al. WHERE CountsheetCODE = COUN000852');

	-- drop the .xls and .XLS from the count sheet name
	--Update tbl_bugs_tcountsheet
	--set "CountsheetName" = left("CountsheetName", strpos("CountsheetName", '.') -1);
	
	
	RETURN TRUE;
END;
$$;


--
-- TOC entry 1242 (class 1255 OID 16779)
-- Name: updatedatinguncertainty(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION updatedatinguncertainty() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	
BEGIN
	--build the lookup table
	IF ExistsTableOneColumnValue('tbl_dating_uncertainty','uncertainty','Ca.') IS FALSE THEN
		INSERT INTO tbl_dating_uncertainty(
			dating_uncertainty_id,
			uncertainty,
			description,
			date_updated
		)
		VALUES (
			nextval('tbl_dating_uncertainty_dating_uncertainty_id_seq'),
			'Ca.',
			'Indication that the date is approximate, with unspecified or unquantifiable errors.',
			Now()
		);
		PERFORM BugsTransferLog('tbl_dating_uncertainty','I',currval('tbl_dating_uncertainty_dating_uncertainty_id_seq'),'Ca.');
	END IF;

	IF ExistsTableOneColumnValue('tbl_dating_uncertainty','uncertainty','<') IS FALSE THEN
		INSERT INTO tbl_dating_uncertainty(
			dating_uncertainty_id,
			uncertainty,
			description,
			date_updated
		)
		VALUES (
			nextval('tbl_dating_uncertainty_dating_uncertainty_id_seq'),
			'<',
			'(For radiometric dates only). Oldest possible age of sample, often representing open ended dating where only one extreme limit is known. Occasionally used as part of a >< pair to define approximate age range.',
			Now()
		);
		PERFORM BugsTransferLog('tbl_dating_uncertainty','I',currval('tbl_dating_uncertainty_dating_uncertainty_id_seq'),'<');
	END IF;

	IF ExistsTableOneColumnValue('tbl_dating_uncertainty','uncertainty','>') IS FALSE THEN
		INSERT INTO tbl_dating_uncertainty(
			dating_uncertainty_id,
			uncertainty,
			description,
			date_updated
		)
		VALUES (
			nextval('tbl_dating_uncertainty_dating_uncertainty_id_seq'),
			'>',
			'(For radiometric dates only). Youngest possible age of sample, often representing open ended dating where only one extreme limit is known. Occasionally used as part of a >< pair to define approximate age range.',
			Now()
		);
		PERFORM BugsTransferLog('tbl_dating_uncertainty','I',currval('tbl_dating_uncertainty_dating_uncertainty_id_seq'),'>');
	END IF;

	IF ExistsTableOneColumnValue('tbl_dating_uncertainty','uncertainty','From') IS FALSE THEN
		INSERT INTO tbl_dating_uncertainty(
			dating_uncertainty_id,
			uncertainty,
			description,
			date_updated
		)
		VALUES (
			nextval('tbl_dating_uncertainty_dating_uncertainty_id_seq'),
			'From',
			'Oldest possible age of sample, usually part of a from-to pair, but could be used to represent open ended dating.',
			Now()
		);
		PERFORM BugsTransferLog('tbl_dating_uncertainty','I',currval('tbl_dating_uncertainty_dating_uncertainty_id_seq'),'From');
	END IF;

	IF ExistsTableOneColumnValue('tbl_dating_uncertainty','uncertainty','To') IS FALSE THEN
		INSERT INTO tbl_dating_uncertainty(
			dating_uncertainty_id,
			uncertainty,
			description,
			date_updated
		)
		VALUES (
			nextval('tbl_dating_uncertainty_dating_uncertainty_id_seq'),
			'To',
			'Youngest possible age of sample, usually part of a from-to pair, but could be used to represent open ended dating.',
			Now()
		);
		PERFORM BugsTransferLog('tbl_dating_uncertainty','I',currval('tbl_dating_uncertainty_dating_uncertainty_id_seq'),'To');
	END IF;

	IF ExistsTableOneColumnValue('tbl_dating_uncertainty','uncertainty','From ca.') IS FALSE THEN
		INSERT INTO tbl_dating_uncertainty(
			dating_uncertainty_id,
			uncertainty,
			description,
			date_updated
		)
		VALUES (
			nextval('tbl_dating_uncertainty_dating_uncertainty_id_seq'),
			'From ca.',
			'Approximate oldest possible age of sample, usually part of a from-to pair, but could be used to represent open ended dating.',
			Now()
		);
		PERFORM BugsTransferLog('tbl_dating_uncertainty','I',currval('tbl_dating_uncertainty_dating_uncertainty_id_seq'),'From ca.');
	END IF;

	IF ExistsTableOneColumnValue('tbl_dating_uncertainty','uncertainty','To ca.') IS FALSE THEN
		INSERT INTO tbl_dating_uncertainty(
			dating_uncertainty_id,
			uncertainty,
			description,
			date_updated
		)
		VALUES (
			nextval('tbl_dating_uncertainty_dating_uncertainty_id_seq'),
			'To ca.',
			'Approximate youngest possible age of sample, usually part of a from-to pair, but could be used to represent open ended dating.',
			Now()
		);
		PERFORM BugsTransferLog('tbl_dating_uncertainty','I',currval('tbl_dating_uncertainty_dating_uncertainty_id_seq'),'To ca.');
	END IF;

	IF ExistsTableOneColumnValue('tbl_dating_uncertainty','uncertainty','?') IS FALSE THEN
		INSERT INTO tbl_dating_uncertainty(
			dating_uncertainty_id,
			uncertainty,
			description,
			date_updated
		)
		VALUES (
			nextval('tbl_dating_uncertainty_dating_uncertainty_id_seq'),
			'?',
			'Dating is disputable.',
			Now()
		);
		PERFORM BugsTransferLog('tbl_dating_uncertainty','I',currval('tbl_dating_uncertainty_dating_uncertainty_id_seq'),'?');
	END IF;
END;
$$;


--
-- TOC entry 1243 (class 1255 OID 16780)
-- Name: updateecocodedata(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION updateecocodedata() RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	--Update statements here
	
END;
$$;


--
-- TOC entry 1244 (class 1255 OID 16781)
-- Name: updatemethodgroups(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION updatemethodgroups() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN
	IF ExistsTableOneColumnValue('tbl_method_groups','group_name','Dating by other method') IS FALSE THEN
		INSERT INTO tbl_method_groups(
			method_group_id,
			date_updated,
			description,
			group_name
		)
		VALUES (
			nextval('tbl_method_groups_method_group_id_seq'),
			Now(),
			'Dating methods not assignable to calendar, radiometric or period based. Includes methods based on geological properties other than stratigraphic correlation (e.g. palaeomagnetism, weathering), curve matching (e.g. wiggle matching of 14C dates) or less common methods such as fission tracking or hydration.',
			'Dating by other method'
		);
		PERFORM BugsTransferLog('tbl_method_groups','I',currval('tbl_method_groups_method_group_id_seq'),'Dating by other method');
	END IF;

	IF ExistsTableOneColumnValue('tbl_method_groups','group_name','Dating by radiation exposure methods') IS FALSE THEN
		INSERT INTO tbl_method_groups(
			method_group_id,
			date_updated,
			description,
			group_name
		)
		VALUES (
			nextval('tbl_method_groups_method_group_id_seq'),
			Now(),
			'Dating methods which rely on the accumulation of energy in the material to be dated post genesis, heating or deposition.',
			'Dating by radiation exposure methods'
		);
		PERFORM BugsTransferLog('tbl_method_groups','I',currval('tbl_method_groups_method_group_id_seq'),'Dating by radiation exposure methods');
	END IF;
END;
$$;


--
-- TOC entry 1245 (class 1255 OID 16782)
-- Name: updatemethods(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION updatemethods() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	dm	VARCHAR;
	new_dm	VARCHAR;
	bmper	tmethodcheck;
	log_record record;
BEGIN
	-- Fix the sequencing error in tbl_methods_method_id_seq
	-- commented out as the function SyncSequences() now exists. Erik Eriksson 20140415.
	--PERFORM setval('tbl_methods_method_id_seq', (SELECT MAX(method_id) FROM tbl_methods));

	PERFORM AddMethodIfNeeded(
		method_name := 'Pollen Zonation',
		abbrev      := 'PollenZone', 
		group_name  := 'Dating to period', 
		unit        := '14C years',
		description := 'Age determined by comparison of pollen flora with reference data. A number of standard regional pollen zones have been determined through the compilation and zonation of multiple pollen profiles. Zonation is general achieved through the identification of significant changes in fauna (e.g. from birch to pine dominated), either manually or through cluster analysis.'
		);
		
	PERFORM AddMethodIfNeeded(
		method_name := 'Archaeological period calendar years',
		abbrev      := 'ArchPerCal', 
		group_name  := 'Dating to period', 
		unit        := 'Years',
		description := 'Age determined by comparison of pollen flora with reference data. A number of standard regional pollen zones have been determined through the compilation and zonation of multiple pollen profiles. Zonation is general achieved through the identification of significant changes in fauna (e.g. from birch to pine dominated), either manually or through cluster analysis.'
		);
		
	PERFORM AddMethodIfNeeded(
		method_name := 'Archaeological period C14 years',
		abbrev      := 'ArchPerC14', 
		group_name  := 'Dating to period', 
		unit        := '14C years',
		description := 'Age determined to an archaeological period defined in 14C years. This is a bulk method for numerous techniques for assigning a deposit to a particular cultural period, where the period boundaries have been defined by radiocarbon dating. More specific method details should preferably be given as to how the date has been derived, but may not be available.'
		);
		
	PERFORM AddMethodIfNeeded(
		method_name := 'Historical Period',
		abbrev      := 'HistPer', 
		group_name  := 'Dating to period', 
		unit        := 'Years',
		description := 'Age determined to historical period. More specific method details should preferably be given as to how the date has been derived, but may not be available.'
		);		
	
	PERFORM AddMethodIfNeeded(
		method_name := 'Geological calendar period',
		abbrev      := 'GeolPerCal', 
		group_name  := 'Dating to period', 
		unit        := 'Years',
		description := 'Age determined to geological period defined in calendar years. More specific method details should preferably be given as to how the date has been derived, but may not be available.'
		);	
		
	PERFORM AddMethodIfNeeded(
		method_name := 'Geological C14 period',
		abbrev      := 'GeolPerC14', 
		group_name  := 'Dating to period', 
		unit        := '14C years',
		description := 'Age determined to geological period defined in C14 years. More specific method details should preferably be given as to how the date has been derived, but may not be available.'
		);			
	
	PERFORM AddMethodIfNeeded(
		method_name := 'Geological radiometric period',
		abbrev      := 'GeolPerRadio', 
		group_name  := 'Dating to period', 
		unit        := 'undefined uncalibrated years',
		description := 'Age determined to geological period defined by radiometric methods but not necessarily radiocarbon (e.g. U-series). More specific method details should preferably be given as to how the date has been derived, but may not be available.'
		);			
	
	PERFORM AddMethodIfNeeded(
		method_name := 'Stratigraphic (Geological)',
		abbrev      := 'Strat(Geol)', 
		group_name  := 'Dating to period', 
		unit        := 'undefined uncalibrated years',
		description := 'Dating through strategraphic association, placing the sediment (and enclosed artefacts) in the context of geological layers of known or unknown age.'
		);			

	PERFORM AddMethodIfNeeded(
		method_name := 'Tephrochronology Calendar',
		abbrev      := 'TephraCal', 
		group_name  := 'Dating to calendar year(s)', 
		unit        := 'Years',
		description := 'Dating by relation to volcanic ash layer of a known calendar age.'
		);			

	PERFORM AddMethodIfNeeded(
		method_name := 'Tephrochronology C14',
		abbrev      := 'TephraC14', 
		group_name  := 'Dating to calendar year(s)',
		unit        := '14C years',
		description := 'Dating by relation to volcanic ash layer dated by radiocarbon.'
		);			

	-- TODO: verify the comment in bug 313 Typo becomes TypoCal and TypoRadio
	PERFORM AddMethodIfNeeded(
		method_name := 'Artefact typology (calendar years)',
		abbrev      := 'TypoCal', 
		group_name  := 'Dating to period', 
		unit        := 'Years',
		description := 'Dating by artefact typology with calendar date. The form, design and material of an artefact may allow it to be placed in the context of a known sequence of artefact characteristics (a typological sequence). This allows it to be dated through the assumption that the typologies are correctly and independently dated. There is a slight danger or circular reasoning is the constraints of independent dating are not rigourously enforced, and a tendency for typologies to persist even if evidence suggests that there may be problems.'
		);
	
	PERFORM AddMethodIfNeeded(
		method_name := 'Artefact typology (radiometric years)',
		abbrev      := 'TypoRadio', 
		group_name  := 'Dating to period', 
		unit        := 'undefined uncalibrated years',
		description := 'Dating by artefact typology with radiometric date. The form, design and material of an artefact may allow it to be placed in the context of a known sequence of artefact characteristics (a typological sequence). This allows it to be dated through the assumption that the typologies are correctly and independently dated. There is a slight danger or circular reasoning is the constraints of independent dating are not rigourously enforced, and a tendency for typologies to persist even if evidence suggests that there may be problems.'
		);

	-- "ArchCal" (in TDatesCalendar)
	PERFORM AddMethodIfNeeded(
		method_name := 'Other archaeological dating',
		abbrev      := 'ArchCal', 
		group_name  := 'Dating to calendar year(s)',
		unit        := 'Years',
		description := 'Unspecified dating method leading to an archaeological date in calendar years.'
		);

	-- Wiggle
	PERFORM AddMethodIfNeeded(
		method_name := 'Wiggle matching of 14C dates',
		abbrev      := 'Wiggle', 
		group_name  := 'Dating to calendar year(s)',
		unit        := 'Years',
		description := 'A sequence of radiocarbon dates may be compared with variation in the C14 calibration curve, and dates nudged so that they align with the curve. The method requires a sequence to be tightly dated and may be especially useful around flatter parts of the calibration curve. User discretion is required.'
		);

	-- Lichen
	PERFORM AddMethodIfNeeded(
		method_name := 'Lichenometry',
		abbrev      := 'Lichen', 
		group_name  := 'Dating to calendar year(s)',
		unit        := 'Years',
		description := 'Dating method which relies on the predictable growth pattern of some lichen species. Some lichens (e.g. Rhizocarpon geographicum) exhibit colonisation, linear growth and non-linear phases of growth. By calibrating sizes against surfaces of known age (e.g. buildings, grave stones) it is possible to guage the age of exposure of a surface through the sizes of the lichens growing on it. A number of variations exist in terms of how to measure. The method has been applied to historical and archaeological remains as well as to geological features such as erosion surfaces and raised beaches.'
		);

	-- UnknownCal
	PERFORM AddMethodIfNeeded(
		method_name := 'Calendar date by unknown method',
		abbrev      := 'UnknownCal', 
		group_name  := 'Dating to calendar year(s)',
		unit        := 'Years',
		description := 'Calendar years derived by unknown or unspecified method.'
		);

	-- GeolCal
	PERFORM AddMethodIfNeeded(
		method_name := 'Geologically derived calendar date',
		abbrev      := 'GeolCal', 
		group_name  := 'Dating to calendar year(s)',
		unit        := 'Years',
		description := 'Derivation of calendar date by reference to  geological processes, features or events (e.g. volcanic eruption, earthquake).'
		);

	-- HistCal
	PERFORM AddMethodIfNeeded(
		method_name := 'Historical Records',
		abbrev      := 'HistCal', 
		group_name  := 'Dating to calendar year(s)',
		unit        := 'Years',
		description := 'Dating based on historical documentation.'
		);

	-- UnknownOther
	PERFORM AddMethodIfNeeded(
		method_name := 'Other date by unknown method',
		abbrev      := 'UnknownOther', 
		group_name  := 'Dating by other method',
		unit        := 'undefined uncalibrated years',
		description := 'Unspecified dating method.'
		);

	-- U234/U238
	PERFORM AddMethodIfNeeded(
		method_name := 'U-Series U234/U238',
		abbrev      := 'U234/U238', 
		group_name  := 'Dating by radiometric methods',
		unit        := 'undefined uncalibrated years',
		description := ''
		);
	
	-- U-Series
	PERFORM AddMethodIfNeeded(
		method_name := 'Uranium-Series (general)',
		abbrev      := 'U-Series', 
		group_name  := 'Dating by radiometric methods',
		unit        := 'undefined uncalibrated years',
		description := ''
		);

	-- C14 Unspec.
	PERFORM AddMethodIfNeeded(
		method_name := 'Radiocarbon (14C Unspecified)',
		abbrev      := 'C14 Unspec.', 
		group_name  := 'Dating by radiometric methods',
		unit        := '14C years',
		description := 'Dating by a radiocarbon method, the details of which are not provided in the publication or supporting material.'
		);

	-- UnknownRadio
	PERFORM AddMethodIfNeeded(
		method_name := 'Radiometric date by unknown method',
		abbrev      := 'UnknownRadio', 
		group_name  := 'Dating by radiometric methods',
		unit        := '14C years',
		description := 'Dating by an unspecified radiometric method (information missing in publication).'
		);

	-- TL
	PERFORM AddMethodIfNeeded(
		method_name := 'Thermoluminescence',
		abbrev      := 'TL', 
		group_name  := 'Dating by radiation exposure methods',
		unit        := 'undefined uncalibrated years',
		description := ''
		);

	-- C14 Std
	PERFORM AddMethodIfNeeded(
		method_name := 'C14 Conventional',
		abbrev      := 'C14 Std', 
		group_name  := 'Dating by radiometric methods',
		unit        := '14C years',
		description := 'Conventional Carbon-14 dating. Uncalibrated dates.',
		record_type := 'Non-biological taxa'
		);

	-- AAR
	PERFORM AddMethodIfNeeded(
		method_name := 'Amino Acid Racemization',
		abbrev      := 'AAR', 
		group_name  := 'Dating by radiometric methods',
		unit        := 'undefined uncalibrated years',
		description := 'Age determination based on the post-mortem decay (or racemization/epimerization) of amino acids in fossils. The method has primarily been used to date shells, and less sucessfully on bone, teeth and wood under some conditions.'
		);

	--C14 Humous
	PERFORM AddMethodIfNeeded(
		method_name := 'C14 dating of humic substances in sediment',
		abbrev      := 'C14 Humous', 
		group_name  := 'Dating by radiometric methods',
		unit        := '14C years',
		description := 'Age determination by radiocarbon on humic substances extracted by pretreatment of sediments (e.g. peat, colluvium). A number of method variations are applied, aimed at dating different fractions of the sample (as opposed to the bulk dating of organic matter), including: humic acid fraction (alkali soluble) and humin fraction (alkali insoluble). Modern dates are generally determined through AMS, but older dates may have been aquired through standard counting.'
		);

	/*
	-- Dendro:  This is an update due to changes to the Sead Dendro method_abbrev_or_alt_name
	Change from:
	
	description: "The analysis of woody plant remains, most commonly from trees.
Specimens are commonly extracted in association with plant or insect anlayses, washed and then a clean cross section is examined under a binocular microscope for identification in comparison with reference materal and keys."
	method_name: "Wood analysis"
	method_group_id: 1
	record_type: 2
	unit_id: NULL
	*/
	
	UPDATE tbl_methods
	SET (   description,
		method_name,
		method_group_id,
		record_type_id,
		unit_id) = 
		('Dating by comparison of tree-ring sequences.',
		'Dendrochronology',
		GetTableIdByOneColumnNameValue('tbl_method_groups',
				'method_group_id','group_name',
				'Dating to calendar year(s)' ),		--LookupIdOnColumn('Dating to calendar year(s)'), for method_group_id on group_name
		NULL,
		GetTableIdByOneColumnNameValue('tbl_units',
				'unit_id','unit_name',
				'14C years' )			--LookupIdOnColumn('14C years') --unit_id on unit_name
		)
	WHERE	method_abbrev_or_alt_name = 'Dendro';
	PERFORM BugsTransferLog('tbl_methods','U','UpdateMethods():Dendro');
/*
	UPDATE tbl_methods
	SET method_abbrev_or_alt_name = 'Dendrochronology'
	WHERE method_name = 'Dendrochronology';
*/

	-- delete erroneous dates objects.
	delete from tbl_bugs_tdatescalendar
	where "Date" is null and 
	("SampleCODE" = 'SAMP000877' and "CalendarCODE" = 'CALE000357') or
	("SampleCODE" = 'SAMP000364' and "CalendarCODE" = 'CALE000086') or 
	("SampleCODE" = 'SAMP000390' and "CalendarCODE" = 'CALE000087') or
	("SampleCODE" = 'SAMP000512' and "CalendarCODE" = 'CALE000090') or
	("SampleCODE" = 'SAMP001233' and "CalendarCODE" = 'CALE000162') or
	("SampleCODE" = 'SAMP001591' and "CalendarCODE" = 'CALE000235') or
	("SampleCODE" = 'SAMP001685' and "CalendarCODE" = 'CALE000251') or
	("SampleCODE" = 'SAMP001002' and "CalendarCODE" = 'CALE000295') or
	("SampleCODE" = 'SAMP002471' and "CalendarCODE" = 'CALE000298') or
	("SampleCODE" = 'SAMP000308' and "CalendarCODE" = 'CALE000404') or
	("SampleCODE" = 'SAMP003577' and "CalendarCODE" = 'CALE000418') or
	("SampleCODE" = 'SAMP004094' and "CalendarCODE" = 'CALE000556') or
	("SampleCODE" = 'SAMP004752' and "CalendarCODE" = 'CALE000606') or
	("SampleCODE" = 'SAMP004479' and "CalendarCODE" = 'CALE000739') or
	("SampleCODE" = 'SAMP005196' and "CalendarCODE" = 'CALE000792') or
	("SampleCODE" = 'SAMP005365' and "CalendarCODE" = 'CALE000821') or
	("SampleCODE" = 'SAMP005544' and "CalendarCODE" = 'CALE000878') or
	("SampleCODE" = 'SAMP006338' and "CalendarCODE" = 'CALE001094') or
	("SampleCODE" = 'SAMP007015' and "CalendarCODE" = 'CALE001283') or
	("SampleCODE" = 'SAMP007085' and "CalendarCODE" = 'CALE001284') or
	("SampleCODE" = 'SAMP000276' and "CalendarCODE" = 'CALE001306') or
	("SampleCODE" = 'SAMP007747' and "CalendarCODE" = 'CALE001599') or
	("SampleCODE" = 'SAMP007789' and "CalendarCODE" = 'CALE001644');
	PERFORM BugsTransferLog('tbl_bugs_tdatescalendar','D','Date is null and sample + calendar code matchings');


	delete from tbl_bugs_tdatesperiod
	where "PeriodCODE" = 'HistPer'
	and "PeriodDateCODE" = 'PERI000187'
	and "SampleCODE" = 'SAMP000324';
	PERFORM BugsTransferLog('tbl_bugs_tdatesperiod','D','PeriodCODE = HistPer and PeriodDateCODE = PERI000187');

	-- Update the tbl_bugs_tdatesperiod."DatingMethod"
	-- Create a special type: bugs_method(dm,ytype)
	-- a table to store logs in 
	create temporary table dating_method_logging (
		id integer not null,
		amount integer default 1,
		log_value text,
		constraint pk_dating_method_logging PRIMARY KEY (id),
		unique (log_value)
	);
	
	FOR bmper IN (	SELECT A."DatingMethod",B."YearsType" FROM tbl_bugs_tdatesperiod AS A
			INNER JOIN tbl_bugs_tperiods AS B
			ON A."PeriodCODE" = B."PeriodCODE") LOOP
		new_dm = MapDatingMethod(bmper.dm,bmper.ytype);
			
		IF bmper.dm IS NOT NULL AND new_dm != bmper.dm THEN
			--RAISE INFO 'Found %, changed to new_dm = %',bmper.dm,new_dm;
			UPDATE tbl_bugs_tdatesperiod
			SET	"DatingMethod" = new_dm
			WHERE	"DatingMethod" = bmper.dm;
			BEGIN
				insert into dating_method_logging 
					(id, log_value) 
					values (
					(select coalesce(max(id),0) + 1 from dating_method_logging),
					FORMAT ('UpdateMethods(tbl_bugs_tdatesperiod): SET DatingMethod = %s WHERE DatingMethod = %s', new_dm, bmper.dm));
			EXCEPTION
				when unique_violation then 
					update dating_method_logging
					 set amount = amount + 1
					 where log_value = FORMAT ('UpdateMethods(tbl_bugs_tdatesperiod): SET DatingMethod = %s WHERE DatingMethod = %s', new_dm, bmper.dm);
			END;
		END IF;
	END LOOP;

	

	-- Update the tbl_bugs_tdatescalendar."DatingMethod" to fit the new abbreviation schema.
	FOR dm IN (SELECT "DatingMethod" FROM tbl_bugs_tdatescalendar) LOOP
		--RAISE INFO 'Found %',dm;
		new_dm =  MapDatingMethod(dm,'Calendar');
		IF new_dm != dm THEN
			--RAISE INFO 'Found %, changed to new_dm = %',dm,new_dm;	
			UPDATE tbl_bugs_tdatescalendar
			SET	"DatingMethod" = new_dm
			WHERE	"DatingMethod" = dm;
			BEGIN
				insert into dating_method_logging 
					(id, log_value) 
					values (
					(select coalesce(max(id),0) + 1 from dating_method_logging),
					FORMAT('UpdateMethods(tbl_bugs_tdatescalendar): SET DatingMethod = %s WHERE DatingMethod = %s', new_dm, bmper.dm));
			EXCEPTION
				when unique_violation then 
					update dating_method_logging
					 set amount = amount + 1
					 where log_value = FORMAT('UpdateMethods(tbl_bugs_tdatescalendar): SET DatingMethod = %s WHERE DatingMethod = %s', new_dm, bmper.dm);
			END;
		END IF;
	END LOOP;

	-- Update the tbl_bugs_tdatesradio."DatingMethod" to fit the new abbreviation schema.
	FOR dm IN (SELECT "DatingMethod" FROM tbl_bugs_tdatesradio) LOOP
		--RAISE INFO 'Found %',dm;
		new_dm =  MapDatingMethod(dm,'Radiometric');
		IF new_dm != dm THEN
			--RAISE INFO 'Found %, changed to new_dm = %',dm,new_dm;	
			UPDATE tbl_bugs_tdatesradio
			SET	"DatingMethod" = new_dm
			WHERE	"DatingMethod" = dm;
			BEGIN
				insert into dating_method_logging 
					(id, log_value) 
					values (
					(select coalesce(max(id),0) + 1 from dating_method_logging),
					FORMAT('UpdateMethods(tbl_bugs_tdatesradio): SET DatingMethod = %s WHERE DatingMethod = %s', new_dm, bmper.dm));
			EXCEPTION
				when unique_violation then 
					update dating_method_logging
					 set amount = amount + 1
					 where log_value = FORMAT('UpdateMethods(tbl_bugs_tdatesradio): SET DatingMethod = %s WHERE DatingMethod = %s', new_dm, bmper.dm);
			END;
		END IF;
	END LOOP;

	for log_record in (select * from dating_method_logging) loop
		Perform BugsTransferLog('tbl_bugs_tdates*','U',
		  FORMAT ('Performed %s %s times', log_record.log_value, log_record.amount));
	end loop;
END;
$$;


--
-- TOC entry 1246 (class 1255 OID 16784)
-- Name: updatenotes(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION updatenotes() RETURNS void
    LANGUAGE plpgsql
    AS $$

BEGIN
/*
DATA CLEANING:  Notes Area

References:
*/

/*
tbl_bugs_tbiology 
*/

--Update tbl_bugs_tbiology
--set "Ref" = 'Lott 2010'
--where "Ref" = 'Lott 2010a';
--PERFORM BugsTransferLog('tbl_bugs_tbiology','U','SET Ref = Lott 2010 WHERE Ref = Lott 2010a');

UPDATE 
	tbl_bugs_tbiology
SET
	"Ref" = 'Van Dijk 1994'
WHERE
	"Ref" = 'van Dijk 1994';
PERFORM BugsTransferLog('tbl_bugs_tbiology','U','SET Ref = Van Dijk 1994 WHERE Ref = van Dijk 1994');

UPDATE 
	tbl_bugs_tbiology
SET
	"Ref" = 'Sinclair 1993B'
WHERE
	"Ref" = 'Sinclair 1993b';
PERFORM BugsTransferLog('tbl_bugs_tbiology','U','SET Ref = Sinclair 1993B WHERE Ref = Sinclair 1993b');

UPDATE 
	tbl_bugs_tbiology
SET
	"Ref" = 'Whitehead 1992h'
WHERE
	"Ref" = 'Whitehead 1992H';
PERFORM BugsTransferLog('tbl_bugs_tbiology','U','SET Ref = Whitehead 1992h WHERE Ref = Whitehead 1992H');

UPDATE 
	tbl_bugs_tbiology
SET
	"Ref" = 'Whitehead 1992i'
WHERE
	"Ref" = 'Whitehead 1992I';
PERFORM BugsTransferLog('tbl_bugs_tbiology','U','SET Ref = Whitehead 1992i WHERE Ref = Whitehead 1992I');

UPDATE 
	tbl_bugs_tbiology
SET
	"Ref" = 'De Buysson 1912'
WHERE
	"Ref" = 'de Buysson 1912';
PERFORM BugsTransferLog('tbl_bugs_tbiology','U','SET Ref = De Buysson 1912 WHERE Ref = de Buysson 1912');

UPDATE 
	tbl_bugs_tbiology
SET
	"Ref" = 'Allen 1972b'
WHERE
	"Ref" = 'Allen 1972B';
PERFORM BugsTransferLog('tbl_bugs_tbiology','U','SET Ref = Allen 1972b WHERE Ref = Allen 1972B');

UPDATE 
	tbl_bugs_tbiology
SET
	"Ref" = 'Winter 1992b'
WHERE
	"Ref" = 'Winter 1992B';
PERFORM BugsTransferLog('tbl_bugs_tbiology','U','SET Ref = Winter 1992b WHERE Ref = Winter 1992B');

UPDATE 
	tbl_bugs_tbiology
SET
	"Ref" = 'Key 1996a'
WHERE
	"Ref" = 'Key 1996A';
PERFORM BugsTransferLog('tbl_bugs_tbiology','U','SET Ref = Key 1996a WHERE Ref = Key 1996A');

UPDATE 
	tbl_bugs_tbiology
SET
	"Ref" = 'Cooter 1992b'
WHERE
	"Ref" = 'Cooter 1992B';
PERFORM BugsTransferLog('tbl_bugs_tbiology','U','SET Ref = Cooter 1992b WHERE Ref = Cooter 1992B');

UPDATE 
	tbl_bugs_tbiology
SET
	"Ref" = 'Morris 1992b'
WHERE
	"Ref" = 'Morris 1992B';
PERFORM BugsTransferLog('tbl_bugs_tbiology','U','SET Ref = Morris 1992b WHERE Ref = Morris 1992B');

/*
tbl_bugs_tdistrib
*/
UPDATE 
	tbl_bugs_tdistrib
SET
	"Ref" = 'Van Vondel 1991'
WHERE
	"Ref" = 'van Vondel 1991';
PERFORM BugsTransferLog('tbl_bugs_tdistrib','U','SET Ref = Van Vondel 1991 WHERE Ref = van Vondel 1991');

UPDATE 
	tbl_bugs_tdistrib
SET
	"Ref" = 'Sinclair 1993B'
WHERE
	"Ref" = 'Sinclair 1993b';
PERFORM BugsTransferLog('tbl_bugs_tdistrib','U','SET Ref = Sinclair 1993B WHERE Ref = Sinclair 1993b');

UPDATE 
	tbl_bugs_tdistrib
SET
	"Ref" = 'Whitehead 1992e'
WHERE
	"Ref" = 'Whitehead 1992E';
PERFORM BugsTransferLog('tbl_bugs_tdistrib','U','SET Ref = Whitehead 1992e WHERE Ref = Whitehead 1992E');

UPDATE 
	tbl_bugs_tdistrib
SET
	"Ref" = 'Whitehead 1992j'
WHERE
	"Ref" = 'Whitehead 1992J';
PERFORM BugsTransferLog('tbl_bugs_tdistrib','U','SET Ref = Whitehead 1992j WHERE Ref = Whitehead 1992J');

UPDATE 
	tbl_bugs_tdistrib
SET
	"Ref" = 'Whitehead 1992h'
WHERE
	"Ref" = 'Whitehead 1992H';
PERFORM BugsTransferLog('tbl_bugs_tdistrib','U','SET Ref = Whitehead 1992h WHERE Ref = Whitehead 1992H');

UPDATE 
	tbl_bugs_tdistrib
SET
	"Ref" = 'Whitehead 1992i'
WHERE
	"Ref" = 'Whitehead 1992I';
PERFORM BugsTransferLog('tbl_bugs_tdistrib','U','SET Ref = Whitehead 1992i WHERE Ref = Whitehead 1992I');

UPDATE 
	tbl_bugs_tdistrib
SET
	"Ref" = 'Winter 1992b'
WHERE
	"Ref" = 'Winter 1992B';
PERFORM BugsTransferLog('tbl_bugs_tdistrib','U','SET Ref = Winter 1992b WHERE Ref = Winter 1992B');

UPDATE 
	tbl_bugs_tdistrib
SET
	"Ref" = 'Key 1996a'
WHERE
	"Ref" = 'Key 1996A';
PERFORM BugsTransferLog('tbl_bugs_tdistrib','U','SET Ref = Key 1996a WHERE Ref = Key 1996A');

UPDATE 
	tbl_bugs_tdistrib
SET
	"Ref" = 'Cooter 1992b'
WHERE
	"Ref" = 'Cooter 1992B';
PERFORM BugsTransferLog('tbl_bugs_tdistrib','U','SET Ref = Cooter 1992b WHERE Ref = Cooter 1992B');

UPDATE 
	tbl_bugs_tdistrib
SET
	"Ref" = 'Morris 1992b'
WHERE
	"Ref" = 'Morris 1992B';
PERFORM BugsTransferLog('tbl_bugs_tdistrib','U','SET Ref = Morris 1992b WHERE Ref = Morris 1992B');

--Update tbl_bugs_tdistrib
--set "Ref" = 'Lott 2010'
--where "Ref" = 'Lott 2010a';
--PERFORM BugsTransferLog('tbl_bugs_tbiology','U','SET Ref = Lott 2010 WHERE Ref = Lott 2010a');

delete from tbl_bugs_tkeys
where "CODE" = '12.0010102';
PERFORM BugsTransferLog('tbl_bugs_tkeys','D','where CODE = 12.0010102');

--update tbl_bugs_ttaxonotes
--set "Ref" = 'Lott 2010'
--where "Ref" = 'Lott 2010a';
--PERFORM BugsTransferLog('tbl_bugs_ttaxonotes','U','SET Ref = Lott 2010 WHERE Ref = Lott 2010a');

END;
$$;


--
-- TOC entry 1247 (class 1255 OID 16785)
-- Name: updateprimarycontact(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION updateprimarycontact() RETURNS boolean
    LANGUAGE plpgsql
    AS $$
DECLARE
	cid 	INTEGER;
BEGIN
	IF CheckPrimaryContactExists() IS TRUE THEN
		RETURN TRUE;
	END IF;

	RETURN SetPrimaryContact();
END;
$$;


--
-- TOC entry 1248 (class 1255 OID 16786)
-- Name: updateprimarydatasetmastersetbyname(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION updateprimarydatasetmastersetbyname() RETURNS boolean
    LANGUAGE plpgsql
    AS $$
DECLARE
	dmid 	INTEGER;
BEGIN
	SELECT GetDatasetMasterSetByName('Bugs database') INTO dmid;

	--RAISE INFO 'UpdatePrimaryDatasetMasterSetByName(): dataset_master_id = %',dmid;

	IF dmid IS NULL THEN
		PERFORM SetDatasetMasterSetByName('Bugs database');
	END IF;

	SELECT GetDatasetMasterSetByName('Bugs database') INTO dmid;

	IF dmid IS NULL THEN 
		RETURN FALSE;
	END IF;
	RETURN TRUE;
END;
$$;


--
-- TOC entry 1249 (class 1255 OID 16787)
-- Name: updateprimaryecocodegroups(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION updateprimaryecocodegroups() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	EcocodeSystem 	VARCHAR;
	EcocodeLabel	VARCHAR;
	EcocodeDef	VARCHAR;
BEGIN
	EcocodeSystem = 'Bugs Ecocodes';
	EcocodeLabel = 'Bugs';
	EcocodeDef = 'Bugs default group for BugsEcocodes.';
	IF ExistsEcocodeGroup(GetEcocodeSystemIdByName(EcocodeSystem),EcocodeLabel) IS FALSE THEN
		INSERT INTO tbl_ecocode_groups(
			ecocode_group_id,
			date_updated,
			definition,
			ecocode_system_id,
			label
		)
		VALUES(
			nextval('tbl_ecocode_groups_ecocode_group_id_seq'),
			Now(),
			EcocodeDef,
			GetEcocodeSystemIdByName(EcocodeSystem),
			EcocodeLabel
		);
		PERFORM BugsTransferLog('tbl_ecocode_groups','I',currval('tbl_ecocode_groups_ecocode_group_id_seq'),EcocodeLabel);
	END IF;

	IF ExistsDuplicateEcocodeGroup(GetEcocodeSystemIdByName(EcocodeSystem),EcocodeLabel) IS TRUE THEN 
		RAISE WARNING E'DEBUG: TODO:  Perform system stop - - > Until fixed lookup';
	END IF;

	EcocodeSystem = 'Koch Ecology Codes';
	EcocodeLabel = 'KochGroup';
	EcocodeDef = 'Koch default group for KochEcocodes.';
	IF ExistsEcocodeGroup(GetEcocodeSystemIdByName(EcocodeSystem),EcocodeLabel) IS FALSE THEN
		INSERT INTO tbl_ecocode_groups(
			ecocode_group_id,
			date_updated,
			definition,
			ecocode_system_id,
			label
		)
		VALUES(
			nextval('tbl_ecocode_groups_ecocode_group_id_seq'),
			Now(),
			EcocodeDef,
			GetEcocodeSystemIdByName(EcocodeSystem),
			EcocodeLabel
		);
		PERFORM BugsTransferLog('tbl_ecocode_groups','I',currval('tbl_ecocode_groups_ecocode_group_id_seq'),EcocodeLabel);
	END IF;

	IF ExistsDuplicateEcocodeGroup(GetEcocodeSystemIdByName(EcocodeSystem),EcocodeLabel) IS TRUE THEN 
		RAISE WARNING E'DEBUG: TODO:  Perform system stop - - > Until fixed lookup';
	END IF;

	
END;
$$;


--
-- TOC entry 1251 (class 1255 OID 16788)
-- Name: updateprimaryecocodesystems(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION updateprimaryecocodesystems() RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	IF ExistsEcocodeSystem('Bugs Ecocodes') IS FALSE THEN
		INSERT INTO tbl_ecocode_systems(
			ecocode_system_id,
			biblio_id,
			date_updated,
			definition,
			name,
			notes
		)
		VALUES(
			nextval('tbl_ecocode_systems_ecocode_system_id_seq'),
			NULL,
			Now(),
			NULL,
			'Bugs Ecocodes',
			NULL
		);		
		PERFORM BugsTransferLog('tbl_ecocode_systems','I',currval('tbl_ecocode_systems_ecocode_system_id_seq'),'Bugs Ecocodes');
	END IF;
	IF ExistsEcocodeSystem('Koch Ecology Codes') IS FALSE THEN
		INSERT INTO tbl_ecocode_systems(
			ecocode_system_id,
			biblio_id,
			date_updated,
			definition,
			name,
			notes
		)
		VALUES(
			nextval('tbl_ecocode_systems_ecocode_system_id_seq'),
			NULL,
			Now(),
			NULL,
			'Koch Ecology Codes',
			NULL
		);
		PERFORM BugsTransferLog('tbl_ecocode_systems','I',currval('tbl_ecocode_systems_ecocode_system_id_seq'),'Koch Ecology Codes');
	END IF;

	IF ExistsDuplicateEcocodeSystem('Bugs Ecocodes') IS TRUE THEN
		RAISE WARNING E'DEBUG: TODO:  Perform system stop - - > Until fixed lookup';
	END IF;
	IF ExistsDuplicateEcocodeSystem('Koch Ecology Codes') IS TRUE THEN
		RAISE WARNING E'DEBUG: TODO: Perform system stop - - > Until fixed lookup';
	END IF;
END;
$$;


--
-- TOC entry 1252 (class 1255 OID 16789)
-- Name: updateprimaryorder(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION updateprimaryorder(character varying) RETURNS void
    LANGUAGE plpgsql
    AS $_$
BEGIN
	IF CheckOrderExists($1) IS FALSE THEN
		INSERT INTO tbl_taxa_tree_orders (
			order_id,
			date_updated,
			order_name,
			record_type_id,
			sort_order )
		VALUES (
			nextval('tbl_taxa_tree_orders_order_id_seq'),
			Now(),
			$1,
			GetRecordTypeIdByName('Insects & similar'), -- Bugs record types
			1000000 -- initialised sort order value (add GetSortOrder ... function later if necessary)
		);
		PERFORM BugsTransferLog('tbl_taxa_tree_orders','I',currval('tbl_taxa_tree_orders_order_id_seq'),$1);
	END IF;
END;
$_$;


--
-- TOC entry 1253 (class 1255 OID 16790)
-- Name: updaterdbdata(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION updaterdbdata() RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	PERFORM UpdatePrimaryEcocodeSystems();

	ALTER TABLE tbl_bugs_trdbsystems
	ALTER COLUMN "CountryCode" TYPE VARCHAR(100);
	PERFORM BugsTransferLog('tbl_bugs_trdbsystems','O','UpdateRDBData(): ALTER COLUMN CountryCode TYPE VARCHAR(100)');
	
	UPDATE  tbl_bugs_trdbsystems
	SET	"CountryCode" = 'United Kingdom'
	WHERE	"CountryCode" = 'UK';
	PERFORM BugsTransferLog('tbl_bugs_trdbsystems','U','SET CountryCode = United Kingdom WHERE CountryCode = UK');
	
	UPDATE  tbl_bugs_trdbsystems
	SET	"CountryCode" = 'Sweden'
	WHERE	"CountryCode" = 'Swe';
	PERFORM BugsTransferLog('tbl_bugs_trdbsystems','U','SET CountryCode = Sweden WHERE CountryCode = Swe');

	UPDATE  tbl_bugs_trdbsystems
	SET	"CountryCode" = 'International'
	WHERE	"CountryCode" = 'Int';
	PERFORM BugsTransferLog('tbl_bugs_trdbsystems','U','SET CountryCode = International WHERE CountryCode = Int');

	
END;
$$;


--
-- TOC entry 1254 (class 1255 OID 16791)
-- Name: updatesampledata(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION updatesampledata() RETURNS boolean
    LANGUAGE plpgsql
    AS $$
BEGIN
	--!!! THESE NEED TO CHANGE FORM FOR NEW STRUCTURE !!!
	/*
	-- Always choose the BUGS version if 'BugsPresence' sample name
	UPDATE tbl_physical_samples SET sample_name = 'C1i' 
	WHERE physical_sample_id = GetPhysicalSampleIdBySampleCode('SAMP003002');
	PERFORM BugsTransferLog('tbl_physical_samples','U','SET sample_name = C1i WHERE SampleCODE = SAMP003002');

	UPDATE tbl_physical_samples SET sample_name = 'Derryfada_23' 
	WHERE physical_sample_id = GetPhysicalSampleIdBySampleCode('SAMP003003');
	PERFORM BugsTransferLog('tbl_physical_samples','U','SET sample_name = Derryfada_23 WHERE SampleCODE = SAMP003003');

	UPDATE tbl_physical_samples SET sample_name = '10036' 
	WHERE physical_sample_id = GetPhysicalSampleIdBySampleCode('SAMP004484');
	PERFORM BugsTransferLog('tbl_physical_samples','U','SET sample_name = 10036 WHERE SampleCODE = SAMP004484');

	
	
	RAISE WARNING 'UpdateSampleData(): TODO: Check that it is ok to drop the X,Y,Z data';


	eg,
	UPDATE tbl_sample_notes 
	SET note = 53.0000000000
	WHERE 	physical_sample_id = GetPhysicalSampleIdBySampleCode('SAMP004799')
	AND	note_type = 'ZorDepthBot';

	etc...
	*/
	
	-- Always choose a non-null to replace a null depth_top/bottom
	/*
	UPDATE tbl_physical_samples 
	SET depth_bottom = 53.0000000000, depth_top = 48.0000000000 
	WHERE physical_sample_id = GetPhysicalSampleIdBySampleCode('SAMP004799');
	
	UPDATE tbl_physical_samples 
	SET depth_bottom = 58.0000000000, depth_top = 53.0000000000
	WHERE physical_sample_id = GetPhysicalSampleIdBySampleCode('SAMP004798');
	
	UPDATE tbl_physical_samples 
	SET depth_bottom = 63.0000000000, depth_top = 58.0000000000  
	WHERE physical_sample_id = GetPhysicalSampleIdBySampleCode('SAMP004797');
	
	UPDATE tbl_physical_samples 
	SET depth_bottom = 68.0000000000, depth_top = 63.0000000000  
	WHERE physical_sample_id = GetPhysicalSampleIdBySampleCode('SAMP004796');
	
	UPDATE tbl_physical_samples 
	SET depth_bottom = 73.0000000000,  depth_top = 68.0000000000  
	WHERE physical_sample_id = GetPhysicalSampleIdBySampleCode('SAMP004795');
	
	UPDATE tbl_physical_samples 
	SET depth_bottom = 78.0000000000, depth_top = 73.0000000000  
	WHERE physical_sample_id = GetPhysicalSampleIdBySampleCode('SAMP004794');

	UPDATE tbl_physical_samples 
	SET depth_top = 78.0000000000, depth_bottom = 83.0000000000 
	WHERE physical_sample_id = GetPhysicalSampleIdBySampleCode('SAMP004793');	
	
	UPDATE tbl_physical_samples 
	SET depth_bottom = 88.0000000000, depth_top = 83.0000000000 
	WHERE physical_sample_id = GetPhysicalSampleIdBySampleCode('SAMP004792');
	
	UPDATE tbl_physical_samples SET depth_bottom = 93.0000000000, depth_top = 88.0000000000  
	WHERE physical_sample_id = GetPhysicalSampleIdBySampleCode('SAMP004791');

	UPDATE tbl_physical_samples SET depth_top = 134.0000000000,depth_bottom = 139.0000000000 
	WHERE physical_sample_id = GetPhysicalSampleIdBySampleCode('SAMP004783');
	
	UPDATE tbl_physical_samples SET depth_top = 129.0000000000, depth_bottom = 134.0000000000 
	WHERE physical_sample_id = GetPhysicalSampleIdBySampleCode('SAMP004784');

	UPDATE tbl_physical_samples SET depth_top = 124.0000000000,depth_bottom = 129.0000000000 
	WHERE physical_sample_id = GetPhysicalSampleIdBySampleCode('SAMP004785');

	UPDATE tbl_physical_samples SET depth_top = 119.0000000000,depth_bottom = 124.0000000000 
	WHERE physical_sample_id = GetPhysicalSampleIdBySampleCode('SAMP004786');

	UPDATE tbl_physical_samples SET depth_top = 114.0000000000,depth_bottom = 119.0000000000 
	WHERE physical_sample_id = GetPhysicalSampleIdBySampleCode('SAMP004787');

	UPDATE tbl_physical_samples SET depth_top = 109.0000000000,depth_bottom = 114.0000000000 
	WHERE physical_sample_id = GetPhysicalSampleIdBySampleCode('SAMP004788');

	UPDATE tbl_physical_samples SET depth_top = 106.5000000000,depth_bottom = 108.0000000000 
	WHERE physical_sample_id = GetPhysicalSampleIdBySampleCode('SAMP004789');

	UPDATE tbl_physical_samples SET depth_top = 100.0000000000,depth_bottom = 102.5000000000 
	WHERE physical_sample_id = GetPhysicalSampleIdBySampleCode('SAMP004790');
	*/

	RETURN TRUE;
END;
$$;


--
-- TOC entry 1255 (class 1255 OID 16792)
-- Name: updateseasonality(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION updateseasonality() RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	--fix seasons
	UPDATE tbl_bugs_tseasonactiveadult
	SET "HSeason" = 'Se'
	WHERE "HSeason" = 'Sep';
	PERFORM BugsTransferLog('tbl_bugs_tseasonactiveadult','U','SET HSeason = Se WHERE HSeason = Sep');
END;
$$;


--
-- TOC entry 1256 (class 1255 OID 16793)
-- Name: updatesiteotherproxies(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION updatesiteotherproxies() RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	--TODO: remove duplicates
END;
$$;


--
-- TOC entry 1257 (class 1255 OID 16794)
-- Name: updatesitesdata(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION updatesitesdata() RETURNS boolean
    LANGUAGE plpgsql
    AS $$
BEGIN
RAISE INFO 'UpdateSitesData(): Region with duplication over newline fix.';
UPDATE tbl_bugs_tsite
SET "Region" = 'Västergötland'
WHERE "Region" = 'Västergötland
Västergötland';

	UPDATE 
		tbl_bugs_tsite
	SET
		"Country" = (
			SELECT 
				location_name
			FROM 
				tbl_locations
			WHERE 
				location_name like '%Iran%'
			AND	location_type_id = LookupIdByUniqueValue('tbl_location_types','location_type_id','location_type','Country')
		)
	WHERE
		"Country" like '%Iran%';
	PERFORM BugsTransferLog('tbl_locations','U','Iran');
	--RAISE INFO 'SitesDataUpdate:  Changes: Iran';

	UPDATE 
		tbl_bugs_tsite
	SET
		"Country" = (
			SELECT 
				location_name
			FROM 
				tbl_locations
			WHERE 
				location_name like '%Slovakia%'
			AND	location_type_id = LookupIdByUniqueValue('tbl_location_types','location_type_id','location_type','Country')
		)
	WHERE
		"Country" like '%Slovakia%';
		
	PERFORM BugsTransferLog('tbl_locations','U','Slovakia');
	--RAISE INFO 'SitesDataUpdate:  Changes: Slovakia';

	UPDATE 
		tbl_bugs_tsite
	SET
		"Country" = (
			SELECT 
				location_name
			FROM 
				tbl_locations
			WHERE 
				location_name like '%Faroe%'
			AND	location_type_id = LookupIdByUniqueValue('tbl_location_types','location_type_id','location_type','Country')
		)
	WHERE
		"Country" like '%Faroes%';

	PERFORM BugsTransferLog('tbl_locations','U','Faroes');
	--RAISE INFO 'SitesDataUpdate:  Changes: Faroes';

	UPDATE 
		tbl_bugs_tsite
	SET
		"Country" = (
			SELECT 
				location_name
			FROM 
				tbl_locations
			WHERE 
				location_name like '%United States of America%'
			AND	location_type_id = LookupIdByUniqueValue('tbl_location_types','location_type_id','location_type','Country')
		)
	WHERE
		"Country" like '%USA%';

	PERFORM BugsTransferLog('tbl_locations','U','USA');
	--RAISE INFO 'SitesDataUpdate:  Changes: USA';
	RETURN TRUE;
END;
$$;


--
-- TOC entry 1258 (class 1255 OID 16795)
-- Name: updatespeciesassociations(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION updatespeciesassociations() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	updates	INTEGER := 0;
	type_inserts integer := 0;
BEGIN

	-- association_type_name = Predator on
	if InsertSpeciesAssociationTypeIfNeeded('is predator on') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'is predator on'
	where "AssociationType" = 'predator on' or 
		"AssociationType" = 'bug a predaotor on' or 
		"AssociationType" = 'a predator on' or 
		"AssociationType" = 'Predator on';
	updates := updates + 1;

	-- association_type_name = predator on?
	if InsertSpeciesAssociationTypeIfNeeded('is predator on?') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'is predator on?'
	where "AssociationType" = 'predator on?' or
	      "AssociationType" = 'Predator on?';
	updates := updates + 1;
	
	--association_type_name = adults found in nest
	if InsertSpeciesAssociationTypeIfNeeded('adults found in nests of') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'adults found in nests of'
	where "AssociationType" = 'adults found in nest' or 
		"AssociationType" = 'adults found in nest of';
	updates := updates + 1;

	--association_type_name = around nests, around nests.
	if InsertSpeciesAssociationTypeIfNeeded('around nests of')  is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'around nests of'
	where "AssociationType" = 'around nests' or "AssociationType" = 'around nests.';
	updates := updates + 1;
	
	--association_type_name = feeds on nest debris.
	if InsertSpeciesAssociationTypeIfNeeded('feeds on nest debris of') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'feeds on nest debris of'
	where "AssociationType" = 'feeds on nest debris';
	updates := updates + 1;
	
	--association_type_name = in same habitat, if coastal, same habitat if coastal, if coastal, same habitat as
	if InsertSpeciesAssociationTypeIfNeeded('if coastal, same habitat as') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'if coastal, same habitat as'
	where "AssociationType" = 'in same habitat, if coastal' or "AssociationType" = 'same habitat if coastal';
	updates := updates + 1;

	--association_type_name = around nests, around nests.
	if InsertSpeciesAssociationTypeIfNeeded('around nests of')  is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'around nests of'
	where "AssociationType" = 'around nests' or "AssociationType" = 'around nests.';
	updates := updates + 1;

	--association_type_name = found in burrows, in burrows
	if InsertSpeciesAssociationTypeIfNeeded('in burrows of') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'in burrows of'
	where "AssociationType" = 'found in burrows' or 
		"AssociationType" = 'in burrows' or 
		"AssociationType" = 'in burrows of G mutator';
	updates := updates + 1;

	--association_type_name = overwintering in burrows
	if InsertSpeciesAssociationTypeIfNeeded('overwintering in burrows of') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'overwintering in burrows of'
	where "AssociationType" = 'overwintering in burrows';
	updates := updates + 1;

	--association_type_name = found in nests, in nest of, in nests, occurs in nest
	if InsertSpeciesAssociationTypeIfNeeded('in nests of') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'in nests of'
	where "AssociationType" = 'found in nests' or "AssociationType" = 'in nest of' or "AssociationType" = 'in nests' or "AssociationType" = 'occurs in nest';
	updates := updates + 1;
	
	--association_type_name = found in same habitat, in same habitat, in same habitat., same habitat, Same habitat, Same habitat., same habitat
	if InsertSpeciesAssociationTypeIfNeeded('in same habitat as') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'in same habitat as'
	where "AssociationType" = 'found in same habitat' or "AssociationType" = 'in same habitat' or
		"AssociationType" = 'in same habitat.' or "AssociationType" = 'same habitat' or 
		"AssociationType" = 'Same habitat' or "AssociationType" = 'Same habitat.' or 
		"AssociationType" = 'same habitat.' or "AssociationType" = 'same habitat as';
	updates := updates + 1;

	--association_type_name = more common and in same habitat
	if InsertSpeciesAssociationTypeIfNeeded('in same habitat, but more common than') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'in same habitat, but more common than'
	where "AssociationType" = 'more common and in same habitat' or 
		"AssociationType" = 'more common and in same habitat as';
	updates := updates + 1;

	--association_type_name = in same habitat but rarer
	if InsertSpeciesAssociationTypeIfNeeded('in same habitat, but rarer than') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'in same habitat, but rarer than'
	where "AssociationType" = 'in same habitat but rarer' or 
		"AssociationType" = 'in same habitat but rarer' or
		"AssociationType" = 'rarer, but in same habitat as';
	updates := updates + 1;

	--association_type_name = in same lake
	if InsertSpeciesAssociationTypeIfNeeded('in same lake as') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'in same lake as'
	where "AssociationType" = 'in same lake';
	updates := updates + 1;

	--association_type_name = in same riverine habitat., same riverine habitat
	if InsertSpeciesAssociationTypeIfNeeded('in same riverine habitat as') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'in same riverine habitat as'
	where "AssociationType" = 'in same riverine habitat.' or 
		"AssociationType" = 'same riverine habitat' or
		"AssociationType" = 'same riverine habitat as';
	updates := updates + 1;

	--association_type_name = in same trees
	if InsertSpeciesAssociationTypeIfNeeded('in same trees as') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'in same trees as'
	where "AssociationType" = 'in same trees';
	updates := updates + 1;

	--association_type_name = similar habitat, Similar habitat
	if InsertSpeciesAssociationTypeIfNeeded('in similar habitat as') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'in similar habitat as'
	where "AssociationType" = 'similar habitat' or 
	      "AssociationType" = 'Similar habitat' or
	      "AssociationType" = 'similar habitat as';
	updates := updates + 1;

	--association_type_name = loosely associated
	if InsertSpeciesAssociationTypeIfNeeded('is associated with') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'is associated with'
	where "AssociationType" = 'loosely associated' or "AssociationType" = 'loosely associated with' or
		"AssociationType" = 'associated with' or "AssociationType" = 'undefined association with';
	updates := updates + 1;

	--association_type_name = commensal?
	if InsertSpeciesAssociationTypeIfNeeded('is commensal with?') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'is commensal with?'
	where "AssociationType" = 'commensal?';
	updates := updates + 1;

	--association_type_name = parasite in nests
	if InsertSpeciesAssociationTypeIfNeeded('is parasite in nests of') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'is parasite in nests of'
	where "AssociationType" = 'parasite in nests' or 
		"AssociationType" = 'parasite in nests of';
	updates := updates + 1;

	--association_type_name = parasitic on pupae of
	if InsertSpeciesAssociationTypeIfNeeded('is parasite on pupae of') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'is parasite on pupae of'
	where "AssociationType" = 'parasitic on pupae of';
	updates := updates + 1;

	--association_type_name = probably parasitizes pupae of
	if InsertSpeciesAssociationTypeIfNeeded('is parasite on pupae of?') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'is parasite on pupae of?'
	where "AssociationType" = 'probably parasitizes pupae of';
	updates := updates + 1;

	--association_type_name = parasitized by
	if InsertSpeciesAssociationTypeIfNeeded('is parasitized by') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'is parasitized by'
	where "AssociationType" = 'parasitized by';
	updates := updates + 1;

	--association_type_name = pupae parasitized by
	if InsertSpeciesAssociationTypeIfNeeded('pupae is parasitized by') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'pupae is parasitized by'
	where "AssociationType" = 'pupae parasitized by';
	updates := updates + 1;

	--association_type_name = parasitoid
	if InsertSpeciesAssociationTypeIfNeeded('is parasitoid on') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'is parasitoid on'
	where "AssociationType" = 'parasitoid' or
		"AssociationType" = 'parasitoid on';
	updates := updates + 1;

	--association_type_name = Predated by, predated on by, Prey of
	if InsertSpeciesAssociationTypeIfNeeded('is predated by') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'is predated by'
	where 
	    "AssociationType" = 'Predated by' or 
	    "AssociationType" = 'predated on by' or 
	    "AssociationType" = 'Prey of' or 
	    "AssociationType" = 'prey of' or 
	    "AssociationType" = 'predated by';
	updates := updates + 1;

	--association_type_name = ?predated by
	if InsertSpeciesAssociationTypeIfNeeded('is predated by?') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'is predated by?'
	where 
	    "AssociationType" = '?predated by';
	updates := updates + 1;

	--association_type_name = Larvae is predated by
	if InsertSpeciesAssociationTypeIfNeeded('larvae is predated by') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'larvae is predated by'
	where "AssociationType" = 'Larvae predated by';
	updates := updates + 1;
	
	--association_type_name = preyed upon by larvae of
	if InsertSpeciesAssociationTypeIfNeeded('is predated by larvae of') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'is predated by larvae of'
	where "AssociationType" = 'preyed upon by larvae of' or 
		"AssociationType" = 'predated by larvae of';
	updates := updates + 1;

	--association_type_name = predated by in own nests
	if InsertSpeciesAssociationTypeIfNeeded('is predated in own nests by') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'is predated in own nests by'
	where "AssociationType" = 'predated by in nests' or
	      "AssociationType" = 'predated in nests by';
	updates := updates + 1;

	--association_type_name = a predator in nests of
	if InsertSpeciesAssociationTypeIfNeeded('is predator in nests of') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'is predator in nests of'
	where "AssociationType" = 'a predator in nests of' or 
		"AssociationType" = 'predator in nests of';
	updates := updates + 1;
	
	--association_type_name = a predator on larvae of, predator on ant larvae., predator on larvae
	if InsertSpeciesAssociationTypeIfNeeded('is predator on larvae of') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'is predator on larvae of'
	where "AssociationType" = 'a predator on larvae of' or "AssociationType" = 'predator on ant larvae.' or 
		"AssociationType" = 'predator on larvae' or "AssociationType" = 'predator on larvae of' or 
		"AssociationType" = 'larvae predated on by this bug.'; 
	updates := updates + 1;
	
	--association_type_name = predator on larvae?
	if InsertSpeciesAssociationTypeIfNeeded('is predator on larvae of?') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'is predator on larvae of?'
	where 
		"AssociationType" = 'predator on larvae?' or
		"AssociationType" = 'predator on larvae of?';
	updates := updates + 1;

	--association_type_name = a scavanger in nests of
	if InsertSpeciesAssociationTypeIfNeeded('is scavanger in nests of') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'is scavanger in nests of'
	where "AssociationType" = 'a scavanger in nests of' or 
		"AssociationType" = 'scavenger in nests of';
	updates := updates + 1;

	--association_type_name = a social parasite in nests of, a socila parasite in nests of, social parasite in nests
	if InsertSpeciesAssociationTypeIfNeeded('is social parasite in nests of') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'is social parasite in nests of'
	where "AssociationType" = 'a social parasite in nests of' or 
		"AssociationType" = 'a socila parasite in nests of' or 
		"AssociationType" = 'social parasite in nests' or 
		"AssociationType" = 'social parasite in nests of';
	updates := updates + 1;

	--association_type_name = social parasite of
	if InsertSpeciesAssociationTypeIfNeeded('is social parasite of') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'is social parasite of'
	where "AssociationType" = 'social parasite of';
	updates := updates + 1;

	--association_type_name = larva of this develop in nests
	if InsertSpeciesAssociationTypeIfNeeded('larvae develop in nests of') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'larvae develop in nests of'
	where "AssociationType" = 'larva of this develop in nests' or 
		"AssociationType" = 'larva develop in nests of';
	updates := updates + 1;

	--association_type_name = larvae in nests
	if InsertSpeciesAssociationTypeIfNeeded('larvae in nests of') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'larvae in nests of'
	where "AssociationType" = 'larvae in nests';
	updates := updates + 1;

	--association_type_name = often in same habitat
	if InsertSpeciesAssociationTypeIfNeeded('often in same habitat as') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'often in same habitat as'
	where "AssociationType" = 'often in same habitat';
	updates := updates + 1;

	--association_type_name = in same habitat, often in numbers.
	if InsertSpeciesAssociationTypeIfNeeded('in same habitat as, often in numbers,') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'in same habitat as, often in numbers,'
	where "AssociationType" = 'in same habitat, often in numbers.';
	updates := updates + 1;

	--association_type_name = in same habitat often together.
	if InsertSpeciesAssociationTypeIfNeeded('often together with, and in same habitat, as') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'often together with, and in same habitat, as'
	where "AssociationType" = 'in same habitat often together.';
	updates := updates + 1;

	--association_type_name = often together on same foodplant.
	if InsertSpeciesAssociationTypeIfNeeded('often together on same foodplant') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'often together on same foodplant'
	where "AssociationType" = 'often together on same foodplant.';
	updates := updates + 1;

	--association_type_name = often together on same host plant.
	if InsertSpeciesAssociationTypeIfNeeded('often together on same host plant') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'often together on same host plant'
	where "AssociationType" = 'often together on same host plant.';
	updates := updates + 1;

	--association_type_name = on same host plant, Same host plant, same host plant
	if InsertSpeciesAssociationTypeIfNeeded('on same host plant as') is true then
		type_inserts = type_inserts + 1;
	end if;
	Update tbl_bugs_tspeciesassociations
	set "AssociationType" = 'on same host plant as'
	where "AssociationType" = 'on same host plant' or 
		"AssociationType" = 'Same host plant' or 
		"AssociationType" = 'same host plant' or 
		"AssociationType" = 'on same host plant.';
	updates := updates + 1;
	
	--update null associated species code to have the same code
	UPDATE 	tbl_bugs_tspeciesassociations
	SET	"AssociatedSpeciesCODE" = 23.0880230000
	WHERE	"CODE" = 23.0880230000;
	updates := updates + 1;

	UPDATE 
		tbl_bugs_tspeciesassociations
	SET
		"Ref" = 'Krell et al. 2005'
	WHERE
		"Ref" = 'Krell et al 2005';
	PERFORM BugsTransferLog('tbl_bugs_tspeciesassociations','U','SET Ref = Krell et al. 2005 WHERE Ref = Krell et al 2005');

	UPDATE 
		tbl_bugs_tspeciesassociations
	SET
		"Ref" = 'Trautner 2006'
	WHERE
		"Ref" = 'Trautner (2006)';
	PERFORM BugsTransferLog('tbl_bugs_tspeciesassociations','U','SET Ref = Trautner 2006 WHERE Ref = Trautner (2006)');

	UPDATE 
		tbl_bugs_tspeciesassociations
	SET
		"Ref" = 'Skidmore unpubl.'
	WHERE
		"Ref" = 'Skidmore unpub.';
	PERFORM BugsTransferLog('tbl_bugs_tspeciesassociations','U','SET Ref = Skidmore unpubl. WHERE Ref = Skidmore unpub.');

	/*
	tbl_bugs_tspecies_associations
	cleaning the CODE issues
	*/
	DELETE FROM 
		tbl_bugs_tspeciesAssociations
	WHERE
		"CODE" IS NULL
	AND 	"AssociatedSpeciesCODE" IS NULL
	AND 	"Ref" IS NULL;
	PERFORM BugsTransferLog('tbl_bugs_tspeciesassociations','D','WHERE CODE IS NULL AND AssociatedSpeciesCODE IS NULL AND Ref IS NULL');


	-- fix this for now... notify in case wrong reference.
	-- this should be changed in tbiblio, which is too late at this point
	RAISE WARNING 'Updating reference "Lott 2010" to "Lott 2010a" to match tbiblio reference, check for missing references';
	update tbl_bugs_tspeciesassociations
	set "Ref" = 'Lott 2010'
	where "Ref" = 'Lott 2010a';
	updates := updates + 1;	
	
	PERFORM BugsTransferLog('tbl_bugs_tspeciesassociations','U',
		FORMAT('Updated %s tspecies_associations', updates));
	--PERFORM BugsTransferLog('tbl_species_association_types','I',
	--	FORMAT('Inserted %s new species association types', type_inserts));


	--association_type_name = Lindroth 1985
	Delete from tbl_bugs_tspeciesassociations
	where "AssociationType" = 'Lindroth 1985';
	Perform BugsTransferLog('tbl_bugs_tspeciesassociations', 'D', 
		'AssociationType = Lindroth 1985');

	--association_type_name = subsp purpurescense in same habitat.
	Delete from tbl_bugs_tspeciesassociations
	where "AssociationType" = 'subsp purpurescens in same habitat.';
	Perform BugsTransferLog('tbl_bugs_tspeciesassociations', 'D', 
		'AssociationType = subsp purpurescense in same habitat.');
		
	--association_type_name = in same habitat, but not in burials
	Delete from tbl_bugs_tspeciesassociations
	where "AssociationType" = 'in same habitat, but not in burials';
	Perform BugsTransferLog('tbl_bugs_tspeciesassociations', 'D', 
		'AssociationType = in same habitat, but not in burials');

	--taxon_id is null, delete
	Delete from tbl_bugs_tspeciesassociations
	where "CODE" is null;
	Perform BugsTransferLog('tbl_bugs_tspeciesassociations', 'D', 
		'CODE is null');

	
	-- what are these?
	-- possibly not to have here.
	-- They pop up from tspeciesassociations for (98,44.0020145000,1.0160091000,"is predated by","Lindroth 1985")
	-- and (621,23.1680010000,23.1670070000,"in same habitat as","Good 1995")
	-- it is possible that these should be changed into some other CODE
	-- these CODEs are wrong and need to be set to the correct code value, waiting for Phil on that.
	/*
	--insert missing codes into the taxonomic_orders with review taxonomic system
	--PERFORM InitialiseNewAssociatedSpeciesTaxonomicSystem('REVIEW SPECIES ASSOCIATIONS','Associated species codes not in sead');
	INSERT INTO tbl_taxonomic_order(
		taxonomic_order_id,
		date_updated,
		taxon_id,
		taxonomic_code,
		taxonomic_order_system_id )
	VALUES(
		nextval('tbl_taxonomic_order_taxonomic_order_id_seq'),
		Now(),
		NULL,
		23.1670070000,
		LookupIdByUniqueValue('tbl_taxonomic_order_systems','taxonomic_order_system_id','system_name','REVIEW SPECIES ASSOCIATIONS' )
		);
	PERFORM BugsTransferLog('tbl_taxonomic_order','I',currval('tbl_taxonomic_order_taxonomic_order_id_seq'),'Forced code (23.1670070000) into REVIEW SPECIES ASSOCIATIONS taxonomic order');
	
	INSERT INTO tbl_taxonomic_order(
		taxonomic_order_id,
		date_updated,
		taxon_id,
		taxonomic_code,
		taxonomic_order_system_id )
	VALUES(
		nextval('tbl_taxonomic_order_taxonomic_order_id_seq'),
		Now(),
		NULL,
		1.0160091000,
		LookupIdByUniqueValue('tbl_taxonomic_order_systems','taxonomic_order_system_id','system_name','REVIEW SPECIES ASSOCIATIONS' )
		);
	PERFORM BugsTransferLog('tbl_taxonomic_order','I',currval('tbl_taxonomic_order_taxonomic_order_id_seq'),'Forced code (1.0160091000) into order system REVIEW SPECIES ASSOCIATIONS');
	*/
		
END;
$$;


--
-- TOC entry 1259 (class 1255 OID 16797)
-- Name: updatetaxonomydata(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION updatetaxonomydata() RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	-- update primary order
	PERFORM UpdatePrimaryOrder('ORDER PENDING CLASSIFICATION');
	
	-- families
	--UPDATE tbl_taxa_tree_families SET family_name = 'TRIOPSIDAE' WHERE family_id = 628;

	-- genera

END;
$$;


--
-- TOC entry 1263 (class 1255 OID 16798)
-- Name: updatetperiodgeographicregions(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION updatetperiodgeographicregions() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	update_count	INTEGER;
	log_note	TEXT;
	unspecified_loc INTEGER;
BEGIN
	-- double check that geographical area type exists.
	IF ExistsTableOneColumnValue('tbl_location_types','location_type','Geographical area') IS FALSE THEN
		INSERT INTO tbl_location_types(
			location_type_id,
			date_updated,
			description,
			location_type
		)
		VALUES (
			nextval('tbl_location_types_location_type_id_seq'),
			Now(),
			'',
			'Geographical area'
		);
		PERFORM BugsTransferLog('tbl_location_types','I',currval('tbl_location_types_location_type_id_seq'),'Geographical area');
	END IF;

	-- double check that Unspecified location exists.
	--IF ExistsTableOneColumnValue('tbl_locations','location_name','Unspecified') IS FALSE THEN
	--	INSERT INTO tbl_locations(
	--		location_id,
	--		date_updated,
	--		description,
	--		location_type
	--	)
	--	VALUES (
	--		nextval('tbl_locations_location_id_seq'),
	--		Now(),
	--		'Unspecified geographical area. This may relate to the whole world or it may just be undefined viz. geographical distribution. This should only in be used as a last resort.',
	--		'Unspecified'
	--	);
	--	PERFORM BugsTransferLog('tbl_location_types','I',currval('tbl_location_types_location_type_id_seq'),'');
	--END IF;

--	SELECT location_id INTO STRICT unspecified_loc FROM tbl_locations
--	WHERE location_name = 'Unspecified'
--	AND location_type_id = LookupIdByUniqueValue('tbl_location_types', 'location_type_id', 'type_name', 'Geographical area');
	
	UPDATE tbl_bugs_tperiods SET "PeriodGeog" = 'Unspecified' WHERE "PeriodGeog" is null;
	update_count = update_count +1;

	--Log the count of regions updated
	log_note =  FORMAT('UpdateTPeriodGeographicRegions(): %s period geographical region name updates',update_count);
	PERFORM BugsTransferLog('tbl_bugs_tperiods','U',log_note);
END;
$$;


--
-- TOC entry 1264 (class 1255 OID 16799)
-- Name: updatetsitelocations(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION updatetsitelocations() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	update_count	INTEGER;
	log_note	TEXT;
BEGIN
	update_count = 0;
	IF ExistsTableOneColumnValue('tbl_location_types','location_type','Unprocessed Bugs Transfer') IS FALSE THEN
		INSERT INTO tbl_location_types(
			location_type_id,
			date_updated,
			description,
			location_type
		)
		VALUES (
			nextval('tbl_location_types_location_type_id_seq'),
			Now(),
			'Undetermined location type from a Bugs transfer, needs processing.',
			'Unprocessed Bugs Transfer'
		);
		PERFORM BugsTransferLog('tbl_location_types','I',currval('tbl_location_types_location_type_id_seq'),'Unprocessed Bugs Transfer');
	END IF;

	IF ExistsTableOneColumnValue('tbl_location_types','location_type','Geographical area') IS FALSE THEN
		INSERT INTO tbl_location_types(
			location_type_id,
			date_updated,
			description,
			location_type
		)
		VALUES (
			nextval('tbl_location_types_location_type_id_seq'),
			Now(),
			'',
			'Geographical area'
		);
		PERFORM BugsTransferLog('tbl_location_types','I',currval('tbl_location_types_location_type_id_seq'),'Geographical area');
	END IF;

	-- there is no reason for this and nothing is attached to this instance from tbl_locations
	-- 20140404 Erik J. Eriksson
	--IF ExistsTableOneColumnValue('tbl_location_types','location_type','Islay') IS FALSE THEN
	--	INSERT INTO tbl_location_types(
	--		location_type_id,
	--		date_updated,
	--		description,
	--		location_type
	--	)
	--	VALUES (
	--		nextval('tbl_location_types_location_type_id_seq'),
	--		Now(),
	--		'',
	--		'Islay'
	--	);
	--	PERFORM BugsTransferLog('tbl_location_types','I',currval('tbl_location_types_location_type_id_seq'),'');
	--END IF;

	IF ExistsTableOneColumnValue('tbl_location_types','location_type','Island') IS FALSE THEN
		INSERT INTO tbl_location_types(
			location_type_id,
			date_updated,
			description,
			location_type
		)
		VALUES (
			nextval('tbl_location_types_location_type_id_seq'),
			Now(),
			'',
			'Island'
		);
		PERFORM BugsTransferLog('tbl_location_types','I',currval('tbl_location_types_location_type_id_seq'),'Island');
	END IF;

	IF ExistsTableOneColumnValue('tbl_location_types','location_type','Archaeological site') IS FALSE THEN
		INSERT INTO tbl_location_types(
			location_type_id,
			date_updated,
			description,
			location_type
		)
		VALUES (
			nextval('tbl_location_types_location_type_id_seq'),
			Now(),
			'',
			'Archaeological site'
		);
		PERFORM BugsTransferLog('tbl_location_types','I',currval('tbl_location_types_location_type_id_seq'),'Archaeological site');
	END IF;

	IF ExistsTableOneColumnValue('tbl_location_types','location_type','Historical settlement') IS FALSE THEN
		INSERT INTO tbl_location_types(
			location_type_id,
			date_updated,
			description,
			location_type
		)
		VALUES (
			nextval('tbl_location_types_location_type_id_seq'),
			Now(),
			'',
			'Historical settlement'
		);
		PERFORM BugsTransferLog('tbl_location_types','I',currval('tbl_location_types_location_type_id_seq'),'Historical settlement');
	END IF;

	--Data cleaning for the location_types
	-- Corrections
	UPDATE tbl_bugs_tsite SET "Region" = 'Alpes-Maritimes' WHERE "Region" = 'Alpes Maritime';
	update_count = update_count +1;
	UPDATE tbl_bugs_tsite SET "Region" = 'Ameraliksfjordur' WHERE "Region" = 'Ameraliksfjord';
	update_count = update_count +1;
	UPDATE tbl_bugs_tsite SET "Region" = 'Angermanland' WHERE "Region" = 'Angermannland';
	update_count = update_count +1;
	UPDATE tbl_bugs_tsite SET "Region" = 'County Dowm' WHERE "Region" = 'Co. Down';
	update_count = update_count +1;
	UPDATE tbl_bugs_tsite SET "Region" = 'County Louth' WHERE "Region" = 'Co. Louth';
	update_count = update_count +1;
	UPDATE tbl_bugs_tsite SET "Region" = 'Inverness-shire' WHERE "Region" = 'Inverness shire';
	update_count = update_count +1;
	UPDATE tbl_bugs_tsite SET "Region" = 'Leicestershire' WHERE "Region" = 'Leics.';
	update_count = update_count +1;
	UPDATE tbl_bugs_tsite SET "Region" = 'Møn' WHERE "Region" = 'Møen';
	update_count = update_count +1;
	UPDATE tbl_bugs_tsite SET "Region" = 'Noord-Brabant' WHERE "Region" = 'Noord Brabant';
	update_count = update_count +1;
	UPDATE tbl_bugs_tsite SET "Region" = 'Noord-Holland' WHERE "Region" = 'Noord Holland';
	update_count = update_count +1;
	UPDATE tbl_bugs_tsite SET "Region" = 'North Holland' WHERE "Region" = 'North';
	update_count = update_count +1;
	UPDATE tbl_bugs_tsite SET "Region" = NULL WHERE "Region" = 'Not located';
	update_count = update_count +1;
	UPDATE tbl_bugs_tsite SET "Region" = 'Nottinghamshire' WHERE "Region" = 'Notts.';
	update_count = update_count +1;
	UPDATE tbl_bugs_tsite SET "Region" = 'Ostergotland' WHERE "Region" = 'Ostergottland';
	update_count = update_count +1;
	UPDATE tbl_bugs_tsite SET "Region" = 'Ostrobothnia media' WHERE "Region" = 'Ostobottnia media';
	update_count = update_count +1;
	UPDATE tbl_bugs_tsite SET "Region" = 'Ostrobothnia australis' WHERE "Region" = 'Ostrobottnia australis';
	update_count = update_count +1;
	UPDATE tbl_bugs_tsite SET "Region" = 'Ostrobothnia borealis' WHERE "Region" = 'Ostrobottnia borealis';
	update_count = update_count +1;
	UPDATE tbl_bugs_tsite SET "Region" = 'Ostrobothnia media' WHERE "Region" = 'Ostrobottnia media';
	update_count = update_count +1;
	UPDATE tbl_bugs_tsite SET "Region" = 'Reykjavík' WHERE "Region" = 'Reykjavik';
	update_count = update_count +1;
	UPDATE tbl_bugs_tsite SET "Region" = 'South Uist, Outer Hebrides' WHERE "Region" = 'S Uist, Outer Hebrides';
	update_count = update_count +1;
	UPDATE tbl_bugs_tsite SET "Region" = 'Zealand' WHERE "Region" = 'Sjaelland';
	update_count = update_count +1;
	UPDATE tbl_bugs_tsite SET "Region" = 'Vågsøy' WHERE "Region" = 'Vagsøy';
	update_count = update_count +1;
	UPDATE tbl_bugs_tsite SET "Region" = 'Yorkshire' WHERE "Region" = 'Yorks';
	update_count = update_count +1;
	UPDATE tbl_bugs_tsite SET "Region" = 'Angermanland' WHERE "Region" = 'Ångermanland';
	update_count = update_count +1;

	UPDATE tbl_bugs_tsite SET "Region" = 'County Antrim' WHERE "Region" = 'Co Antrim';
	update_count = update_count +1;
	UPDATE tbl_bugs_tsite SET "Region" = 'County Down' WHERE "Region" = 'Co Down';
	update_count = update_count +1;
	UPDATE tbl_bugs_tsite SET "Region" = 'County Kildare' WHERE "Region" = 'Co. Kildare';
	update_count = update_count +1;
	UPDATE tbl_bugs_tsite SET "Region" = 'County Longford' WHERE "Region" = 'Co Longford';
	update_count = update_count +1;
	UPDATE tbl_bugs_tsite SET "Region" = 'County Meath' WHERE "Region" = 'Co Meath';
	update_count = update_count +1;
	UPDATE tbl_bugs_tsite SET "Region" = 'County Offaly' WHERE "Region" = 'Co Offaly';
	update_count = update_count +1;
	UPDATE tbl_bugs_tsite SET "Region" = 'County Offaly' WHERE "Region" = 'Co. Offaly';
	update_count = update_count +1;
	UPDATE tbl_bugs_tsite SET "Region" = 'County Tipperary' WHERE "Region" = 'Co Tipperary';
	update_count = update_count +1;
	UPDATE tbl_bugs_tsite SET "Region" = 'County Tipperary' WHERE "Region" = 'Co. Tipperary';
	update_count = update_count +1;
	UPDATE tbl_bugs_tsite SET "Region" = 'County Westmeath' WHERE "Region" = 'Co Westmeath';
	update_count = update_count +1;
	
	UPDATE tbl_bugs_tsite SET "Region" = 'Lappland' WHERE "Region" = 'Lapland';
	update_count = update_count +1;
	UPDATE tbl_bugs_tsite SET "Region" = 'Lycksele' WHERE "Region" = 'Lycksele, Lappmark';
	update_count = update_count +1;
	
	--Log the count of regions updated
	log_note =  FORMAT('UpdateTSiteLocations(): %s Region name updates',update_count);
	PERFORM BugsTransferLog('tbl_bugs_tsite','U',log_note);

	--Country updates
	UPDATE tbl_bugs_tsite SET "Country" = 'United Kingdom' WHERE "SiteCODE" = 'SITE000006';
END;
$$;


--
-- TOC entry 1265 (class 1255 OID 16800)
-- Name: updateunits(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION updateunits() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN
	IF ExistsTableOneColumnValue('tbl_units','unit_name','undefined uncalibrated years') IS FALSE THEN
		INSERT INTO tbl_units(
			unit_id,
			date_updated,
			description,
			unit_abbrev,
			unit_name
		)
		VALUES (
			nextval('tbl_units_unit_id_seq'),
			Now(),
			'Undefined and uncalibrated years other than 14C years. May be result of age determination through a variety of methods and reflect years as defined within the framework of the method.',
			'uncal yrs',
			'undefined uncalibrated years'
		);
		PERFORM BugsTransferLog('tbl_units','I',currval('tbl_units_unit_id_seq'),'undefined uncalibrated years');
	END IF;
END;
$$;


SET search_path = clearing_house, pg_catalog;

SET default_with_oids = false;

--
-- TOC entry 212 (class 1259 OID 16801)
-- Name: tbl_abundance_elements; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_abundance_elements (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    abundance_element_id integer NOT NULL,
    record_type_id integer,
    element_name character varying(100) NOT NULL,
    element_description text,
    date_updated timestamp with time zone
);


--
-- TOC entry 213 (class 1259 OID 16807)
-- Name: tbl_abundance_ident_levels; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_abundance_ident_levels (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    abundance_ident_level_id integer NOT NULL,
    abundance_id integer NOT NULL,
    identification_level_id integer NOT NULL,
    date_updated timestamp with time zone
);


--
-- TOC entry 214 (class 1259 OID 16810)
-- Name: tbl_abundance_modifications; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_abundance_modifications (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    abundance_modification_id integer NOT NULL,
    abundance_id integer NOT NULL,
    modification_type_id integer NOT NULL,
    date_updated timestamp with time zone
);


--
-- TOC entry 215 (class 1259 OID 16813)
-- Name: tbl_abundances; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_abundances (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    abundance_id integer NOT NULL,
    taxon_id integer NOT NULL,
    analysis_entity_id integer NOT NULL,
    abundance_element_id integer,
    abundance integer NOT NULL,
    date_updated timestamp with time zone
);


--
-- TOC entry 216 (class 1259 OID 16816)
-- Name: tbl_activity_types; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_activity_types (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    activity_type_id integer NOT NULL,
    activity_type character varying(50),
    description text,
    date_updated timestamp with time zone
);


--
-- TOC entry 217 (class 1259 OID 16822)
-- Name: tbl_aggregate_datasets; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_aggregate_datasets (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    aggregate_dataset_id integer NOT NULL,
    aggregate_order_type_id integer NOT NULL,
    biblio_id integer,
    aggregate_dataset_name character varying(255),
    date_updated timestamp with time zone,
    description text
);


--
-- TOC entry 218 (class 1259 OID 16828)
-- Name: tbl_aggregate_order_types; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_aggregate_order_types (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    aggregate_order_type_id integer NOT NULL,
    aggregate_order_type character varying(60) NOT NULL,
    date_updated timestamp with time zone,
    description text
);


--
-- TOC entry 219 (class 1259 OID 16834)
-- Name: tbl_aggregate_sample_ages; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_aggregate_sample_ages (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    aggregate_sample_age_id integer NOT NULL,
    aggregate_dataset_id integer NOT NULL,
    analysis_entity_age_id integer NOT NULL,
    date_updated timestamp with time zone
);


--
-- TOC entry 220 (class 1259 OID 16837)
-- Name: tbl_aggregate_samples; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_aggregate_samples (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    aggregate_sample_id integer NOT NULL,
    aggregate_dataset_id integer NOT NULL,
    analysis_entity_id integer NOT NULL,
    aggregate_sample_name character varying(50),
    date_updated timestamp with time zone
);


--
-- TOC entry 221 (class 1259 OID 16840)
-- Name: tbl_alt_ref_types; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_alt_ref_types (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    alt_ref_type_id integer NOT NULL,
    alt_ref_type character varying(50) NOT NULL,
    date_updated timestamp with time zone,
    description text
);


--
-- TOC entry 222 (class 1259 OID 16846)
-- Name: tbl_analysis_entities; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_analysis_entities (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    analysis_entity_id integer NOT NULL,
    physical_sample_id integer,
    dataset_id integer,
    date_updated timestamp with time zone
);


--
-- TOC entry 223 (class 1259 OID 16849)
-- Name: tbl_analysis_entity_ages; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_analysis_entity_ages (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    analysis_entity_age_id integer NOT NULL,
    age numeric(20,10) NOT NULL,
    age_older numeric(15,5),
    age_younger numeric(15,5),
    analysis_entity_id integer,
    chronology_id integer,
    date_updated timestamp with time zone
);


--
-- TOC entry 224 (class 1259 OID 16852)
-- Name: tbl_analysis_entity_dimensions; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_analysis_entity_dimensions (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    analysis_entity_dimension_id integer NOT NULL,
    analysis_entity_id integer NOT NULL,
    dimension_id integer NOT NULL,
    dimension_value numeric NOT NULL,
    date_updated timestamp with time zone
);


--
-- TOC entry 225 (class 1259 OID 16858)
-- Name: tbl_analysis_entity_prep_methods; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_analysis_entity_prep_methods (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    analysis_entity_prep_method_id integer NOT NULL,
    analysis_entity_id integer NOT NULL,
    method_id integer NOT NULL,
    date_updated timestamp with time zone
);


--
-- TOC entry 226 (class 1259 OID 16861)
-- Name: tbl_biblio; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_biblio (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    biblio_id integer NOT NULL,
    author character varying(255),
    biblio_keyword_id integer,
    bugs_author character varying(255),
    bugs_biblio_id integer,
    bugs_reference character varying(60),
    bugs_title character varying(255),
    collection_or_journal_id integer,
    date_updated timestamp with time zone,
    doi character varying(255),
    edition character varying(128),
    isbn character varying(128),
    keywords character varying(255),
    notes text,
    number character varying(128),
    pages character varying(50),
    pdf_link character varying(255),
    publication_type_id integer,
    publisher_id integer,
    title character varying(255),
    volume character varying(128),
    year character varying(255)
);


--
-- TOC entry 227 (class 1259 OID 16867)
-- Name: tbl_biblio_keywords; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_biblio_keywords (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    biblio_keyword_id integer NOT NULL,
    biblio_id integer NOT NULL,
    date_updated timestamp with time zone,
    keyword_id integer NOT NULL
);


--
-- TOC entry 228 (class 1259 OID 16870)
-- Name: tbl_bugs_abundance_codes; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_bugs_abundance_codes (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    bugs_abundance_code_id integer NOT NULL,
    abundance_id integer,
    bugs_fossilbugscode character varying(10),
    bugs_samplecode character varying(10),
    date_updated timestamp with time zone
);


--
-- TOC entry 229 (class 1259 OID 16873)
-- Name: tbl_bugs_biblio; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_bugs_biblio (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    bugs_biblio_id integer NOT NULL,
    biblio_id integer NOT NULL,
    bugs_reference character varying(255) NOT NULL,
    date_updated timestamp with time zone
);


--
-- TOC entry 230 (class 1259 OID 16876)
-- Name: tbl_bugs_dates_calendar; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_bugs_dates_calendar (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    bugs_dates_calendar_id integer NOT NULL,
    relative_date_id integer NOT NULL,
    date_updated timestamp with time zone,
    bugs_calendarcode character varying(255) NOT NULL,
    bugs_samplecode character varying(255)
);


--
-- TOC entry 231 (class 1259 OID 16882)
-- Name: tbl_bugs_dates_period; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_bugs_dates_period (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    bugs_dates_period_id integer NOT NULL,
    relative_date_id integer NOT NULL,
    bugs_perioddatecode character varying(255) NOT NULL,
    date_updated timestamp with time zone,
    bugs_samplecode character varying(255)
);


--
-- TOC entry 232 (class 1259 OID 16888)
-- Name: tbl_bugs_dates_radio; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_bugs_dates_radio (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    bugs_dates_radio_id integer NOT NULL,
    bugs_datecode character varying(255) NOT NULL,
    date_updated timestamp with time zone,
    geochron_id integer NOT NULL,
    bugs_samplecode character varying(255),
    bugs_materialtype text
);


--
-- TOC entry 233 (class 1259 OID 16894)
-- Name: tbl_bugs_datesmethods; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_bugs_datesmethods (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    bugs_datesmethods_id integer NOT NULL,
    method_id integer,
    bugs_abbrev character varying(255),
    bugs_method character varying(255),
    date_updated timestamp with time zone
);


--
-- TOC entry 234 (class 1259 OID 16900)
-- Name: tbl_bugs_periods; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_bugs_periods (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    bugs_dates_relative_id integer NOT NULL,
    bugs_periodcode character varying(255) NOT NULL,
    date_updated timestamp with time zone,
    relative_age_id integer NOT NULL
);


--
-- TOC entry 235 (class 1259 OID 16903)
-- Name: tbl_bugs_physical_samples; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_bugs_physical_samples (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    bugs_physical_sample_id integer NOT NULL,
    physical_sample_id integer NOT NULL,
    bugs_samplecode character varying(10),
    date_updated timestamp with time zone
);


--
-- TOC entry 236 (class 1259 OID 16906)
-- Name: tbl_bugs_sample_groups; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_bugs_sample_groups (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    bugs_sample_group_id integer NOT NULL,
    sample_group_id integer NOT NULL,
    bugs_countsheetcode character varying(10),
    date_updated timestamp with time zone
);


--
-- TOC entry 237 (class 1259 OID 16909)
-- Name: tbl_bugs_sites; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_bugs_sites (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    bugs_sites_id integer NOT NULL,
    site_id integer NOT NULL,
    bugs_sitecode character varying(10),
    date_updated timestamp with time zone
);


--
-- TOC entry 238 (class 1259 OID 16912)
-- Name: tbl_ceramics; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_ceramics (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    ceramics_id integer NOT NULL,
    analysis_entity_id integer NOT NULL,
    ceramics_measurement_id integer NOT NULL,
    measurement_value character varying(255) NOT NULL,
    date_updated timestamp with time zone
);


--
-- TOC entry 239 (class 1259 OID 16915)
-- Name: tbl_ceramics_measurement_lookup; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_ceramics_measurement_lookup (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    ceramics_measurement_lookup_id integer NOT NULL,
    ceramics_measurement_id integer NOT NULL,
    value character varying(255) NOT NULL,
    date_updated timestamp with time zone
);


--
-- TOC entry 240 (class 1259 OID 16918)
-- Name: tbl_ceramics_measurements; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_ceramics_measurements (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    ceramics_measurement_id integer NOT NULL,
    date_updated timestamp with time zone,
    method_id integer
);


--
-- TOC entry 241 (class 1259 OID 16921)
-- Name: tbl_chron_control_types; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_chron_control_types (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    chron_control_type_id integer NOT NULL,
    chron_control_type character varying(50),
    date_updated timestamp with time zone
);


--
-- TOC entry 242 (class 1259 OID 16924)
-- Name: tbl_chron_controls; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_chron_controls (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    chron_control_id integer NOT NULL,
    age numeric(20,5),
    age_limit_older numeric(20,5),
    age_limit_younger numeric(20,5),
    chron_control_type_id integer,
    chronology_id integer NOT NULL,
    date_updated timestamp with time zone,
    depth_bottom numeric(20,5),
    depth_top numeric(20,5),
    notes text
);


--
-- TOC entry 243 (class 1259 OID 16930)
-- Name: tbl_chronologies; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_chronologies (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    chronology_id integer NOT NULL,
    age_bound_older integer,
    age_bound_younger integer,
    age_model character varying(80),
    age_type_id integer NOT NULL,
    chronology_name character varying(80),
    contact_id integer,
    date_prepared timestamp without time zone,
    date_updated timestamp with time zone,
    is_default boolean NOT NULL,
    notes text,
    sample_group_id integer NOT NULL
);


--
-- TOC entry 244 (class 1259 OID 16936)
-- Name: tbl_clearinghouse_accepted_submissions; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_clearinghouse_accepted_submissions (
    accepted_submission_id integer NOT NULL,
    process_state_id boolean NOT NULL,
    submission_id integer,
    upload_file text,
    accept_user_id integer
);


--
-- TOC entry 245 (class 1259 OID 16942)
-- Name: tbl_clearinghouse_accepted_submissio_accepted_submission_id_seq; Type: SEQUENCE; Schema: clearing_house; Owner: -
--

CREATE SEQUENCE tbl_clearinghouse_accepted_submissio_accepted_submission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7001 (class 0 OID 0)
-- Dependencies: 245
-- Name: tbl_clearinghouse_accepted_submissio_accepted_submission_id_seq; Type: SEQUENCE OWNED BY; Schema: clearing_house; Owner: -
--

ALTER SEQUENCE tbl_clearinghouse_accepted_submissio_accepted_submission_id_seq OWNED BY tbl_clearinghouse_accepted_submissions.accepted_submission_id;


--
-- TOC entry 246 (class 1259 OID 16944)
-- Name: tbl_clearinghouse_activity_log; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_clearinghouse_activity_log (
    activity_log_id integer NOT NULL,
    use_case_id integer DEFAULT 0 NOT NULL,
    user_id integer DEFAULT 0 NOT NULL,
    session_id integer DEFAULT 0 NOT NULL,
    entity_type_id integer DEFAULT 0 NOT NULL,
    entity_id integer DEFAULT 0 NOT NULL,
    execute_start_time date NOT NULL,
    execute_stop_time date,
    status_id integer DEFAULT 0 NOT NULL,
    activity_data text,
    message text DEFAULT ''::text NOT NULL
);


--
-- TOC entry 247 (class 1259 OID 16957)
-- Name: tbl_clearinghouse_activity_log_activity_log_id_seq; Type: SEQUENCE; Schema: clearing_house; Owner: -
--

CREATE SEQUENCE tbl_clearinghouse_activity_log_activity_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7002 (class 0 OID 0)
-- Dependencies: 247
-- Name: tbl_clearinghouse_activity_log_activity_log_id_seq; Type: SEQUENCE OWNED BY; Schema: clearing_house; Owner: -
--

ALTER SEQUENCE tbl_clearinghouse_activity_log_activity_log_id_seq OWNED BY tbl_clearinghouse_activity_log.activity_log_id;


--
-- TOC entry 248 (class 1259 OID 16959)
-- Name: tbl_clearinghouse_data_provider_grades; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_clearinghouse_data_provider_grades (
    grade_id integer NOT NULL,
    description character varying(255) NOT NULL
);


--
-- TOC entry 249 (class 1259 OID 16962)
-- Name: tbl_clearinghouse_info_references; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_clearinghouse_info_references (
    info_reference_id integer NOT NULL,
    info_reference_type character varying(255) NOT NULL,
    display_name character varying(255) NOT NULL,
    href character varying(255)
);


--
-- TOC entry 250 (class 1259 OID 16968)
-- Name: tbl_clearinghouse_info_references_info_reference_id_seq; Type: SEQUENCE; Schema: clearing_house; Owner: -
--

CREATE SEQUENCE tbl_clearinghouse_info_references_info_reference_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7003 (class 0 OID 0)
-- Dependencies: 250
-- Name: tbl_clearinghouse_info_references_info_reference_id_seq; Type: SEQUENCE OWNED BY; Schema: clearing_house; Owner: -
--

ALTER SEQUENCE tbl_clearinghouse_info_references_info_reference_id_seq OWNED BY tbl_clearinghouse_info_references.info_reference_id;


--
-- TOC entry 251 (class 1259 OID 16970)
-- Name: tbl_clearinghouse_reject_entity_types; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_clearinghouse_reject_entity_types (
    entity_type_id integer NOT NULL,
    table_id integer,
    entity_type character varying(255) NOT NULL
);


--
-- TOC entry 252 (class 1259 OID 16973)
-- Name: tbl_clearinghouse_reports; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_clearinghouse_reports (
    report_id integer NOT NULL,
    report_name character varying(255),
    report_procedure text NOT NULL
);


--
-- TOC entry 253 (class 1259 OID 16979)
-- Name: tbl_clearinghouse_sead_create_table_log; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_clearinghouse_sead_create_table_log (
    create_script text,
    drop_script text
);


--
-- TOC entry 254 (class 1259 OID 16985)
-- Name: tbl_clearinghouse_sead_create_view_log; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_clearinghouse_sead_create_view_log (
    create_script text,
    drop_script text
);


--
-- TOC entry 255 (class 1259 OID 16991)
-- Name: tbl_clearinghouse_sead_rdb_schema; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_clearinghouse_sead_rdb_schema (
    table_schema character varying(255) NOT NULL,
    table_name character varying(255) NOT NULL,
    column_name character varying(255) NOT NULL,
    ordinal_position integer NOT NULL,
    data_type character varying(255) NOT NULL,
    numeric_precision integer,
    numeric_scale integer,
    character_maximum_length integer,
    is_nullable character varying(10) NOT NULL,
    is_pk character varying(10) NOT NULL
);


--
-- TOC entry 256 (class 1259 OID 16997)
-- Name: tbl_clearinghouse_sessions; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_clearinghouse_sessions (
    session_id integer NOT NULL,
    user_id integer DEFAULT 0 NOT NULL,
    ip character varying(255),
    start_time date NOT NULL,
    stop_time date
);


--
-- TOC entry 257 (class 1259 OID 17001)
-- Name: tbl_clearinghouse_sessions_session_id_seq; Type: SEQUENCE; Schema: clearing_house; Owner: -
--

CREATE SEQUENCE tbl_clearinghouse_sessions_session_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7004 (class 0 OID 0)
-- Dependencies: 257
-- Name: tbl_clearinghouse_sessions_session_id_seq; Type: SEQUENCE OWNED BY; Schema: clearing_house; Owner: -
--

ALTER SEQUENCE tbl_clearinghouse_sessions_session_id_seq OWNED BY tbl_clearinghouse_sessions.session_id;


--
-- TOC entry 258 (class 1259 OID 17003)
-- Name: tbl_clearinghouse_settings; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_clearinghouse_settings (
    setting_id integer NOT NULL,
    setting_group character varying(255) NOT NULL,
    setting_key character varying(255) NOT NULL,
    setting_value text NOT NULL,
    setting_datatype text NOT NULL
);


--
-- TOC entry 259 (class 1259 OID 17009)
-- Name: tbl_clearinghouse_settings_setting_id_seq; Type: SEQUENCE; Schema: clearing_house; Owner: -
--

CREATE SEQUENCE tbl_clearinghouse_settings_setting_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7005 (class 0 OID 0)
-- Dependencies: 259
-- Name: tbl_clearinghouse_settings_setting_id_seq; Type: SEQUENCE OWNED BY; Schema: clearing_house; Owner: -
--

ALTER SEQUENCE tbl_clearinghouse_settings_setting_id_seq OWNED BY tbl_clearinghouse_settings.setting_id;


--
-- TOC entry 260 (class 1259 OID 17011)
-- Name: tbl_clearinghouse_signal_log; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_clearinghouse_signal_log (
    signal_log_id integer NOT NULL,
    use_case_id integer NOT NULL,
    signal_time date NOT NULL,
    email text NOT NULL,
    cc text NOT NULL,
    subject text NOT NULL,
    body text NOT NULL
);


--
-- TOC entry 261 (class 1259 OID 17017)
-- Name: tbl_clearinghouse_signal_log_signal_log_id_seq; Type: SEQUENCE; Schema: clearing_house; Owner: -
--

CREATE SEQUENCE tbl_clearinghouse_signal_log_signal_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7006 (class 0 OID 0)
-- Dependencies: 261
-- Name: tbl_clearinghouse_signal_log_signal_log_id_seq; Type: SEQUENCE OWNED BY; Schema: clearing_house; Owner: -
--

ALTER SEQUENCE tbl_clearinghouse_signal_log_signal_log_id_seq OWNED BY tbl_clearinghouse_signal_log.signal_log_id;


--
-- TOC entry 262 (class 1259 OID 17019)
-- Name: tbl_clearinghouse_signals; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_clearinghouse_signals (
    signal_id integer NOT NULL,
    use_case_id integer DEFAULT 0 NOT NULL,
    recipient_user_id integer DEFAULT 0 NOT NULL,
    recipient_address text NOT NULL,
    signal_time date NOT NULL,
    subject text,
    body text,
    status text
);


--
-- TOC entry 263 (class 1259 OID 17027)
-- Name: tbl_clearinghouse_signals_signal_id_seq; Type: SEQUENCE; Schema: clearing_house; Owner: -
--

CREATE SEQUENCE tbl_clearinghouse_signals_signal_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7007 (class 0 OID 0)
-- Dependencies: 263
-- Name: tbl_clearinghouse_signals_signal_id_seq; Type: SEQUENCE OWNED BY; Schema: clearing_house; Owner: -
--

ALTER SEQUENCE tbl_clearinghouse_signals_signal_id_seq OWNED BY tbl_clearinghouse_signals.signal_id;


--
-- TOC entry 264 (class 1259 OID 17029)
-- Name: tbl_clearinghouse_submission_reject_entities; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_clearinghouse_submission_reject_entities (
    reject_entity_id integer NOT NULL,
    submission_reject_id integer NOT NULL,
    local_db_id integer NOT NULL
);


--
-- TOC entry 265 (class 1259 OID 17032)
-- Name: tbl_clearinghouse_submission_reject_entiti_reject_entity_id_seq; Type: SEQUENCE; Schema: clearing_house; Owner: -
--

CREATE SEQUENCE tbl_clearinghouse_submission_reject_entiti_reject_entity_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7008 (class 0 OID 0)
-- Dependencies: 265
-- Name: tbl_clearinghouse_submission_reject_entiti_reject_entity_id_seq; Type: SEQUENCE OWNED BY; Schema: clearing_house; Owner: -
--

ALTER SEQUENCE tbl_clearinghouse_submission_reject_entiti_reject_entity_id_seq OWNED BY tbl_clearinghouse_submission_reject_entities.reject_entity_id;


--
-- TOC entry 266 (class 1259 OID 17034)
-- Name: tbl_clearinghouse_submission_rejects; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_clearinghouse_submission_rejects (
    submission_reject_id integer NOT NULL,
    submission_id integer NOT NULL,
    site_id integer DEFAULT 0 NOT NULL,
    entity_type_id integer NOT NULL,
    reject_scope_id integer NOT NULL,
    reject_description text
);


--
-- TOC entry 267 (class 1259 OID 17041)
-- Name: tbl_clearinghouse_submission_rejects_submission_reject_id_seq; Type: SEQUENCE; Schema: clearing_house; Owner: -
--

CREATE SEQUENCE tbl_clearinghouse_submission_rejects_submission_reject_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7009 (class 0 OID 0)
-- Dependencies: 267
-- Name: tbl_clearinghouse_submission_rejects_submission_reject_id_seq; Type: SEQUENCE OWNED BY; Schema: clearing_house; Owner: -
--

ALTER SEQUENCE tbl_clearinghouse_submission_rejects_submission_reject_id_seq OWNED BY tbl_clearinghouse_submission_rejects.submission_reject_id;


--
-- TOC entry 268 (class 1259 OID 17043)
-- Name: tbl_clearinghouse_submission_states; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_clearinghouse_submission_states (
    submission_state_id integer NOT NULL,
    submission_state_name character varying(255) NOT NULL
);


--
-- TOC entry 269 (class 1259 OID 17046)
-- Name: tbl_clearinghouse_submission_tables; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_clearinghouse_submission_tables (
    table_id integer NOT NULL,
    table_name character varying(255) NOT NULL,
    table_name_underscored character varying(255) NOT NULL
);


--
-- TOC entry 270 (class 1259 OID 17052)
-- Name: tbl_clearinghouse_submission_tables_table_id_seq; Type: SEQUENCE; Schema: clearing_house; Owner: -
--

CREATE SEQUENCE tbl_clearinghouse_submission_tables_table_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7010 (class 0 OID 0)
-- Dependencies: 270
-- Name: tbl_clearinghouse_submission_tables_table_id_seq; Type: SEQUENCE OWNED BY; Schema: clearing_house; Owner: -
--

ALTER SEQUENCE tbl_clearinghouse_submission_tables_table_id_seq OWNED BY tbl_clearinghouse_submission_tables.table_id;


--
-- TOC entry 271 (class 1259 OID 17054)
-- Name: tbl_clearinghouse_submission_xml_content_columns; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_clearinghouse_submission_xml_content_columns (
    column_id integer NOT NULL,
    submission_id integer NOT NULL,
    table_id integer NOT NULL,
    column_name character varying(255) NOT NULL,
    column_name_underscored character varying(255) NOT NULL,
    data_type character varying(255) NOT NULL,
    fk_flag boolean NOT NULL,
    fk_table character varying(255),
    fk_table_underscored character varying(255)
);


--
-- TOC entry 272 (class 1259 OID 17060)
-- Name: tbl_clearinghouse_submission_xml_content_columns_column_id_seq; Type: SEQUENCE; Schema: clearing_house; Owner: -
--

CREATE SEQUENCE tbl_clearinghouse_submission_xml_content_columns_column_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7011 (class 0 OID 0)
-- Dependencies: 272
-- Name: tbl_clearinghouse_submission_xml_content_columns_column_id_seq; Type: SEQUENCE OWNED BY; Schema: clearing_house; Owner: -
--

ALTER SEQUENCE tbl_clearinghouse_submission_xml_content_columns_column_id_seq OWNED BY tbl_clearinghouse_submission_xml_content_columns.column_id;


--
-- TOC entry 273 (class 1259 OID 17062)
-- Name: tbl_clearinghouse_submission_xml_content_records; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_clearinghouse_submission_xml_content_records (
    record_id integer NOT NULL,
    submission_id integer NOT NULL,
    table_id integer NOT NULL,
    local_db_id integer,
    public_db_id integer
);


--
-- TOC entry 274 (class 1259 OID 17065)
-- Name: tbl_clearinghouse_submission_xml_content_records_record_id_seq; Type: SEQUENCE; Schema: clearing_house; Owner: -
--

CREATE SEQUENCE tbl_clearinghouse_submission_xml_content_records_record_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7012 (class 0 OID 0)
-- Dependencies: 274
-- Name: tbl_clearinghouse_submission_xml_content_records_record_id_seq; Type: SEQUENCE OWNED BY; Schema: clearing_house; Owner: -
--

ALTER SEQUENCE tbl_clearinghouse_submission_xml_content_records_record_id_seq OWNED BY tbl_clearinghouse_submission_xml_content_records.record_id;


--
-- TOC entry 275 (class 1259 OID 17067)
-- Name: tbl_clearinghouse_submission_xml_content_tables; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_clearinghouse_submission_xml_content_tables (
    content_table_id integer NOT NULL,
    submission_id integer NOT NULL,
    table_id integer NOT NULL,
    record_count integer NOT NULL
);


--
-- TOC entry 276 (class 1259 OID 17070)
-- Name: tbl_clearinghouse_submission_xml_content_t_content_table_id_seq; Type: SEQUENCE; Schema: clearing_house; Owner: -
--

CREATE SEQUENCE tbl_clearinghouse_submission_xml_content_t_content_table_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7013 (class 0 OID 0)
-- Dependencies: 276
-- Name: tbl_clearinghouse_submission_xml_content_t_content_table_id_seq; Type: SEQUENCE OWNED BY; Schema: clearing_house; Owner: -
--

ALTER SEQUENCE tbl_clearinghouse_submission_xml_content_t_content_table_id_seq OWNED BY tbl_clearinghouse_submission_xml_content_tables.content_table_id;


--
-- TOC entry 277 (class 1259 OID 17072)
-- Name: tbl_clearinghouse_submission_xml_content_values; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_clearinghouse_submission_xml_content_values (
    value_id integer NOT NULL,
    submission_id integer NOT NULL,
    table_id integer NOT NULL,
    local_db_id integer NOT NULL,
    column_id integer NOT NULL,
    fk_flag boolean,
    fk_local_db_id integer,
    fk_public_db_id integer,
    value text
);


--
-- TOC entry 278 (class 1259 OID 17078)
-- Name: tbl_clearinghouse_submission_xml_content_values_value_id_seq; Type: SEQUENCE; Schema: clearing_house; Owner: -
--

CREATE SEQUENCE tbl_clearinghouse_submission_xml_content_values_value_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7014 (class 0 OID 0)
-- Dependencies: 278
-- Name: tbl_clearinghouse_submission_xml_content_values_value_id_seq; Type: SEQUENCE OWNED BY; Schema: clearing_house; Owner: -
--

ALTER SEQUENCE tbl_clearinghouse_submission_xml_content_values_value_id_seq OWNED BY tbl_clearinghouse_submission_xml_content_values.value_id;


--
-- TOC entry 279 (class 1259 OID 17080)
-- Name: tbl_clearinghouse_submissions; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_clearinghouse_submissions (
    submission_id integer NOT NULL,
    submission_state_id integer NOT NULL,
    data_types character varying(255),
    upload_user_id integer NOT NULL,
    upload_date date DEFAULT now() NOT NULL,
    upload_content text,
    xml xml,
    status_text text,
    claim_user_id integer,
    claim_date_time date
);


--
-- TOC entry 280 (class 1259 OID 17087)
-- Name: tbl_clearinghouse_submissions_submission_id_seq; Type: SEQUENCE; Schema: clearing_house; Owner: -
--

CREATE SEQUENCE tbl_clearinghouse_submissions_submission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7015 (class 0 OID 0)
-- Dependencies: 280
-- Name: tbl_clearinghouse_submissions_submission_id_seq; Type: SEQUENCE OWNED BY; Schema: clearing_house; Owner: -
--

ALTER SEQUENCE tbl_clearinghouse_submissions_submission_id_seq OWNED BY tbl_clearinghouse_submissions.submission_id;


--
-- TOC entry 281 (class 1259 OID 17089)
-- Name: tbl_clearinghouse_use_cases; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_clearinghouse_use_cases (
    use_case_id integer NOT NULL,
    use_case_name character varying(255) NOT NULL,
    entity_type_id integer DEFAULT 0 NOT NULL
);


--
-- TOC entry 282 (class 1259 OID 17093)
-- Name: tbl_clearinghouse_user_roles; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_clearinghouse_user_roles (
    role_id integer NOT NULL,
    role_name character varying(255) NOT NULL
);


--
-- TOC entry 283 (class 1259 OID 17096)
-- Name: tbl_clearinghouse_users; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_clearinghouse_users (
    user_id integer NOT NULL,
    user_name character varying(255) NOT NULL,
    full_name character varying(255) DEFAULT ''::character varying NOT NULL,
    password character varying(255) NOT NULL,
    email character varying(1024) DEFAULT ''::character varying NOT NULL,
    signal_receiver boolean DEFAULT false NOT NULL,
    role_id integer DEFAULT 1 NOT NULL,
    data_provider_grade_id integer DEFAULT 2 NOT NULL,
    is_data_provider boolean DEFAULT false NOT NULL,
    create_date date NOT NULL
);


--
-- TOC entry 284 (class 1259 OID 17108)
-- Name: tbl_clearinghouse_users_user_id_seq; Type: SEQUENCE; Schema: clearing_house; Owner: -
--

CREATE SEQUENCE tbl_clearinghouse_users_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7016 (class 0 OID 0)
-- Dependencies: 284
-- Name: tbl_clearinghouse_users_user_id_seq; Type: SEQUENCE OWNED BY; Schema: clearing_house; Owner: -
--

ALTER SEQUENCE tbl_clearinghouse_users_user_id_seq OWNED BY tbl_clearinghouse_users.user_id;


--
-- TOC entry 285 (class 1259 OID 17110)
-- Name: tbl_collections_or_journals; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_collections_or_journals (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    collection_or_journal_id integer NOT NULL,
    collection_or_journal_abbrev character varying(128),
    collection_title_or_journal_name character varying(255),
    date_updated timestamp with time zone,
    issn character varying(128),
    number_of_volumes character varying(50),
    publisher_id integer,
    series_editor character varying(255),
    series_title character varying(255),
    volume_editor character varying(255)
);


--
-- TOC entry 286 (class 1259 OID 17116)
-- Name: tbl_colours; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_colours (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    colour_id integer NOT NULL,
    colour_name character varying(30) NOT NULL,
    date_updated timestamp with time zone,
    method_id integer NOT NULL,
    rgb integer
);


--
-- TOC entry 287 (class 1259 OID 17119)
-- Name: tbl_contact_types; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_contact_types (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    contact_type_id integer NOT NULL,
    contact_type_name character varying(150) NOT NULL,
    date_updated timestamp with time zone,
    description text
);


--
-- TOC entry 288 (class 1259 OID 17125)
-- Name: tbl_contacts; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_contacts (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    contact_id integer NOT NULL,
    address_1 character varying(255),
    address_2 character varying(255),
    location_id integer,
    email character varying(255),
    first_name character varying(50),
    last_name character varying(100),
    phone_number character varying(50),
    url text,
    date_updated timestamp with time zone
);


--
-- TOC entry 289 (class 1259 OID 17131)
-- Name: tbl_coordinate_method_dimensions; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_coordinate_method_dimensions (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    coordinate_method_dimension_id integer NOT NULL,
    dimension_id integer NOT NULL,
    method_id integer NOT NULL,
    limit_upper numeric(18,10),
    limit_lower numeric(18,10),
    date_updated timestamp with time zone
);


--
-- TOC entry 290 (class 1259 OID 17134)
-- Name: tbl_data_type_groups; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_data_type_groups (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    data_type_group_id integer NOT NULL,
    data_type_group_name character varying(25),
    date_updated timestamp with time zone,
    description text
);


--
-- TOC entry 291 (class 1259 OID 17140)
-- Name: tbl_data_types; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_data_types (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    data_type_id integer NOT NULL,
    data_type_group_id integer NOT NULL,
    data_type_name character varying(25),
    date_updated timestamp with time zone,
    definition text
);


--
-- TOC entry 292 (class 1259 OID 17146)
-- Name: tbl_dataset_contacts; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_dataset_contacts (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    dataset_contact_id integer NOT NULL,
    contact_id integer NOT NULL,
    contact_type_id integer NOT NULL,
    dataset_id integer NOT NULL,
    date_updated timestamp with time zone
);


--
-- TOC entry 293 (class 1259 OID 17149)
-- Name: tbl_dataset_masters; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_dataset_masters (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    master_set_id integer NOT NULL,
    contact_id integer,
    biblio_id integer,
    master_name character varying(100),
    master_notes text,
    url text,
    date_updated timestamp with time zone
);


--
-- TOC entry 294 (class 1259 OID 17155)
-- Name: tbl_dataset_submission_types; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_dataset_submission_types (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    submission_type_id integer NOT NULL,
    submission_type character varying(60) NOT NULL,
    description text,
    date_updated timestamp with time zone
);


--
-- TOC entry 295 (class 1259 OID 17161)
-- Name: tbl_dataset_submissions; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_dataset_submissions (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    dataset_submission_id integer NOT NULL,
    dataset_id integer NOT NULL,
    submission_type_id integer NOT NULL,
    contact_id integer NOT NULL,
    date_submitted date NOT NULL,
    notes text,
    date_updated timestamp with time zone
);


--
-- TOC entry 296 (class 1259 OID 17167)
-- Name: tbl_datasets; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_datasets (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    dataset_id integer NOT NULL,
    master_set_id integer,
    data_type_id integer NOT NULL,
    method_id integer,
    biblio_id integer,
    updated_dataset_id integer,
    project_id integer,
    dataset_name character varying(50) NOT NULL,
    date_updated timestamp with time zone
);


--
-- TOC entry 297 (class 1259 OID 17170)
-- Name: tbl_dating_labs; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_dating_labs (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    dating_lab_id integer NOT NULL,
    contact_id integer,
    international_lab_id character varying(10) NOT NULL,
    lab_name character varying(100),
    country_id integer,
    date_updated timestamp with time zone
);


--
-- TOC entry 298 (class 1259 OID 17173)
-- Name: tbl_dating_material; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_dating_material (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    dating_material_id integer NOT NULL,
    geochron_id integer NOT NULL,
    taxon_id integer,
    material_dated character varying(255),
    description text,
    abundance_element_id integer,
    date_updated timestamp with time zone
);


--
-- TOC entry 299 (class 1259 OID 17179)
-- Name: tbl_dating_uncertainty; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_dating_uncertainty (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    dating_uncertainty_id integer NOT NULL,
    date_updated timestamp with time zone,
    description text,
    uncertainty character varying(255)
);


--
-- TOC entry 300 (class 1259 OID 17185)
-- Name: tbl_dendro; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_dendro (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    dendro_id integer NOT NULL,
    analysis_entity_id integer NOT NULL,
    dendro_measurement_id integer NOT NULL,
    measurement_value character varying(255) NOT NULL,
    date_updated timestamp with time zone
);


--
-- TOC entry 301 (class 1259 OID 17188)
-- Name: tbl_dendro_date_notes; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_dendro_date_notes (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    dendro_date_note_id integer NOT NULL,
    dendro_date_id integer NOT NULL,
    note text,
    date_updated timestamp with time zone
);


--
-- TOC entry 302 (class 1259 OID 17194)
-- Name: tbl_dendro_dates; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_dendro_dates (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    dendro_date_id integer NOT NULL,
    analysis_entity_id integer NOT NULL,
    cal_age_younger integer,
    dating_uncertainty_id integer,
    years_type_id integer,
    error integer,
    season_or_qualifier_id integer,
    date_updated timestamp with time zone,
    cal_age_older integer
);


--
-- TOC entry 303 (class 1259 OID 17197)
-- Name: tbl_dendro_measurement_lookup; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_dendro_measurement_lookup (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    dendro_measurement_lookup_id integer NOT NULL,
    dendro_measurement_id integer NOT NULL,
    value character varying(255) NOT NULL,
    date_updated timestamp with time zone
);


--
-- TOC entry 304 (class 1259 OID 17200)
-- Name: tbl_dendro_measurements; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_dendro_measurements (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    dendro_measurement_id integer NOT NULL,
    date_updated timestamp with time zone,
    method_id integer
);


--
-- TOC entry 305 (class 1259 OID 17203)
-- Name: tbl_dimensions; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_dimensions (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    dimension_id integer NOT NULL,
    date_updated timestamp with time zone,
    dimension_abbrev character varying(10),
    dimension_description text,
    dimension_name character varying(50) NOT NULL,
    unit_id integer,
    method_group_id integer
);


--
-- TOC entry 306 (class 1259 OID 17209)
-- Name: tbl_ecocode_definitions; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_ecocode_definitions (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    ecocode_definition_id integer NOT NULL,
    abbreviation character varying(10),
    date_updated timestamp with time zone,
    definition text,
    ecocode_group_id integer,
    label character varying(150),
    notes text,
    sort_order smallint
);


--
-- TOC entry 307 (class 1259 OID 17215)
-- Name: tbl_ecocode_groups; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_ecocode_groups (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    ecocode_group_id integer NOT NULL,
    date_updated timestamp with time zone,
    definition text,
    ecocode_system_id integer,
    label character varying(150)
);


--
-- TOC entry 308 (class 1259 OID 17221)
-- Name: tbl_ecocode_systems; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_ecocode_systems (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    ecocode_system_id integer NOT NULL,
    biblio_id integer,
    date_updated timestamp with time zone,
    definition text,
    name character varying(50),
    notes text
);


--
-- TOC entry 309 (class 1259 OID 17227)
-- Name: tbl_ecocodes; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_ecocodes (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    ecocode_id integer NOT NULL,
    date_updated timestamp with time zone,
    ecocode_definition_id integer,
    taxon_id integer
);


--
-- TOC entry 310 (class 1259 OID 17230)
-- Name: tbl_feature_types; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_feature_types (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    feature_type_id integer NOT NULL,
    feature_type_name character varying(128),
    feature_type_description text,
    date_updated timestamp with time zone
);


--
-- TOC entry 311 (class 1259 OID 17236)
-- Name: tbl_features; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_features (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    feature_id integer NOT NULL,
    feature_type_id integer NOT NULL,
    feature_name character varying(255),
    feature_description text,
    date_updated timestamp with time zone
);


--
-- TOC entry 312 (class 1259 OID 17242)
-- Name: tbl_foreign_relations; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_foreign_relations (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    source_table character varying(255) NOT NULL,
    source_column character varying(255) NOT NULL,
    target_table character varying(255) NOT NULL,
    target_column character varying(255) NOT NULL,
    weight integer,
    source_target_logic text,
    target_source_logic text
);


--
-- TOC entry 313 (class 1259 OID 17248)
-- Name: tbl_geochron_refs; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_geochron_refs (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    geochron_ref_id integer NOT NULL,
    geochron_id integer NOT NULL,
    biblio_id integer NOT NULL,
    date_updated timestamp with time zone
);


--
-- TOC entry 314 (class 1259 OID 17251)
-- Name: tbl_geochronology; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_geochronology (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    geochron_id integer NOT NULL,
    analysis_entity_id integer NOT NULL,
    dating_lab_id integer,
    lab_number character varying(40),
    age numeric(20,5),
    error_older numeric(20,5),
    error_younger numeric(20,5),
    delta_13c numeric(10,5),
    notes text,
    date_updated timestamp with time zone,
    dating_uncertainty_id integer
);


--
-- TOC entry 315 (class 1259 OID 17257)
-- Name: tbl_horizons; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_horizons (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    horizon_id integer NOT NULL,
    date_updated timestamp with time zone,
    description text,
    horizon_name character varying(15) NOT NULL,
    method_id integer NOT NULL
);


--
-- TOC entry 316 (class 1259 OID 17263)
-- Name: tbl_identification_levels; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_identification_levels (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    identification_level_id integer NOT NULL,
    identification_level_abbrev character varying(50),
    identification_level_name character varying(50),
    notes text,
    date_updated timestamp with time zone
);


--
-- TOC entry 317 (class 1259 OID 17269)
-- Name: tbl_image_types; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_image_types (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    image_type_id integer NOT NULL,
    date_updated timestamp with time zone,
    description text,
    image_type character varying(40) NOT NULL
);


--
-- TOC entry 318 (class 1259 OID 17275)
-- Name: tbl_imported_taxa_replacements; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_imported_taxa_replacements (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    imported_taxa_replacement_id integer NOT NULL,
    date_updated timestamp with time zone,
    imported_name_replaced character varying(100) NOT NULL,
    taxon_id integer NOT NULL
);


--
-- TOC entry 319 (class 1259 OID 17278)
-- Name: tbl_keywords; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_keywords (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    keyword_id integer NOT NULL,
    date_updated timestamp with time zone,
    definition text,
    keyword character varying(255)
);


--
-- TOC entry 320 (class 1259 OID 17284)
-- Name: tbl_languages; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_languages (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    language_id integer NOT NULL,
    date_updated timestamp with time zone,
    language_name_english character varying(100),
    language_name_native character varying(100)
);


--
-- TOC entry 321 (class 1259 OID 17287)
-- Name: tbl_lithology; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_lithology (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    lithology_id integer NOT NULL,
    date_updated timestamp with time zone,
    depth_bottom numeric(20,5),
    depth_top numeric(20,5) NOT NULL,
    description text NOT NULL,
    lower_boundary character varying(255),
    sample_group_id integer NOT NULL
);


--
-- TOC entry 322 (class 1259 OID 17293)
-- Name: tbl_location_types; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_location_types (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    location_type_id integer NOT NULL,
    date_updated timestamp with time zone,
    description text,
    location_type character varying(40)
);


--
-- TOC entry 323 (class 1259 OID 17299)
-- Name: tbl_locations; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_locations (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    location_id integer NOT NULL,
    location_name character varying(255) NOT NULL,
    location_type_id integer NOT NULL,
    default_lat_dd numeric(18,10),
    default_long_dd numeric(18,10),
    date_updated timestamp with time zone
);


--
-- TOC entry 324 (class 1259 OID 17302)
-- Name: tbl_mcr_names; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_mcr_names (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    taxon_id integer NOT NULL,
    comparison_notes character varying(255),
    date_updated timestamp with time zone,
    mcr_name_trim character varying(80),
    mcr_number smallint,
    mcr_species_name character varying(200)
);


--
-- TOC entry 325 (class 1259 OID 17308)
-- Name: tbl_mcr_summary_data; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_mcr_summary_data (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    mcr_summary_data_id integer NOT NULL,
    cog_mid_tmax smallint,
    cog_mid_trange smallint,
    date_updated timestamp with time zone,
    taxon_id integer NOT NULL,
    tmax_hi smallint,
    tmax_lo smallint,
    tmin_hi smallint,
    tmin_lo smallint,
    trange_hi smallint,
    trange_lo smallint
);


--
-- TOC entry 326 (class 1259 OID 17311)
-- Name: tbl_mcrdata_birmbeetledat; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_mcrdata_birmbeetledat (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    mcrdata_birmbeetledat_id integer NOT NULL,
    date_updated timestamp with time zone,
    mcr_data text,
    mcr_row smallint NOT NULL,
    taxon_id integer NOT NULL
);


--
-- TOC entry 327 (class 1259 OID 17317)
-- Name: tbl_measured_value_dimensions; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_measured_value_dimensions (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    measured_value_dimension_id integer NOT NULL,
    date_updated timestamp with time zone,
    dimension_id integer NOT NULL,
    dimension_value numeric(18,10) NOT NULL,
    measured_value_id integer NOT NULL
);


--
-- TOC entry 328 (class 1259 OID 17320)
-- Name: tbl_measured_values; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_measured_values (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    measured_value_id integer NOT NULL,
    analysis_entity_id integer NOT NULL,
    date_updated timestamp with time zone,
    measured_value numeric(20,10) NOT NULL
);


--
-- TOC entry 329 (class 1259 OID 17323)
-- Name: tbl_method_groups; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_method_groups (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    method_group_id integer NOT NULL,
    date_updated timestamp with time zone,
    description text NOT NULL,
    group_name character varying(100) NOT NULL
);


--
-- TOC entry 330 (class 1259 OID 17329)
-- Name: tbl_methods; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_methods (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    method_id integer NOT NULL,
    biblio_id integer,
    date_updated timestamp with time zone,
    description text NOT NULL,
    method_abbrev_or_alt_name character varying(50),
    method_group_id integer NOT NULL,
    method_name character varying(50) NOT NULL,
    record_type_id integer,
    unit_id integer
);


--
-- TOC entry 331 (class 1259 OID 17335)
-- Name: tbl_modification_types; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_modification_types (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    modification_type_id integer NOT NULL,
    modification_type_name character varying(128),
    modification_type_description text,
    date_updated timestamp with time zone
);


--
-- TOC entry 332 (class 1259 OID 17341)
-- Name: tbl_physical_sample_features; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_physical_sample_features (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    physical_sample_feature_id integer NOT NULL,
    date_updated timestamp with time zone,
    feature_id integer NOT NULL,
    physical_sample_id integer NOT NULL
);


--
-- TOC entry 333 (class 1259 OID 17344)
-- Name: tbl_physical_samples; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_physical_samples (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    physical_sample_id integer NOT NULL,
    sample_group_id integer NOT NULL,
    alt_ref_type_id integer,
    sample_type_id integer NOT NULL,
    sample_name character varying(50) NOT NULL,
    date_updated timestamp with time zone,
    date_sampled character varying(255)
);


--
-- TOC entry 334 (class 1259 OID 17347)
-- Name: tbl_project_stages; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_project_stages (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    project_stage_id integer NOT NULL,
    stage_name character varying(255),
    description text,
    date_updated timestamp with time zone
);


--
-- TOC entry 335 (class 1259 OID 17353)
-- Name: tbl_project_types; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_project_types (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    project_type_id integer NOT NULL,
    project_type_name character varying(255),
    description text,
    date_updated timestamp with time zone
);


--
-- TOC entry 336 (class 1259 OID 17359)
-- Name: tbl_projects; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_projects (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    project_id integer NOT NULL,
    project_type_id integer,
    project_stage_id integer,
    project_name character varying(150),
    project_abbrev_name character varying(25),
    description text,
    date_updated timestamp with time zone
);


--
-- TOC entry 337 (class 1259 OID 17365)
-- Name: tbl_publication_types; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_publication_types (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    publication_type_id integer NOT NULL,
    date_updated timestamp with time zone,
    publication_type character varying(30)
);


--
-- TOC entry 338 (class 1259 OID 17368)
-- Name: tbl_publishers; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_publishers (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    publisher_id integer NOT NULL,
    date_updated timestamp with time zone,
    place_of_publishing_house character varying(255),
    publisher_name character varying(255)
);


--
-- TOC entry 339 (class 1259 OID 17374)
-- Name: tbl_radiocarbon_calibration; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_radiocarbon_calibration (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    radiocarbon_calibration_id integer NOT NULL,
    c14_yr_bp integer NOT NULL,
    cal_yr_bp integer NOT NULL,
    date_updated timestamp with time zone
);


--
-- TOC entry 340 (class 1259 OID 17377)
-- Name: tbl_rdb; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_rdb (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    rdb_id integer NOT NULL,
    location_id integer NOT NULL,
    rdb_code_id integer,
    taxon_id integer NOT NULL,
    date_updated timestamp with time zone
);


--
-- TOC entry 341 (class 1259 OID 17380)
-- Name: tbl_rdb_codes; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_rdb_codes (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    rdb_code_id integer NOT NULL,
    date_updated timestamp with time zone,
    rdb_category character varying(4),
    rdb_definition character varying(200),
    rdb_system_id integer
);


--
-- TOC entry 342 (class 1259 OID 17383)
-- Name: tbl_rdb_systems; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_rdb_systems (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    rdb_system_id integer NOT NULL,
    biblio_id integer NOT NULL,
    location_id integer NOT NULL,
    rdb_first_published smallint,
    rdb_system character varying(10),
    rdb_system_date integer,
    rdb_version character varying(10),
    date_updated timestamp with time zone
);


--
-- TOC entry 343 (class 1259 OID 17386)
-- Name: tbl_record_types; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_record_types (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    record_type_id integer NOT NULL,
    record_type_name character varying(50),
    record_type_description text,
    date_updated timestamp with time zone
);


--
-- TOC entry 344 (class 1259 OID 17392)
-- Name: tbl_relative_age_refs; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_relative_age_refs (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    relative_age_ref_id integer NOT NULL,
    biblio_id integer NOT NULL,
    date_updated timestamp with time zone,
    relative_age_id integer NOT NULL
);


--
-- TOC entry 345 (class 1259 OID 17395)
-- Name: tbl_relative_age_types; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_relative_age_types (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    relative_age_type_id integer NOT NULL,
    age_type character varying(255),
    description text,
    date_updated time with time zone
);


--
-- TOC entry 346 (class 1259 OID 17401)
-- Name: tbl_relative_ages; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_relative_ages (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    relative_age_id integer NOT NULL,
    relative_age_type_id integer,
    relative_age_name character varying(50),
    description text,
    c14_age_older numeric(20,5),
    c14_age_younger numeric(20,5),
    cal_age_older numeric(20,5),
    cal_age_younger numeric(20,5),
    notes text,
    date_updated timestamp with time zone,
    location_id integer,
    abbreviation character varying(255)
);


--
-- TOC entry 347 (class 1259 OID 17407)
-- Name: tbl_relative_dates; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_relative_dates (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    relative_date_id integer NOT NULL,
    relative_age_id integer,
    physical_sample_id integer NOT NULL,
    method_id integer,
    notes text,
    date_updated timestamp with time zone,
    dating_uncertainty_id integer
);


--
-- TOC entry 348 (class 1259 OID 17413)
-- Name: tbl_sample_alt_refs; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_sample_alt_refs (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    sample_alt_ref_id integer NOT NULL,
    alt_ref character varying(40) NOT NULL,
    alt_ref_type_id integer NOT NULL,
    date_updated timestamp with time zone,
    physical_sample_id integer NOT NULL
);


--
-- TOC entry 349 (class 1259 OID 17416)
-- Name: tbl_sample_colours; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_sample_colours (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    sample_colour_id integer NOT NULL,
    colour_id integer NOT NULL,
    date_updated timestamp with time zone,
    physical_sample_id integer NOT NULL
);


--
-- TOC entry 350 (class 1259 OID 17419)
-- Name: tbl_sample_coordinates; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_sample_coordinates (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    sample_coordinate_id integer NOT NULL,
    physical_sample_id integer NOT NULL,
    coordinate_method_dimension_id integer NOT NULL,
    measurement numeric(20,10) NOT NULL,
    accuracy numeric(20,10),
    date_updated timestamp with time zone
);


--
-- TOC entry 351 (class 1259 OID 17422)
-- Name: tbl_sample_description_sample_group_contexts; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_sample_description_sample_group_contexts (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    sample_description_sample_group_context_id integer NOT NULL,
    sampling_context_id integer,
    sample_description_type_id integer,
    date_updated timestamp with time zone
);


--
-- TOC entry 352 (class 1259 OID 17425)
-- Name: tbl_sample_description_types; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_sample_description_types (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    sample_description_type_id integer NOT NULL,
    type_name character varying(255),
    type_description text,
    date_updated timestamp with time zone
);


--
-- TOC entry 353 (class 1259 OID 17431)
-- Name: tbl_sample_descriptions; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_sample_descriptions (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    sample_description_id integer NOT NULL,
    sample_description_type_id integer NOT NULL,
    physical_sample_id integer NOT NULL,
    description character varying(255),
    date_updated timestamp with time zone
);


--
-- TOC entry 354 (class 1259 OID 17434)
-- Name: tbl_sample_dimensions; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_sample_dimensions (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    sample_dimension_id integer NOT NULL,
    physical_sample_id integer NOT NULL,
    dimension_id integer NOT NULL,
    method_id integer NOT NULL,
    dimension_value numeric(20,10) NOT NULL,
    date_updated timestamp with time zone
);


--
-- TOC entry 355 (class 1259 OID 17437)
-- Name: tbl_sample_group_coordinates; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_sample_group_coordinates (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    sample_group_position_id integer NOT NULL,
    coordinate_method_dimension_id integer NOT NULL,
    sample_group_position numeric(20,10),
    position_accuracy character varying(128),
    sample_group_id integer NOT NULL,
    date_updated timestamp with time zone
);


--
-- TOC entry 356 (class 1259 OID 17440)
-- Name: tbl_sample_group_description_type_sampling_contexts; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_sample_group_description_type_sampling_contexts (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    sample_group_description_type_sampling_context_id integer NOT NULL,
    sampling_context_id integer NOT NULL,
    sample_group_description_type_id integer NOT NULL,
    date_updated timestamp with time zone
);


--
-- TOC entry 357 (class 1259 OID 17443)
-- Name: tbl_sample_group_description_types; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_sample_group_description_types (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    sample_group_description_type_id integer NOT NULL,
    type_name character varying(255),
    type_description character varying(255),
    date_updated timestamp with time zone
);


--
-- TOC entry 358 (class 1259 OID 17449)
-- Name: tbl_sample_group_descriptions; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_sample_group_descriptions (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    sample_group_description_id integer NOT NULL,
    group_description character varying(255),
    sample_group_description_type_id integer NOT NULL,
    date_updated timestamp with time zone,
    sample_group_id integer
);


--
-- TOC entry 359 (class 1259 OID 17452)
-- Name: tbl_sample_group_dimensions; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_sample_group_dimensions (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    sample_group_dimension_id integer NOT NULL,
    date_updated timestamp with time zone,
    dimension_id integer NOT NULL,
    dimension_value numeric(20,5) NOT NULL,
    sample_group_id integer NOT NULL
);


--
-- TOC entry 360 (class 1259 OID 17455)
-- Name: tbl_sample_group_images; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_sample_group_images (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    sample_group_image_id integer NOT NULL,
    date_updated timestamp with time zone,
    description text,
    image_location text NOT NULL,
    image_name character varying(80),
    image_type_id integer NOT NULL,
    sample_group_id integer NOT NULL
);


--
-- TOC entry 361 (class 1259 OID 17461)
-- Name: tbl_sample_group_notes; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_sample_group_notes (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    sample_group_note_id integer NOT NULL,
    sample_group_id integer NOT NULL,
    note character varying(255),
    date_updated timestamp with time zone
);


--
-- TOC entry 362 (class 1259 OID 17464)
-- Name: tbl_sample_group_references; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_sample_group_references (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    sample_group_reference_id integer NOT NULL,
    biblio_id integer NOT NULL,
    date_updated timestamp with time zone,
    sample_group_id integer
);


--
-- TOC entry 363 (class 1259 OID 17467)
-- Name: tbl_sample_group_sampling_contexts; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_sample_group_sampling_contexts (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    sampling_context_id integer NOT NULL,
    sampling_context character varying(40) NOT NULL,
    description text,
    sort_order smallint NOT NULL,
    date_updated timestamp with time zone
);


--
-- TOC entry 364 (class 1259 OID 17473)
-- Name: tbl_sample_groups; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_sample_groups (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    sample_group_id integer NOT NULL,
    site_id integer,
    sampling_context_id integer,
    method_id integer NOT NULL,
    sample_group_name character varying(100),
    sample_group_description text,
    date_updated timestamp with time zone
);


--
-- TOC entry 365 (class 1259 OID 17479)
-- Name: tbl_sample_horizons; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_sample_horizons (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    sample_horizon_id integer NOT NULL,
    date_updated timestamp with time zone,
    horizon_id integer NOT NULL,
    physical_sample_id integer NOT NULL
);


--
-- TOC entry 366 (class 1259 OID 17482)
-- Name: tbl_sample_images; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_sample_images (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    sample_image_id integer NOT NULL,
    date_updated timestamp with time zone,
    description text,
    image_location text NOT NULL,
    image_name character varying(80),
    image_type_id integer NOT NULL,
    physical_sample_id integer NOT NULL
);


--
-- TOC entry 367 (class 1259 OID 17488)
-- Name: tbl_sample_location_type_sampling_contexts; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_sample_location_type_sampling_contexts (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    sample_location_type_sampling_context_id integer NOT NULL,
    sampling_context_id integer NOT NULL,
    sample_location_type_id integer NOT NULL,
    date_updated timestamp with time zone
);


--
-- TOC entry 368 (class 1259 OID 17491)
-- Name: tbl_sample_location_types; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_sample_location_types (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    sample_location_type_id integer NOT NULL,
    location_type character varying(255),
    location_type_description text,
    date_updated timestamp with time zone
);


--
-- TOC entry 369 (class 1259 OID 17497)
-- Name: tbl_sample_locations; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_sample_locations (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    sample_location_id integer NOT NULL,
    sample_location_type_id integer NOT NULL,
    physical_sample_id integer NOT NULL,
    location character varying(255),
    date_updated timestamp with time zone
);


--
-- TOC entry 370 (class 1259 OID 17500)
-- Name: tbl_sample_notes; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_sample_notes (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    sample_note_id integer NOT NULL,
    physical_sample_id integer NOT NULL,
    note_type character varying(255),
    note text NOT NULL,
    date_updated timestamp with time zone
);


--
-- TOC entry 371 (class 1259 OID 17506)
-- Name: tbl_sample_types; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_sample_types (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    sample_type_id integer NOT NULL,
    type_name character varying(40) NOT NULL,
    description text,
    date_updated timestamp with time zone
);


--
-- TOC entry 372 (class 1259 OID 17512)
-- Name: tbl_season_types; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_season_types (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    season_type_id integer NOT NULL,
    date_updated timestamp with time zone,
    description text,
    season_type character varying(30)
);


--
-- TOC entry 373 (class 1259 OID 17518)
-- Name: tbl_seasons; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_seasons (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    season_id integer NOT NULL,
    date_updated timestamp with time zone,
    season_name character varying(20),
    season_type character varying(30),
    season_type_id integer,
    sort_order smallint
);


--
-- TOC entry 374 (class 1259 OID 17521)
-- Name: tbl_site_images; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_site_images (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    site_image_id integer NOT NULL,
    contact_id integer,
    credit character varying(100),
    date_taken date,
    date_updated timestamp with time zone,
    description text,
    image_location text NOT NULL,
    image_name character varying(80),
    image_type_id integer NOT NULL,
    site_id integer NOT NULL
);


--
-- TOC entry 375 (class 1259 OID 17527)
-- Name: tbl_site_locations; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_site_locations (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    site_location_id integer NOT NULL,
    date_updated timestamp with time zone,
    location_id integer NOT NULL,
    site_id integer NOT NULL
);


--
-- TOC entry 376 (class 1259 OID 17530)
-- Name: tbl_site_natgridrefs; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_site_natgridrefs (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    site_natgridref_id integer NOT NULL,
    site_id integer NOT NULL,
    method_id integer NOT NULL,
    natgridref character varying(255) NOT NULL,
    date_updated timestamp with time zone
);


--
-- TOC entry 377 (class 1259 OID 17533)
-- Name: tbl_site_other_records; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_site_other_records (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    site_other_records_id integer NOT NULL,
    site_id integer,
    biblio_id integer,
    record_type_id integer,
    description text,
    date_updated timestamp with time zone
);


--
-- TOC entry 378 (class 1259 OID 17539)
-- Name: tbl_site_preservation_status; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_site_preservation_status (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    site_preservation_status_id integer NOT NULL,
    site_id integer,
    preservation_status_or_threat character varying(255),
    description text,
    assessment_type character varying(255),
    assessment_author_contact_id integer,
    date_updated timestamp with time zone,
    evaluation_date date
);


--
-- TOC entry 379 (class 1259 OID 17545)
-- Name: tbl_site_references; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_site_references (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    site_reference_id integer NOT NULL,
    site_id integer,
    biblio_id integer NOT NULL,
    date_updated timestamp with time zone
);


--
-- TOC entry 380 (class 1259 OID 17548)
-- Name: tbl_sites; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_sites (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    site_id integer NOT NULL,
    altitude numeric(18,10),
    latitude_dd numeric(18,10),
    longitude_dd numeric(18,10),
    national_site_identifier character varying(255),
    site_description text,
    site_name character varying(50),
    site_preservation_status_id integer,
    date_updated timestamp with time zone
);


--
-- TOC entry 381 (class 1259 OID 17554)
-- Name: tbl_species_association_types; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_species_association_types (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    association_type_id integer NOT NULL,
    association_type_name character varying(255),
    association_description text,
    date_updated timestamp with time zone
);


--
-- TOC entry 382 (class 1259 OID 17560)
-- Name: tbl_species_associations; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_species_associations (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    species_association_id integer NOT NULL,
    associated_taxon_id integer NOT NULL,
    biblio_id integer,
    date_updated timestamp with time zone,
    taxon_id integer NOT NULL,
    association_type_id integer,
    referencing_type text
);


--
-- TOC entry 383 (class 1259 OID 17566)
-- Name: tbl_taxa_common_names; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_taxa_common_names (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    taxon_common_name_id integer NOT NULL,
    common_name character varying(255),
    date_updated timestamp with time zone,
    language_id integer,
    taxon_id integer
);


--
-- TOC entry 384 (class 1259 OID 17569)
-- Name: tbl_taxa_images; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_taxa_images (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    taxa_images_id integer NOT NULL,
    image_name character varying(255),
    description text,
    image_location text,
    image_type_id integer,
    taxon_id integer NOT NULL,
    date_updated time with time zone
);


--
-- TOC entry 385 (class 1259 OID 17575)
-- Name: tbl_taxa_measured_attributes; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_taxa_measured_attributes (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    measured_attribute_id integer NOT NULL,
    attribute_measure character varying(20),
    attribute_type character varying(25),
    attribute_units character varying(10),
    data numeric(18,10),
    date_updated timestamp with time zone,
    taxon_id integer NOT NULL
);


--
-- TOC entry 386 (class 1259 OID 17578)
-- Name: tbl_taxa_reference_specimens; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_taxa_reference_specimens (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    taxa_reference_specimen_id integer NOT NULL,
    taxon_id integer NOT NULL,
    contact_id integer NOT NULL,
    notes text,
    date_updated time with time zone
);


--
-- TOC entry 387 (class 1259 OID 17584)
-- Name: tbl_taxa_seasonality; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_taxa_seasonality (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    seasonality_id integer NOT NULL,
    activity_type_id integer NOT NULL,
    season_id integer,
    taxon_id integer NOT NULL,
    location_id integer NOT NULL,
    date_updated timestamp with time zone
);


--
-- TOC entry 388 (class 1259 OID 17587)
-- Name: tbl_taxa_synonyms; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_taxa_synonyms (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    synonym_id integer NOT NULL,
    biblio_id integer NOT NULL,
    date_updated timestamp with time zone,
    family_id integer,
    genus_id integer,
    notes text,
    taxon_id integer,
    author_id integer,
    synonym character varying(255),
    reference_type character varying(255)
);


--
-- TOC entry 389 (class 1259 OID 17593)
-- Name: tbl_taxa_tree_authors; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_taxa_tree_authors (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    author_id integer NOT NULL,
    author_name character varying(100),
    date_updated timestamp with time zone
);


--
-- TOC entry 390 (class 1259 OID 17596)
-- Name: tbl_taxa_tree_families; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_taxa_tree_families (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    family_id integer NOT NULL,
    date_updated timestamp with time zone,
    family_name character varying(100),
    order_id integer NOT NULL
);


--
-- TOC entry 391 (class 1259 OID 17599)
-- Name: tbl_taxa_tree_genera; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_taxa_tree_genera (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    genus_id integer NOT NULL,
    date_updated timestamp with time zone,
    family_id integer,
    genus_name character varying(100)
);


--
-- TOC entry 392 (class 1259 OID 17602)
-- Name: tbl_taxa_tree_master; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_taxa_tree_master (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    taxon_id integer NOT NULL,
    author_id integer,
    date_updated timestamp with time zone,
    genus_id integer,
    species character varying(255)
);


--
-- TOC entry 393 (class 1259 OID 17605)
-- Name: tbl_taxa_tree_orders; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_taxa_tree_orders (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    order_id integer NOT NULL,
    date_updated timestamp with time zone,
    order_name character varying(50),
    record_type_id integer,
    sort_order integer
);


--
-- TOC entry 394 (class 1259 OID 17608)
-- Name: tbl_taxonomic_order; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_taxonomic_order (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    taxonomic_order_id integer NOT NULL,
    date_updated timestamp with time zone,
    taxon_id integer,
    taxonomic_code numeric(18,10),
    taxonomic_order_system_id integer
);


--
-- TOC entry 395 (class 1259 OID 17611)
-- Name: tbl_taxonomic_order_biblio; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_taxonomic_order_biblio (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    taxonomic_order_biblio_id integer NOT NULL,
    biblio_id integer,
    date_updated timestamp with time zone,
    taxonomic_order_system_id integer
);


--
-- TOC entry 396 (class 1259 OID 17614)
-- Name: tbl_taxonomic_order_systems; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_taxonomic_order_systems (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    taxonomic_order_system_id integer NOT NULL,
    date_updated timestamp with time zone,
    system_description text,
    system_name character varying(50)
);


--
-- TOC entry 397 (class 1259 OID 17620)
-- Name: tbl_taxonomy_notes; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_taxonomy_notes (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    taxonomy_notes_id integer NOT NULL,
    biblio_id integer NOT NULL,
    date_updated timestamp with time zone,
    taxon_id integer NOT NULL,
    taxonomy_notes text
);


--
-- TOC entry 398 (class 1259 OID 17626)
-- Name: tbl_tephra_dates; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_tephra_dates (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    tephra_date_id integer NOT NULL,
    analysis_entity_id integer NOT NULL,
    date_updated timestamp with time zone,
    notes text,
    tephra_id integer NOT NULL,
    dating_uncertainty_id integer
);


--
-- TOC entry 399 (class 1259 OID 17632)
-- Name: tbl_tephra_refs; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_tephra_refs (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    tephra_ref_id integer NOT NULL,
    biblio_id integer NOT NULL,
    date_updated timestamp with time zone,
    tephra_id integer NOT NULL
);


--
-- TOC entry 400 (class 1259 OID 17635)
-- Name: tbl_tephras; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_tephras (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    tephra_id integer NOT NULL,
    c14_age numeric(20,5),
    c14_age_older numeric(20,5),
    c14_age_younger numeric(20,5),
    cal_age numeric(20,5),
    cal_age_older numeric(20,5),
    cal_age_younger numeric(20,5),
    date_updated timestamp with time zone,
    notes text,
    tephra_name character varying(80)
);


--
-- TOC entry 401 (class 1259 OID 17641)
-- Name: tbl_text_biology; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_text_biology (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    biology_id integer NOT NULL,
    biblio_id integer NOT NULL,
    biology_text text,
    date_updated timestamp with time zone,
    taxon_id integer NOT NULL
);


--
-- TOC entry 402 (class 1259 OID 17647)
-- Name: tbl_text_distribution; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_text_distribution (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    distribution_id integer NOT NULL,
    biblio_id integer NOT NULL,
    date_updated timestamp with time zone,
    distribution_text text,
    taxon_id integer NOT NULL
);


--
-- TOC entry 403 (class 1259 OID 17653)
-- Name: tbl_text_identification_keys; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_text_identification_keys (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    key_id integer NOT NULL,
    biblio_id integer NOT NULL,
    date_updated timestamp with time zone,
    key_text text,
    taxon_id integer NOT NULL
);


--
-- TOC entry 404 (class 1259 OID 17659)
-- Name: tbl_units; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_units (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    unit_id integer NOT NULL,
    date_updated timestamp with time zone,
    description text,
    unit_abbrev character varying(15),
    unit_name character varying(50) NOT NULL
);


--
-- TOC entry 405 (class 1259 OID 17665)
-- Name: tbl_updates_log; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_updates_log (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    updates_log_id integer NOT NULL,
    table_name character varying(150) NOT NULL,
    last_updated date NOT NULL
);


--
-- TOC entry 406 (class 1259 OID 17668)
-- Name: tbl_view_states; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_view_states (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    view_state_id integer NOT NULL,
    view_state text,
    creatation_date timestamp with time zone,
    session_id character varying(256)
);


--
-- TOC entry 407 (class 1259 OID 17674)
-- Name: tbl_years_types; Type: TABLE; Schema: clearing_house; Owner: -
--

CREATE TABLE tbl_years_types (
    submission_id integer NOT NULL,
    source_id integer NOT NULL,
    local_db_id integer NOT NULL,
    public_db_id integer,
    years_type_id integer NOT NULL,
    name character varying(255) NOT NULL,
    description text,
    date_updated timestamp with time zone
);


SET search_path = public, pg_catalog;

--
-- TOC entry 408 (class 1259 OID 17680)
-- Name: tbl_abundance_elements; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_abundance_elements (
    abundance_element_id integer NOT NULL,
    record_type_id integer,
    element_name character varying(100) NOT NULL,
    element_description text,
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 7017 (class 0 OID 0)
-- Dependencies: 408
-- Name: COLUMN tbl_abundance_elements.record_type_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_abundance_elements.record_type_id IS 'used to restrict list of available elements according to record type. enables specific use of single term for multiple proxies whilst avoiding confusion, e.g. mni insects, mni seeds';


--
-- TOC entry 7018 (class 0 OID 0)
-- Dependencies: 408
-- Name: COLUMN tbl_abundance_elements.element_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_abundance_elements.element_name IS 'short name for element, e.g. mni, seed, leaf';


--
-- TOC entry 7019 (class 0 OID 0)
-- Dependencies: 408
-- Name: COLUMN tbl_abundance_elements.element_description; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_abundance_elements.element_description IS 'explanation of short name, e.g. minimum number of individuals, base of seed grain, covering of leaf or flower bud';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 409 (class 1259 OID 17687)
-- Name: view_abundance_elements; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_abundance_elements AS
 SELECT tbl_abundance_elements.submission_id,
    tbl_abundance_elements.source_id,
    tbl_abundance_elements.local_db_id AS merged_db_id,
    tbl_abundance_elements.local_db_id,
    tbl_abundance_elements.public_db_id,
    tbl_abundance_elements.abundance_element_id,
    tbl_abundance_elements.record_type_id,
    tbl_abundance_elements.element_name,
    tbl_abundance_elements.element_description,
    tbl_abundance_elements.date_updated
   FROM tbl_abundance_elements
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_abundance_elements.abundance_element_id AS merged_db_id,
    0 AS local_db_id,
    tbl_abundance_elements.abundance_element_id AS public_db_id,
    tbl_abundance_elements.abundance_element_id,
    tbl_abundance_elements.record_type_id,
    tbl_abundance_elements.element_name,
    tbl_abundance_elements.element_description,
    tbl_abundance_elements.date_updated
   FROM public.tbl_abundance_elements;


SET search_path = public, pg_catalog;

--
-- TOC entry 410 (class 1259 OID 17692)
-- Name: tbl_abundance_ident_levels; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_abundance_ident_levels (
    abundance_ident_level_id integer NOT NULL,
    abundance_id integer NOT NULL,
    identification_level_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now()
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 411 (class 1259 OID 17696)
-- Name: view_abundance_ident_levels; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_abundance_ident_levels AS
 SELECT tbl_abundance_ident_levels.submission_id,
    tbl_abundance_ident_levels.source_id,
    tbl_abundance_ident_levels.local_db_id AS merged_db_id,
    tbl_abundance_ident_levels.local_db_id,
    tbl_abundance_ident_levels.public_db_id,
    tbl_abundance_ident_levels.abundance_ident_level_id,
    tbl_abundance_ident_levels.abundance_id,
    tbl_abundance_ident_levels.identification_level_id,
    tbl_abundance_ident_levels.date_updated
   FROM tbl_abundance_ident_levels
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_abundance_ident_levels.abundance_ident_level_id AS merged_db_id,
    0 AS local_db_id,
    tbl_abundance_ident_levels.abundance_ident_level_id AS public_db_id,
    tbl_abundance_ident_levels.abundance_ident_level_id,
    tbl_abundance_ident_levels.abundance_id,
    tbl_abundance_ident_levels.identification_level_id,
    tbl_abundance_ident_levels.date_updated
   FROM public.tbl_abundance_ident_levels;


SET search_path = public, pg_catalog;

--
-- TOC entry 412 (class 1259 OID 17700)
-- Name: tbl_abundance_modifications; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_abundance_modifications (
    abundance_modification_id integer NOT NULL,
    abundance_id integer NOT NULL,
    modification_type_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now()
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 413 (class 1259 OID 17704)
-- Name: view_abundance_modifications; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_abundance_modifications AS
 SELECT tbl_abundance_modifications.submission_id,
    tbl_abundance_modifications.source_id,
    tbl_abundance_modifications.local_db_id AS merged_db_id,
    tbl_abundance_modifications.local_db_id,
    tbl_abundance_modifications.public_db_id,
    tbl_abundance_modifications.abundance_modification_id,
    tbl_abundance_modifications.abundance_id,
    tbl_abundance_modifications.modification_type_id,
    tbl_abundance_modifications.date_updated
   FROM tbl_abundance_modifications
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_abundance_modifications.abundance_modification_id AS merged_db_id,
    0 AS local_db_id,
    tbl_abundance_modifications.abundance_modification_id AS public_db_id,
    tbl_abundance_modifications.abundance_modification_id,
    tbl_abundance_modifications.abundance_id,
    tbl_abundance_modifications.modification_type_id,
    tbl_abundance_modifications.date_updated
   FROM public.tbl_abundance_modifications;


SET search_path = public, pg_catalog;

--
-- TOC entry 414 (class 1259 OID 17708)
-- Name: tbl_abundances; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_abundances (
    abundance_id integer NOT NULL,
    taxon_id integer NOT NULL,
    analysis_entity_id integer NOT NULL,
    abundance_element_id integer,
    abundance integer DEFAULT 0 NOT NULL,
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 7020 (class 0 OID 0)
-- Dependencies: 414
-- Name: TABLE tbl_abundances; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE tbl_abundances IS '20120503pib deleted column "abundance_modification_id" as appeared superfluous with "abundance_id" in tbl_adbundance_modifications';


--
-- TOC entry 7021 (class 0 OID 0)
-- Dependencies: 414
-- Name: COLUMN tbl_abundances.abundance_element_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_abundances.abundance_element_id IS 'allows recording of different parts for single taxon, e.g. leaf, seed, mni etc.';


--
-- TOC entry 7022 (class 0 OID 0)
-- Dependencies: 414
-- Name: COLUMN tbl_abundances.abundance; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_abundances.abundance IS 'usually count value (abundance) but can be presence (1) or catagorical or relative scale, as defined by tbl_data_types through tbl_datasets';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 415 (class 1259 OID 17713)
-- Name: view_abundances; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_abundances AS
 SELECT tbl_abundances.submission_id,
    tbl_abundances.source_id,
    tbl_abundances.local_db_id AS merged_db_id,
    tbl_abundances.local_db_id,
    tbl_abundances.public_db_id,
    tbl_abundances.abundance_id,
    tbl_abundances.taxon_id,
    tbl_abundances.analysis_entity_id,
    tbl_abundances.abundance_element_id,
    tbl_abundances.abundance,
    tbl_abundances.date_updated
   FROM tbl_abundances
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_abundances.abundance_id AS merged_db_id,
    0 AS local_db_id,
    tbl_abundances.abundance_id AS public_db_id,
    tbl_abundances.abundance_id,
    tbl_abundances.taxon_id,
    tbl_abundances.analysis_entity_id,
    tbl_abundances.abundance_element_id,
    tbl_abundances.abundance,
    tbl_abundances.date_updated
   FROM public.tbl_abundances;


SET search_path = public, pg_catalog;

--
-- TOC entry 416 (class 1259 OID 17718)
-- Name: tbl_activity_types; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_activity_types (
    activity_type_id integer NOT NULL,
    activity_type character varying(50) DEFAULT NULL::character varying,
    description text,
    date_updated timestamp with time zone DEFAULT now()
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 417 (class 1259 OID 17726)
-- Name: view_activity_types; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_activity_types AS
 SELECT tbl_activity_types.submission_id,
    tbl_activity_types.source_id,
    tbl_activity_types.local_db_id AS merged_db_id,
    tbl_activity_types.local_db_id,
    tbl_activity_types.public_db_id,
    tbl_activity_types.activity_type_id,
    tbl_activity_types.activity_type,
    tbl_activity_types.description,
    tbl_activity_types.date_updated
   FROM tbl_activity_types
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_activity_types.activity_type_id AS merged_db_id,
    0 AS local_db_id,
    tbl_activity_types.activity_type_id AS public_db_id,
    tbl_activity_types.activity_type_id,
    tbl_activity_types.activity_type,
    tbl_activity_types.description,
    tbl_activity_types.date_updated
   FROM public.tbl_activity_types;


SET search_path = public, pg_catalog;

--
-- TOC entry 418 (class 1259 OID 17730)
-- Name: tbl_aggregate_datasets; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_aggregate_datasets (
    aggregate_dataset_id integer NOT NULL,
    aggregate_order_type_id integer NOT NULL,
    biblio_id integer,
    aggregate_dataset_name character varying(255),
    date_updated timestamp with time zone DEFAULT now(),
    description text
);


--
-- TOC entry 7023 (class 0 OID 0)
-- Dependencies: 418
-- Name: COLUMN tbl_aggregate_datasets.aggregate_dataset_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_aggregate_datasets.aggregate_dataset_name IS 'name of aggregated dataset';


--
-- TOC entry 7024 (class 0 OID 0)
-- Dependencies: 418
-- Name: COLUMN tbl_aggregate_datasets.description; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_aggregate_datasets.description IS 'Notes explaining the purpose of the aggregated set of analysis entities';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 419 (class 1259 OID 17737)
-- Name: view_aggregate_datasets; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_aggregate_datasets AS
 SELECT tbl_aggregate_datasets.submission_id,
    tbl_aggregate_datasets.source_id,
    tbl_aggregate_datasets.local_db_id AS merged_db_id,
    tbl_aggregate_datasets.local_db_id,
    tbl_aggregate_datasets.public_db_id,
    tbl_aggregate_datasets.aggregate_dataset_id,
    tbl_aggregate_datasets.aggregate_order_type_id,
    tbl_aggregate_datasets.biblio_id,
    tbl_aggregate_datasets.aggregate_dataset_name,
    tbl_aggregate_datasets.date_updated,
    tbl_aggregate_datasets.description
   FROM tbl_aggregate_datasets
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_aggregate_datasets.aggregate_dataset_id AS merged_db_id,
    0 AS local_db_id,
    tbl_aggregate_datasets.aggregate_dataset_id AS public_db_id,
    tbl_aggregate_datasets.aggregate_dataset_id,
    tbl_aggregate_datasets.aggregate_order_type_id,
    tbl_aggregate_datasets.biblio_id,
    tbl_aggregate_datasets.aggregate_dataset_name,
    tbl_aggregate_datasets.date_updated,
    tbl_aggregate_datasets.description
   FROM public.tbl_aggregate_datasets;


SET search_path = public, pg_catalog;

--
-- TOC entry 420 (class 1259 OID 17742)
-- Name: tbl_aggregate_order_types; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_aggregate_order_types (
    aggregate_order_type_id integer NOT NULL,
    aggregate_order_type character varying(60) NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    description text
);


--
-- TOC entry 7025 (class 0 OID 0)
-- Dependencies: 420
-- Name: TABLE tbl_aggregate_order_types; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE tbl_aggregate_order_types IS '20120504pib: drop this? or replace with alternative?';


--
-- TOC entry 7026 (class 0 OID 0)
-- Dependencies: 420
-- Name: COLUMN tbl_aggregate_order_types.aggregate_order_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_aggregate_order_types.aggregate_order_type IS 'aggregate order name, e.g. site name, age, sample depth, altitude';


--
-- TOC entry 7027 (class 0 OID 0)
-- Dependencies: 420
-- Name: COLUMN tbl_aggregate_order_types.description; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_aggregate_order_types.description IS 'explanation of ordering system';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 421 (class 1259 OID 17749)
-- Name: view_aggregate_order_types; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_aggregate_order_types AS
 SELECT tbl_aggregate_order_types.submission_id,
    tbl_aggregate_order_types.source_id,
    tbl_aggregate_order_types.local_db_id AS merged_db_id,
    tbl_aggregate_order_types.local_db_id,
    tbl_aggregate_order_types.public_db_id,
    tbl_aggregate_order_types.aggregate_order_type_id,
    tbl_aggregate_order_types.aggregate_order_type,
    tbl_aggregate_order_types.date_updated,
    tbl_aggregate_order_types.description
   FROM tbl_aggregate_order_types
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_aggregate_order_types.aggregate_order_type_id AS merged_db_id,
    0 AS local_db_id,
    tbl_aggregate_order_types.aggregate_order_type_id AS public_db_id,
    tbl_aggregate_order_types.aggregate_order_type_id,
    tbl_aggregate_order_types.aggregate_order_type,
    tbl_aggregate_order_types.date_updated,
    tbl_aggregate_order_types.description
   FROM public.tbl_aggregate_order_types;


SET search_path = public, pg_catalog;

--
-- TOC entry 422 (class 1259 OID 17753)
-- Name: tbl_aggregate_sample_ages; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_aggregate_sample_ages (
    aggregate_sample_age_id integer NOT NULL,
    aggregate_dataset_id integer NOT NULL,
    analysis_entity_age_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now()
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 423 (class 1259 OID 17757)
-- Name: view_aggregate_sample_ages; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_aggregate_sample_ages AS
 SELECT tbl_aggregate_sample_ages.submission_id,
    tbl_aggregate_sample_ages.source_id,
    tbl_aggregate_sample_ages.local_db_id AS merged_db_id,
    tbl_aggregate_sample_ages.local_db_id,
    tbl_aggregate_sample_ages.public_db_id,
    tbl_aggregate_sample_ages.aggregate_sample_age_id,
    tbl_aggregate_sample_ages.aggregate_dataset_id,
    tbl_aggregate_sample_ages.analysis_entity_age_id,
    tbl_aggregate_sample_ages.date_updated
   FROM tbl_aggregate_sample_ages
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_aggregate_sample_ages.aggregate_sample_age_id AS merged_db_id,
    0 AS local_db_id,
    tbl_aggregate_sample_ages.aggregate_sample_age_id AS public_db_id,
    tbl_aggregate_sample_ages.aggregate_sample_age_id,
    tbl_aggregate_sample_ages.aggregate_dataset_id,
    tbl_aggregate_sample_ages.analysis_entity_age_id,
    tbl_aggregate_sample_ages.date_updated
   FROM public.tbl_aggregate_sample_ages;


SET search_path = public, pg_catalog;

--
-- TOC entry 424 (class 1259 OID 17761)
-- Name: tbl_aggregate_samples; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_aggregate_samples (
    aggregate_sample_id integer NOT NULL,
    aggregate_dataset_id integer NOT NULL,
    analysis_entity_id integer NOT NULL,
    aggregate_sample_name character varying(50),
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 7028 (class 0 OID 0)
-- Dependencies: 424
-- Name: TABLE tbl_aggregate_samples; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE tbl_aggregate_samples IS '20120504pib: can we drop aggregate sample name? seems excessive and unnecessary sample names can be traced.';


--
-- TOC entry 7029 (class 0 OID 0)
-- Dependencies: 424
-- Name: COLUMN tbl_aggregate_samples.aggregate_sample_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_aggregate_samples.aggregate_sample_name IS 'optional name for aggregated entity.';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 425 (class 1259 OID 17765)
-- Name: view_aggregate_samples; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_aggregate_samples AS
 SELECT tbl_aggregate_samples.submission_id,
    tbl_aggregate_samples.source_id,
    tbl_aggregate_samples.local_db_id AS merged_db_id,
    tbl_aggregate_samples.local_db_id,
    tbl_aggregate_samples.public_db_id,
    tbl_aggregate_samples.aggregate_sample_id,
    tbl_aggregate_samples.aggregate_dataset_id,
    tbl_aggregate_samples.analysis_entity_id,
    tbl_aggregate_samples.aggregate_sample_name,
    tbl_aggregate_samples.date_updated
   FROM tbl_aggregate_samples
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_aggregate_samples.aggregate_sample_id AS merged_db_id,
    0 AS local_db_id,
    tbl_aggregate_samples.aggregate_sample_id AS public_db_id,
    tbl_aggregate_samples.aggregate_sample_id,
    tbl_aggregate_samples.aggregate_dataset_id,
    tbl_aggregate_samples.analysis_entity_id,
    tbl_aggregate_samples.aggregate_sample_name,
    tbl_aggregate_samples.date_updated
   FROM public.tbl_aggregate_samples;


SET search_path = public, pg_catalog;

--
-- TOC entry 426 (class 1259 OID 17770)
-- Name: tbl_alt_ref_types; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_alt_ref_types (
    alt_ref_type_id integer NOT NULL,
    alt_ref_type character varying(50) NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    description text
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 427 (class 1259 OID 17777)
-- Name: view_alt_ref_types; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_alt_ref_types AS
 SELECT tbl_alt_ref_types.submission_id,
    tbl_alt_ref_types.source_id,
    tbl_alt_ref_types.local_db_id AS merged_db_id,
    tbl_alt_ref_types.local_db_id,
    tbl_alt_ref_types.public_db_id,
    tbl_alt_ref_types.alt_ref_type_id,
    tbl_alt_ref_types.alt_ref_type,
    tbl_alt_ref_types.date_updated,
    tbl_alt_ref_types.description
   FROM tbl_alt_ref_types
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_alt_ref_types.alt_ref_type_id AS merged_db_id,
    0 AS local_db_id,
    tbl_alt_ref_types.alt_ref_type_id AS public_db_id,
    tbl_alt_ref_types.alt_ref_type_id,
    tbl_alt_ref_types.alt_ref_type,
    tbl_alt_ref_types.date_updated,
    tbl_alt_ref_types.description
   FROM public.tbl_alt_ref_types;


SET search_path = public, pg_catalog;

--
-- TOC entry 428 (class 1259 OID 17781)
-- Name: tbl_analysis_entities; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_analysis_entities (
    analysis_entity_id integer NOT NULL,
    physical_sample_id integer,
    dataset_id integer,
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 7030 (class 0 OID 0)
-- Dependencies: 428
-- Name: TABLE tbl_analysis_entities; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE tbl_analysis_entities IS '20120503pib deleted column preparation_method_id, but may need to cater for this in datasets...
20120506pib: deleted method_id and added table for multiple methods per entity';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 429 (class 1259 OID 17785)
-- Name: view_analysis_entities; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_analysis_entities AS
 SELECT tbl_analysis_entities.submission_id,
    tbl_analysis_entities.source_id,
    tbl_analysis_entities.local_db_id AS merged_db_id,
    tbl_analysis_entities.local_db_id,
    tbl_analysis_entities.public_db_id,
    tbl_analysis_entities.analysis_entity_id,
    tbl_analysis_entities.physical_sample_id,
    tbl_analysis_entities.dataset_id,
    tbl_analysis_entities.date_updated
   FROM tbl_analysis_entities
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_analysis_entities.analysis_entity_id AS merged_db_id,
    0 AS local_db_id,
    tbl_analysis_entities.analysis_entity_id AS public_db_id,
    tbl_analysis_entities.analysis_entity_id,
    tbl_analysis_entities.physical_sample_id,
    tbl_analysis_entities.dataset_id,
    tbl_analysis_entities.date_updated
   FROM public.tbl_analysis_entities;


SET search_path = public, pg_catalog;

--
-- TOC entry 430 (class 1259 OID 17789)
-- Name: tbl_analysis_entity_ages; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_analysis_entity_ages (
    analysis_entity_age_id integer NOT NULL,
    age numeric(20,10) NOT NULL,
    age_older numeric(15,5),
    age_younger numeric(15,5),
    analysis_entity_id integer,
    chronology_id integer,
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 7031 (class 0 OID 0)
-- Dependencies: 430
-- Name: TABLE tbl_analysis_entity_ages; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE tbl_analysis_entity_ages IS '20120504pib: should this be connected to physical sample instead of analysis entities? allowing multiple ages (from multiple dates) for a sample. at the moment it requires a lot of backtracing to find a sample''s age... but then again, it allows... what, exactly?';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 431 (class 1259 OID 17793)
-- Name: view_analysis_entity_ages; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_analysis_entity_ages AS
 SELECT tbl_analysis_entity_ages.submission_id,
    tbl_analysis_entity_ages.source_id,
    tbl_analysis_entity_ages.local_db_id AS merged_db_id,
    tbl_analysis_entity_ages.local_db_id,
    tbl_analysis_entity_ages.public_db_id,
    tbl_analysis_entity_ages.analysis_entity_age_id,
    tbl_analysis_entity_ages.age,
    tbl_analysis_entity_ages.age_older,
    tbl_analysis_entity_ages.age_younger,
    tbl_analysis_entity_ages.analysis_entity_id,
    tbl_analysis_entity_ages.chronology_id,
    tbl_analysis_entity_ages.date_updated
   FROM tbl_analysis_entity_ages
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_analysis_entity_ages.analysis_entity_age_id AS merged_db_id,
    0 AS local_db_id,
    tbl_analysis_entity_ages.analysis_entity_age_id AS public_db_id,
    tbl_analysis_entity_ages.analysis_entity_age_id,
    tbl_analysis_entity_ages.age,
    tbl_analysis_entity_ages.age_older,
    tbl_analysis_entity_ages.age_younger,
    tbl_analysis_entity_ages.analysis_entity_id,
    tbl_analysis_entity_ages.chronology_id,
    tbl_analysis_entity_ages.date_updated
   FROM public.tbl_analysis_entity_ages;


SET search_path = public, pg_catalog;

--
-- TOC entry 432 (class 1259 OID 17798)
-- Name: tbl_analysis_entity_dimensions; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_analysis_entity_dimensions (
    analysis_entity_dimension_id integer NOT NULL,
    analysis_entity_id integer NOT NULL,
    dimension_id integer NOT NULL,
    dimension_value numeric NOT NULL,
    date_updated timestamp with time zone DEFAULT now()
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 433 (class 1259 OID 17805)
-- Name: view_analysis_entity_dimensions; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_analysis_entity_dimensions AS
 SELECT tbl_analysis_entity_dimensions.submission_id,
    tbl_analysis_entity_dimensions.source_id,
    tbl_analysis_entity_dimensions.local_db_id AS merged_db_id,
    tbl_analysis_entity_dimensions.local_db_id,
    tbl_analysis_entity_dimensions.public_db_id,
    tbl_analysis_entity_dimensions.analysis_entity_dimension_id,
    tbl_analysis_entity_dimensions.analysis_entity_id,
    tbl_analysis_entity_dimensions.dimension_id,
    tbl_analysis_entity_dimensions.dimension_value,
    tbl_analysis_entity_dimensions.date_updated
   FROM tbl_analysis_entity_dimensions
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_analysis_entity_dimensions.analysis_entity_dimension_id AS merged_db_id,
    0 AS local_db_id,
    tbl_analysis_entity_dimensions.analysis_entity_dimension_id AS public_db_id,
    tbl_analysis_entity_dimensions.analysis_entity_dimension_id,
    tbl_analysis_entity_dimensions.analysis_entity_id,
    tbl_analysis_entity_dimensions.dimension_id,
    tbl_analysis_entity_dimensions.dimension_value,
    tbl_analysis_entity_dimensions.date_updated
   FROM public.tbl_analysis_entity_dimensions;


SET search_path = public, pg_catalog;

--
-- TOC entry 434 (class 1259 OID 17810)
-- Name: tbl_analysis_entity_prep_methods; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_analysis_entity_prep_methods (
    analysis_entity_prep_method_id integer NOT NULL,
    analysis_entity_id integer NOT NULL,
    method_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 7032 (class 0 OID 0)
-- Dependencies: 434
-- Name: TABLE tbl_analysis_entity_prep_methods; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE tbl_analysis_entity_prep_methods IS '20120506pib: created to cater for multiple preparation methods for analysis but maintaining simple dataset concept.';


--
-- TOC entry 7033 (class 0 OID 0)
-- Dependencies: 434
-- Name: COLUMN tbl_analysis_entity_prep_methods.method_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_analysis_entity_prep_methods.method_id IS 'preparation methods only';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 435 (class 1259 OID 17814)
-- Name: view_analysis_entity_prep_methods; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_analysis_entity_prep_methods AS
 SELECT tbl_analysis_entity_prep_methods.submission_id,
    tbl_analysis_entity_prep_methods.source_id,
    tbl_analysis_entity_prep_methods.local_db_id AS merged_db_id,
    tbl_analysis_entity_prep_methods.local_db_id,
    tbl_analysis_entity_prep_methods.public_db_id,
    tbl_analysis_entity_prep_methods.analysis_entity_prep_method_id,
    tbl_analysis_entity_prep_methods.analysis_entity_id,
    tbl_analysis_entity_prep_methods.method_id,
    tbl_analysis_entity_prep_methods.date_updated
   FROM tbl_analysis_entity_prep_methods
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_analysis_entity_prep_methods.analysis_entity_prep_method_id AS merged_db_id,
    0 AS local_db_id,
    tbl_analysis_entity_prep_methods.analysis_entity_prep_method_id AS public_db_id,
    tbl_analysis_entity_prep_methods.analysis_entity_prep_method_id,
    tbl_analysis_entity_prep_methods.analysis_entity_id,
    tbl_analysis_entity_prep_methods.method_id,
    tbl_analysis_entity_prep_methods.date_updated
   FROM public.tbl_analysis_entity_prep_methods;


SET search_path = public, pg_catalog;

--
-- TOC entry 436 (class 1259 OID 17818)
-- Name: tbl_biblio; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_biblio (
    biblio_id integer NOT NULL,
    author character varying,
    biblio_keyword_id integer,
    bugs_author character varying(255) DEFAULT NULL::character varying,
    bugs_biblio_id integer,
    bugs_reference character varying(60) DEFAULT NULL::character varying,
    bugs_title character varying,
    collection_or_journal_id integer,
    date_updated timestamp with time zone DEFAULT now(),
    doi character varying(255) DEFAULT NULL::character varying,
    edition character varying(128) DEFAULT NULL::character varying,
    isbn character varying(128) DEFAULT NULL::character varying,
    keywords character varying,
    notes text,
    number character varying(128) DEFAULT NULL::character varying,
    pages character varying(50) DEFAULT NULL::character varying,
    pdf_link character varying,
    publication_type_id integer,
    publisher_id integer,
    title character varying,
    volume character varying(128) DEFAULT NULL::character varying,
    year character varying(255) DEFAULT NULL::character varying
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 437 (class 1259 OID 17834)
-- Name: view_biblio; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_biblio AS
 SELECT tbl_biblio.submission_id,
    tbl_biblio.source_id,
    tbl_biblio.local_db_id AS merged_db_id,
    tbl_biblio.local_db_id,
    tbl_biblio.public_db_id,
    tbl_biblio.biblio_id,
    tbl_biblio.author,
    tbl_biblio.biblio_keyword_id,
    tbl_biblio.bugs_author,
    tbl_biblio.bugs_biblio_id,
    tbl_biblio.bugs_reference,
    tbl_biblio.bugs_title,
    tbl_biblio.collection_or_journal_id,
    tbl_biblio.date_updated,
    tbl_biblio.doi,
    tbl_biblio.edition,
    tbl_biblio.isbn,
    tbl_biblio.keywords,
    tbl_biblio.notes,
    tbl_biblio.number,
    tbl_biblio.pages,
    tbl_biblio.pdf_link,
    tbl_biblio.publication_type_id,
    tbl_biblio.publisher_id,
    tbl_biblio.title,
    tbl_biblio.volume,
    tbl_biblio.year
   FROM tbl_biblio
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_biblio.biblio_id AS merged_db_id,
    0 AS local_db_id,
    tbl_biblio.biblio_id AS public_db_id,
    tbl_biblio.biblio_id,
    tbl_biblio.author,
    tbl_biblio.biblio_keyword_id,
    tbl_biblio.bugs_author,
    tbl_biblio.bugs_biblio_id,
    tbl_biblio.bugs_reference,
    tbl_biblio.bugs_title,
    tbl_biblio.collection_or_journal_id,
    tbl_biblio.date_updated,
    tbl_biblio.doi,
    tbl_biblio.edition,
    tbl_biblio.isbn,
    tbl_biblio.keywords,
    tbl_biblio.notes,
    tbl_biblio.number,
    tbl_biblio.pages,
    tbl_biblio.pdf_link,
    tbl_biblio.publication_type_id,
    tbl_biblio.publisher_id,
    tbl_biblio.title,
    tbl_biblio.volume,
    tbl_biblio.year
   FROM public.tbl_biblio;


SET search_path = public, pg_catalog;

--
-- TOC entry 438 (class 1259 OID 17839)
-- Name: tbl_biblio_keywords; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_biblio_keywords (
    biblio_keyword_id integer NOT NULL,
    biblio_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    keyword_id integer NOT NULL
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 439 (class 1259 OID 17843)
-- Name: view_biblio_keywords; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_biblio_keywords AS
 SELECT tbl_biblio_keywords.submission_id,
    tbl_biblio_keywords.source_id,
    tbl_biblio_keywords.local_db_id AS merged_db_id,
    tbl_biblio_keywords.local_db_id,
    tbl_biblio_keywords.public_db_id,
    tbl_biblio_keywords.biblio_keyword_id,
    tbl_biblio_keywords.biblio_id,
    tbl_biblio_keywords.date_updated,
    tbl_biblio_keywords.keyword_id
   FROM tbl_biblio_keywords
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_biblio_keywords.biblio_keyword_id AS merged_db_id,
    0 AS local_db_id,
    tbl_biblio_keywords.biblio_keyword_id AS public_db_id,
    tbl_biblio_keywords.biblio_keyword_id,
    tbl_biblio_keywords.biblio_id,
    tbl_biblio_keywords.date_updated,
    tbl_biblio_keywords.keyword_id
   FROM public.tbl_biblio_keywords;


SET search_path = public, pg_catalog;

--
-- TOC entry 440 (class 1259 OID 17847)
-- Name: tbl_bugs_abundance_codes; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_abundance_codes (
    bugs_abundance_code_id integer NOT NULL,
    abundance_id integer,
    bugs_fossilbugscode character varying(10),
    bugs_samplecode character varying(10),
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 7034 (class 0 OID 0)
-- Dependencies: 440
-- Name: TABLE tbl_bugs_abundance_codes; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE tbl_bugs_abundance_codes IS 'note modification of spelling in field since earlier models';


--
-- TOC entry 7035 (class 0 OID 0)
-- Dependencies: 440
-- Name: COLUMN tbl_bugs_abundance_codes.bugs_fossilbugscode; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_bugs_abundance_codes.bugs_fossilbugscode IS 'tfossil.fossilbugscode from bugsdata';


--
-- TOC entry 7036 (class 0 OID 0)
-- Dependencies: 440
-- Name: COLUMN tbl_bugs_abundance_codes.bugs_samplecode; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_bugs_abundance_codes.bugs_samplecode IS 'tsample.samplecode from bugsdata';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 441 (class 1259 OID 17851)
-- Name: view_bugs_abundance_codes; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_bugs_abundance_codes AS
 SELECT tbl_bugs_abundance_codes.submission_id,
    tbl_bugs_abundance_codes.source_id,
    tbl_bugs_abundance_codes.local_db_id AS merged_db_id,
    tbl_bugs_abundance_codes.local_db_id,
    tbl_bugs_abundance_codes.public_db_id,
    tbl_bugs_abundance_codes.bugs_abundance_code_id,
    tbl_bugs_abundance_codes.abundance_id,
    tbl_bugs_abundance_codes.bugs_fossilbugscode,
    tbl_bugs_abundance_codes.bugs_samplecode,
    tbl_bugs_abundance_codes.date_updated
   FROM tbl_bugs_abundance_codes
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_bugs_abundance_codes.bugs_abundance_code_id AS merged_db_id,
    0 AS local_db_id,
    tbl_bugs_abundance_codes.bugs_abundance_code_id AS public_db_id,
    tbl_bugs_abundance_codes.bugs_abundance_code_id,
    tbl_bugs_abundance_codes.abundance_id,
    tbl_bugs_abundance_codes.bugs_fossilbugscode,
    tbl_bugs_abundance_codes.bugs_samplecode,
    tbl_bugs_abundance_codes.date_updated
   FROM public.tbl_bugs_abundance_codes;


SET search_path = public, pg_catalog;

--
-- TOC entry 442 (class 1259 OID 17856)
-- Name: tbl_bugs_biblio; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_biblio (
    bugs_biblio_id integer NOT NULL,
    biblio_id integer NOT NULL,
    bugs_reference character varying NOT NULL,
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 7037 (class 0 OID 0)
-- Dependencies: 442
-- Name: COLUMN tbl_bugs_biblio.bugs_reference; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_bugs_biblio.bugs_reference IS 'from bugsdata.mdb: tbiblio.reference';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 443 (class 1259 OID 17863)
-- Name: view_bugs_biblio; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_bugs_biblio AS
 SELECT tbl_bugs_biblio.submission_id,
    tbl_bugs_biblio.source_id,
    tbl_bugs_biblio.local_db_id AS merged_db_id,
    tbl_bugs_biblio.local_db_id,
    tbl_bugs_biblio.public_db_id,
    tbl_bugs_biblio.bugs_biblio_id,
    tbl_bugs_biblio.biblio_id,
    tbl_bugs_biblio.bugs_reference,
    tbl_bugs_biblio.date_updated
   FROM tbl_bugs_biblio
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_bugs_biblio.bugs_biblio_id AS merged_db_id,
    0 AS local_db_id,
    tbl_bugs_biblio.bugs_biblio_id AS public_db_id,
    tbl_bugs_biblio.bugs_biblio_id,
    tbl_bugs_biblio.biblio_id,
    tbl_bugs_biblio.bugs_reference,
    tbl_bugs_biblio.date_updated
   FROM public.tbl_bugs_biblio;


SET search_path = public, pg_catalog;

--
-- TOC entry 444 (class 1259 OID 17867)
-- Name: tbl_bugs_dates_calendar; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_dates_calendar (
    bugs_dates_calendar_id integer NOT NULL,
    relative_date_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    bugs_calendarcode character varying NOT NULL,
    bugs_samplecode character varying
);


--
-- TOC entry 7038 (class 0 OID 0)
-- Dependencies: 444
-- Name: TABLE tbl_bugs_dates_calendar; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE tbl_bugs_dates_calendar IS '20130722PIB: Added field bugs_samplecode to help verify sync with BugsCEP
20130722PIB: Realigned reference to tbl_relative_dates from tbl_relative_ages to correctly mirror bugsdata';


--
-- TOC entry 7039 (class 0 OID 0)
-- Dependencies: 444
-- Name: COLUMN tbl_bugs_dates_calendar.bugs_calendarcode; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_bugs_dates_calendar.bugs_calendarcode IS 'From Bugsdata.mdb: TDatesCalendar.CalendarCODE
or TPeriods.PeriodCODE';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 445 (class 1259 OID 17874)
-- Name: view_bugs_dates_calendar; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_bugs_dates_calendar AS
 SELECT tbl_bugs_dates_calendar.submission_id,
    tbl_bugs_dates_calendar.source_id,
    tbl_bugs_dates_calendar.local_db_id AS merged_db_id,
    tbl_bugs_dates_calendar.local_db_id,
    tbl_bugs_dates_calendar.public_db_id,
    tbl_bugs_dates_calendar.bugs_dates_calendar_id,
    tbl_bugs_dates_calendar.relative_date_id,
    tbl_bugs_dates_calendar.date_updated,
    tbl_bugs_dates_calendar.bugs_calendarcode,
    tbl_bugs_dates_calendar.bugs_samplecode
   FROM tbl_bugs_dates_calendar
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_bugs_dates_calendar.bugs_dates_calendar_id AS merged_db_id,
    0 AS local_db_id,
    tbl_bugs_dates_calendar.bugs_dates_calendar_id AS public_db_id,
    tbl_bugs_dates_calendar.bugs_dates_calendar_id,
    tbl_bugs_dates_calendar.relative_date_id,
    tbl_bugs_dates_calendar.date_updated,
    tbl_bugs_dates_calendar.bugs_calendarcode,
    tbl_bugs_dates_calendar.bugs_samplecode
   FROM public.tbl_bugs_dates_calendar;


SET search_path = public, pg_catalog;

--
-- TOC entry 446 (class 1259 OID 17879)
-- Name: tbl_bugs_dates_period; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_dates_period (
    bugs_dates_period_id integer NOT NULL,
    relative_date_id integer NOT NULL,
    bugs_perioddatecode character varying NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    bugs_samplecode character varying
);


--
-- TOC entry 7040 (class 0 OID 0)
-- Dependencies: 446
-- Name: TABLE tbl_bugs_dates_period; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE tbl_bugs_dates_period IS '20130722PIB: Added field bugs_samplecode to help verify sync with BugsCEP';


--
-- TOC entry 7041 (class 0 OID 0)
-- Dependencies: 446
-- Name: COLUMN tbl_bugs_dates_period.bugs_perioddatecode; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_bugs_dates_period.bugs_perioddatecode IS 'from bugsdata.mdb: tdatesperiod.perioddatecode';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 447 (class 1259 OID 17886)
-- Name: view_bugs_dates_period; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_bugs_dates_period AS
 SELECT tbl_bugs_dates_period.submission_id,
    tbl_bugs_dates_period.source_id,
    tbl_bugs_dates_period.local_db_id AS merged_db_id,
    tbl_bugs_dates_period.local_db_id,
    tbl_bugs_dates_period.public_db_id,
    tbl_bugs_dates_period.bugs_dates_period_id,
    tbl_bugs_dates_period.relative_date_id,
    tbl_bugs_dates_period.bugs_perioddatecode,
    tbl_bugs_dates_period.date_updated,
    tbl_bugs_dates_period.bugs_samplecode
   FROM tbl_bugs_dates_period
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_bugs_dates_period.bugs_dates_period_id AS merged_db_id,
    0 AS local_db_id,
    tbl_bugs_dates_period.bugs_dates_period_id AS public_db_id,
    tbl_bugs_dates_period.bugs_dates_period_id,
    tbl_bugs_dates_period.relative_date_id,
    tbl_bugs_dates_period.bugs_perioddatecode,
    tbl_bugs_dates_period.date_updated,
    tbl_bugs_dates_period.bugs_samplecode
   FROM public.tbl_bugs_dates_period;


SET search_path = public, pg_catalog;

--
-- TOC entry 448 (class 1259 OID 17891)
-- Name: tbl_bugs_dates_radio; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_dates_radio (
    bugs_dates_radio_id integer NOT NULL,
    bugs_datecode character varying NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    geochron_id integer NOT NULL,
    bugs_samplecode character varying,
    bugs_materialtype text
);


--
-- TOC entry 7042 (class 0 OID 0)
-- Dependencies: 448
-- Name: TABLE tbl_bugs_dates_radio; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE tbl_bugs_dates_radio IS '20130722PIB: Added fields bugs_samplecode and bugs_materialtype to help verify sync with BugsCEP';


--
-- TOC entry 7043 (class 0 OID 0)
-- Dependencies: 448
-- Name: COLUMN tbl_bugs_dates_radio.bugs_datecode; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_bugs_dates_radio.bugs_datecode IS 'from bugsdata.mdb: tdatesradio.datecode';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 449 (class 1259 OID 17898)
-- Name: view_bugs_dates_radio; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_bugs_dates_radio AS
 SELECT tbl_bugs_dates_radio.submission_id,
    tbl_bugs_dates_radio.source_id,
    tbl_bugs_dates_radio.local_db_id AS merged_db_id,
    tbl_bugs_dates_radio.local_db_id,
    tbl_bugs_dates_radio.public_db_id,
    tbl_bugs_dates_radio.bugs_dates_radio_id,
    tbl_bugs_dates_radio.bugs_datecode,
    tbl_bugs_dates_radio.date_updated,
    tbl_bugs_dates_radio.geochron_id,
    tbl_bugs_dates_radio.bugs_samplecode,
    tbl_bugs_dates_radio.bugs_materialtype
   FROM tbl_bugs_dates_radio
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_bugs_dates_radio.bugs_dates_radio_id AS merged_db_id,
    0 AS local_db_id,
    tbl_bugs_dates_radio.bugs_dates_radio_id AS public_db_id,
    tbl_bugs_dates_radio.bugs_dates_radio_id,
    tbl_bugs_dates_radio.bugs_datecode,
    tbl_bugs_dates_radio.date_updated,
    tbl_bugs_dates_radio.geochron_id,
    tbl_bugs_dates_radio.bugs_samplecode,
    tbl_bugs_dates_radio.bugs_materialtype
   FROM public.tbl_bugs_dates_radio;


SET search_path = public, pg_catalog;

--
-- TOC entry 450 (class 1259 OID 17903)
-- Name: tbl_bugs_datesmethods; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_datesmethods (
    bugs_datesmethods_id integer NOT NULL,
    method_id integer,
    bugs_abbrev character varying,
    bugs_method character varying,
    date_updated timestamp with time zone DEFAULT now()
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 451 (class 1259 OID 17910)
-- Name: view_bugs_datesmethods; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_bugs_datesmethods AS
 SELECT tbl_bugs_datesmethods.submission_id,
    tbl_bugs_datesmethods.source_id,
    tbl_bugs_datesmethods.local_db_id AS merged_db_id,
    tbl_bugs_datesmethods.local_db_id,
    tbl_bugs_datesmethods.public_db_id,
    tbl_bugs_datesmethods.bugs_datesmethods_id,
    tbl_bugs_datesmethods.method_id,
    tbl_bugs_datesmethods.bugs_abbrev,
    tbl_bugs_datesmethods.bugs_method,
    tbl_bugs_datesmethods.date_updated
   FROM tbl_bugs_datesmethods
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_bugs_datesmethods.bugs_datesmethods_id AS merged_db_id,
    0 AS local_db_id,
    tbl_bugs_datesmethods.bugs_datesmethods_id AS public_db_id,
    tbl_bugs_datesmethods.bugs_datesmethods_id,
    tbl_bugs_datesmethods.method_id,
    tbl_bugs_datesmethods.bugs_abbrev,
    tbl_bugs_datesmethods.bugs_method,
    tbl_bugs_datesmethods.date_updated
   FROM public.tbl_bugs_datesmethods;


SET search_path = public, pg_catalog;

--
-- TOC entry 452 (class 1259 OID 17915)
-- Name: tbl_bugs_periods; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_periods (
    bugs_dates_relative_id integer NOT NULL,
    bugs_periodcode character varying NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    relative_age_id integer NOT NULL
);


--
-- TOC entry 7044 (class 0 OID 0)
-- Dependencies: 452
-- Name: COLUMN tbl_bugs_periods.bugs_periodcode; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_bugs_periods.bugs_periodcode IS 'From Bugsdata.mdb: TDatesCalendar.CalendarCODE
or TPeriods.PeriodCODE';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 453 (class 1259 OID 17922)
-- Name: view_bugs_periods; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_bugs_periods AS
 SELECT tbl_bugs_periods.submission_id,
    tbl_bugs_periods.source_id,
    tbl_bugs_periods.local_db_id AS merged_db_id,
    tbl_bugs_periods.local_db_id,
    tbl_bugs_periods.public_db_id,
    tbl_bugs_periods.bugs_dates_relative_id,
    tbl_bugs_periods.bugs_periodcode,
    tbl_bugs_periods.date_updated,
    tbl_bugs_periods.relative_age_id
   FROM tbl_bugs_periods
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_bugs_periods.bugs_dates_relative_id AS merged_db_id,
    0 AS local_db_id,
    tbl_bugs_periods.bugs_dates_relative_id AS public_db_id,
    tbl_bugs_periods.bugs_dates_relative_id,
    tbl_bugs_periods.bugs_periodcode,
    tbl_bugs_periods.date_updated,
    tbl_bugs_periods.relative_age_id
   FROM public.tbl_bugs_periods;


SET search_path = public, pg_catalog;

--
-- TOC entry 454 (class 1259 OID 17926)
-- Name: tbl_bugs_physical_samples; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_physical_samples (
    bugs_physical_sample_id integer NOT NULL,
    physical_sample_id integer NOT NULL,
    bugs_samplecode character varying(10),
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 7045 (class 0 OID 0)
-- Dependencies: 454
-- Name: COLUMN tbl_bugs_physical_samples.bugs_samplecode; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_bugs_physical_samples.bugs_samplecode IS 'from bugsdata.mdb: tsample.samplecode';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 455 (class 1259 OID 17930)
-- Name: view_bugs_physical_samples; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_bugs_physical_samples AS
 SELECT tbl_bugs_physical_samples.submission_id,
    tbl_bugs_physical_samples.source_id,
    tbl_bugs_physical_samples.local_db_id AS merged_db_id,
    tbl_bugs_physical_samples.local_db_id,
    tbl_bugs_physical_samples.public_db_id,
    tbl_bugs_physical_samples.bugs_physical_sample_id,
    tbl_bugs_physical_samples.physical_sample_id,
    tbl_bugs_physical_samples.bugs_samplecode,
    tbl_bugs_physical_samples.date_updated
   FROM tbl_bugs_physical_samples
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_bugs_physical_samples.bugs_physical_sample_id AS merged_db_id,
    0 AS local_db_id,
    tbl_bugs_physical_samples.bugs_physical_sample_id AS public_db_id,
    tbl_bugs_physical_samples.bugs_physical_sample_id,
    tbl_bugs_physical_samples.physical_sample_id,
    tbl_bugs_physical_samples.bugs_samplecode,
    tbl_bugs_physical_samples.date_updated
   FROM public.tbl_bugs_physical_samples;


SET search_path = public, pg_catalog;

--
-- TOC entry 456 (class 1259 OID 17934)
-- Name: tbl_bugs_sample_groups; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_sample_groups (
    bugs_sample_group_id integer NOT NULL,
    sample_group_id integer NOT NULL,
    bugs_countsheetcode character varying(10),
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 7046 (class 0 OID 0)
-- Dependencies: 456
-- Name: COLUMN tbl_bugs_sample_groups.bugs_countsheetcode; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_bugs_sample_groups.bugs_countsheetcode IS 'from bugsdata.mdb: tcountsheets.countsheetcode, primary key for countsheets which are equivalent to sample groups in bugscep';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 457 (class 1259 OID 17938)
-- Name: view_bugs_sample_groups; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_bugs_sample_groups AS
 SELECT tbl_bugs_sample_groups.submission_id,
    tbl_bugs_sample_groups.source_id,
    tbl_bugs_sample_groups.local_db_id AS merged_db_id,
    tbl_bugs_sample_groups.local_db_id,
    tbl_bugs_sample_groups.public_db_id,
    tbl_bugs_sample_groups.bugs_sample_group_id,
    tbl_bugs_sample_groups.sample_group_id,
    tbl_bugs_sample_groups.bugs_countsheetcode,
    tbl_bugs_sample_groups.date_updated
   FROM tbl_bugs_sample_groups
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_bugs_sample_groups.bugs_sample_group_id AS merged_db_id,
    0 AS local_db_id,
    tbl_bugs_sample_groups.bugs_sample_group_id AS public_db_id,
    tbl_bugs_sample_groups.bugs_sample_group_id,
    tbl_bugs_sample_groups.sample_group_id,
    tbl_bugs_sample_groups.bugs_countsheetcode,
    tbl_bugs_sample_groups.date_updated
   FROM public.tbl_bugs_sample_groups;


SET search_path = public, pg_catalog;

--
-- TOC entry 458 (class 1259 OID 17942)
-- Name: tbl_bugs_sites; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_sites (
    bugs_sites_id integer NOT NULL,
    site_id integer NOT NULL,
    bugs_sitecode character varying(10),
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 7047 (class 0 OID 0)
-- Dependencies: 458
-- Name: COLUMN tbl_bugs_sites.bugs_sitecode; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_bugs_sites.bugs_sitecode IS 'reference to primary key in bugsdata.mdb tsite.sitecode.';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 459 (class 1259 OID 17946)
-- Name: view_bugs_sites; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_bugs_sites AS
 SELECT tbl_bugs_sites.submission_id,
    tbl_bugs_sites.source_id,
    tbl_bugs_sites.local_db_id AS merged_db_id,
    tbl_bugs_sites.local_db_id,
    tbl_bugs_sites.public_db_id,
    tbl_bugs_sites.bugs_sites_id,
    tbl_bugs_sites.site_id,
    tbl_bugs_sites.bugs_sitecode,
    tbl_bugs_sites.date_updated
   FROM tbl_bugs_sites
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_bugs_sites.bugs_sites_id AS merged_db_id,
    0 AS local_db_id,
    tbl_bugs_sites.bugs_sites_id AS public_db_id,
    tbl_bugs_sites.bugs_sites_id,
    tbl_bugs_sites.site_id,
    tbl_bugs_sites.bugs_sitecode,
    tbl_bugs_sites.date_updated
   FROM public.tbl_bugs_sites;


SET search_path = public, pg_catalog;

--
-- TOC entry 460 (class 1259 OID 17950)
-- Name: tbl_ceramics; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_ceramics (
    ceramics_id integer NOT NULL,
    analysis_entity_id integer NOT NULL,
    ceramics_measurement_id integer NOT NULL,
    measurement_value character varying NOT NULL,
    date_updated timestamp with time zone DEFAULT now()
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 461 (class 1259 OID 17957)
-- Name: view_ceramics; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_ceramics AS
 SELECT tbl_ceramics.submission_id,
    tbl_ceramics.source_id,
    tbl_ceramics.local_db_id AS merged_db_id,
    tbl_ceramics.local_db_id,
    tbl_ceramics.public_db_id,
    tbl_ceramics.ceramics_id,
    tbl_ceramics.analysis_entity_id,
    tbl_ceramics.ceramics_measurement_id,
    tbl_ceramics.measurement_value,
    tbl_ceramics.date_updated
   FROM tbl_ceramics
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_ceramics.ceramics_id AS merged_db_id,
    0 AS local_db_id,
    tbl_ceramics.ceramics_id AS public_db_id,
    tbl_ceramics.ceramics_id,
    tbl_ceramics.analysis_entity_id,
    tbl_ceramics.ceramics_measurement_id,
    tbl_ceramics.measurement_value,
    tbl_ceramics.date_updated
   FROM public.tbl_ceramics;


SET search_path = public, pg_catalog;

--
-- TOC entry 462 (class 1259 OID 17962)
-- Name: tbl_ceramics_measurement_lookup; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_ceramics_measurement_lookup (
    ceramics_measurement_lookup_id integer NOT NULL,
    ceramics_measurement_id integer NOT NULL,
    value character varying NOT NULL,
    date_updated timestamp with time zone DEFAULT now()
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 463 (class 1259 OID 17969)
-- Name: view_ceramics_measurement_lookup; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_ceramics_measurement_lookup AS
 SELECT tbl_ceramics_measurement_lookup.submission_id,
    tbl_ceramics_measurement_lookup.source_id,
    tbl_ceramics_measurement_lookup.local_db_id AS merged_db_id,
    tbl_ceramics_measurement_lookup.local_db_id,
    tbl_ceramics_measurement_lookup.public_db_id,
    tbl_ceramics_measurement_lookup.ceramics_measurement_lookup_id,
    tbl_ceramics_measurement_lookup.ceramics_measurement_id,
    tbl_ceramics_measurement_lookup.value,
    tbl_ceramics_measurement_lookup.date_updated
   FROM tbl_ceramics_measurement_lookup
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_ceramics_measurement_lookup.ceramics_measurement_lookup_id AS merged_db_id,
    0 AS local_db_id,
    tbl_ceramics_measurement_lookup.ceramics_measurement_lookup_id AS public_db_id,
    tbl_ceramics_measurement_lookup.ceramics_measurement_lookup_id,
    tbl_ceramics_measurement_lookup.ceramics_measurement_id,
    tbl_ceramics_measurement_lookup.value,
    tbl_ceramics_measurement_lookup.date_updated
   FROM public.tbl_ceramics_measurement_lookup;


SET search_path = public, pg_catalog;

--
-- TOC entry 464 (class 1259 OID 17973)
-- Name: tbl_ceramics_measurements; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_ceramics_measurements (
    ceramics_measurement_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    method_id integer
);


--
-- TOC entry 7048 (class 0 OID 0)
-- Dependencies: 464
-- Name: TABLE tbl_ceramics_measurements; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE tbl_ceramics_measurements IS 'Type=lookup';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 465 (class 1259 OID 17977)
-- Name: view_ceramics_measurements; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_ceramics_measurements AS
 SELECT tbl_ceramics_measurements.submission_id,
    tbl_ceramics_measurements.source_id,
    tbl_ceramics_measurements.local_db_id AS merged_db_id,
    tbl_ceramics_measurements.local_db_id,
    tbl_ceramics_measurements.public_db_id,
    tbl_ceramics_measurements.ceramics_measurement_id,
    tbl_ceramics_measurements.date_updated,
    tbl_ceramics_measurements.method_id
   FROM tbl_ceramics_measurements
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_ceramics_measurements.ceramics_measurement_id AS merged_db_id,
    0 AS local_db_id,
    tbl_ceramics_measurements.ceramics_measurement_id AS public_db_id,
    tbl_ceramics_measurements.ceramics_measurement_id,
    tbl_ceramics_measurements.date_updated,
    tbl_ceramics_measurements.method_id
   FROM public.tbl_ceramics_measurements;


SET search_path = public, pg_catalog;

--
-- TOC entry 466 (class 1259 OID 17981)
-- Name: tbl_chron_control_types; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_chron_control_types (
    chron_control_type_id integer NOT NULL,
    chron_control_type character varying(50),
    date_updated timestamp with time zone DEFAULT now()
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 467 (class 1259 OID 17985)
-- Name: view_chron_control_types; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_chron_control_types AS
 SELECT tbl_chron_control_types.submission_id,
    tbl_chron_control_types.source_id,
    tbl_chron_control_types.local_db_id AS merged_db_id,
    tbl_chron_control_types.local_db_id,
    tbl_chron_control_types.public_db_id,
    tbl_chron_control_types.chron_control_type_id,
    tbl_chron_control_types.chron_control_type,
    tbl_chron_control_types.date_updated
   FROM tbl_chron_control_types
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_chron_control_types.chron_control_type_id AS merged_db_id,
    0 AS local_db_id,
    tbl_chron_control_types.chron_control_type_id AS public_db_id,
    tbl_chron_control_types.chron_control_type_id,
    tbl_chron_control_types.chron_control_type,
    tbl_chron_control_types.date_updated
   FROM public.tbl_chron_control_types;


SET search_path = public, pg_catalog;

--
-- TOC entry 468 (class 1259 OID 17989)
-- Name: tbl_chron_controls; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_chron_controls (
    chron_control_id integer NOT NULL,
    age numeric(20,5),
    age_limit_older numeric(20,5),
    age_limit_younger numeric(20,5),
    chron_control_type_id integer,
    chronology_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    depth_bottom numeric(20,5),
    depth_top numeric(20,5),
    notes text
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 469 (class 1259 OID 17996)
-- Name: view_chron_controls; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_chron_controls AS
 SELECT tbl_chron_controls.submission_id,
    tbl_chron_controls.source_id,
    tbl_chron_controls.local_db_id AS merged_db_id,
    tbl_chron_controls.local_db_id,
    tbl_chron_controls.public_db_id,
    tbl_chron_controls.chron_control_id,
    tbl_chron_controls.age,
    tbl_chron_controls.age_limit_older,
    tbl_chron_controls.age_limit_younger,
    tbl_chron_controls.chron_control_type_id,
    tbl_chron_controls.chronology_id,
    tbl_chron_controls.date_updated,
    tbl_chron_controls.depth_bottom,
    tbl_chron_controls.depth_top,
    tbl_chron_controls.notes
   FROM tbl_chron_controls
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_chron_controls.chron_control_id AS merged_db_id,
    0 AS local_db_id,
    tbl_chron_controls.chron_control_id AS public_db_id,
    tbl_chron_controls.chron_control_id,
    tbl_chron_controls.age,
    tbl_chron_controls.age_limit_older,
    tbl_chron_controls.age_limit_younger,
    tbl_chron_controls.chron_control_type_id,
    tbl_chron_controls.chronology_id,
    tbl_chron_controls.date_updated,
    tbl_chron_controls.depth_bottom,
    tbl_chron_controls.depth_top,
    tbl_chron_controls.notes
   FROM public.tbl_chron_controls;


SET search_path = public, pg_catalog;

--
-- TOC entry 470 (class 1259 OID 18001)
-- Name: tbl_chronologies; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_chronologies (
    chronology_id integer NOT NULL,
    age_bound_older integer,
    age_bound_younger integer,
    age_model character varying(80),
    age_type_id integer NOT NULL,
    chronology_name character varying(80),
    contact_id integer,
    date_prepared timestamp(0) without time zone,
    date_updated timestamp with time zone DEFAULT now(),
    is_default boolean DEFAULT false NOT NULL,
    notes text,
    sample_group_id integer NOT NULL
);


--
-- TOC entry 7049 (class 0 OID 0)
-- Dependencies: 470
-- Name: TABLE tbl_chronologies; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE tbl_chronologies IS '20120504pib: note that the dropped age type recorded the type of dates (c14 etc) used in constructing the chronology... but is only one per chonology enough? can a chronology not be made up of mulitple types of age?';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 471 (class 1259 OID 18009)
-- Name: view_chronologies; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_chronologies AS
 SELECT tbl_chronologies.submission_id,
    tbl_chronologies.source_id,
    tbl_chronologies.local_db_id AS merged_db_id,
    tbl_chronologies.local_db_id,
    tbl_chronologies.public_db_id,
    tbl_chronologies.chronology_id,
    tbl_chronologies.age_bound_older,
    tbl_chronologies.age_bound_younger,
    tbl_chronologies.age_model,
    tbl_chronologies.age_type_id,
    tbl_chronologies.chronology_name,
    tbl_chronologies.contact_id,
    tbl_chronologies.date_prepared,
    tbl_chronologies.date_updated,
    tbl_chronologies.is_default,
    tbl_chronologies.notes,
    tbl_chronologies.sample_group_id
   FROM tbl_chronologies
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_chronologies.chronology_id AS merged_db_id,
    0 AS local_db_id,
    tbl_chronologies.chronology_id AS public_db_id,
    tbl_chronologies.chronology_id,
    tbl_chronologies.age_bound_older,
    tbl_chronologies.age_bound_younger,
    tbl_chronologies.age_model,
    tbl_chronologies.age_type_id,
    tbl_chronologies.chronology_name,
    tbl_chronologies.contact_id,
    tbl_chronologies.date_prepared,
    tbl_chronologies.date_updated,
    tbl_chronologies.is_default,
    tbl_chronologies.notes,
    tbl_chronologies.sample_group_id
   FROM public.tbl_chronologies;


--
-- TOC entry 472 (class 1259 OID 18014)
-- Name: view_clearinghouse_dataset_abundance_element_names; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_clearinghouse_dataset_abundance_element_names AS
 SELECT a.submission_id,
    a.abundance_id,
    a.merged_db_id,
    a.public_db_id,
    a.local_db_id,
    array_to_string(array_agg(ael.element_name), ','::text) AS element_name
   FROM (view_abundances a
     JOIN view_abundance_elements ael ON ((ael.abundance_element_id = a.abundance_element_id)))
  GROUP BY a.submission_id, a.abundance_id, a.merged_db_id, a.public_db_id, a.local_db_id;


SET search_path = public, pg_catalog;

--
-- TOC entry 473 (class 1259 OID 18019)
-- Name: tbl_identification_levels; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_identification_levels (
    identification_level_id integer NOT NULL,
    identification_level_abbrev character varying(50) DEFAULT NULL::character varying,
    identification_level_name character varying(50) DEFAULT NULL::character varying,
    notes text,
    date_updated timestamp with time zone DEFAULT now()
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 474 (class 1259 OID 18028)
-- Name: view_identification_levels; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_identification_levels AS
 SELECT tbl_identification_levels.submission_id,
    tbl_identification_levels.source_id,
    tbl_identification_levels.local_db_id AS merged_db_id,
    tbl_identification_levels.local_db_id,
    tbl_identification_levels.public_db_id,
    tbl_identification_levels.identification_level_id,
    tbl_identification_levels.identification_level_abbrev,
    tbl_identification_levels.identification_level_name,
    tbl_identification_levels.notes,
    tbl_identification_levels.date_updated
   FROM tbl_identification_levels
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_identification_levels.identification_level_id AS merged_db_id,
    0 AS local_db_id,
    tbl_identification_levels.identification_level_id AS public_db_id,
    tbl_identification_levels.identification_level_id,
    tbl_identification_levels.identification_level_abbrev,
    tbl_identification_levels.identification_level_name,
    tbl_identification_levels.notes,
    tbl_identification_levels.date_updated
   FROM public.tbl_identification_levels;


--
-- TOC entry 475 (class 1259 OID 18033)
-- Name: view_clearinghouse_dataset_abundance_ident_levels; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_clearinghouse_dataset_abundance_ident_levels AS
 SELECT al.submission_id,
    al.abundance_id,
    al.merged_db_id,
    al.public_db_id,
    al.local_db_id,
    array_to_string(array_agg(l.identification_level_abbrev), ','::text) AS identification_level_abbrev,
    array_to_string(array_agg(l.identification_level_name), ','::text) AS identification_level_name
   FROM (view_abundance_ident_levels al
     LEFT JOIN view_identification_levels l ON ((l.identification_level_id = al.identification_level_id)))
  GROUP BY al.submission_id, al.abundance_id, al.merged_db_id, al.public_db_id, al.local_db_id;


SET search_path = public, pg_catalog;

--
-- TOC entry 476 (class 1259 OID 18038)
-- Name: tbl_modification_types; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_modification_types (
    modification_type_id integer NOT NULL,
    modification_type_name character varying(128),
    modification_type_description text,
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 7050 (class 0 OID 0)
-- Dependencies: 476
-- Name: COLUMN tbl_modification_types.modification_type_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_modification_types.modification_type_name IS 'short name of modification, e.g. carbonised';


--
-- TOC entry 7051 (class 0 OID 0)
-- Dependencies: 476
-- Name: COLUMN tbl_modification_types.modification_type_description; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_modification_types.modification_type_description IS 'clear explanation of modification so that name makes sense to non-domain scientists';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 477 (class 1259 OID 18045)
-- Name: view_modification_types; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_modification_types AS
 SELECT tbl_modification_types.submission_id,
    tbl_modification_types.source_id,
    tbl_modification_types.local_db_id AS merged_db_id,
    tbl_modification_types.local_db_id,
    tbl_modification_types.public_db_id,
    tbl_modification_types.modification_type_id,
    tbl_modification_types.modification_type_name,
    tbl_modification_types.modification_type_description,
    tbl_modification_types.date_updated
   FROM tbl_modification_types
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_modification_types.modification_type_id AS merged_db_id,
    0 AS local_db_id,
    tbl_modification_types.modification_type_id AS public_db_id,
    tbl_modification_types.modification_type_id,
    tbl_modification_types.modification_type_name,
    tbl_modification_types.modification_type_description,
    tbl_modification_types.date_updated
   FROM public.tbl_modification_types;


--
-- TOC entry 478 (class 1259 OID 18049)
-- Name: view_clearinghouse_dataset_abundance_modification_types; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_clearinghouse_dataset_abundance_modification_types AS
 SELECT am.submission_id,
    am.abundance_id,
    am.merged_db_id,
    am.public_db_id,
    am.local_db_id,
    array_to_string(array_agg(mt.modification_type_description), ','::text) AS modification_type_description,
    array_to_string(array_agg(mt.modification_type_name), ','::text) AS modification_type_name
   FROM (view_abundance_modifications am
     LEFT JOIN view_modification_types mt ON (((mt.merged_db_id = am.modification_type_id) AND ((mt.submission_id = 0) OR (mt.submission_id = am.submission_id)))))
  GROUP BY am.submission_id, am.abundance_id, am.merged_db_id, am.public_db_id, am.local_db_id;


SET search_path = public, pg_catalog;

--
-- TOC entry 479 (class 1259 OID 18054)
-- Name: tbl_datasets; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_datasets (
    dataset_id integer NOT NULL,
    master_set_id integer,
    data_type_id integer NOT NULL,
    method_id integer,
    biblio_id integer,
    updated_dataset_id integer,
    project_id integer,
    dataset_name character varying(50) NOT NULL,
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 7052 (class 0 OID 0)
-- Dependencies: 479
-- Name: COLUMN tbl_datasets.dataset_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_datasets.dataset_name IS 'something uniquely identifying the dataset for this site. may be same as sample group name, or created adhoc if necessary, but preferably with some meaning.';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 480 (class 1259 OID 18058)
-- Name: view_datasets; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_datasets AS
 SELECT tbl_datasets.submission_id,
    tbl_datasets.source_id,
    tbl_datasets.local_db_id AS merged_db_id,
    tbl_datasets.local_db_id,
    tbl_datasets.public_db_id,
    tbl_datasets.dataset_id,
    tbl_datasets.master_set_id,
    tbl_datasets.data_type_id,
    tbl_datasets.method_id,
    tbl_datasets.biblio_id,
    tbl_datasets.updated_dataset_id,
    tbl_datasets.project_id,
    tbl_datasets.dataset_name,
    tbl_datasets.date_updated
   FROM tbl_datasets
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_datasets.dataset_id AS merged_db_id,
    0 AS local_db_id,
    tbl_datasets.dataset_id AS public_db_id,
    tbl_datasets.dataset_id,
    tbl_datasets.master_set_id,
    tbl_datasets.data_type_id,
    tbl_datasets.method_id,
    tbl_datasets.biblio_id,
    tbl_datasets.updated_dataset_id,
    tbl_datasets.project_id,
    tbl_datasets.dataset_name,
    tbl_datasets.date_updated
   FROM public.tbl_datasets;


SET search_path = public, pg_catalog;

--
-- TOC entry 481 (class 1259 OID 18063)
-- Name: tbl_physical_samples; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_physical_samples (
    physical_sample_id integer NOT NULL,
    sample_group_id integer DEFAULT 0 NOT NULL,
    alt_ref_type_id integer,
    sample_type_id integer NOT NULL,
    sample_name character varying(50) NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    date_sampled character varying
);


--
-- TOC entry 7053 (class 0 OID 0)
-- Dependencies: 481
-- Name: TABLE tbl_physical_samples; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE tbl_physical_samples IS '20120504PIB: deleted columns XYZ and created external tbl_sample_coodinates
20120506PIB: deleted columns depth_top & depth_bottom and moved to tbl_sample_dimensions
20130416PIB: changed to date_sampled from date to varchar format to increase flexibility';


--
-- TOC entry 7054 (class 0 OID 0)
-- Dependencies: 481
-- Name: COLUMN tbl_physical_samples.alt_ref_type_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_physical_samples.alt_ref_type_id IS 'type of name represented by primary sample name, e.g. lab number, museum number etc.';


--
-- TOC entry 7055 (class 0 OID 0)
-- Dependencies: 481
-- Name: COLUMN tbl_physical_samples.sample_type_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_physical_samples.sample_type_id IS 'physical form of sample, e.g. bulk sample, kubienta subsample, core subsample, dendro core, dendro slice...';


--
-- TOC entry 7056 (class 0 OID 0)
-- Dependencies: 481
-- Name: COLUMN tbl_physical_samples.sample_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_physical_samples.sample_name IS 'reference number or name of sample. multiple references/names can be added as alternative references.';


--
-- TOC entry 7057 (class 0 OID 0)
-- Dependencies: 481
-- Name: COLUMN tbl_physical_samples.date_sampled; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_physical_samples.date_sampled IS 'Date samples were taken. ';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 482 (class 1259 OID 18071)
-- Name: view_physical_samples; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_physical_samples AS
 SELECT tbl_physical_samples.submission_id,
    tbl_physical_samples.source_id,
    tbl_physical_samples.local_db_id AS merged_db_id,
    tbl_physical_samples.local_db_id,
    tbl_physical_samples.public_db_id,
    tbl_physical_samples.physical_sample_id,
    tbl_physical_samples.sample_group_id,
    tbl_physical_samples.alt_ref_type_id,
    tbl_physical_samples.sample_type_id,
    tbl_physical_samples.sample_name,
    tbl_physical_samples.date_updated,
    tbl_physical_samples.date_sampled
   FROM tbl_physical_samples
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_physical_samples.physical_sample_id AS merged_db_id,
    0 AS local_db_id,
    tbl_physical_samples.physical_sample_id AS public_db_id,
    tbl_physical_samples.physical_sample_id,
    tbl_physical_samples.sample_group_id,
    tbl_physical_samples.alt_ref_type_id,
    tbl_physical_samples.sample_type_id,
    tbl_physical_samples.sample_name,
    tbl_physical_samples.date_updated,
    tbl_physical_samples.date_sampled
   FROM public.tbl_physical_samples;


SET search_path = public, pg_catalog;

--
-- TOC entry 483 (class 1259 OID 18076)
-- Name: tbl_taxa_tree_authors; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_taxa_tree_authors (
    author_id integer NOT NULL,
    author_name character varying(100) DEFAULT NULL::character varying,
    date_updated timestamp with time zone DEFAULT now()
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 484 (class 1259 OID 18081)
-- Name: view_taxa_tree_authors; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_taxa_tree_authors AS
 SELECT tbl_taxa_tree_authors.submission_id,
    tbl_taxa_tree_authors.source_id,
    tbl_taxa_tree_authors.local_db_id AS merged_db_id,
    tbl_taxa_tree_authors.local_db_id,
    tbl_taxa_tree_authors.public_db_id,
    tbl_taxa_tree_authors.author_id,
    tbl_taxa_tree_authors.author_name,
    tbl_taxa_tree_authors.date_updated
   FROM tbl_taxa_tree_authors
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_taxa_tree_authors.author_id AS merged_db_id,
    0 AS local_db_id,
    tbl_taxa_tree_authors.author_id AS public_db_id,
    tbl_taxa_tree_authors.author_id,
    tbl_taxa_tree_authors.author_name,
    tbl_taxa_tree_authors.date_updated
   FROM public.tbl_taxa_tree_authors;


SET search_path = public, pg_catalog;

--
-- TOC entry 485 (class 1259 OID 18085)
-- Name: tbl_taxa_tree_genera; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_taxa_tree_genera (
    genus_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    family_id integer,
    genus_name character varying(100) DEFAULT NULL::character varying
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 486 (class 1259 OID 18090)
-- Name: view_taxa_tree_genera; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_taxa_tree_genera AS
 SELECT tbl_taxa_tree_genera.submission_id,
    tbl_taxa_tree_genera.source_id,
    tbl_taxa_tree_genera.local_db_id AS merged_db_id,
    tbl_taxa_tree_genera.local_db_id,
    tbl_taxa_tree_genera.public_db_id,
    tbl_taxa_tree_genera.genus_id,
    tbl_taxa_tree_genera.date_updated,
    tbl_taxa_tree_genera.family_id,
    tbl_taxa_tree_genera.genus_name
   FROM tbl_taxa_tree_genera
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_taxa_tree_genera.genus_id AS merged_db_id,
    0 AS local_db_id,
    tbl_taxa_tree_genera.genus_id AS public_db_id,
    tbl_taxa_tree_genera.genus_id,
    tbl_taxa_tree_genera.date_updated,
    tbl_taxa_tree_genera.family_id,
    tbl_taxa_tree_genera.genus_name
   FROM public.tbl_taxa_tree_genera;


SET search_path = public, pg_catalog;

--
-- TOC entry 487 (class 1259 OID 18094)
-- Name: tbl_taxa_tree_master; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_taxa_tree_master (
    taxon_id integer NOT NULL,
    author_id integer,
    date_updated timestamp with time zone DEFAULT now(),
    genus_id integer,
    species character varying(255) DEFAULT NULL::character varying
);


--
-- TOC entry 7058 (class 0 OID 0)
-- Dependencies: 487
-- Name: TABLE tbl_taxa_tree_master; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE tbl_taxa_tree_master IS '20130416PIB: removed default=0 for author_id and genus_id as was incorrect';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 488 (class 1259 OID 18099)
-- Name: view_taxa_tree_master; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_taxa_tree_master AS
 SELECT tbl_taxa_tree_master.submission_id,
    tbl_taxa_tree_master.source_id,
    tbl_taxa_tree_master.local_db_id AS merged_db_id,
    tbl_taxa_tree_master.local_db_id,
    tbl_taxa_tree_master.public_db_id,
    tbl_taxa_tree_master.taxon_id,
    tbl_taxa_tree_master.author_id,
    tbl_taxa_tree_master.date_updated,
    tbl_taxa_tree_master.genus_id,
    tbl_taxa_tree_master.species
   FROM tbl_taxa_tree_master
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_taxa_tree_master.taxon_id AS merged_db_id,
    0 AS local_db_id,
    tbl_taxa_tree_master.taxon_id AS public_db_id,
    tbl_taxa_tree_master.taxon_id,
    tbl_taxa_tree_master.author_id,
    tbl_taxa_tree_master.date_updated,
    tbl_taxa_tree_master.genus_id,
    tbl_taxa_tree_master.species
   FROM public.tbl_taxa_tree_master;


--
-- TOC entry 489 (class 1259 OID 18104)
-- Name: view_clearinghouse_dataset_abundances; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_clearinghouse_dataset_abundances AS
 SELECT d.submission_id,
    d.source_id,
    d.local_db_id AS local_dataset_id,
    d.public_db_id AS public_dataset_id,
    a.abundance_id,
    a.local_db_id,
    a.public_db_id,
    a.abundance,
    ttm.taxon_id,
    ttm.public_db_id AS public_taxon_id,
    ttg.genus_name,
    ttm.species,
    tta.author_name,
    ps.physical_sample_id,
    ps.public_db_id AS public_physical_sample_id,
    ps.sample_name,
    COALESCE(ael.element_name, ''::text) AS element_name,
    COALESCE(mt.modification_type_name, ''::text) AS modification_type_name,
    COALESCE(il.identification_level_name, ''::text) AS identification_level_name
   FROM (((((((((view_datasets d
     JOIN view_analysis_entities ae ON (((ae.dataset_id = d.merged_db_id) AND ((ae.submission_id = 0) OR (ae.submission_id = d.submission_id)))))
     JOIN view_physical_samples ps ON (((ps.merged_db_id = ae.physical_sample_id) AND ((ps.submission_id = 0) OR (ps.submission_id = d.submission_id)))))
     JOIN view_abundances a ON (((a.analysis_entity_id = ae.merged_db_id) AND ((a.submission_id = 0) OR (a.submission_id = d.submission_id)))))
     LEFT JOIN view_taxa_tree_master ttm ON (((ttm.merged_db_id = a.taxon_id) AND ((ttm.submission_id = 0) OR (ttm.submission_id = d.submission_id)))))
     LEFT JOIN view_taxa_tree_genera ttg ON (((ttg.merged_db_id = ttm.genus_id) AND ((ttg.submission_id = 0) OR (ttg.submission_id = d.submission_id)))))
     LEFT JOIN view_taxa_tree_authors tta ON (((tta.merged_db_id = ttm.author_id) AND ((tta.submission_id = 0) OR (tta.submission_id = d.submission_id)))))
     LEFT JOIN view_clearinghouse_dataset_abundance_modification_types mt ON (((mt.abundance_id = a.merged_db_id) AND ((mt.submission_id = 0) OR (mt.submission_id = d.submission_id)))))
     LEFT JOIN view_clearinghouse_dataset_abundance_ident_levels il ON (((il.abundance_id = a.merged_db_id) AND ((il.submission_id = 0) OR (il.submission_id = d.submission_id)))))
     LEFT JOIN view_clearinghouse_dataset_abundance_element_names ael ON (((ael.abundance_id = a.merged_db_id) AND ((ael.submission_id = 0) OR (ael.submission_id = d.submission_id)))))
  WHERE (1 = 1);


SET search_path = public, pg_catalog;

--
-- TOC entry 490 (class 1259 OID 18109)
-- Name: tbl_dimensions; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_dimensions (
    dimension_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    dimension_abbrev character varying(10),
    dimension_description text,
    dimension_name character varying(50) NOT NULL,
    unit_id integer,
    method_group_id integer
);


--
-- TOC entry 7059 (class 0 OID 0)
-- Dependencies: 490
-- Name: COLUMN tbl_dimensions.method_group_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_dimensions.method_group_id IS 'Limits choice of dimension by method group (e.g. size measurements, coordinate systems)';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 491 (class 1259 OID 18116)
-- Name: view_dimensions; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_dimensions AS
 SELECT tbl_dimensions.submission_id,
    tbl_dimensions.source_id,
    tbl_dimensions.local_db_id AS merged_db_id,
    tbl_dimensions.local_db_id,
    tbl_dimensions.public_db_id,
    tbl_dimensions.dimension_id,
    tbl_dimensions.date_updated,
    tbl_dimensions.dimension_abbrev,
    tbl_dimensions.dimension_description,
    tbl_dimensions.dimension_name,
    tbl_dimensions.unit_id,
    tbl_dimensions.method_group_id
   FROM tbl_dimensions
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_dimensions.dimension_id AS merged_db_id,
    0 AS local_db_id,
    tbl_dimensions.dimension_id AS public_db_id,
    tbl_dimensions.dimension_id,
    tbl_dimensions.date_updated,
    tbl_dimensions.dimension_abbrev,
    tbl_dimensions.dimension_description,
    tbl_dimensions.dimension_name,
    tbl_dimensions.unit_id,
    tbl_dimensions.method_group_id
   FROM public.tbl_dimensions;


SET search_path = public, pg_catalog;

--
-- TOC entry 492 (class 1259 OID 18121)
-- Name: tbl_measured_value_dimensions; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_measured_value_dimensions (
    measured_value_dimension_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    dimension_id integer NOT NULL,
    dimension_value numeric(18,10) NOT NULL,
    measured_value_id integer NOT NULL
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 493 (class 1259 OID 18125)
-- Name: view_measured_value_dimensions; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_measured_value_dimensions AS
 SELECT tbl_measured_value_dimensions.submission_id,
    tbl_measured_value_dimensions.source_id,
    tbl_measured_value_dimensions.local_db_id AS merged_db_id,
    tbl_measured_value_dimensions.local_db_id,
    tbl_measured_value_dimensions.public_db_id,
    tbl_measured_value_dimensions.measured_value_dimension_id,
    tbl_measured_value_dimensions.date_updated,
    tbl_measured_value_dimensions.dimension_id,
    tbl_measured_value_dimensions.dimension_value,
    tbl_measured_value_dimensions.measured_value_id
   FROM tbl_measured_value_dimensions
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_measured_value_dimensions.measured_value_dimension_id AS merged_db_id,
    0 AS local_db_id,
    tbl_measured_value_dimensions.measured_value_dimension_id AS public_db_id,
    tbl_measured_value_dimensions.measured_value_dimension_id,
    tbl_measured_value_dimensions.date_updated,
    tbl_measured_value_dimensions.dimension_id,
    tbl_measured_value_dimensions.dimension_value,
    tbl_measured_value_dimensions.measured_value_id
   FROM public.tbl_measured_value_dimensions;


SET search_path = public, pg_catalog;

--
-- TOC entry 494 (class 1259 OID 18130)
-- Name: tbl_measured_values; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_measured_values (
    measured_value_id integer NOT NULL,
    analysis_entity_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    measured_value numeric(20,10) NOT NULL
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 495 (class 1259 OID 18134)
-- Name: view_measured_values; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_measured_values AS
 SELECT tbl_measured_values.submission_id,
    tbl_measured_values.source_id,
    tbl_measured_values.local_db_id AS merged_db_id,
    tbl_measured_values.local_db_id,
    tbl_measured_values.public_db_id,
    tbl_measured_values.measured_value_id,
    tbl_measured_values.analysis_entity_id,
    tbl_measured_values.date_updated,
    tbl_measured_values.measured_value
   FROM tbl_measured_values
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_measured_values.measured_value_id AS merged_db_id,
    0 AS local_db_id,
    tbl_measured_values.measured_value_id AS public_db_id,
    tbl_measured_values.measured_value_id,
    tbl_measured_values.analysis_entity_id,
    tbl_measured_values.date_updated,
    tbl_measured_values.measured_value
   FROM public.tbl_measured_values;


SET search_path = public, pg_catalog;

--
-- TOC entry 496 (class 1259 OID 18138)
-- Name: tbl_methods; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_methods (
    method_id integer NOT NULL,
    biblio_id integer,
    date_updated timestamp with time zone DEFAULT now(),
    description text NOT NULL,
    method_abbrev_or_alt_name character varying(50),
    method_group_id integer NOT NULL,
    method_name character varying(50) NOT NULL,
    record_type_id integer,
    unit_id integer
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 497 (class 1259 OID 18145)
-- Name: view_methods; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_methods AS
 SELECT tbl_methods.submission_id,
    tbl_methods.source_id,
    tbl_methods.local_db_id AS merged_db_id,
    tbl_methods.local_db_id,
    tbl_methods.public_db_id,
    tbl_methods.method_id,
    tbl_methods.biblio_id,
    tbl_methods.date_updated,
    tbl_methods.description,
    tbl_methods.method_abbrev_or_alt_name,
    tbl_methods.method_group_id,
    tbl_methods.method_name,
    tbl_methods.record_type_id,
    tbl_methods.unit_id
   FROM tbl_methods
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_methods.method_id AS merged_db_id,
    0 AS local_db_id,
    tbl_methods.method_id AS public_db_id,
    tbl_methods.method_id,
    tbl_methods.biblio_id,
    tbl_methods.date_updated,
    tbl_methods.description,
    tbl_methods.method_abbrev_or_alt_name,
    tbl_methods.method_group_id,
    tbl_methods.method_name,
    tbl_methods.record_type_id,
    tbl_methods.unit_id
   FROM public.tbl_methods;


--
-- TOC entry 498 (class 1259 OID 18150)
-- Name: view_clearinghouse_dataset_measured_values; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_clearinghouse_dataset_measured_values AS
 SELECT d.submission_id,
    d.source_id,
    d.local_db_id AS local_dataset_id,
    d.merged_db_id AS merged_dataset_id,
    d.public_db_id AS public_dataset_id,
    ps.sample_group_id,
    ps.merged_db_id AS physical_sample_id,
    ps.local_db_id AS local_physical_sample_id,
    ps.public_db_id AS public_physical_sample_id,
    ps.sample_name,
    m.method_id,
    m.public_db_id AS public_method_id,
    m.method_name,
    aepmm.method_id AS prep_method_id,
    aepmm.public_db_id AS public_prep_method_id,
    aepmm.method_name AS prep_method_name,
    mv.measured_value
   FROM ((((((((view_datasets d
     JOIN view_analysis_entities ae ON (((ae.dataset_id = d.merged_db_id) AND ((ae.submission_id = 0) OR (ae.submission_id = d.submission_id)))))
     JOIN view_measured_values mv ON (((mv.analysis_entity_id = ae.merged_db_id) AND ((mv.submission_id = 0) OR (mv.submission_id = d.submission_id)))))
     JOIN view_physical_samples ps ON (((ps.merged_db_id = ae.physical_sample_id) AND ((ps.submission_id = 0) OR (ps.submission_id = d.submission_id)))))
     JOIN view_methods m ON (((m.merged_db_id = d.method_id) AND ((m.submission_id = 0) OR (m.submission_id = d.submission_id)))))
     LEFT JOIN view_measured_value_dimensions mvd ON (((mvd.measured_value_id = mv.merged_db_id) AND ((mvd.submission_id = 0) OR (mvd.submission_id = d.submission_id)))))
     LEFT JOIN view_dimensions dd ON (((dd.merged_db_id = mvd.dimension_id) AND ((dd.submission_id = 0) OR (dd.submission_id = d.submission_id)))))
     LEFT JOIN view_analysis_entity_prep_methods aepm ON (((aepm.analysis_entity_id = ae.merged_db_id) AND ((aepm.submission_id = 0) OR (aepm.submission_id = d.submission_id)))))
     LEFT JOIN view_methods aepmm ON (((aepmm.merged_db_id = aepm.method_id) AND ((aepmm.submission_id = 0) OR (aepmm.submission_id = d.submission_id)))));


--
-- TOC entry 499 (class 1259 OID 18155)
-- Name: view_clearinghouse_sead_rdb_schema_pk_columns; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_clearinghouse_sead_rdb_schema_pk_columns AS
 SELECT tbl_clearinghouse_sead_rdb_schema.table_schema,
    tbl_clearinghouse_sead_rdb_schema.table_name,
    tbl_clearinghouse_sead_rdb_schema.column_name
   FROM tbl_clearinghouse_sead_rdb_schema
  WHERE ((tbl_clearinghouse_sead_rdb_schema.is_pk)::text = 'YES'::text);


--
-- TOC entry 500 (class 1259 OID 18159)
-- Name: view_clearinghouse_local_fk_references; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_clearinghouse_local_fk_references AS
 SELECT v.submission_id,
    c.table_id,
    c.column_id,
    v.fk_local_db_id,
    fk_t.table_id AS fk_table_id,
    fk_c.column_id AS fk_column_id
   FROM (((((tbl_clearinghouse_submission_xml_content_values v
     JOIN tbl_clearinghouse_submission_xml_content_columns c ON ((((c.submission_id = v.submission_id) AND (c.table_id = v.table_id)) AND (c.column_id = v.column_id))))
     JOIN tbl_clearinghouse_submission_tables fk_t ON (((fk_t.table_name_underscored)::text = (c.fk_table_underscored)::text)))
     JOIN view_clearinghouse_sead_rdb_schema_pk_columns s ON ((((s.table_schema)::text = 'public'::text) AND ((s.table_name)::text = (fk_t.table_name_underscored)::text))))
     JOIN tbl_clearinghouse_submission_xml_content_columns fk_c ON ((((fk_c.submission_id = v.submission_id) AND (fk_c.table_id = fk_t.table_id)) AND ((fk_c.column_name_underscored)::text = (s.column_name)::text))))
     JOIN tbl_clearinghouse_submission_xml_content_values fk_v ON (((((fk_v.submission_id = v.submission_id) AND (fk_v.table_id = fk_t.table_id)) AND (fk_v.column_id = fk_c.column_id)) AND (fk_v.local_db_id = v.fk_local_db_id))))
  WHERE (v.fk_flag = true);


SET search_path = public, pg_catalog;

--
-- TOC entry 501 (class 1259 OID 18164)
-- Name: tbl_collections_or_journals; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_collections_or_journals (
    collection_or_journal_id integer NOT NULL,
    collection_or_journal_abbrev character varying(128),
    collection_title_or_journal_name character varying,
    date_updated timestamp with time zone DEFAULT now(),
    issn character varying(128),
    number_of_volumes character varying(50),
    publisher_id integer,
    series_editor character varying,
    series_title character varying,
    volume_editor character varying
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 502 (class 1259 OID 18171)
-- Name: view_collections_or_journals; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_collections_or_journals AS
 SELECT tbl_collections_or_journals.submission_id,
    tbl_collections_or_journals.source_id,
    tbl_collections_or_journals.local_db_id AS merged_db_id,
    tbl_collections_or_journals.local_db_id,
    tbl_collections_or_journals.public_db_id,
    tbl_collections_or_journals.collection_or_journal_id,
    tbl_collections_or_journals.collection_or_journal_abbrev,
    tbl_collections_or_journals.collection_title_or_journal_name,
    tbl_collections_or_journals.date_updated,
    tbl_collections_or_journals.issn,
    tbl_collections_or_journals.number_of_volumes,
    tbl_collections_or_journals.publisher_id,
    tbl_collections_or_journals.series_editor,
    tbl_collections_or_journals.series_title,
    tbl_collections_or_journals.volume_editor
   FROM tbl_collections_or_journals
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_collections_or_journals.collection_or_journal_id AS merged_db_id,
    0 AS local_db_id,
    tbl_collections_or_journals.collection_or_journal_id AS public_db_id,
    tbl_collections_or_journals.collection_or_journal_id,
    tbl_collections_or_journals.collection_or_journal_abbrev,
    tbl_collections_or_journals.collection_title_or_journal_name,
    tbl_collections_or_journals.date_updated,
    tbl_collections_or_journals.issn,
    tbl_collections_or_journals.number_of_volumes,
    tbl_collections_or_journals.publisher_id,
    tbl_collections_or_journals.series_editor,
    tbl_collections_or_journals.series_title,
    tbl_collections_or_journals.volume_editor
   FROM public.tbl_collections_or_journals;


SET search_path = public, pg_catalog;

--
-- TOC entry 503 (class 1259 OID 18176)
-- Name: tbl_colours; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_colours (
    colour_id integer NOT NULL,
    colour_name character varying(30) NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    method_id integer NOT NULL,
    rgb integer
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 504 (class 1259 OID 18180)
-- Name: view_colours; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_colours AS
 SELECT tbl_colours.submission_id,
    tbl_colours.source_id,
    tbl_colours.local_db_id AS merged_db_id,
    tbl_colours.local_db_id,
    tbl_colours.public_db_id,
    tbl_colours.colour_id,
    tbl_colours.colour_name,
    tbl_colours.date_updated,
    tbl_colours.method_id,
    tbl_colours.rgb
   FROM tbl_colours
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_colours.colour_id AS merged_db_id,
    0 AS local_db_id,
    tbl_colours.colour_id AS public_db_id,
    tbl_colours.colour_id,
    tbl_colours.colour_name,
    tbl_colours.date_updated,
    tbl_colours.method_id,
    tbl_colours.rgb
   FROM public.tbl_colours;


SET search_path = public, pg_catalog;

--
-- TOC entry 505 (class 1259 OID 18185)
-- Name: tbl_contact_types; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_contact_types (
    contact_type_id integer NOT NULL,
    contact_type_name character varying(150) NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    description text
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 506 (class 1259 OID 18192)
-- Name: view_contact_types; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_contact_types AS
 SELECT tbl_contact_types.submission_id,
    tbl_contact_types.source_id,
    tbl_contact_types.local_db_id AS merged_db_id,
    tbl_contact_types.local_db_id,
    tbl_contact_types.public_db_id,
    tbl_contact_types.contact_type_id,
    tbl_contact_types.contact_type_name,
    tbl_contact_types.date_updated,
    tbl_contact_types.description
   FROM tbl_contact_types
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_contact_types.contact_type_id AS merged_db_id,
    0 AS local_db_id,
    tbl_contact_types.contact_type_id AS public_db_id,
    tbl_contact_types.contact_type_id,
    tbl_contact_types.contact_type_name,
    tbl_contact_types.date_updated,
    tbl_contact_types.description
   FROM public.tbl_contact_types;


SET search_path = public, pg_catalog;

--
-- TOC entry 507 (class 1259 OID 18196)
-- Name: tbl_contacts; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_contacts (
    contact_id integer NOT NULL,
    address_1 character varying(255),
    address_2 character varying(255),
    location_id integer,
    email character varying,
    first_name character varying(50),
    last_name character varying(100),
    phone_number character varying(50),
    url text,
    date_updated timestamp with time zone DEFAULT now()
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 508 (class 1259 OID 18203)
-- Name: view_contacts; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_contacts AS
 SELECT tbl_contacts.submission_id,
    tbl_contacts.source_id,
    tbl_contacts.local_db_id AS merged_db_id,
    tbl_contacts.local_db_id,
    tbl_contacts.public_db_id,
    tbl_contacts.contact_id,
    tbl_contacts.address_1,
    tbl_contacts.address_2,
    tbl_contacts.location_id,
    tbl_contacts.email,
    tbl_contacts.first_name,
    tbl_contacts.last_name,
    tbl_contacts.phone_number,
    tbl_contacts.url,
    tbl_contacts.date_updated
   FROM tbl_contacts
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_contacts.contact_id AS merged_db_id,
    0 AS local_db_id,
    tbl_contacts.contact_id AS public_db_id,
    tbl_contacts.contact_id,
    tbl_contacts.address_1,
    tbl_contacts.address_2,
    tbl_contacts.location_id,
    tbl_contacts.email,
    tbl_contacts.first_name,
    tbl_contacts.last_name,
    tbl_contacts.phone_number,
    tbl_contacts.url,
    tbl_contacts.date_updated
   FROM public.tbl_contacts;


SET search_path = public, pg_catalog;

--
-- TOC entry 509 (class 1259 OID 18208)
-- Name: tbl_coordinate_method_dimensions; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_coordinate_method_dimensions (
    coordinate_method_dimension_id integer NOT NULL,
    dimension_id integer NOT NULL,
    method_id integer NOT NULL,
    limit_upper numeric(18,10),
    limit_lower numeric(18,10),
    date_updated timestamp with time zone DEFAULT now()
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 510 (class 1259 OID 18212)
-- Name: view_coordinate_method_dimensions; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_coordinate_method_dimensions AS
 SELECT tbl_coordinate_method_dimensions.submission_id,
    tbl_coordinate_method_dimensions.source_id,
    tbl_coordinate_method_dimensions.local_db_id AS merged_db_id,
    tbl_coordinate_method_dimensions.local_db_id,
    tbl_coordinate_method_dimensions.public_db_id,
    tbl_coordinate_method_dimensions.coordinate_method_dimension_id,
    tbl_coordinate_method_dimensions.dimension_id,
    tbl_coordinate_method_dimensions.method_id,
    tbl_coordinate_method_dimensions.limit_upper,
    tbl_coordinate_method_dimensions.limit_lower,
    tbl_coordinate_method_dimensions.date_updated
   FROM tbl_coordinate_method_dimensions
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_coordinate_method_dimensions.coordinate_method_dimension_id AS merged_db_id,
    0 AS local_db_id,
    tbl_coordinate_method_dimensions.coordinate_method_dimension_id AS public_db_id,
    tbl_coordinate_method_dimensions.coordinate_method_dimension_id,
    tbl_coordinate_method_dimensions.dimension_id,
    tbl_coordinate_method_dimensions.method_id,
    tbl_coordinate_method_dimensions.limit_upper,
    tbl_coordinate_method_dimensions.limit_lower,
    tbl_coordinate_method_dimensions.date_updated
   FROM public.tbl_coordinate_method_dimensions;


SET search_path = public, pg_catalog;

--
-- TOC entry 511 (class 1259 OID 18217)
-- Name: tbl_data_type_groups; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_data_type_groups (
    data_type_group_id integer NOT NULL,
    data_type_group_name character varying(25),
    date_updated timestamp with time zone DEFAULT now(),
    description text
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 512 (class 1259 OID 18224)
-- Name: view_data_type_groups; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_data_type_groups AS
 SELECT tbl_data_type_groups.submission_id,
    tbl_data_type_groups.source_id,
    tbl_data_type_groups.local_db_id AS merged_db_id,
    tbl_data_type_groups.local_db_id,
    tbl_data_type_groups.public_db_id,
    tbl_data_type_groups.data_type_group_id,
    tbl_data_type_groups.data_type_group_name,
    tbl_data_type_groups.date_updated,
    tbl_data_type_groups.description
   FROM tbl_data_type_groups
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_data_type_groups.data_type_group_id AS merged_db_id,
    0 AS local_db_id,
    tbl_data_type_groups.data_type_group_id AS public_db_id,
    tbl_data_type_groups.data_type_group_id,
    tbl_data_type_groups.data_type_group_name,
    tbl_data_type_groups.date_updated,
    tbl_data_type_groups.description
   FROM public.tbl_data_type_groups;


SET search_path = public, pg_catalog;

--
-- TOC entry 513 (class 1259 OID 18228)
-- Name: tbl_data_types; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_data_types (
    data_type_id integer NOT NULL,
    data_type_group_id integer NOT NULL,
    data_type_name character varying(25) DEFAULT NULL::character varying,
    date_updated timestamp with time zone DEFAULT now(),
    definition text
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 514 (class 1259 OID 18236)
-- Name: view_data_types; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_data_types AS
 SELECT tbl_data_types.submission_id,
    tbl_data_types.source_id,
    tbl_data_types.local_db_id AS merged_db_id,
    tbl_data_types.local_db_id,
    tbl_data_types.public_db_id,
    tbl_data_types.data_type_id,
    tbl_data_types.data_type_group_id,
    tbl_data_types.data_type_name,
    tbl_data_types.date_updated,
    tbl_data_types.definition
   FROM tbl_data_types
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_data_types.data_type_id AS merged_db_id,
    0 AS local_db_id,
    tbl_data_types.data_type_id AS public_db_id,
    tbl_data_types.data_type_id,
    tbl_data_types.data_type_group_id,
    tbl_data_types.data_type_name,
    tbl_data_types.date_updated,
    tbl_data_types.definition
   FROM public.tbl_data_types;


--
-- TOC entry 515 (class 1259 OID 18241)
-- Name: view_dataset_abundance_element_names; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_dataset_abundance_element_names AS
 SELECT a.abundance_id,
    array_to_string(array_agg(ael.element_name), ','::text) AS element_name
   FROM (public.tbl_abundances a
     JOIN public.tbl_abundance_elements ael ON ((ael.abundance_element_id = a.abundance_element_id)))
  GROUP BY a.abundance_id;


--
-- TOC entry 516 (class 1259 OID 18245)
-- Name: view_dataset_abundance_ident_levels; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_dataset_abundance_ident_levels AS
 SELECT al.abundance_id,
    array_to_string(array_agg(l.identification_level_abbrev), ','::text) AS identification_level_abbrev,
    array_to_string(array_agg(l.identification_level_name), ','::text) AS identification_level_name
   FROM (public.tbl_abundance_ident_levels al
     LEFT JOIN public.tbl_identification_levels l ON ((l.identification_level_id = al.identification_level_id)))
  GROUP BY al.abundance_id;


--
-- TOC entry 517 (class 1259 OID 18249)
-- Name: view_dataset_abundance_modification_types; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_dataset_abundance_modification_types AS
 SELECT am.abundance_id,
    array_to_string(array_agg(mt.modification_type_description), ','::text) AS modification_type_description,
    array_to_string(array_agg(mt.modification_type_name), ','::text) AS modification_type_name
   FROM (public.tbl_abundance_modifications am
     LEFT JOIN public.tbl_modification_types mt ON ((mt.modification_type_id = am.modification_type_id)))
  GROUP BY am.abundance_id;


--
-- TOC entry 518 (class 1259 OID 18253)
-- Name: view_dataset_abundances; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_dataset_abundances AS
 SELECT d.dataset_id,
    ttm.taxon_id,
    ttg.genus_name,
    ttm.species,
    ps.physical_sample_id,
    ps.sample_name,
    a.abundance_id,
    a.abundance,
    COALESCE(ael.element_name, ''::text) AS element_name,
    COALESCE(mt.modification_type_name, ''::text) AS modification_type_name,
    COALESCE(il.identification_level_name, ''::text) AS identification_level_name
   FROM ((((((((public.tbl_datasets d
     LEFT JOIN public.tbl_analysis_entities ae ON ((d.dataset_id = ae.dataset_id)))
     LEFT JOIN public.tbl_physical_samples ps ON ((ae.physical_sample_id = ps.physical_sample_id)))
     LEFT JOIN public.tbl_abundances a ON ((a.analysis_entity_id = ae.analysis_entity_id)))
     LEFT JOIN public.tbl_taxa_tree_master ttm ON ((ttm.taxon_id = a.taxon_id)))
     LEFT JOIN public.tbl_taxa_tree_genera ttg ON ((ttg.genus_id = ttm.genus_id)))
     LEFT JOIN view_dataset_abundance_modification_types mt ON ((mt.abundance_id = a.abundance_id)))
     LEFT JOIN view_dataset_abundance_ident_levels il ON ((il.abundance_id = a.abundance_id)))
     LEFT JOIN view_dataset_abundance_element_names ael ON ((ael.abundance_id = a.abundance_id)))
  WHERE (1 = 1);


SET search_path = public, pg_catalog;

--
-- TOC entry 519 (class 1259 OID 18258)
-- Name: tbl_dataset_contacts; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_dataset_contacts (
    dataset_contact_id integer NOT NULL,
    contact_id integer NOT NULL,
    contact_type_id integer NOT NULL,
    dataset_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now()
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 520 (class 1259 OID 18262)
-- Name: view_dataset_contacts; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_dataset_contacts AS
 SELECT tbl_dataset_contacts.submission_id,
    tbl_dataset_contacts.source_id,
    tbl_dataset_contacts.local_db_id AS merged_db_id,
    tbl_dataset_contacts.local_db_id,
    tbl_dataset_contacts.public_db_id,
    tbl_dataset_contacts.dataset_contact_id,
    tbl_dataset_contacts.contact_id,
    tbl_dataset_contacts.contact_type_id,
    tbl_dataset_contacts.dataset_id,
    tbl_dataset_contacts.date_updated
   FROM tbl_dataset_contacts
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_dataset_contacts.dataset_contact_id AS merged_db_id,
    0 AS local_db_id,
    tbl_dataset_contacts.dataset_contact_id AS public_db_id,
    tbl_dataset_contacts.dataset_contact_id,
    tbl_dataset_contacts.contact_id,
    tbl_dataset_contacts.contact_type_id,
    tbl_dataset_contacts.dataset_id,
    tbl_dataset_contacts.date_updated
   FROM public.tbl_dataset_contacts;


SET search_path = public, pg_catalog;

--
-- TOC entry 521 (class 1259 OID 18266)
-- Name: tbl_dataset_masters; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_dataset_masters (
    master_set_id integer NOT NULL,
    contact_id integer,
    biblio_id integer,
    master_name character varying(100),
    master_notes text,
    url text,
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 7060 (class 0 OID 0)
-- Dependencies: 521
-- Name: COLUMN tbl_dataset_masters.biblio_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_dataset_masters.biblio_id IS 'primary reference for master dataset if available, e.g. buckland & buckland 2006 for bugscep';


--
-- TOC entry 7061 (class 0 OID 0)
-- Dependencies: 521
-- Name: COLUMN tbl_dataset_masters.master_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_dataset_masters.master_name IS 'identification of master dataset, e.g. mal, bugscep, dendrolab';


--
-- TOC entry 7062 (class 0 OID 0)
-- Dependencies: 521
-- Name: COLUMN tbl_dataset_masters.master_notes; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_dataset_masters.master_notes IS 'description of master dataset, its form (e.g. database, lab) and any other relevant information for tracing it.';


--
-- TOC entry 7063 (class 0 OID 0)
-- Dependencies: 521
-- Name: COLUMN tbl_dataset_masters.url; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_dataset_masters.url IS 'website or other url for master dataset, be it a project, lab or... other';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 522 (class 1259 OID 18273)
-- Name: view_dataset_masters; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_dataset_masters AS
 SELECT tbl_dataset_masters.submission_id,
    tbl_dataset_masters.source_id,
    tbl_dataset_masters.local_db_id AS merged_db_id,
    tbl_dataset_masters.local_db_id,
    tbl_dataset_masters.public_db_id,
    tbl_dataset_masters.master_set_id,
    tbl_dataset_masters.contact_id,
    tbl_dataset_masters.biblio_id,
    tbl_dataset_masters.master_name,
    tbl_dataset_masters.master_notes,
    tbl_dataset_masters.url,
    tbl_dataset_masters.date_updated
   FROM tbl_dataset_masters
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_dataset_masters.master_set_id AS merged_db_id,
    0 AS local_db_id,
    tbl_dataset_masters.master_set_id AS public_db_id,
    tbl_dataset_masters.master_set_id,
    tbl_dataset_masters.contact_id,
    tbl_dataset_masters.biblio_id,
    tbl_dataset_masters.master_name,
    tbl_dataset_masters.master_notes,
    tbl_dataset_masters.url,
    tbl_dataset_masters.date_updated
   FROM public.tbl_dataset_masters;


--
-- TOC entry 523 (class 1259 OID 18278)
-- Name: view_dataset_measured_values; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_dataset_measured_values AS
 SELECT d.dataset_id,
    ps.physical_sample_id,
    ps.sample_group_id,
    ps.sample_name,
    m.method_id,
    m.method_name,
    aepmm.method_id AS prep_method_id,
    aepmm.method_name AS prep_method_name,
    mv.measured_value
   FROM ((((((((public.tbl_datasets d
     JOIN public.tbl_analysis_entities ae ON ((ae.dataset_id = d.dataset_id)))
     JOIN public.tbl_measured_values mv ON ((mv.analysis_entity_id = ae.analysis_entity_id)))
     JOIN public.tbl_physical_samples ps ON ((ps.physical_sample_id = ae.physical_sample_id)))
     JOIN public.tbl_methods m ON ((m.method_id = d.method_id)))
     LEFT JOIN public.tbl_measured_value_dimensions mvd ON ((mvd.measured_value_id = mv.measured_value_id)))
     LEFT JOIN public.tbl_dimensions dd ON ((dd.dimension_id = mvd.dimension_id)))
     LEFT JOIN public.tbl_analysis_entity_prep_methods aepm ON ((aepm.analysis_entity_id = ae.analysis_entity_id)))
     LEFT JOIN public.tbl_methods aepmm ON ((aepmm.method_id = aepm.method_id)));


SET search_path = public, pg_catalog;

--
-- TOC entry 524 (class 1259 OID 18283)
-- Name: tbl_dataset_submission_types; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_dataset_submission_types (
    submission_type_id integer NOT NULL,
    submission_type character varying(60) NOT NULL,
    description text,
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 7064 (class 0 OID 0)
-- Dependencies: 524
-- Name: COLUMN tbl_dataset_submission_types.submission_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_dataset_submission_types.submission_type IS 'descriptive name for type of submission, e.g. original submission, ingestion from another database';


--
-- TOC entry 7065 (class 0 OID 0)
-- Dependencies: 524
-- Name: COLUMN tbl_dataset_submission_types.description; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_dataset_submission_types.description IS 'explanation of submission type, explaining clearly data ingestion mechanism';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 525 (class 1259 OID 18290)
-- Name: view_dataset_submission_types; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_dataset_submission_types AS
 SELECT tbl_dataset_submission_types.submission_id,
    tbl_dataset_submission_types.source_id,
    tbl_dataset_submission_types.local_db_id AS merged_db_id,
    tbl_dataset_submission_types.local_db_id,
    tbl_dataset_submission_types.public_db_id,
    tbl_dataset_submission_types.submission_type_id,
    tbl_dataset_submission_types.submission_type,
    tbl_dataset_submission_types.description,
    tbl_dataset_submission_types.date_updated
   FROM tbl_dataset_submission_types
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_dataset_submission_types.submission_type_id AS merged_db_id,
    0 AS local_db_id,
    tbl_dataset_submission_types.submission_type_id AS public_db_id,
    tbl_dataset_submission_types.submission_type_id,
    tbl_dataset_submission_types.submission_type,
    tbl_dataset_submission_types.description,
    tbl_dataset_submission_types.date_updated
   FROM public.tbl_dataset_submission_types;


SET search_path = public, pg_catalog;

--
-- TOC entry 526 (class 1259 OID 18294)
-- Name: tbl_dataset_submissions; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_dataset_submissions (
    dataset_submission_id integer NOT NULL,
    dataset_id integer NOT NULL,
    submission_type_id integer NOT NULL,
    contact_id integer NOT NULL,
    date_submitted date NOT NULL,
    notes text,
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 7066 (class 0 OID 0)
-- Dependencies: 526
-- Name: COLUMN tbl_dataset_submissions.notes; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_dataset_submissions.notes IS 'any details of submission not covered by submission_type information, such as name of source from which submission originates if not covered elsewhere in database, e.g. from bugscep';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 527 (class 1259 OID 18301)
-- Name: view_dataset_submissions; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_dataset_submissions AS
 SELECT tbl_dataset_submissions.submission_id,
    tbl_dataset_submissions.source_id,
    tbl_dataset_submissions.local_db_id AS merged_db_id,
    tbl_dataset_submissions.local_db_id,
    tbl_dataset_submissions.public_db_id,
    tbl_dataset_submissions.dataset_submission_id,
    tbl_dataset_submissions.dataset_id,
    tbl_dataset_submissions.submission_type_id,
    tbl_dataset_submissions.contact_id,
    tbl_dataset_submissions.date_submitted,
    tbl_dataset_submissions.notes,
    tbl_dataset_submissions.date_updated
   FROM tbl_dataset_submissions
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_dataset_submissions.dataset_submission_id AS merged_db_id,
    0 AS local_db_id,
    tbl_dataset_submissions.dataset_submission_id AS public_db_id,
    tbl_dataset_submissions.dataset_submission_id,
    tbl_dataset_submissions.dataset_id,
    tbl_dataset_submissions.submission_type_id,
    tbl_dataset_submissions.contact_id,
    tbl_dataset_submissions.date_submitted,
    tbl_dataset_submissions.notes,
    tbl_dataset_submissions.date_updated
   FROM public.tbl_dataset_submissions;


SET search_path = public, pg_catalog;

--
-- TOC entry 528 (class 1259 OID 18306)
-- Name: tbl_dating_labs; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_dating_labs (
    dating_lab_id integer NOT NULL,
    contact_id integer,
    international_lab_id character varying(10) NOT NULL,
    lab_name character varying(100) DEFAULT NULL::character varying,
    country_id integer,
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 7067 (class 0 OID 0)
-- Dependencies: 528
-- Name: TABLE tbl_dating_labs; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE tbl_dating_labs IS '20120504pib: reduced this table and linked to tbl_contacts for address related data';


--
-- TOC entry 7068 (class 0 OID 0)
-- Dependencies: 528
-- Name: COLUMN tbl_dating_labs.contact_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_dating_labs.contact_id IS 'address details are stored in tbl_contacts';


--
-- TOC entry 7069 (class 0 OID 0)
-- Dependencies: 528
-- Name: COLUMN tbl_dating_labs.international_lab_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_dating_labs.international_lab_id IS 'international standard radiocarbon lab identifier.
from http://www.radiocarbon.org/info/labcodes.html';


--
-- TOC entry 7070 (class 0 OID 0)
-- Dependencies: 528
-- Name: COLUMN tbl_dating_labs.lab_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_dating_labs.lab_name IS 'international standard name of radiocarbon lab, from http://www.radiocarbon.org/info/labcodes.html';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 529 (class 1259 OID 18311)
-- Name: view_dating_labs; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_dating_labs AS
 SELECT tbl_dating_labs.submission_id,
    tbl_dating_labs.source_id,
    tbl_dating_labs.local_db_id AS merged_db_id,
    tbl_dating_labs.local_db_id,
    tbl_dating_labs.public_db_id,
    tbl_dating_labs.dating_lab_id,
    tbl_dating_labs.contact_id,
    tbl_dating_labs.international_lab_id,
    tbl_dating_labs.lab_name,
    tbl_dating_labs.country_id,
    tbl_dating_labs.date_updated
   FROM tbl_dating_labs
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_dating_labs.dating_lab_id AS merged_db_id,
    0 AS local_db_id,
    tbl_dating_labs.dating_lab_id AS public_db_id,
    tbl_dating_labs.dating_lab_id,
    tbl_dating_labs.contact_id,
    tbl_dating_labs.international_lab_id,
    tbl_dating_labs.lab_name,
    tbl_dating_labs.country_id,
    tbl_dating_labs.date_updated
   FROM public.tbl_dating_labs;


SET search_path = public, pg_catalog;

--
-- TOC entry 530 (class 1259 OID 18316)
-- Name: tbl_dating_material; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_dating_material (
    dating_material_id integer NOT NULL,
    geochron_id integer NOT NULL,
    taxon_id integer,
    material_dated character varying,
    description text,
    abundance_element_id integer,
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 7071 (class 0 OID 0)
-- Dependencies: 530
-- Name: TABLE tbl_dating_material; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE tbl_dating_material IS '20130722PIB: Added field date_updated';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 531 (class 1259 OID 18323)
-- Name: view_dating_material; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_dating_material AS
 SELECT tbl_dating_material.submission_id,
    tbl_dating_material.source_id,
    tbl_dating_material.local_db_id AS merged_db_id,
    tbl_dating_material.local_db_id,
    tbl_dating_material.public_db_id,
    tbl_dating_material.dating_material_id,
    tbl_dating_material.geochron_id,
    tbl_dating_material.taxon_id,
    tbl_dating_material.material_dated,
    tbl_dating_material.description,
    tbl_dating_material.abundance_element_id,
    tbl_dating_material.date_updated
   FROM tbl_dating_material
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_dating_material.dating_material_id AS merged_db_id,
    0 AS local_db_id,
    tbl_dating_material.dating_material_id AS public_db_id,
    tbl_dating_material.dating_material_id,
    tbl_dating_material.geochron_id,
    tbl_dating_material.taxon_id,
    tbl_dating_material.material_dated,
    tbl_dating_material.description,
    tbl_dating_material.abundance_element_id,
    tbl_dating_material.date_updated
   FROM public.tbl_dating_material;


SET search_path = public, pg_catalog;

--
-- TOC entry 532 (class 1259 OID 18328)
-- Name: tbl_dating_uncertainty; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_dating_uncertainty (
    dating_uncertainty_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    description text,
    uncertainty character varying
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 533 (class 1259 OID 18335)
-- Name: view_dating_uncertainty; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_dating_uncertainty AS
 SELECT tbl_dating_uncertainty.submission_id,
    tbl_dating_uncertainty.source_id,
    tbl_dating_uncertainty.local_db_id AS merged_db_id,
    tbl_dating_uncertainty.local_db_id,
    tbl_dating_uncertainty.public_db_id,
    tbl_dating_uncertainty.dating_uncertainty_id,
    tbl_dating_uncertainty.date_updated,
    tbl_dating_uncertainty.description,
    tbl_dating_uncertainty.uncertainty
   FROM tbl_dating_uncertainty
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_dating_uncertainty.dating_uncertainty_id AS merged_db_id,
    0 AS local_db_id,
    tbl_dating_uncertainty.dating_uncertainty_id AS public_db_id,
    tbl_dating_uncertainty.dating_uncertainty_id,
    tbl_dating_uncertainty.date_updated,
    tbl_dating_uncertainty.description,
    tbl_dating_uncertainty.uncertainty
   FROM public.tbl_dating_uncertainty;


SET search_path = public, pg_catalog;

--
-- TOC entry 534 (class 1259 OID 18339)
-- Name: tbl_dendro; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_dendro (
    dendro_id integer NOT NULL,
    analysis_entity_id integer NOT NULL,
    dendro_measurement_id integer NOT NULL,
    measurement_value character varying NOT NULL,
    date_updated timestamp with time zone DEFAULT now()
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 535 (class 1259 OID 18346)
-- Name: view_dendro; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_dendro AS
 SELECT tbl_dendro.submission_id,
    tbl_dendro.source_id,
    tbl_dendro.local_db_id AS merged_db_id,
    tbl_dendro.local_db_id,
    tbl_dendro.public_db_id,
    tbl_dendro.dendro_id,
    tbl_dendro.analysis_entity_id,
    tbl_dendro.dendro_measurement_id,
    tbl_dendro.measurement_value,
    tbl_dendro.date_updated
   FROM tbl_dendro
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_dendro.dendro_id AS merged_db_id,
    0 AS local_db_id,
    tbl_dendro.dendro_id AS public_db_id,
    tbl_dendro.dendro_id,
    tbl_dendro.analysis_entity_id,
    tbl_dendro.dendro_measurement_id,
    tbl_dendro.measurement_value,
    tbl_dendro.date_updated
   FROM public.tbl_dendro;


SET search_path = public, pg_catalog;

--
-- TOC entry 536 (class 1259 OID 18351)
-- Name: tbl_dendro_date_notes; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_dendro_date_notes (
    dendro_date_note_id integer NOT NULL,
    dendro_date_id integer NOT NULL,
    note text,
    date_updated timestamp with time zone DEFAULT now()
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 537 (class 1259 OID 18358)
-- Name: view_dendro_date_notes; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_dendro_date_notes AS
 SELECT tbl_dendro_date_notes.submission_id,
    tbl_dendro_date_notes.source_id,
    tbl_dendro_date_notes.local_db_id AS merged_db_id,
    tbl_dendro_date_notes.local_db_id,
    tbl_dendro_date_notes.public_db_id,
    tbl_dendro_date_notes.dendro_date_note_id,
    tbl_dendro_date_notes.dendro_date_id,
    tbl_dendro_date_notes.note,
    tbl_dendro_date_notes.date_updated
   FROM tbl_dendro_date_notes
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_dendro_date_notes.dendro_date_note_id AS merged_db_id,
    0 AS local_db_id,
    tbl_dendro_date_notes.dendro_date_note_id AS public_db_id,
    tbl_dendro_date_notes.dendro_date_note_id,
    tbl_dendro_date_notes.dendro_date_id,
    tbl_dendro_date_notes.note,
    tbl_dendro_date_notes.date_updated
   FROM public.tbl_dendro_date_notes;


SET search_path = public, pg_catalog;

--
-- TOC entry 538 (class 1259 OID 18362)
-- Name: tbl_dendro_dates; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_dendro_dates (
    dendro_date_id integer NOT NULL,
    analysis_entity_id integer NOT NULL,
    cal_age_younger integer,
    dating_uncertainty_id integer,
    years_type_id integer,
    error integer,
    season_or_qualifier_id integer,
    date_updated timestamp with time zone DEFAULT now(),
    cal_age_older integer
);


--
-- TOC entry 7072 (class 0 OID 0)
-- Dependencies: 538
-- Name: TABLE tbl_dendro_dates; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE tbl_dendro_dates IS '20130722PIB: Added field dating_uncertainty_id to cater for >< etc.
20130722PIB: prefixed fieldnames age_younger and age_older with "cal_" to conform with equivalent names in other tables';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 539 (class 1259 OID 18366)
-- Name: view_dendro_dates; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_dendro_dates AS
 SELECT tbl_dendro_dates.submission_id,
    tbl_dendro_dates.source_id,
    tbl_dendro_dates.local_db_id AS merged_db_id,
    tbl_dendro_dates.local_db_id,
    tbl_dendro_dates.public_db_id,
    tbl_dendro_dates.dendro_date_id,
    tbl_dendro_dates.analysis_entity_id,
    tbl_dendro_dates.cal_age_younger,
    tbl_dendro_dates.dating_uncertainty_id,
    tbl_dendro_dates.years_type_id,
    tbl_dendro_dates.error,
    tbl_dendro_dates.season_or_qualifier_id,
    tbl_dendro_dates.date_updated,
    tbl_dendro_dates.cal_age_older
   FROM tbl_dendro_dates
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_dendro_dates.dendro_date_id AS merged_db_id,
    0 AS local_db_id,
    tbl_dendro_dates.dendro_date_id AS public_db_id,
    tbl_dendro_dates.dendro_date_id,
    tbl_dendro_dates.analysis_entity_id,
    tbl_dendro_dates.cal_age_younger,
    tbl_dendro_dates.dating_uncertainty_id,
    tbl_dendro_dates.years_type_id,
    tbl_dendro_dates.error,
    tbl_dendro_dates.season_or_qualifier_id,
    tbl_dendro_dates.date_updated,
    tbl_dendro_dates.cal_age_older
   FROM public.tbl_dendro_dates;


SET search_path = public, pg_catalog;

--
-- TOC entry 540 (class 1259 OID 18371)
-- Name: tbl_dendro_measurement_lookup; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_dendro_measurement_lookup (
    dendro_measurement_lookup_id integer NOT NULL,
    dendro_measurement_id integer NOT NULL,
    value character varying NOT NULL,
    date_updated timestamp with time zone DEFAULT now()
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 541 (class 1259 OID 18378)
-- Name: view_dendro_measurement_lookup; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_dendro_measurement_lookup AS
 SELECT tbl_dendro_measurement_lookup.submission_id,
    tbl_dendro_measurement_lookup.source_id,
    tbl_dendro_measurement_lookup.local_db_id AS merged_db_id,
    tbl_dendro_measurement_lookup.local_db_id,
    tbl_dendro_measurement_lookup.public_db_id,
    tbl_dendro_measurement_lookup.dendro_measurement_lookup_id,
    tbl_dendro_measurement_lookup.dendro_measurement_id,
    tbl_dendro_measurement_lookup.value,
    tbl_dendro_measurement_lookup.date_updated
   FROM tbl_dendro_measurement_lookup
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_dendro_measurement_lookup.dendro_measurement_lookup_id AS merged_db_id,
    0 AS local_db_id,
    tbl_dendro_measurement_lookup.dendro_measurement_lookup_id AS public_db_id,
    tbl_dendro_measurement_lookup.dendro_measurement_lookup_id,
    tbl_dendro_measurement_lookup.dendro_measurement_id,
    tbl_dendro_measurement_lookup.value,
    tbl_dendro_measurement_lookup.date_updated
   FROM public.tbl_dendro_measurement_lookup;


SET search_path = public, pg_catalog;

--
-- TOC entry 542 (class 1259 OID 18382)
-- Name: tbl_dendro_measurements; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_dendro_measurements (
    dendro_measurement_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    method_id integer
);


--
-- TOC entry 7073 (class 0 OID 0)
-- Dependencies: 542
-- Name: TABLE tbl_dendro_measurements; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE tbl_dendro_measurements IS 'Type=lookup';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 543 (class 1259 OID 18386)
-- Name: view_dendro_measurements; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_dendro_measurements AS
 SELECT tbl_dendro_measurements.submission_id,
    tbl_dendro_measurements.source_id,
    tbl_dendro_measurements.local_db_id AS merged_db_id,
    tbl_dendro_measurements.local_db_id,
    tbl_dendro_measurements.public_db_id,
    tbl_dendro_measurements.dendro_measurement_id,
    tbl_dendro_measurements.date_updated,
    tbl_dendro_measurements.method_id
   FROM tbl_dendro_measurements
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_dendro_measurements.dendro_measurement_id AS merged_db_id,
    0 AS local_db_id,
    tbl_dendro_measurements.dendro_measurement_id AS public_db_id,
    tbl_dendro_measurements.dendro_measurement_id,
    tbl_dendro_measurements.date_updated,
    tbl_dendro_measurements.method_id
   FROM public.tbl_dendro_measurements;


SET search_path = public, pg_catalog;

--
-- TOC entry 544 (class 1259 OID 18390)
-- Name: tbl_ecocode_definitions; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_ecocode_definitions (
    ecocode_definition_id integer NOT NULL,
    abbreviation character varying(10) DEFAULT NULL::character varying,
    date_updated timestamp with time zone DEFAULT now(),
    definition text,
    ecocode_group_id integer DEFAULT 0,
    label character varying(150) DEFAULT NULL::character varying,
    notes text,
    sort_order smallint DEFAULT 0
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 545 (class 1259 OID 18401)
-- Name: view_ecocode_definitions; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_ecocode_definitions AS
 SELECT tbl_ecocode_definitions.submission_id,
    tbl_ecocode_definitions.source_id,
    tbl_ecocode_definitions.local_db_id AS merged_db_id,
    tbl_ecocode_definitions.local_db_id,
    tbl_ecocode_definitions.public_db_id,
    tbl_ecocode_definitions.ecocode_definition_id,
    tbl_ecocode_definitions.abbreviation,
    tbl_ecocode_definitions.date_updated,
    tbl_ecocode_definitions.definition,
    tbl_ecocode_definitions.ecocode_group_id,
    tbl_ecocode_definitions.label,
    tbl_ecocode_definitions.notes,
    tbl_ecocode_definitions.sort_order
   FROM tbl_ecocode_definitions
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_ecocode_definitions.ecocode_definition_id AS merged_db_id,
    0 AS local_db_id,
    tbl_ecocode_definitions.ecocode_definition_id AS public_db_id,
    tbl_ecocode_definitions.ecocode_definition_id,
    tbl_ecocode_definitions.abbreviation,
    tbl_ecocode_definitions.date_updated,
    tbl_ecocode_definitions.definition,
    tbl_ecocode_definitions.ecocode_group_id,
    tbl_ecocode_definitions.label,
    tbl_ecocode_definitions.notes,
    tbl_ecocode_definitions.sort_order
   FROM public.tbl_ecocode_definitions;


SET search_path = public, pg_catalog;

--
-- TOC entry 546 (class 1259 OID 18406)
-- Name: tbl_ecocode_groups; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_ecocode_groups (
    ecocode_group_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    definition text DEFAULT NULL::character varying,
    ecocode_system_id integer DEFAULT 0,
    label character varying(150) DEFAULT NULL::character varying
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 547 (class 1259 OID 18416)
-- Name: view_ecocode_groups; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_ecocode_groups AS
 SELECT tbl_ecocode_groups.submission_id,
    tbl_ecocode_groups.source_id,
    tbl_ecocode_groups.local_db_id AS merged_db_id,
    tbl_ecocode_groups.local_db_id,
    tbl_ecocode_groups.public_db_id,
    tbl_ecocode_groups.ecocode_group_id,
    tbl_ecocode_groups.date_updated,
    tbl_ecocode_groups.definition,
    tbl_ecocode_groups.ecocode_system_id,
    tbl_ecocode_groups.label
   FROM tbl_ecocode_groups
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_ecocode_groups.ecocode_group_id AS merged_db_id,
    0 AS local_db_id,
    tbl_ecocode_groups.ecocode_group_id AS public_db_id,
    tbl_ecocode_groups.ecocode_group_id,
    tbl_ecocode_groups.date_updated,
    tbl_ecocode_groups.definition,
    tbl_ecocode_groups.ecocode_system_id,
    tbl_ecocode_groups.label
   FROM public.tbl_ecocode_groups;


SET search_path = public, pg_catalog;

--
-- TOC entry 548 (class 1259 OID 18421)
-- Name: tbl_ecocode_systems; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_ecocode_systems (
    ecocode_system_id integer NOT NULL,
    biblio_id integer,
    date_updated timestamp with time zone DEFAULT now(),
    definition text DEFAULT NULL::character varying,
    name character varying(50) DEFAULT NULL::character varying,
    notes text
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 549 (class 1259 OID 18430)
-- Name: view_ecocode_systems; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_ecocode_systems AS
 SELECT tbl_ecocode_systems.submission_id,
    tbl_ecocode_systems.source_id,
    tbl_ecocode_systems.local_db_id AS merged_db_id,
    tbl_ecocode_systems.local_db_id,
    tbl_ecocode_systems.public_db_id,
    tbl_ecocode_systems.ecocode_system_id,
    tbl_ecocode_systems.biblio_id,
    tbl_ecocode_systems.date_updated,
    tbl_ecocode_systems.definition,
    tbl_ecocode_systems.name,
    tbl_ecocode_systems.notes
   FROM tbl_ecocode_systems
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_ecocode_systems.ecocode_system_id AS merged_db_id,
    0 AS local_db_id,
    tbl_ecocode_systems.ecocode_system_id AS public_db_id,
    tbl_ecocode_systems.ecocode_system_id,
    tbl_ecocode_systems.biblio_id,
    tbl_ecocode_systems.date_updated,
    tbl_ecocode_systems.definition,
    tbl_ecocode_systems.name,
    tbl_ecocode_systems.notes
   FROM public.tbl_ecocode_systems;


SET search_path = public, pg_catalog;

--
-- TOC entry 550 (class 1259 OID 18435)
-- Name: tbl_ecocodes; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_ecocodes (
    ecocode_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    ecocode_definition_id integer DEFAULT 0,
    taxon_id integer DEFAULT 0
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 551 (class 1259 OID 18441)
-- Name: view_ecocodes; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_ecocodes AS
 SELECT tbl_ecocodes.submission_id,
    tbl_ecocodes.source_id,
    tbl_ecocodes.local_db_id AS merged_db_id,
    tbl_ecocodes.local_db_id,
    tbl_ecocodes.public_db_id,
    tbl_ecocodes.ecocode_id,
    tbl_ecocodes.date_updated,
    tbl_ecocodes.ecocode_definition_id,
    tbl_ecocodes.taxon_id
   FROM tbl_ecocodes
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_ecocodes.ecocode_id AS merged_db_id,
    0 AS local_db_id,
    tbl_ecocodes.ecocode_id AS public_db_id,
    tbl_ecocodes.ecocode_id,
    tbl_ecocodes.date_updated,
    tbl_ecocodes.ecocode_definition_id,
    tbl_ecocodes.taxon_id
   FROM public.tbl_ecocodes;


SET search_path = public, pg_catalog;

--
-- TOC entry 552 (class 1259 OID 18445)
-- Name: tbl_feature_types; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_feature_types (
    feature_type_id integer NOT NULL,
    feature_type_name character varying(128),
    feature_type_description text,
    date_updated timestamp with time zone DEFAULT now()
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 553 (class 1259 OID 18452)
-- Name: view_feature_types; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_feature_types AS
 SELECT tbl_feature_types.submission_id,
    tbl_feature_types.source_id,
    tbl_feature_types.local_db_id AS merged_db_id,
    tbl_feature_types.local_db_id,
    tbl_feature_types.public_db_id,
    tbl_feature_types.feature_type_id,
    tbl_feature_types.feature_type_name,
    tbl_feature_types.feature_type_description,
    tbl_feature_types.date_updated
   FROM tbl_feature_types
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_feature_types.feature_type_id AS merged_db_id,
    0 AS local_db_id,
    tbl_feature_types.feature_type_id AS public_db_id,
    tbl_feature_types.feature_type_id,
    tbl_feature_types.feature_type_name,
    tbl_feature_types.feature_type_description,
    tbl_feature_types.date_updated
   FROM public.tbl_feature_types;


SET search_path = public, pg_catalog;

--
-- TOC entry 554 (class 1259 OID 18456)
-- Name: tbl_features; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_features (
    feature_id integer NOT NULL,
    feature_type_id integer NOT NULL,
    feature_name character varying,
    feature_description text,
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 7074 (class 0 OID 0)
-- Dependencies: 554
-- Name: COLUMN tbl_features.feature_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_features.feature_name IS 'estabilished reference name/number for the feature (note: not the sample). e.g. well 47, anl.3, c107.
remember that a sample can come from multiple features (e.g. c107 in well 47) but each feature should have a separate record.';


--
-- TOC entry 7075 (class 0 OID 0)
-- Dependencies: 554
-- Name: COLUMN tbl_features.feature_description; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_features.feature_description IS 'description of the feature. may include any field notes, lab notes or interpretation information useful for interpreting the sample data.';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 555 (class 1259 OID 18463)
-- Name: view_features; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_features AS
 SELECT tbl_features.submission_id,
    tbl_features.source_id,
    tbl_features.local_db_id AS merged_db_id,
    tbl_features.local_db_id,
    tbl_features.public_db_id,
    tbl_features.feature_id,
    tbl_features.feature_type_id,
    tbl_features.feature_name,
    tbl_features.feature_description,
    tbl_features.date_updated
   FROM tbl_features
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_features.feature_id AS merged_db_id,
    0 AS local_db_id,
    tbl_features.feature_id AS public_db_id,
    tbl_features.feature_id,
    tbl_features.feature_type_id,
    tbl_features.feature_name,
    tbl_features.feature_description,
    tbl_features.date_updated
   FROM public.tbl_features;


SET search_path = public, pg_catalog;

--
-- TOC entry 556 (class 1259 OID 18468)
-- Name: tbl_geochron_refs; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_geochron_refs (
    geochron_ref_id integer NOT NULL,
    geochron_id integer NOT NULL,
    biblio_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 7076 (class 0 OID 0)
-- Dependencies: 556
-- Name: COLUMN tbl_geochron_refs.biblio_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_geochron_refs.biblio_id IS 'reference for specific date';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 557 (class 1259 OID 18472)
-- Name: view_geochron_refs; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_geochron_refs AS
 SELECT tbl_geochron_refs.submission_id,
    tbl_geochron_refs.source_id,
    tbl_geochron_refs.local_db_id AS merged_db_id,
    tbl_geochron_refs.local_db_id,
    tbl_geochron_refs.public_db_id,
    tbl_geochron_refs.geochron_ref_id,
    tbl_geochron_refs.geochron_id,
    tbl_geochron_refs.biblio_id,
    tbl_geochron_refs.date_updated
   FROM tbl_geochron_refs
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_geochron_refs.geochron_ref_id AS merged_db_id,
    0 AS local_db_id,
    tbl_geochron_refs.geochron_ref_id AS public_db_id,
    tbl_geochron_refs.geochron_ref_id,
    tbl_geochron_refs.geochron_id,
    tbl_geochron_refs.biblio_id,
    tbl_geochron_refs.date_updated
   FROM public.tbl_geochron_refs;


SET search_path = public, pg_catalog;

--
-- TOC entry 558 (class 1259 OID 18476)
-- Name: tbl_geochronology; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_geochronology (
    geochron_id integer NOT NULL,
    analysis_entity_id integer NOT NULL,
    dating_lab_id integer,
    lab_number character varying(40),
    age numeric(20,5),
    error_older numeric(20,5),
    error_younger numeric(20,5),
    delta_13c numeric(10,5),
    notes text,
    date_updated timestamp with time zone DEFAULT now(),
    dating_uncertainty_id integer
);


--
-- TOC entry 7077 (class 0 OID 0)
-- Dependencies: 558
-- Name: TABLE tbl_geochronology; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE tbl_geochronology IS '20130722PIB: Altered field uncertainty (varchar) to dating_uncertainty_id and linked to tbl_dating_uncertainty to enable lookup of uncertainty modifiers for dates';


--
-- TOC entry 7078 (class 0 OID 0)
-- Dependencies: 558
-- Name: COLUMN tbl_geochronology.age; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_geochronology.age IS 'radiocarbon (or other radiometric) age.';


--
-- TOC entry 7079 (class 0 OID 0)
-- Dependencies: 558
-- Name: COLUMN tbl_geochronology.error_older; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_geochronology.error_older IS 'plus (+) side of the measured error (set same as error_younger if standard +/- error)';


--
-- TOC entry 7080 (class 0 OID 0)
-- Dependencies: 558
-- Name: COLUMN tbl_geochronology.error_younger; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_geochronology.error_younger IS 'minus (-) side of the measured error (set same as error_younger if standard +/- error)';


--
-- TOC entry 7081 (class 0 OID 0)
-- Dependencies: 558
-- Name: COLUMN tbl_geochronology.delta_13c; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_geochronology.delta_13c IS 'delta 13c where available for calibration correction.';


--
-- TOC entry 7082 (class 0 OID 0)
-- Dependencies: 558
-- Name: COLUMN tbl_geochronology.notes; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_geochronology.notes IS 'notes specific to this date';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 559 (class 1259 OID 18483)
-- Name: view_geochronology; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_geochronology AS
 SELECT tbl_geochronology.submission_id,
    tbl_geochronology.source_id,
    tbl_geochronology.local_db_id AS merged_db_id,
    tbl_geochronology.local_db_id,
    tbl_geochronology.public_db_id,
    tbl_geochronology.geochron_id,
    tbl_geochronology.analysis_entity_id,
    tbl_geochronology.dating_lab_id,
    tbl_geochronology.lab_number,
    tbl_geochronology.age,
    tbl_geochronology.error_older,
    tbl_geochronology.error_younger,
    tbl_geochronology.delta_13c,
    tbl_geochronology.notes,
    tbl_geochronology.date_updated,
    tbl_geochronology.dating_uncertainty_id
   FROM tbl_geochronology
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_geochronology.geochron_id AS merged_db_id,
    0 AS local_db_id,
    tbl_geochronology.geochron_id AS public_db_id,
    tbl_geochronology.geochron_id,
    tbl_geochronology.analysis_entity_id,
    tbl_geochronology.dating_lab_id,
    tbl_geochronology.lab_number,
    tbl_geochronology.age,
    tbl_geochronology.error_older,
    tbl_geochronology.error_younger,
    tbl_geochronology.delta_13c,
    tbl_geochronology.notes,
    tbl_geochronology.date_updated,
    tbl_geochronology.dating_uncertainty_id
   FROM public.tbl_geochronology;


SET search_path = public, pg_catalog;

--
-- TOC entry 560 (class 1259 OID 18488)
-- Name: tbl_horizons; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_horizons (
    horizon_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    description text,
    horizon_name character varying(15) NOT NULL,
    method_id integer NOT NULL
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 561 (class 1259 OID 18495)
-- Name: view_horizons; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_horizons AS
 SELECT tbl_horizons.submission_id,
    tbl_horizons.source_id,
    tbl_horizons.local_db_id AS merged_db_id,
    tbl_horizons.local_db_id,
    tbl_horizons.public_db_id,
    tbl_horizons.horizon_id,
    tbl_horizons.date_updated,
    tbl_horizons.description,
    tbl_horizons.horizon_name,
    tbl_horizons.method_id
   FROM tbl_horizons
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_horizons.horizon_id AS merged_db_id,
    0 AS local_db_id,
    tbl_horizons.horizon_id AS public_db_id,
    tbl_horizons.horizon_id,
    tbl_horizons.date_updated,
    tbl_horizons.description,
    tbl_horizons.horizon_name,
    tbl_horizons.method_id
   FROM public.tbl_horizons;


SET search_path = public, pg_catalog;

--
-- TOC entry 562 (class 1259 OID 18500)
-- Name: tbl_image_types; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_image_types (
    image_type_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    description text,
    image_type character varying(40) NOT NULL
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 563 (class 1259 OID 18507)
-- Name: view_image_types; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_image_types AS
 SELECT tbl_image_types.submission_id,
    tbl_image_types.source_id,
    tbl_image_types.local_db_id AS merged_db_id,
    tbl_image_types.local_db_id,
    tbl_image_types.public_db_id,
    tbl_image_types.image_type_id,
    tbl_image_types.date_updated,
    tbl_image_types.description,
    tbl_image_types.image_type
   FROM tbl_image_types
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_image_types.image_type_id AS merged_db_id,
    0 AS local_db_id,
    tbl_image_types.image_type_id AS public_db_id,
    tbl_image_types.image_type_id,
    tbl_image_types.date_updated,
    tbl_image_types.description,
    tbl_image_types.image_type
   FROM public.tbl_image_types;


SET search_path = public, pg_catalog;

--
-- TOC entry 564 (class 1259 OID 18511)
-- Name: tbl_imported_taxa_replacements; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_imported_taxa_replacements (
    imported_taxa_replacement_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    imported_name_replaced character varying(100) NOT NULL,
    taxon_id integer NOT NULL
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 565 (class 1259 OID 18515)
-- Name: view_imported_taxa_replacements; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_imported_taxa_replacements AS
 SELECT tbl_imported_taxa_replacements.submission_id,
    tbl_imported_taxa_replacements.source_id,
    tbl_imported_taxa_replacements.local_db_id AS merged_db_id,
    tbl_imported_taxa_replacements.local_db_id,
    tbl_imported_taxa_replacements.public_db_id,
    tbl_imported_taxa_replacements.imported_taxa_replacement_id,
    tbl_imported_taxa_replacements.date_updated,
    tbl_imported_taxa_replacements.imported_name_replaced,
    tbl_imported_taxa_replacements.taxon_id
   FROM tbl_imported_taxa_replacements
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_imported_taxa_replacements.imported_taxa_replacement_id AS merged_db_id,
    0 AS local_db_id,
    tbl_imported_taxa_replacements.imported_taxa_replacement_id AS public_db_id,
    tbl_imported_taxa_replacements.imported_taxa_replacement_id,
    tbl_imported_taxa_replacements.date_updated,
    tbl_imported_taxa_replacements.imported_name_replaced,
    tbl_imported_taxa_replacements.taxon_id
   FROM public.tbl_imported_taxa_replacements;


SET search_path = public, pg_catalog;

--
-- TOC entry 566 (class 1259 OID 18519)
-- Name: tbl_keywords; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_keywords (
    keyword_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    definition text,
    keyword character varying
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 567 (class 1259 OID 18526)
-- Name: view_keywords; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_keywords AS
 SELECT tbl_keywords.submission_id,
    tbl_keywords.source_id,
    tbl_keywords.local_db_id AS merged_db_id,
    tbl_keywords.local_db_id,
    tbl_keywords.public_db_id,
    tbl_keywords.keyword_id,
    tbl_keywords.date_updated,
    tbl_keywords.definition,
    tbl_keywords.keyword
   FROM tbl_keywords
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_keywords.keyword_id AS merged_db_id,
    0 AS local_db_id,
    tbl_keywords.keyword_id AS public_db_id,
    tbl_keywords.keyword_id,
    tbl_keywords.date_updated,
    tbl_keywords.definition,
    tbl_keywords.keyword
   FROM public.tbl_keywords;


SET search_path = public, pg_catalog;

--
-- TOC entry 568 (class 1259 OID 18530)
-- Name: tbl_languages; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_languages (
    language_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    language_name_english character varying(100) DEFAULT NULL::character varying,
    language_name_native character varying(100) DEFAULT NULL::character varying
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 569 (class 1259 OID 18536)
-- Name: view_languages; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_languages AS
 SELECT tbl_languages.submission_id,
    tbl_languages.source_id,
    tbl_languages.local_db_id AS merged_db_id,
    tbl_languages.local_db_id,
    tbl_languages.public_db_id,
    tbl_languages.language_id,
    tbl_languages.date_updated,
    tbl_languages.language_name_english,
    tbl_languages.language_name_native
   FROM tbl_languages
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_languages.language_id AS merged_db_id,
    0 AS local_db_id,
    tbl_languages.language_id AS public_db_id,
    tbl_languages.language_id,
    tbl_languages.date_updated,
    tbl_languages.language_name_english,
    tbl_languages.language_name_native
   FROM public.tbl_languages;


SET search_path = public, pg_catalog;

--
-- TOC entry 570 (class 1259 OID 18540)
-- Name: tbl_lithology; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_lithology (
    lithology_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    depth_bottom numeric(20,5),
    depth_top numeric(20,5) NOT NULL,
    description text NOT NULL,
    lower_boundary character varying(255),
    sample_group_id integer NOT NULL
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 571 (class 1259 OID 18547)
-- Name: view_lithology; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_lithology AS
 SELECT tbl_lithology.submission_id,
    tbl_lithology.source_id,
    tbl_lithology.local_db_id AS merged_db_id,
    tbl_lithology.local_db_id,
    tbl_lithology.public_db_id,
    tbl_lithology.lithology_id,
    tbl_lithology.date_updated,
    tbl_lithology.depth_bottom,
    tbl_lithology.depth_top,
    tbl_lithology.description,
    tbl_lithology.lower_boundary,
    tbl_lithology.sample_group_id
   FROM tbl_lithology
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_lithology.lithology_id AS merged_db_id,
    0 AS local_db_id,
    tbl_lithology.lithology_id AS public_db_id,
    tbl_lithology.lithology_id,
    tbl_lithology.date_updated,
    tbl_lithology.depth_bottom,
    tbl_lithology.depth_top,
    tbl_lithology.description,
    tbl_lithology.lower_boundary,
    tbl_lithology.sample_group_id
   FROM public.tbl_lithology;


SET search_path = public, pg_catalog;

--
-- TOC entry 572 (class 1259 OID 18552)
-- Name: tbl_location_types; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_location_types (
    location_type_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    description text,
    location_type character varying(40)
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 573 (class 1259 OID 18559)
-- Name: view_location_types; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_location_types AS
 SELECT tbl_location_types.submission_id,
    tbl_location_types.source_id,
    tbl_location_types.local_db_id AS merged_db_id,
    tbl_location_types.local_db_id,
    tbl_location_types.public_db_id,
    tbl_location_types.location_type_id,
    tbl_location_types.date_updated,
    tbl_location_types.description,
    tbl_location_types.location_type
   FROM tbl_location_types
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_location_types.location_type_id AS merged_db_id,
    0 AS local_db_id,
    tbl_location_types.location_type_id AS public_db_id,
    tbl_location_types.location_type_id,
    tbl_location_types.date_updated,
    tbl_location_types.description,
    tbl_location_types.location_type
   FROM public.tbl_location_types;


SET search_path = public, pg_catalog;

--
-- TOC entry 574 (class 1259 OID 18563)
-- Name: tbl_locations; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_locations (
    location_id integer NOT NULL,
    location_name character varying(255) NOT NULL,
    location_type_id integer NOT NULL,
    default_lat_dd numeric(18,10),
    default_long_dd numeric(18,10),
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 7083 (class 0 OID 0)
-- Dependencies: 574
-- Name: COLUMN tbl_locations.default_lat_dd; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_locations.default_lat_dd IS 'default latitude in decimal degrees for location, e.g. mid point of country. leave empty if not known.';


--
-- TOC entry 7084 (class 0 OID 0)
-- Dependencies: 574
-- Name: COLUMN tbl_locations.default_long_dd; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_locations.default_long_dd IS 'default longitude in decimal degrees for location, e.g. mid point of country';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 575 (class 1259 OID 18567)
-- Name: view_locations; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_locations AS
 SELECT tbl_locations.submission_id,
    tbl_locations.source_id,
    tbl_locations.local_db_id AS merged_db_id,
    tbl_locations.local_db_id,
    tbl_locations.public_db_id,
    tbl_locations.location_id,
    tbl_locations.location_name,
    tbl_locations.location_type_id,
    tbl_locations.default_lat_dd,
    tbl_locations.default_long_dd,
    tbl_locations.date_updated
   FROM tbl_locations
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_locations.location_id AS merged_db_id,
    0 AS local_db_id,
    tbl_locations.location_id AS public_db_id,
    tbl_locations.location_id,
    tbl_locations.location_name,
    tbl_locations.location_type_id,
    tbl_locations.default_lat_dd,
    tbl_locations.default_long_dd,
    tbl_locations.date_updated
   FROM public.tbl_locations;


SET search_path = public, pg_catalog;

--
-- TOC entry 576 (class 1259 OID 18572)
-- Name: tbl_mcr_names; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_mcr_names (
    taxon_id integer NOT NULL,
    comparison_notes character varying(255) DEFAULT NULL::character varying,
    date_updated timestamp with time zone DEFAULT now(),
    mcr_name_trim character varying(80) DEFAULT NULL::character varying,
    mcr_number smallint DEFAULT 0,
    mcr_species_name character varying(200) DEFAULT NULL::character varying
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 577 (class 1259 OID 18583)
-- Name: view_mcr_names; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_mcr_names AS
 SELECT tbl_mcr_names.submission_id,
    tbl_mcr_names.source_id,
    tbl_mcr_names.local_db_id AS merged_db_id,
    tbl_mcr_names.local_db_id,
    tbl_mcr_names.public_db_id,
    tbl_mcr_names.taxon_id,
    tbl_mcr_names.comparison_notes,
    tbl_mcr_names.date_updated,
    tbl_mcr_names.mcr_name_trim,
    tbl_mcr_names.mcr_number,
    tbl_mcr_names.mcr_species_name
   FROM tbl_mcr_names
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_mcr_names.taxon_id AS merged_db_id,
    0 AS local_db_id,
    tbl_mcr_names.taxon_id AS public_db_id,
    tbl_mcr_names.taxon_id,
    tbl_mcr_names.comparison_notes,
    tbl_mcr_names.date_updated,
    tbl_mcr_names.mcr_name_trim,
    tbl_mcr_names.mcr_number,
    tbl_mcr_names.mcr_species_name
   FROM public.tbl_mcr_names;


SET search_path = public, pg_catalog;

--
-- TOC entry 578 (class 1259 OID 18588)
-- Name: tbl_mcr_summary_data; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_mcr_summary_data (
    mcr_summary_data_id integer NOT NULL,
    cog_mid_tmax smallint DEFAULT 0,
    cog_mid_trange smallint DEFAULT 0,
    date_updated timestamp with time zone DEFAULT now(),
    taxon_id integer NOT NULL,
    tmax_hi smallint DEFAULT 0,
    tmax_lo smallint DEFAULT 0,
    tmin_hi smallint DEFAULT 0,
    tmin_lo smallint DEFAULT 0,
    trange_hi smallint DEFAULT 0,
    trange_lo smallint DEFAULT 0
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 579 (class 1259 OID 18600)
-- Name: view_mcr_summary_data; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_mcr_summary_data AS
 SELECT tbl_mcr_summary_data.submission_id,
    tbl_mcr_summary_data.source_id,
    tbl_mcr_summary_data.local_db_id AS merged_db_id,
    tbl_mcr_summary_data.local_db_id,
    tbl_mcr_summary_data.public_db_id,
    tbl_mcr_summary_data.mcr_summary_data_id,
    tbl_mcr_summary_data.cog_mid_tmax,
    tbl_mcr_summary_data.cog_mid_trange,
    tbl_mcr_summary_data.date_updated,
    tbl_mcr_summary_data.taxon_id,
    tbl_mcr_summary_data.tmax_hi,
    tbl_mcr_summary_data.tmax_lo,
    tbl_mcr_summary_data.tmin_hi,
    tbl_mcr_summary_data.tmin_lo,
    tbl_mcr_summary_data.trange_hi,
    tbl_mcr_summary_data.trange_lo
   FROM tbl_mcr_summary_data
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_mcr_summary_data.mcr_summary_data_id AS merged_db_id,
    0 AS local_db_id,
    tbl_mcr_summary_data.mcr_summary_data_id AS public_db_id,
    tbl_mcr_summary_data.mcr_summary_data_id,
    tbl_mcr_summary_data.cog_mid_tmax,
    tbl_mcr_summary_data.cog_mid_trange,
    tbl_mcr_summary_data.date_updated,
    tbl_mcr_summary_data.taxon_id,
    tbl_mcr_summary_data.tmax_hi,
    tbl_mcr_summary_data.tmax_lo,
    tbl_mcr_summary_data.tmin_hi,
    tbl_mcr_summary_data.tmin_lo,
    tbl_mcr_summary_data.trange_hi,
    tbl_mcr_summary_data.trange_lo
   FROM public.tbl_mcr_summary_data;


SET search_path = public, pg_catalog;

--
-- TOC entry 580 (class 1259 OID 18605)
-- Name: tbl_mcrdata_birmbeetledat; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_mcrdata_birmbeetledat (
    mcrdata_birmbeetledat_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    mcr_data text,
    mcr_row smallint NOT NULL,
    taxon_id integer NOT NULL
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 581 (class 1259 OID 18612)
-- Name: view_mcrdata_birmbeetledat; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_mcrdata_birmbeetledat AS
 SELECT tbl_mcrdata_birmbeetledat.submission_id,
    tbl_mcrdata_birmbeetledat.source_id,
    tbl_mcrdata_birmbeetledat.local_db_id AS merged_db_id,
    tbl_mcrdata_birmbeetledat.local_db_id,
    tbl_mcrdata_birmbeetledat.public_db_id,
    tbl_mcrdata_birmbeetledat.mcrdata_birmbeetledat_id,
    tbl_mcrdata_birmbeetledat.date_updated,
    tbl_mcrdata_birmbeetledat.mcr_data,
    tbl_mcrdata_birmbeetledat.mcr_row,
    tbl_mcrdata_birmbeetledat.taxon_id
   FROM tbl_mcrdata_birmbeetledat
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_mcrdata_birmbeetledat.mcrdata_birmbeetledat_id AS merged_db_id,
    0 AS local_db_id,
    tbl_mcrdata_birmbeetledat.mcrdata_birmbeetledat_id AS public_db_id,
    tbl_mcrdata_birmbeetledat.mcrdata_birmbeetledat_id,
    tbl_mcrdata_birmbeetledat.date_updated,
    tbl_mcrdata_birmbeetledat.mcr_data,
    tbl_mcrdata_birmbeetledat.mcr_row,
    tbl_mcrdata_birmbeetledat.taxon_id
   FROM public.tbl_mcrdata_birmbeetledat;


SET search_path = public, pg_catalog;

--
-- TOC entry 582 (class 1259 OID 18617)
-- Name: tbl_method_groups; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_method_groups (
    method_group_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    description text NOT NULL,
    group_name character varying(100) NOT NULL
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 583 (class 1259 OID 18624)
-- Name: view_method_groups; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_method_groups AS
 SELECT tbl_method_groups.submission_id,
    tbl_method_groups.source_id,
    tbl_method_groups.local_db_id AS merged_db_id,
    tbl_method_groups.local_db_id,
    tbl_method_groups.public_db_id,
    tbl_method_groups.method_group_id,
    tbl_method_groups.date_updated,
    tbl_method_groups.description,
    tbl_method_groups.group_name
   FROM tbl_method_groups
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_method_groups.method_group_id AS merged_db_id,
    0 AS local_db_id,
    tbl_method_groups.method_group_id AS public_db_id,
    tbl_method_groups.method_group_id,
    tbl_method_groups.date_updated,
    tbl_method_groups.description,
    tbl_method_groups.group_name
   FROM public.tbl_method_groups;


SET search_path = public, pg_catalog;

--
-- TOC entry 584 (class 1259 OID 18628)
-- Name: tbl_physical_sample_features; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_physical_sample_features (
    physical_sample_feature_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    feature_id integer NOT NULL,
    physical_sample_id integer NOT NULL
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 585 (class 1259 OID 18632)
-- Name: view_physical_sample_features; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_physical_sample_features AS
 SELECT tbl_physical_sample_features.submission_id,
    tbl_physical_sample_features.source_id,
    tbl_physical_sample_features.local_db_id AS merged_db_id,
    tbl_physical_sample_features.local_db_id,
    tbl_physical_sample_features.public_db_id,
    tbl_physical_sample_features.physical_sample_feature_id,
    tbl_physical_sample_features.date_updated,
    tbl_physical_sample_features.feature_id,
    tbl_physical_sample_features.physical_sample_id
   FROM tbl_physical_sample_features
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_physical_sample_features.physical_sample_feature_id AS merged_db_id,
    0 AS local_db_id,
    tbl_physical_sample_features.physical_sample_feature_id AS public_db_id,
    tbl_physical_sample_features.physical_sample_feature_id,
    tbl_physical_sample_features.date_updated,
    tbl_physical_sample_features.feature_id,
    tbl_physical_sample_features.physical_sample_id
   FROM public.tbl_physical_sample_features;


SET search_path = public, pg_catalog;

--
-- TOC entry 586 (class 1259 OID 18636)
-- Name: tbl_project_stages; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_project_stages (
    project_stage_id integer NOT NULL,
    stage_name character varying,
    description text,
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 7085 (class 0 OID 0)
-- Dependencies: 586
-- Name: COLUMN tbl_project_stages.stage_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_project_stages.stage_name IS 'stage of project in investigative cycle, e.g. desktop study, prospection, final excavation';


--
-- TOC entry 7086 (class 0 OID 0)
-- Dependencies: 586
-- Name: COLUMN tbl_project_stages.description; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_project_stages.description IS 'explanation of stage name term, including details of purpose and general contents';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 587 (class 1259 OID 18643)
-- Name: view_project_stages; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_project_stages AS
 SELECT tbl_project_stages.submission_id,
    tbl_project_stages.source_id,
    tbl_project_stages.local_db_id AS merged_db_id,
    tbl_project_stages.local_db_id,
    tbl_project_stages.public_db_id,
    tbl_project_stages.project_stage_id,
    tbl_project_stages.stage_name,
    tbl_project_stages.description,
    tbl_project_stages.date_updated
   FROM tbl_project_stages
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_project_stages.project_stage_id AS merged_db_id,
    0 AS local_db_id,
    tbl_project_stages.project_stage_id AS public_db_id,
    tbl_project_stages.project_stage_id,
    tbl_project_stages.stage_name,
    tbl_project_stages.description,
    tbl_project_stages.date_updated
   FROM public.tbl_project_stages;


SET search_path = public, pg_catalog;

--
-- TOC entry 588 (class 1259 OID 18647)
-- Name: tbl_project_types; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_project_types (
    project_type_id integer NOT NULL,
    project_type_name character varying,
    description text,
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 7087 (class 0 OID 0)
-- Dependencies: 588
-- Name: COLUMN tbl_project_types.project_type_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_project_types.project_type_name IS 'descriptive name for project type, e.g. consultancy, research, teaching; also combinations consultancy/teaching';


--
-- TOC entry 7088 (class 0 OID 0)
-- Dependencies: 588
-- Name: COLUMN tbl_project_types.description; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_project_types.description IS 'project type combinations can be used where appropriate, e.g. teaching/research';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 589 (class 1259 OID 18654)
-- Name: view_project_types; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_project_types AS
 SELECT tbl_project_types.submission_id,
    tbl_project_types.source_id,
    tbl_project_types.local_db_id AS merged_db_id,
    tbl_project_types.local_db_id,
    tbl_project_types.public_db_id,
    tbl_project_types.project_type_id,
    tbl_project_types.project_type_name,
    tbl_project_types.description,
    tbl_project_types.date_updated
   FROM tbl_project_types
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_project_types.project_type_id AS merged_db_id,
    0 AS local_db_id,
    tbl_project_types.project_type_id AS public_db_id,
    tbl_project_types.project_type_id,
    tbl_project_types.project_type_name,
    tbl_project_types.description,
    tbl_project_types.date_updated
   FROM public.tbl_project_types;


SET search_path = public, pg_catalog;

--
-- TOC entry 590 (class 1259 OID 18658)
-- Name: tbl_projects; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_projects (
    project_id integer NOT NULL,
    project_type_id integer,
    project_stage_id integer,
    project_name character varying(150),
    project_abbrev_name character varying(25),
    description text,
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 7089 (class 0 OID 0)
-- Dependencies: 590
-- Name: COLUMN tbl_projects.project_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_projects.project_name IS 'name of project (e.g. phil''s phd thesis, malmö ringroad vägverket)';


--
-- TOC entry 7090 (class 0 OID 0)
-- Dependencies: 590
-- Name: COLUMN tbl_projects.project_abbrev_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_projects.project_abbrev_name IS 'optional. abbreviation of project name or acronym (e.g. vgv, swedab)';


--
-- TOC entry 7091 (class 0 OID 0)
-- Dependencies: 590
-- Name: COLUMN tbl_projects.description; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_projects.description IS 'brief description of project and any useful information for finding out more.';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 591 (class 1259 OID 18665)
-- Name: view_projects; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_projects AS
 SELECT tbl_projects.submission_id,
    tbl_projects.source_id,
    tbl_projects.local_db_id AS merged_db_id,
    tbl_projects.local_db_id,
    tbl_projects.public_db_id,
    tbl_projects.project_id,
    tbl_projects.project_type_id,
    tbl_projects.project_stage_id,
    tbl_projects.project_name,
    tbl_projects.project_abbrev_name,
    tbl_projects.description,
    tbl_projects.date_updated
   FROM tbl_projects
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_projects.project_id AS merged_db_id,
    0 AS local_db_id,
    tbl_projects.project_id AS public_db_id,
    tbl_projects.project_id,
    tbl_projects.project_type_id,
    tbl_projects.project_stage_id,
    tbl_projects.project_name,
    tbl_projects.project_abbrev_name,
    tbl_projects.description,
    tbl_projects.date_updated
   FROM public.tbl_projects;


SET search_path = public, pg_catalog;

--
-- TOC entry 592 (class 1259 OID 18670)
-- Name: tbl_publication_types; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_publication_types (
    publication_type_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    publication_type character varying(30)
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 593 (class 1259 OID 18674)
-- Name: view_publication_types; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_publication_types AS
 SELECT tbl_publication_types.submission_id,
    tbl_publication_types.source_id,
    tbl_publication_types.local_db_id AS merged_db_id,
    tbl_publication_types.local_db_id,
    tbl_publication_types.public_db_id,
    tbl_publication_types.publication_type_id,
    tbl_publication_types.date_updated,
    tbl_publication_types.publication_type
   FROM tbl_publication_types
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_publication_types.publication_type_id AS merged_db_id,
    0 AS local_db_id,
    tbl_publication_types.publication_type_id AS public_db_id,
    tbl_publication_types.publication_type_id,
    tbl_publication_types.date_updated,
    tbl_publication_types.publication_type
   FROM public.tbl_publication_types;


SET search_path = public, pg_catalog;

--
-- TOC entry 594 (class 1259 OID 18678)
-- Name: tbl_publishers; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_publishers (
    publisher_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    place_of_publishing_house character varying,
    publisher_name character varying(255)
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 595 (class 1259 OID 18685)
-- Name: view_publishers; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_publishers AS
 SELECT tbl_publishers.submission_id,
    tbl_publishers.source_id,
    tbl_publishers.local_db_id AS merged_db_id,
    tbl_publishers.local_db_id,
    tbl_publishers.public_db_id,
    tbl_publishers.publisher_id,
    tbl_publishers.date_updated,
    tbl_publishers.place_of_publishing_house,
    tbl_publishers.publisher_name
   FROM tbl_publishers
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_publishers.publisher_id AS merged_db_id,
    0 AS local_db_id,
    tbl_publishers.publisher_id AS public_db_id,
    tbl_publishers.publisher_id,
    tbl_publishers.date_updated,
    tbl_publishers.place_of_publishing_house,
    tbl_publishers.publisher_name
   FROM public.tbl_publishers;


SET search_path = public, pg_catalog;

--
-- TOC entry 596 (class 1259 OID 18689)
-- Name: tbl_radiocarbon_calibration; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_radiocarbon_calibration (
    radiocarbon_calibration_id integer NOT NULL,
    c14_yr_bp integer NOT NULL,
    cal_yr_bp integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 7092 (class 0 OID 0)
-- Dependencies: 596
-- Name: COLUMN tbl_radiocarbon_calibration.c14_yr_bp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_radiocarbon_calibration.c14_yr_bp IS 'mid-point of c14 age.';


--
-- TOC entry 7093 (class 0 OID 0)
-- Dependencies: 596
-- Name: COLUMN tbl_radiocarbon_calibration.cal_yr_bp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_radiocarbon_calibration.cal_yr_bp IS 'mid-point of calibrated age.';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 597 (class 1259 OID 18693)
-- Name: view_radiocarbon_calibration; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_radiocarbon_calibration AS
 SELECT tbl_radiocarbon_calibration.submission_id,
    tbl_radiocarbon_calibration.source_id,
    tbl_radiocarbon_calibration.local_db_id AS merged_db_id,
    tbl_radiocarbon_calibration.local_db_id,
    tbl_radiocarbon_calibration.public_db_id,
    tbl_radiocarbon_calibration.radiocarbon_calibration_id,
    tbl_radiocarbon_calibration.c14_yr_bp,
    tbl_radiocarbon_calibration.cal_yr_bp,
    tbl_radiocarbon_calibration.date_updated
   FROM tbl_radiocarbon_calibration
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_radiocarbon_calibration.radiocarbon_calibration_id AS merged_db_id,
    0 AS local_db_id,
    tbl_radiocarbon_calibration.radiocarbon_calibration_id AS public_db_id,
    tbl_radiocarbon_calibration.radiocarbon_calibration_id,
    tbl_radiocarbon_calibration.c14_yr_bp,
    tbl_radiocarbon_calibration.cal_yr_bp,
    tbl_radiocarbon_calibration.date_updated
   FROM public.tbl_radiocarbon_calibration;


SET search_path = public, pg_catalog;

--
-- TOC entry 598 (class 1259 OID 18697)
-- Name: tbl_rdb; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_rdb (
    rdb_id integer NOT NULL,
    location_id integer NOT NULL,
    rdb_code_id integer,
    taxon_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 7094 (class 0 OID 0)
-- Dependencies: 598
-- Name: COLUMN tbl_rdb.location_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_rdb.location_id IS 'geographical source/relevance of the specific code. e.g. the international iucn classification of species in the uk.';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 599 (class 1259 OID 18701)
-- Name: view_rdb; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_rdb AS
 SELECT tbl_rdb.submission_id,
    tbl_rdb.source_id,
    tbl_rdb.local_db_id AS merged_db_id,
    tbl_rdb.local_db_id,
    tbl_rdb.public_db_id,
    tbl_rdb.rdb_id,
    tbl_rdb.location_id,
    tbl_rdb.rdb_code_id,
    tbl_rdb.taxon_id,
    tbl_rdb.date_updated
   FROM tbl_rdb
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_rdb.rdb_id AS merged_db_id,
    0 AS local_db_id,
    tbl_rdb.rdb_id AS public_db_id,
    tbl_rdb.rdb_id,
    tbl_rdb.location_id,
    tbl_rdb.rdb_code_id,
    tbl_rdb.taxon_id,
    tbl_rdb.date_updated
   FROM public.tbl_rdb;


SET search_path = public, pg_catalog;

--
-- TOC entry 600 (class 1259 OID 18705)
-- Name: tbl_rdb_codes; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_rdb_codes (
    rdb_code_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    rdb_category character varying(4) DEFAULT NULL::character varying,
    rdb_definition character varying(200) DEFAULT NULL::character varying,
    rdb_system_id integer DEFAULT 0
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 601 (class 1259 OID 18712)
-- Name: view_rdb_codes; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_rdb_codes AS
 SELECT tbl_rdb_codes.submission_id,
    tbl_rdb_codes.source_id,
    tbl_rdb_codes.local_db_id AS merged_db_id,
    tbl_rdb_codes.local_db_id,
    tbl_rdb_codes.public_db_id,
    tbl_rdb_codes.rdb_code_id,
    tbl_rdb_codes.date_updated,
    tbl_rdb_codes.rdb_category,
    tbl_rdb_codes.rdb_definition,
    tbl_rdb_codes.rdb_system_id
   FROM tbl_rdb_codes
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_rdb_codes.rdb_code_id AS merged_db_id,
    0 AS local_db_id,
    tbl_rdb_codes.rdb_code_id AS public_db_id,
    tbl_rdb_codes.rdb_code_id,
    tbl_rdb_codes.date_updated,
    tbl_rdb_codes.rdb_category,
    tbl_rdb_codes.rdb_definition,
    tbl_rdb_codes.rdb_system_id
   FROM public.tbl_rdb_codes;


SET search_path = public, pg_catalog;

--
-- TOC entry 602 (class 1259 OID 18717)
-- Name: tbl_rdb_systems; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_rdb_systems (
    rdb_system_id integer NOT NULL,
    biblio_id integer NOT NULL,
    location_id integer NOT NULL,
    rdb_first_published smallint,
    rdb_system character varying(10) DEFAULT NULL::character varying,
    rdb_system_date integer,
    rdb_version character varying(10) DEFAULT NULL::character varying,
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 7095 (class 0 OID 0)
-- Dependencies: 602
-- Name: COLUMN tbl_rdb_systems.location_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_rdb_systems.location_id IS 'geaographical relevance of rdb code system, e.g. uk, international, new forest';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 603 (class 1259 OID 18723)
-- Name: view_rdb_systems; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_rdb_systems AS
 SELECT tbl_rdb_systems.submission_id,
    tbl_rdb_systems.source_id,
    tbl_rdb_systems.local_db_id AS merged_db_id,
    tbl_rdb_systems.local_db_id,
    tbl_rdb_systems.public_db_id,
    tbl_rdb_systems.rdb_system_id,
    tbl_rdb_systems.biblio_id,
    tbl_rdb_systems.location_id,
    tbl_rdb_systems.rdb_first_published,
    tbl_rdb_systems.rdb_system,
    tbl_rdb_systems.rdb_system_date,
    tbl_rdb_systems.rdb_version,
    tbl_rdb_systems.date_updated
   FROM tbl_rdb_systems
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_rdb_systems.rdb_system_id AS merged_db_id,
    0 AS local_db_id,
    tbl_rdb_systems.rdb_system_id AS public_db_id,
    tbl_rdb_systems.rdb_system_id,
    tbl_rdb_systems.biblio_id,
    tbl_rdb_systems.location_id,
    tbl_rdb_systems.rdb_first_published,
    tbl_rdb_systems.rdb_system,
    tbl_rdb_systems.rdb_system_date,
    tbl_rdb_systems.rdb_version,
    tbl_rdb_systems.date_updated
   FROM public.tbl_rdb_systems;


SET search_path = public, pg_catalog;

--
-- TOC entry 604 (class 1259 OID 18728)
-- Name: tbl_record_types; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_record_types (
    record_type_id integer NOT NULL,
    record_type_name character varying(50) DEFAULT NULL::character varying,
    record_type_description text,
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 7096 (class 0 OID 0)
-- Dependencies: 604
-- Name: TABLE tbl_record_types; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE tbl_record_types IS 'may also use this to group methods - e.g. phosphate analyses (whereas tbl_method_groups would store the larger group "palaeo chemical/physical" methods)';


--
-- TOC entry 7097 (class 0 OID 0)
-- Dependencies: 604
-- Name: COLUMN tbl_record_types.record_type_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_record_types.record_type_name IS 'short name of proxy/proxies in group';


--
-- TOC entry 7098 (class 0 OID 0)
-- Dependencies: 604
-- Name: COLUMN tbl_record_types.record_type_description; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_record_types.record_type_description IS 'detailed description of group and explanation for grouping';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 605 (class 1259 OID 18736)
-- Name: view_record_types; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_record_types AS
 SELECT tbl_record_types.submission_id,
    tbl_record_types.source_id,
    tbl_record_types.local_db_id AS merged_db_id,
    tbl_record_types.local_db_id,
    tbl_record_types.public_db_id,
    tbl_record_types.record_type_id,
    tbl_record_types.record_type_name,
    tbl_record_types.record_type_description,
    tbl_record_types.date_updated
   FROM tbl_record_types
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_record_types.record_type_id AS merged_db_id,
    0 AS local_db_id,
    tbl_record_types.record_type_id AS public_db_id,
    tbl_record_types.record_type_id,
    tbl_record_types.record_type_name,
    tbl_record_types.record_type_description,
    tbl_record_types.date_updated
   FROM public.tbl_record_types;


SET search_path = public, pg_catalog;

--
-- TOC entry 606 (class 1259 OID 18740)
-- Name: tbl_relative_age_refs; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_relative_age_refs (
    relative_age_ref_id integer NOT NULL,
    biblio_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    relative_age_id integer NOT NULL
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 607 (class 1259 OID 18744)
-- Name: view_relative_age_refs; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_relative_age_refs AS
 SELECT tbl_relative_age_refs.submission_id,
    tbl_relative_age_refs.source_id,
    tbl_relative_age_refs.local_db_id AS merged_db_id,
    tbl_relative_age_refs.local_db_id,
    tbl_relative_age_refs.public_db_id,
    tbl_relative_age_refs.relative_age_ref_id,
    tbl_relative_age_refs.biblio_id,
    tbl_relative_age_refs.date_updated,
    tbl_relative_age_refs.relative_age_id
   FROM tbl_relative_age_refs
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_relative_age_refs.relative_age_ref_id AS merged_db_id,
    0 AS local_db_id,
    tbl_relative_age_refs.relative_age_ref_id AS public_db_id,
    tbl_relative_age_refs.relative_age_ref_id,
    tbl_relative_age_refs.biblio_id,
    tbl_relative_age_refs.date_updated,
    tbl_relative_age_refs.relative_age_id
   FROM public.tbl_relative_age_refs;


SET search_path = public, pg_catalog;

--
-- TOC entry 608 (class 1259 OID 18748)
-- Name: tbl_relative_ages; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_relative_ages (
    relative_age_id integer NOT NULL,
    relative_age_type_id integer,
    relative_age_name character varying(50),
    description text,
    c14_age_older numeric(20,5),
    c14_age_younger numeric(20,5),
    cal_age_older numeric(20,5),
    cal_age_younger numeric(20,5),
    notes text,
    date_updated timestamp with time zone DEFAULT now(),
    location_id integer,
    "Abbreviation" character varying
);


--
-- TOC entry 7099 (class 0 OID 0)
-- Dependencies: 608
-- Name: TABLE tbl_relative_ages; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE tbl_relative_ages IS '20120504PIB: removed biblio_id as is replaced by tbl_relative_age_refs
20130722PIB: changed colour in model to AliceBlue to reflect degree of user addition possible (i.e. ages can be added for reference in tbl_relative_dates)';


--
-- TOC entry 7100 (class 0 OID 0)
-- Dependencies: 608
-- Name: COLUMN tbl_relative_ages.relative_age_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_relative_ages.relative_age_name IS 'name of the dating period, e.g. bronze age. calendar ages should be given appropriate names such as ad 1492, 74 bc';


--
-- TOC entry 7101 (class 0 OID 0)
-- Dependencies: 608
-- Name: COLUMN tbl_relative_ages.description; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_relative_ages.description IS 'a description of the (usually) period.';


--
-- TOC entry 7102 (class 0 OID 0)
-- Dependencies: 608
-- Name: COLUMN tbl_relative_ages.c14_age_older; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_relative_ages.c14_age_older IS 'c14 age of younger boundary of period (where relevant).';


--
-- TOC entry 7103 (class 0 OID 0)
-- Dependencies: 608
-- Name: COLUMN tbl_relative_ages.c14_age_younger; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_relative_ages.c14_age_younger IS 'c14 age of later boundary of period (where relevant). leave blank for calendar ages.';


--
-- TOC entry 7104 (class 0 OID 0)
-- Dependencies: 608
-- Name: COLUMN tbl_relative_ages.cal_age_older; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_relative_ages.cal_age_older IS '(approximate) age before present (1950) of earliest boundary of period. or if calendar age then the calendar age converted to bp.';


--
-- TOC entry 7105 (class 0 OID 0)
-- Dependencies: 608
-- Name: COLUMN tbl_relative_ages.cal_age_younger; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_relative_ages.cal_age_younger IS '(approximate) age before present (1950) of latest boundary of period. or if calendar age then the calendar age converted to bp.';


--
-- TOC entry 7106 (class 0 OID 0)
-- Dependencies: 608
-- Name: COLUMN tbl_relative_ages.notes; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_relative_ages.notes IS 'any further notes not included in the description, such as reliability of definition or fuzzyness of boundaries.';


--
-- TOC entry 7107 (class 0 OID 0)
-- Dependencies: 608
-- Name: COLUMN tbl_relative_ages."Abbreviation"; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_relative_ages."Abbreviation" IS 'Standard abbreviated form of name if available';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 609 (class 1259 OID 18755)
-- Name: view_relative_ages; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_relative_ages AS
 SELECT tbl_relative_ages.submission_id,
    tbl_relative_ages.source_id,
    tbl_relative_ages.local_db_id AS merged_db_id,
    tbl_relative_ages.local_db_id,
    tbl_relative_ages.public_db_id,
    tbl_relative_ages.relative_age_id,
    tbl_relative_ages.relative_age_type_id,
    tbl_relative_ages.relative_age_name,
    tbl_relative_ages.description,
    tbl_relative_ages.c14_age_older,
    tbl_relative_ages.c14_age_younger,
    tbl_relative_ages.cal_age_older,
    tbl_relative_ages.cal_age_younger,
    tbl_relative_ages.notes,
    tbl_relative_ages.date_updated,
    tbl_relative_ages.location_id
   FROM tbl_relative_ages
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_relative_ages.relative_age_id AS merged_db_id,
    0 AS local_db_id,
    tbl_relative_ages.relative_age_id AS public_db_id,
    tbl_relative_ages.relative_age_id,
    tbl_relative_ages.relative_age_type_id,
    tbl_relative_ages.relative_age_name,
    tbl_relative_ages.description,
    tbl_relative_ages.c14_age_older,
    tbl_relative_ages.c14_age_younger,
    tbl_relative_ages.cal_age_older,
    tbl_relative_ages.cal_age_younger,
    tbl_relative_ages.notes,
    tbl_relative_ages.date_updated,
    tbl_relative_ages.location_id
   FROM public.tbl_relative_ages;


SET search_path = public, pg_catalog;

--
-- TOC entry 610 (class 1259 OID 18760)
-- Name: tbl_relative_dates; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_relative_dates (
    relative_date_id integer NOT NULL,
    relative_age_id integer,
    physical_sample_id integer NOT NULL,
    method_id integer,
    notes text,
    date_updated timestamp with time zone DEFAULT now(),
    dating_uncertainty_id integer
);


--
-- TOC entry 7108 (class 0 OID 0)
-- Dependencies: 610
-- Name: TABLE tbl_relative_dates; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE tbl_relative_dates IS '20120504PIB: Added method_id to store dating method used to attribute sample to period or calendar date (e.g. strategraphic dating, typological)
20130722PIB: addded field dating_uncertainty_id to cater for "from", "to" and "ca." etc. especially from import of BugsCEP';


--
-- TOC entry 7109 (class 0 OID 0)
-- Dependencies: 610
-- Name: COLUMN tbl_relative_dates.method_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_relative_dates.method_id IS 'dating method used to attribute sample to period or calendar date.';


--
-- TOC entry 7110 (class 0 OID 0)
-- Dependencies: 610
-- Name: COLUMN tbl_relative_dates.notes; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_relative_dates.notes IS 'any notes specific to the dating of this sample to this calendar or period based age';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 611 (class 1259 OID 18767)
-- Name: view_relative_dates; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_relative_dates AS
 SELECT tbl_relative_dates.submission_id,
    tbl_relative_dates.source_id,
    tbl_relative_dates.local_db_id AS merged_db_id,
    tbl_relative_dates.local_db_id,
    tbl_relative_dates.public_db_id,
    tbl_relative_dates.relative_date_id,
    tbl_relative_dates.relative_age_id,
    tbl_relative_dates.physical_sample_id,
    tbl_relative_dates.method_id,
    tbl_relative_dates.notes,
    tbl_relative_dates.date_updated,
    tbl_relative_dates.dating_uncertainty_id
   FROM tbl_relative_dates
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_relative_dates.relative_date_id AS merged_db_id,
    0 AS local_db_id,
    tbl_relative_dates.relative_date_id AS public_db_id,
    tbl_relative_dates.relative_date_id,
    tbl_relative_dates.relative_age_id,
    tbl_relative_dates.physical_sample_id,
    tbl_relative_dates.method_id,
    tbl_relative_dates.notes,
    tbl_relative_dates.date_updated,
    tbl_relative_dates.dating_uncertainty_id
   FROM public.tbl_relative_dates;


SET search_path = public, pg_catalog;

--
-- TOC entry 612 (class 1259 OID 18772)
-- Name: tbl_sample_alt_refs; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_sample_alt_refs (
    sample_alt_ref_id integer NOT NULL,
    alt_ref character varying(40) NOT NULL,
    alt_ref_type_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    physical_sample_id integer NOT NULL
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 613 (class 1259 OID 18776)
-- Name: view_sample_alt_refs; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_sample_alt_refs AS
 SELECT tbl_sample_alt_refs.submission_id,
    tbl_sample_alt_refs.source_id,
    tbl_sample_alt_refs.local_db_id AS merged_db_id,
    tbl_sample_alt_refs.local_db_id,
    tbl_sample_alt_refs.public_db_id,
    tbl_sample_alt_refs.sample_alt_ref_id,
    tbl_sample_alt_refs.alt_ref,
    tbl_sample_alt_refs.alt_ref_type_id,
    tbl_sample_alt_refs.date_updated,
    tbl_sample_alt_refs.physical_sample_id
   FROM tbl_sample_alt_refs
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_sample_alt_refs.sample_alt_ref_id AS merged_db_id,
    0 AS local_db_id,
    tbl_sample_alt_refs.sample_alt_ref_id AS public_db_id,
    tbl_sample_alt_refs.sample_alt_ref_id,
    tbl_sample_alt_refs.alt_ref,
    tbl_sample_alt_refs.alt_ref_type_id,
    tbl_sample_alt_refs.date_updated,
    tbl_sample_alt_refs.physical_sample_id
   FROM public.tbl_sample_alt_refs;


SET search_path = public, pg_catalog;

--
-- TOC entry 614 (class 1259 OID 18781)
-- Name: tbl_sample_colours; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_sample_colours (
    sample_colour_id integer NOT NULL,
    colour_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    physical_sample_id integer NOT NULL
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 615 (class 1259 OID 18785)
-- Name: view_sample_colours; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_sample_colours AS
 SELECT tbl_sample_colours.submission_id,
    tbl_sample_colours.source_id,
    tbl_sample_colours.local_db_id AS merged_db_id,
    tbl_sample_colours.local_db_id,
    tbl_sample_colours.public_db_id,
    tbl_sample_colours.sample_colour_id,
    tbl_sample_colours.colour_id,
    tbl_sample_colours.date_updated,
    tbl_sample_colours.physical_sample_id
   FROM tbl_sample_colours
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_sample_colours.sample_colour_id AS merged_db_id,
    0 AS local_db_id,
    tbl_sample_colours.sample_colour_id AS public_db_id,
    tbl_sample_colours.sample_colour_id,
    tbl_sample_colours.colour_id,
    tbl_sample_colours.date_updated,
    tbl_sample_colours.physical_sample_id
   FROM public.tbl_sample_colours;


SET search_path = public, pg_catalog;

--
-- TOC entry 616 (class 1259 OID 18789)
-- Name: tbl_sample_coordinates; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_sample_coordinates (
    sample_coordinate_id integer NOT NULL,
    physical_sample_id integer NOT NULL,
    coordinate_method_dimension_id integer NOT NULL,
    measurement numeric(20,10) NOT NULL,
    accuracy numeric(20,10),
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 7111 (class 0 OID 0)
-- Dependencies: 616
-- Name: COLUMN tbl_sample_coordinates.accuracy; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_sample_coordinates.accuracy IS 'GPS type accuracy, e.g. 5m 10m 0.01m';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 617 (class 1259 OID 18793)
-- Name: view_sample_coordinates; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_sample_coordinates AS
 SELECT tbl_sample_coordinates.submission_id,
    tbl_sample_coordinates.source_id,
    tbl_sample_coordinates.local_db_id AS merged_db_id,
    tbl_sample_coordinates.local_db_id,
    tbl_sample_coordinates.public_db_id,
    tbl_sample_coordinates.sample_coordinate_id,
    tbl_sample_coordinates.physical_sample_id,
    tbl_sample_coordinates.coordinate_method_dimension_id,
    tbl_sample_coordinates.measurement,
    tbl_sample_coordinates.accuracy,
    tbl_sample_coordinates.date_updated
   FROM tbl_sample_coordinates
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_sample_coordinates.sample_coordinate_id AS merged_db_id,
    0 AS local_db_id,
    tbl_sample_coordinates.sample_coordinate_id AS public_db_id,
    tbl_sample_coordinates.sample_coordinate_id,
    tbl_sample_coordinates.physical_sample_id,
    tbl_sample_coordinates.coordinate_method_dimension_id,
    tbl_sample_coordinates.measurement,
    tbl_sample_coordinates.accuracy,
    tbl_sample_coordinates.date_updated
   FROM public.tbl_sample_coordinates;


SET search_path = public, pg_catalog;

--
-- TOC entry 618 (class 1259 OID 18798)
-- Name: tbl_sample_description_sample_group_contexts; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_sample_description_sample_group_contexts (
    sample_description_sample_group_context_id integer NOT NULL,
    sampling_context_id integer,
    sample_description_type_id integer,
    date_updated timestamp with time zone DEFAULT now()
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 619 (class 1259 OID 18802)
-- Name: view_sample_description_sample_group_contexts; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_sample_description_sample_group_contexts AS
 SELECT tbl_sample_description_sample_group_contexts.submission_id,
    tbl_sample_description_sample_group_contexts.source_id,
    tbl_sample_description_sample_group_contexts.local_db_id AS merged_db_id,
    tbl_sample_description_sample_group_contexts.local_db_id,
    tbl_sample_description_sample_group_contexts.public_db_id,
    tbl_sample_description_sample_group_contexts.sample_description_sample_group_context_id,
    tbl_sample_description_sample_group_contexts.sampling_context_id,
    tbl_sample_description_sample_group_contexts.sample_description_type_id,
    tbl_sample_description_sample_group_contexts.date_updated
   FROM tbl_sample_description_sample_group_contexts
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_sample_description_sample_group_contexts.sample_description_sample_group_context_id AS merged_db_id,
    0 AS local_db_id,
    tbl_sample_description_sample_group_contexts.sample_description_sample_group_context_id AS public_db_id,
    tbl_sample_description_sample_group_contexts.sample_description_sample_group_context_id,
    tbl_sample_description_sample_group_contexts.sampling_context_id,
    tbl_sample_description_sample_group_contexts.sample_description_type_id,
    tbl_sample_description_sample_group_contexts.date_updated
   FROM public.tbl_sample_description_sample_group_contexts;


SET search_path = public, pg_catalog;

--
-- TOC entry 620 (class 1259 OID 18806)
-- Name: tbl_sample_description_types; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_sample_description_types (
    sample_description_type_id integer NOT NULL,
    type_name character varying(255),
    type_description text,
    date_updated timestamp with time zone DEFAULT now()
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 621 (class 1259 OID 18813)
-- Name: view_sample_description_types; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_sample_description_types AS
 SELECT tbl_sample_description_types.submission_id,
    tbl_sample_description_types.source_id,
    tbl_sample_description_types.local_db_id AS merged_db_id,
    tbl_sample_description_types.local_db_id,
    tbl_sample_description_types.public_db_id,
    tbl_sample_description_types.sample_description_type_id,
    tbl_sample_description_types.type_name,
    tbl_sample_description_types.type_description,
    tbl_sample_description_types.date_updated
   FROM tbl_sample_description_types
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_sample_description_types.sample_description_type_id AS merged_db_id,
    0 AS local_db_id,
    tbl_sample_description_types.sample_description_type_id AS public_db_id,
    tbl_sample_description_types.sample_description_type_id,
    tbl_sample_description_types.type_name,
    tbl_sample_description_types.type_description,
    tbl_sample_description_types.date_updated
   FROM public.tbl_sample_description_types;


SET search_path = public, pg_catalog;

--
-- TOC entry 622 (class 1259 OID 18817)
-- Name: tbl_sample_descriptions; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_sample_descriptions (
    sample_description_id integer NOT NULL,
    sample_description_type_id integer NOT NULL,
    physical_sample_id integer NOT NULL,
    description character varying,
    date_updated timestamp with time zone DEFAULT now()
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 623 (class 1259 OID 18824)
-- Name: view_sample_descriptions; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_sample_descriptions AS
 SELECT tbl_sample_descriptions.submission_id,
    tbl_sample_descriptions.source_id,
    tbl_sample_descriptions.local_db_id AS merged_db_id,
    tbl_sample_descriptions.local_db_id,
    tbl_sample_descriptions.public_db_id,
    tbl_sample_descriptions.sample_description_id,
    tbl_sample_descriptions.sample_description_type_id,
    tbl_sample_descriptions.physical_sample_id,
    tbl_sample_descriptions.description,
    tbl_sample_descriptions.date_updated
   FROM tbl_sample_descriptions
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_sample_descriptions.sample_description_id AS merged_db_id,
    0 AS local_db_id,
    tbl_sample_descriptions.sample_description_id AS public_db_id,
    tbl_sample_descriptions.sample_description_id,
    tbl_sample_descriptions.sample_description_type_id,
    tbl_sample_descriptions.physical_sample_id,
    tbl_sample_descriptions.description,
    tbl_sample_descriptions.date_updated
   FROM public.tbl_sample_descriptions;


SET search_path = public, pg_catalog;

--
-- TOC entry 624 (class 1259 OID 18830)
-- Name: tbl_sample_dimensions; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_sample_dimensions (
    sample_dimension_id integer NOT NULL,
    physical_sample_id integer NOT NULL,
    dimension_id integer NOT NULL,
    method_id integer NOT NULL,
    dimension_value numeric(20,10) NOT NULL,
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 7112 (class 0 OID 0)
-- Dependencies: 624
-- Name: TABLE tbl_sample_dimensions; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE tbl_sample_dimensions IS '20120506pib: depth measurements for samples moved here from tbl_physical_samples';


--
-- TOC entry 7113 (class 0 OID 0)
-- Dependencies: 624
-- Name: COLUMN tbl_sample_dimensions.dimension_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_sample_dimensions.dimension_id IS 'details of the dimension measured';


--
-- TOC entry 7114 (class 0 OID 0)
-- Dependencies: 624
-- Name: COLUMN tbl_sample_dimensions.method_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_sample_dimensions.method_id IS 'method describing dimension measurement, with link to units used';


--
-- TOC entry 7115 (class 0 OID 0)
-- Dependencies: 624
-- Name: COLUMN tbl_sample_dimensions.dimension_value; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_sample_dimensions.dimension_value IS 'numerical value of dimension, in the units indicated in the documentation and interface.';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 625 (class 1259 OID 18834)
-- Name: view_sample_dimensions; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_sample_dimensions AS
 SELECT tbl_sample_dimensions.submission_id,
    tbl_sample_dimensions.source_id,
    tbl_sample_dimensions.local_db_id AS merged_db_id,
    tbl_sample_dimensions.local_db_id,
    tbl_sample_dimensions.public_db_id,
    tbl_sample_dimensions.sample_dimension_id,
    tbl_sample_dimensions.physical_sample_id,
    tbl_sample_dimensions.dimension_id,
    tbl_sample_dimensions.method_id,
    tbl_sample_dimensions.dimension_value,
    tbl_sample_dimensions.date_updated
   FROM tbl_sample_dimensions
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_sample_dimensions.sample_dimension_id AS merged_db_id,
    0 AS local_db_id,
    tbl_sample_dimensions.sample_dimension_id AS public_db_id,
    tbl_sample_dimensions.sample_dimension_id,
    tbl_sample_dimensions.physical_sample_id,
    tbl_sample_dimensions.dimension_id,
    tbl_sample_dimensions.method_id,
    tbl_sample_dimensions.dimension_value,
    tbl_sample_dimensions.date_updated
   FROM public.tbl_sample_dimensions;


SET search_path = public, pg_catalog;

--
-- TOC entry 626 (class 1259 OID 18839)
-- Name: tbl_sample_group_coordinates; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_sample_group_coordinates (
    sample_group_position_id integer NOT NULL,
    coordinate_method_dimension_id integer NOT NULL,
    sample_group_position numeric(20,10),
    position_accuracy character varying(128),
    sample_group_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now()
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 627 (class 1259 OID 18843)
-- Name: view_sample_group_coordinates; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_sample_group_coordinates AS
 SELECT tbl_sample_group_coordinates.submission_id,
    tbl_sample_group_coordinates.source_id,
    tbl_sample_group_coordinates.local_db_id AS merged_db_id,
    tbl_sample_group_coordinates.local_db_id,
    tbl_sample_group_coordinates.public_db_id,
    tbl_sample_group_coordinates.sample_group_position_id,
    tbl_sample_group_coordinates.coordinate_method_dimension_id,
    tbl_sample_group_coordinates.sample_group_position,
    tbl_sample_group_coordinates.position_accuracy,
    tbl_sample_group_coordinates.sample_group_id,
    tbl_sample_group_coordinates.date_updated
   FROM tbl_sample_group_coordinates
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_sample_group_coordinates.sample_group_position_id AS merged_db_id,
    0 AS local_db_id,
    tbl_sample_group_coordinates.sample_group_position_id AS public_db_id,
    tbl_sample_group_coordinates.sample_group_position_id,
    tbl_sample_group_coordinates.coordinate_method_dimension_id,
    tbl_sample_group_coordinates.sample_group_position,
    tbl_sample_group_coordinates.position_accuracy,
    tbl_sample_group_coordinates.sample_group_id,
    tbl_sample_group_coordinates.date_updated
   FROM public.tbl_sample_group_coordinates;


SET search_path = public, pg_catalog;

--
-- TOC entry 628 (class 1259 OID 18848)
-- Name: tbl_sample_group_description_type_sampling_contexts; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_sample_group_description_type_sampling_contexts (
    sample_group_description_type_sampling_context_id integer NOT NULL,
    sampling_context_id integer NOT NULL,
    sample_group_description_type_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now()
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 629 (class 1259 OID 18852)
-- Name: view_sample_group_description_type_sampling_contexts; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_sample_group_description_type_sampling_contexts AS
 SELECT tbl_sample_group_description_type_sampling_contexts.submission_id,
    tbl_sample_group_description_type_sampling_contexts.source_id,
    tbl_sample_group_description_type_sampling_contexts.local_db_id AS merged_db_id,
    tbl_sample_group_description_type_sampling_contexts.local_db_id,
    tbl_sample_group_description_type_sampling_contexts.public_db_id,
    tbl_sample_group_description_type_sampling_contexts.sample_group_description_type_sampling_context_id,
    tbl_sample_group_description_type_sampling_contexts.sampling_context_id,
    tbl_sample_group_description_type_sampling_contexts.sample_group_description_type_id,
    tbl_sample_group_description_type_sampling_contexts.date_updated
   FROM tbl_sample_group_description_type_sampling_contexts
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_sample_group_description_type_sampling_contexts.sample_group_description_type_sampling_context_id AS merged_db_id,
    0 AS local_db_id,
    tbl_sample_group_description_type_sampling_contexts.sample_group_description_type_sampling_context_id AS public_db_id,
    tbl_sample_group_description_type_sampling_contexts.sample_group_description_type_sampling_context_id,
    tbl_sample_group_description_type_sampling_contexts.sampling_context_id,
    tbl_sample_group_description_type_sampling_contexts.sample_group_description_type_id,
    tbl_sample_group_description_type_sampling_contexts.date_updated
   FROM public.tbl_sample_group_description_type_sampling_contexts;


SET search_path = public, pg_catalog;

--
-- TOC entry 630 (class 1259 OID 18856)
-- Name: tbl_sample_group_description_types; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_sample_group_description_types (
    sample_group_description_type_id integer NOT NULL,
    type_name character varying(255),
    type_description character varying,
    date_updated timestamp with time zone DEFAULT now()
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 631 (class 1259 OID 18863)
-- Name: view_sample_group_description_types; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_sample_group_description_types AS
 SELECT tbl_sample_group_description_types.submission_id,
    tbl_sample_group_description_types.source_id,
    tbl_sample_group_description_types.local_db_id AS merged_db_id,
    tbl_sample_group_description_types.local_db_id,
    tbl_sample_group_description_types.public_db_id,
    tbl_sample_group_description_types.sample_group_description_type_id,
    tbl_sample_group_description_types.type_name,
    tbl_sample_group_description_types.type_description,
    tbl_sample_group_description_types.date_updated
   FROM tbl_sample_group_description_types
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_sample_group_description_types.sample_group_description_type_id AS merged_db_id,
    0 AS local_db_id,
    tbl_sample_group_description_types.sample_group_description_type_id AS public_db_id,
    tbl_sample_group_description_types.sample_group_description_type_id,
    tbl_sample_group_description_types.type_name,
    tbl_sample_group_description_types.type_description,
    tbl_sample_group_description_types.date_updated
   FROM public.tbl_sample_group_description_types;


SET search_path = public, pg_catalog;

--
-- TOC entry 632 (class 1259 OID 18867)
-- Name: tbl_sample_group_descriptions; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_sample_group_descriptions (
    sample_group_description_id integer NOT NULL,
    group_description character varying,
    sample_group_description_type_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    sample_group_id integer
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 633 (class 1259 OID 18874)
-- Name: view_sample_group_descriptions; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_sample_group_descriptions AS
 SELECT tbl_sample_group_descriptions.submission_id,
    tbl_sample_group_descriptions.source_id,
    tbl_sample_group_descriptions.local_db_id AS merged_db_id,
    tbl_sample_group_descriptions.local_db_id,
    tbl_sample_group_descriptions.public_db_id,
    tbl_sample_group_descriptions.sample_group_description_id,
    tbl_sample_group_descriptions.group_description,
    tbl_sample_group_descriptions.sample_group_description_type_id,
    tbl_sample_group_descriptions.date_updated,
    tbl_sample_group_descriptions.sample_group_id
   FROM tbl_sample_group_descriptions
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_sample_group_descriptions.sample_group_description_id AS merged_db_id,
    0 AS local_db_id,
    tbl_sample_group_descriptions.sample_group_description_id AS public_db_id,
    tbl_sample_group_descriptions.sample_group_description_id,
    tbl_sample_group_descriptions.group_description,
    tbl_sample_group_descriptions.sample_group_description_type_id,
    tbl_sample_group_descriptions.date_updated,
    tbl_sample_group_descriptions.sample_group_id
   FROM public.tbl_sample_group_descriptions;


SET search_path = public, pg_catalog;

--
-- TOC entry 634 (class 1259 OID 18879)
-- Name: tbl_sample_group_dimensions; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_sample_group_dimensions (
    sample_group_dimension_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    dimension_id integer NOT NULL,
    dimension_value numeric(20,5) NOT NULL,
    sample_group_id integer NOT NULL
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 635 (class 1259 OID 18883)
-- Name: view_sample_group_dimensions; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_sample_group_dimensions AS
 SELECT tbl_sample_group_dimensions.submission_id,
    tbl_sample_group_dimensions.source_id,
    tbl_sample_group_dimensions.local_db_id AS merged_db_id,
    tbl_sample_group_dimensions.local_db_id,
    tbl_sample_group_dimensions.public_db_id,
    tbl_sample_group_dimensions.sample_group_dimension_id,
    tbl_sample_group_dimensions.date_updated,
    tbl_sample_group_dimensions.dimension_id,
    tbl_sample_group_dimensions.dimension_value,
    tbl_sample_group_dimensions.sample_group_id
   FROM tbl_sample_group_dimensions
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_sample_group_dimensions.sample_group_dimension_id AS merged_db_id,
    0 AS local_db_id,
    tbl_sample_group_dimensions.sample_group_dimension_id AS public_db_id,
    tbl_sample_group_dimensions.sample_group_dimension_id,
    tbl_sample_group_dimensions.date_updated,
    tbl_sample_group_dimensions.dimension_id,
    tbl_sample_group_dimensions.dimension_value,
    tbl_sample_group_dimensions.sample_group_id
   FROM public.tbl_sample_group_dimensions;


SET search_path = public, pg_catalog;

--
-- TOC entry 636 (class 1259 OID 18888)
-- Name: tbl_sample_group_images; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_sample_group_images (
    sample_group_image_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    description text,
    image_location text NOT NULL,
    image_name character varying(80),
    image_type_id integer NOT NULL,
    sample_group_id integer NOT NULL
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 637 (class 1259 OID 18895)
-- Name: view_sample_group_images; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_sample_group_images AS
 SELECT tbl_sample_group_images.submission_id,
    tbl_sample_group_images.source_id,
    tbl_sample_group_images.local_db_id AS merged_db_id,
    tbl_sample_group_images.local_db_id,
    tbl_sample_group_images.public_db_id,
    tbl_sample_group_images.sample_group_image_id,
    tbl_sample_group_images.date_updated,
    tbl_sample_group_images.description,
    tbl_sample_group_images.image_location,
    tbl_sample_group_images.image_name,
    tbl_sample_group_images.image_type_id,
    tbl_sample_group_images.sample_group_id
   FROM tbl_sample_group_images
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_sample_group_images.sample_group_image_id AS merged_db_id,
    0 AS local_db_id,
    tbl_sample_group_images.sample_group_image_id AS public_db_id,
    tbl_sample_group_images.sample_group_image_id,
    tbl_sample_group_images.date_updated,
    tbl_sample_group_images.description,
    tbl_sample_group_images.image_location,
    tbl_sample_group_images.image_name,
    tbl_sample_group_images.image_type_id,
    tbl_sample_group_images.sample_group_id
   FROM public.tbl_sample_group_images;


SET search_path = public, pg_catalog;

--
-- TOC entry 638 (class 1259 OID 18900)
-- Name: tbl_sample_group_notes; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_sample_group_notes (
    sample_group_note_id integer NOT NULL,
    sample_group_id integer NOT NULL,
    note character varying,
    date_updated timestamp with time zone DEFAULT now()
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 639 (class 1259 OID 18907)
-- Name: view_sample_group_notes; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_sample_group_notes AS
 SELECT tbl_sample_group_notes.submission_id,
    tbl_sample_group_notes.source_id,
    tbl_sample_group_notes.local_db_id AS merged_db_id,
    tbl_sample_group_notes.local_db_id,
    tbl_sample_group_notes.public_db_id,
    tbl_sample_group_notes.sample_group_note_id,
    tbl_sample_group_notes.sample_group_id,
    tbl_sample_group_notes.note,
    tbl_sample_group_notes.date_updated
   FROM tbl_sample_group_notes
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_sample_group_notes.sample_group_note_id AS merged_db_id,
    0 AS local_db_id,
    tbl_sample_group_notes.sample_group_note_id AS public_db_id,
    tbl_sample_group_notes.sample_group_note_id,
    tbl_sample_group_notes.sample_group_id,
    tbl_sample_group_notes.note,
    tbl_sample_group_notes.date_updated
   FROM public.tbl_sample_group_notes;


SET search_path = public, pg_catalog;

--
-- TOC entry 640 (class 1259 OID 18911)
-- Name: tbl_sample_group_references; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_sample_group_references (
    sample_group_reference_id integer NOT NULL,
    biblio_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    sample_group_id integer DEFAULT 0
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 641 (class 1259 OID 18916)
-- Name: view_sample_group_references; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_sample_group_references AS
 SELECT tbl_sample_group_references.submission_id,
    tbl_sample_group_references.source_id,
    tbl_sample_group_references.local_db_id AS merged_db_id,
    tbl_sample_group_references.local_db_id,
    tbl_sample_group_references.public_db_id,
    tbl_sample_group_references.sample_group_reference_id,
    tbl_sample_group_references.biblio_id,
    tbl_sample_group_references.date_updated,
    tbl_sample_group_references.sample_group_id
   FROM tbl_sample_group_references
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_sample_group_references.sample_group_reference_id AS merged_db_id,
    0 AS local_db_id,
    tbl_sample_group_references.sample_group_reference_id AS public_db_id,
    tbl_sample_group_references.sample_group_reference_id,
    tbl_sample_group_references.biblio_id,
    tbl_sample_group_references.date_updated,
    tbl_sample_group_references.sample_group_id
   FROM public.tbl_sample_group_references;


SET search_path = public, pg_catalog;

--
-- TOC entry 642 (class 1259 OID 18920)
-- Name: tbl_sample_group_sampling_contexts; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_sample_group_sampling_contexts (
    sampling_context_id integer NOT NULL,
    sampling_context character varying(40) NOT NULL,
    description text,
    sort_order smallint DEFAULT 0 NOT NULL,
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 7116 (class 0 OID 0)
-- Dependencies: 642
-- Name: TABLE tbl_sample_group_sampling_contexts; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE tbl_sample_group_sampling_contexts IS 'Type=lookup';


--
-- TOC entry 7117 (class 0 OID 0)
-- Dependencies: 642
-- Name: COLUMN tbl_sample_group_sampling_contexts.sampling_context; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_sample_group_sampling_contexts.sampling_context IS 'short but meaningful name defining sample group context, e.g. stratigraphic sequence, archaeological excavation';


--
-- TOC entry 7118 (class 0 OID 0)
-- Dependencies: 642
-- Name: COLUMN tbl_sample_group_sampling_contexts.description; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_sample_group_sampling_contexts.description IS 'full explanation of the grouping term';


--
-- TOC entry 7119 (class 0 OID 0)
-- Dependencies: 642
-- Name: COLUMN tbl_sample_group_sampling_contexts.sort_order; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_sample_group_sampling_contexts.sort_order IS 'allows lists to group similar or associated group context close to each other, e.g. modern investigations together, palaeo investigations together';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 643 (class 1259 OID 18928)
-- Name: view_sample_group_sampling_contexts; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_sample_group_sampling_contexts AS
 SELECT tbl_sample_group_sampling_contexts.submission_id,
    tbl_sample_group_sampling_contexts.source_id,
    tbl_sample_group_sampling_contexts.local_db_id AS merged_db_id,
    tbl_sample_group_sampling_contexts.local_db_id,
    tbl_sample_group_sampling_contexts.public_db_id,
    tbl_sample_group_sampling_contexts.sampling_context_id,
    tbl_sample_group_sampling_contexts.sampling_context,
    tbl_sample_group_sampling_contexts.description,
    tbl_sample_group_sampling_contexts.sort_order,
    tbl_sample_group_sampling_contexts.date_updated
   FROM tbl_sample_group_sampling_contexts
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_sample_group_sampling_contexts.sampling_context_id AS merged_db_id,
    0 AS local_db_id,
    tbl_sample_group_sampling_contexts.sampling_context_id AS public_db_id,
    tbl_sample_group_sampling_contexts.sampling_context_id,
    tbl_sample_group_sampling_contexts.sampling_context,
    tbl_sample_group_sampling_contexts.description,
    tbl_sample_group_sampling_contexts.sort_order,
    tbl_sample_group_sampling_contexts.date_updated
   FROM public.tbl_sample_group_sampling_contexts;


SET search_path = public, pg_catalog;

--
-- TOC entry 644 (class 1259 OID 18933)
-- Name: tbl_sample_groups; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_sample_groups (
    sample_group_id integer NOT NULL,
    site_id integer DEFAULT 0,
    sampling_context_id integer,
    method_id integer NOT NULL,
    sample_group_name character varying(100) DEFAULT NULL::character varying,
    sample_group_description text,
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 7120 (class 0 OID 0)
-- Dependencies: 644
-- Name: COLUMN tbl_sample_groups.method_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_sample_groups.method_id IS 'sampling method, e.g. russian auger core, pitfall traps. note different from context in that it is specific to method of sample retrieval and not type of investigation.';


--
-- TOC entry 7121 (class 0 OID 0)
-- Dependencies: 644
-- Name: COLUMN tbl_sample_groups.sample_group_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_sample_groups.sample_group_name IS 'Name which identifies the collection of samples. For ceramics, use vessel number.';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 645 (class 1259 OID 18942)
-- Name: view_sample_groups; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_sample_groups AS
 SELECT tbl_sample_groups.submission_id,
    tbl_sample_groups.source_id,
    tbl_sample_groups.local_db_id AS merged_db_id,
    tbl_sample_groups.local_db_id,
    tbl_sample_groups.public_db_id,
    tbl_sample_groups.sample_group_id,
    tbl_sample_groups.site_id,
    tbl_sample_groups.sampling_context_id,
    tbl_sample_groups.method_id,
    tbl_sample_groups.sample_group_name,
    tbl_sample_groups.sample_group_description,
    tbl_sample_groups.date_updated
   FROM tbl_sample_groups
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_sample_groups.sample_group_id AS merged_db_id,
    0 AS local_db_id,
    tbl_sample_groups.sample_group_id AS public_db_id,
    tbl_sample_groups.sample_group_id,
    tbl_sample_groups.site_id,
    tbl_sample_groups.sampling_context_id,
    tbl_sample_groups.method_id,
    tbl_sample_groups.sample_group_name,
    tbl_sample_groups.sample_group_description,
    tbl_sample_groups.date_updated
   FROM public.tbl_sample_groups;


SET search_path = public, pg_catalog;

--
-- TOC entry 646 (class 1259 OID 18947)
-- Name: tbl_sample_horizons; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_sample_horizons (
    sample_horizon_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    horizon_id integer NOT NULL,
    physical_sample_id integer NOT NULL
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 647 (class 1259 OID 18951)
-- Name: view_sample_horizons; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_sample_horizons AS
 SELECT tbl_sample_horizons.submission_id,
    tbl_sample_horizons.source_id,
    tbl_sample_horizons.local_db_id AS merged_db_id,
    tbl_sample_horizons.local_db_id,
    tbl_sample_horizons.public_db_id,
    tbl_sample_horizons.sample_horizon_id,
    tbl_sample_horizons.date_updated,
    tbl_sample_horizons.horizon_id,
    tbl_sample_horizons.physical_sample_id
   FROM tbl_sample_horizons
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_sample_horizons.sample_horizon_id AS merged_db_id,
    0 AS local_db_id,
    tbl_sample_horizons.sample_horizon_id AS public_db_id,
    tbl_sample_horizons.sample_horizon_id,
    tbl_sample_horizons.date_updated,
    tbl_sample_horizons.horizon_id,
    tbl_sample_horizons.physical_sample_id
   FROM public.tbl_sample_horizons;


SET search_path = public, pg_catalog;

--
-- TOC entry 648 (class 1259 OID 18955)
-- Name: tbl_sample_images; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_sample_images (
    sample_image_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    description text,
    image_location text NOT NULL,
    image_name character varying(80),
    image_type_id integer NOT NULL,
    physical_sample_id integer NOT NULL
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 649 (class 1259 OID 18963)
-- Name: view_sample_images; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_sample_images AS
 SELECT tbl_sample_images.submission_id,
    tbl_sample_images.source_id,
    tbl_sample_images.local_db_id AS merged_db_id,
    tbl_sample_images.local_db_id,
    tbl_sample_images.public_db_id,
    tbl_sample_images.sample_image_id,
    tbl_sample_images.date_updated,
    tbl_sample_images.description,
    tbl_sample_images.image_location,
    tbl_sample_images.image_name,
    tbl_sample_images.image_type_id,
    tbl_sample_images.physical_sample_id
   FROM tbl_sample_images
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_sample_images.sample_image_id AS merged_db_id,
    0 AS local_db_id,
    tbl_sample_images.sample_image_id AS public_db_id,
    tbl_sample_images.sample_image_id,
    tbl_sample_images.date_updated,
    tbl_sample_images.description,
    tbl_sample_images.image_location,
    tbl_sample_images.image_name,
    tbl_sample_images.image_type_id,
    tbl_sample_images.physical_sample_id
   FROM public.tbl_sample_images;


SET search_path = public, pg_catalog;

--
-- TOC entry 650 (class 1259 OID 18968)
-- Name: tbl_sample_location_type_sampling_contexts; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_sample_location_type_sampling_contexts (
    sample_location_type_sampling_context_id integer NOT NULL,
    sampling_context_id integer NOT NULL,
    sample_location_type_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now()
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 651 (class 1259 OID 18972)
-- Name: view_sample_location_type_sampling_contexts; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_sample_location_type_sampling_contexts AS
 SELECT tbl_sample_location_type_sampling_contexts.submission_id,
    tbl_sample_location_type_sampling_contexts.source_id,
    tbl_sample_location_type_sampling_contexts.local_db_id AS merged_db_id,
    tbl_sample_location_type_sampling_contexts.local_db_id,
    tbl_sample_location_type_sampling_contexts.public_db_id,
    tbl_sample_location_type_sampling_contexts.sample_location_type_sampling_context_id,
    tbl_sample_location_type_sampling_contexts.sampling_context_id,
    tbl_sample_location_type_sampling_contexts.sample_location_type_id,
    tbl_sample_location_type_sampling_contexts.date_updated
   FROM tbl_sample_location_type_sampling_contexts
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_sample_location_type_sampling_contexts.sample_location_type_sampling_context_id AS merged_db_id,
    0 AS local_db_id,
    tbl_sample_location_type_sampling_contexts.sample_location_type_sampling_context_id AS public_db_id,
    tbl_sample_location_type_sampling_contexts.sample_location_type_sampling_context_id,
    tbl_sample_location_type_sampling_contexts.sampling_context_id,
    tbl_sample_location_type_sampling_contexts.sample_location_type_id,
    tbl_sample_location_type_sampling_contexts.date_updated
   FROM public.tbl_sample_location_type_sampling_contexts;


SET search_path = public, pg_catalog;

--
-- TOC entry 652 (class 1259 OID 18976)
-- Name: tbl_sample_location_types; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_sample_location_types (
    sample_location_type_id integer NOT NULL,
    location_type character varying(255),
    location_type_description text,
    date_updated timestamp with time zone DEFAULT now()
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 653 (class 1259 OID 18983)
-- Name: view_sample_location_types; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_sample_location_types AS
 SELECT tbl_sample_location_types.submission_id,
    tbl_sample_location_types.source_id,
    tbl_sample_location_types.local_db_id AS merged_db_id,
    tbl_sample_location_types.local_db_id,
    tbl_sample_location_types.public_db_id,
    tbl_sample_location_types.sample_location_type_id,
    tbl_sample_location_types.location_type,
    tbl_sample_location_types.location_type_description,
    tbl_sample_location_types.date_updated
   FROM tbl_sample_location_types
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_sample_location_types.sample_location_type_id AS merged_db_id,
    0 AS local_db_id,
    tbl_sample_location_types.sample_location_type_id AS public_db_id,
    tbl_sample_location_types.sample_location_type_id,
    tbl_sample_location_types.location_type,
    tbl_sample_location_types.location_type_description,
    tbl_sample_location_types.date_updated
   FROM public.tbl_sample_location_types;


SET search_path = public, pg_catalog;

--
-- TOC entry 654 (class 1259 OID 18987)
-- Name: tbl_sample_locations; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_sample_locations (
    sample_location_id integer NOT NULL,
    sample_location_type_id integer NOT NULL,
    physical_sample_id integer NOT NULL,
    location character varying(255),
    date_updated timestamp with time zone DEFAULT now()
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 655 (class 1259 OID 18991)
-- Name: view_sample_locations; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_sample_locations AS
 SELECT tbl_sample_locations.submission_id,
    tbl_sample_locations.source_id,
    tbl_sample_locations.local_db_id AS merged_db_id,
    tbl_sample_locations.local_db_id,
    tbl_sample_locations.public_db_id,
    tbl_sample_locations.sample_location_id,
    tbl_sample_locations.sample_location_type_id,
    tbl_sample_locations.physical_sample_id,
    tbl_sample_locations.location,
    tbl_sample_locations.date_updated
   FROM tbl_sample_locations
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_sample_locations.sample_location_id AS merged_db_id,
    0 AS local_db_id,
    tbl_sample_locations.sample_location_id AS public_db_id,
    tbl_sample_locations.sample_location_id,
    tbl_sample_locations.sample_location_type_id,
    tbl_sample_locations.physical_sample_id,
    tbl_sample_locations.location,
    tbl_sample_locations.date_updated
   FROM public.tbl_sample_locations;


SET search_path = public, pg_catalog;

--
-- TOC entry 656 (class 1259 OID 18996)
-- Name: tbl_sample_notes; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_sample_notes (
    sample_note_id integer NOT NULL,
    physical_sample_id integer NOT NULL,
    note_type character varying,
    note text NOT NULL,
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 7122 (class 0 OID 0)
-- Dependencies: 656
-- Name: COLUMN tbl_sample_notes.note_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_sample_notes.note_type IS 'origin of the note, e.g. field note, lab note';


--
-- TOC entry 7123 (class 0 OID 0)
-- Dependencies: 656
-- Name: COLUMN tbl_sample_notes.note; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_sample_notes.note IS 'note contents';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 657 (class 1259 OID 19003)
-- Name: view_sample_notes; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_sample_notes AS
 SELECT tbl_sample_notes.submission_id,
    tbl_sample_notes.source_id,
    tbl_sample_notes.local_db_id AS merged_db_id,
    tbl_sample_notes.local_db_id,
    tbl_sample_notes.public_db_id,
    tbl_sample_notes.sample_note_id,
    tbl_sample_notes.physical_sample_id,
    tbl_sample_notes.note_type,
    tbl_sample_notes.note,
    tbl_sample_notes.date_updated
   FROM tbl_sample_notes
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_sample_notes.sample_note_id AS merged_db_id,
    0 AS local_db_id,
    tbl_sample_notes.sample_note_id AS public_db_id,
    tbl_sample_notes.sample_note_id,
    tbl_sample_notes.physical_sample_id,
    tbl_sample_notes.note_type,
    tbl_sample_notes.note,
    tbl_sample_notes.date_updated
   FROM public.tbl_sample_notes;


SET search_path = public, pg_catalog;

--
-- TOC entry 658 (class 1259 OID 19008)
-- Name: tbl_sample_types; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_sample_types (
    sample_type_id integer NOT NULL,
    type_name character varying(40) NOT NULL,
    description text,
    date_updated timestamp with time zone DEFAULT now()
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 659 (class 1259 OID 19015)
-- Name: view_sample_types; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_sample_types AS
 SELECT tbl_sample_types.submission_id,
    tbl_sample_types.source_id,
    tbl_sample_types.local_db_id AS merged_db_id,
    tbl_sample_types.local_db_id,
    tbl_sample_types.public_db_id,
    tbl_sample_types.sample_type_id,
    tbl_sample_types.type_name,
    tbl_sample_types.description,
    tbl_sample_types.date_updated
   FROM tbl_sample_types
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_sample_types.sample_type_id AS merged_db_id,
    0 AS local_db_id,
    tbl_sample_types.sample_type_id AS public_db_id,
    tbl_sample_types.sample_type_id,
    tbl_sample_types.type_name,
    tbl_sample_types.description,
    tbl_sample_types.date_updated
   FROM public.tbl_sample_types;


SET search_path = public, pg_catalog;

--
-- TOC entry 660 (class 1259 OID 19019)
-- Name: tbl_season_types; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_season_types (
    season_type_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    description text,
    season_type character varying(30)
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 661 (class 1259 OID 19026)
-- Name: view_season_types; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_season_types AS
 SELECT tbl_season_types.submission_id,
    tbl_season_types.source_id,
    tbl_season_types.local_db_id AS merged_db_id,
    tbl_season_types.local_db_id,
    tbl_season_types.public_db_id,
    tbl_season_types.season_type_id,
    tbl_season_types.date_updated,
    tbl_season_types.description,
    tbl_season_types.season_type
   FROM tbl_season_types
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_season_types.season_type_id AS merged_db_id,
    0 AS local_db_id,
    tbl_season_types.season_type_id AS public_db_id,
    tbl_season_types.season_type_id,
    tbl_season_types.date_updated,
    tbl_season_types.description,
    tbl_season_types.season_type
   FROM public.tbl_season_types;


SET search_path = public, pg_catalog;

--
-- TOC entry 662 (class 1259 OID 19030)
-- Name: tbl_seasons; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_seasons (
    season_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    season_name character varying(20) DEFAULT NULL::character varying,
    season_type character varying(30) DEFAULT NULL::character varying,
    season_type_id integer,
    sort_order smallint DEFAULT 0
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 663 (class 1259 OID 19037)
-- Name: view_seasons; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_seasons AS
 SELECT tbl_seasons.submission_id,
    tbl_seasons.source_id,
    tbl_seasons.local_db_id AS merged_db_id,
    tbl_seasons.local_db_id,
    tbl_seasons.public_db_id,
    tbl_seasons.season_id,
    tbl_seasons.date_updated,
    tbl_seasons.season_name,
    tbl_seasons.season_type,
    tbl_seasons.season_type_id,
    tbl_seasons.sort_order
   FROM tbl_seasons
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_seasons.season_id AS merged_db_id,
    0 AS local_db_id,
    tbl_seasons.season_id AS public_db_id,
    tbl_seasons.season_id,
    tbl_seasons.date_updated,
    tbl_seasons.season_name,
    tbl_seasons.season_type,
    tbl_seasons.season_type_id,
    tbl_seasons.sort_order
   FROM public.tbl_seasons;


SET search_path = public, pg_catalog;

--
-- TOC entry 664 (class 1259 OID 19042)
-- Name: tbl_site_images; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_site_images (
    site_image_id integer NOT NULL,
    contact_id integer,
    credit character varying(100),
    date_taken date,
    date_updated timestamp with time zone DEFAULT now(),
    description text,
    image_location text NOT NULL,
    image_name character varying(80),
    image_type_id integer NOT NULL,
    site_id integer NOT NULL
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 665 (class 1259 OID 19049)
-- Name: view_site_images; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_site_images AS
 SELECT tbl_site_images.submission_id,
    tbl_site_images.source_id,
    tbl_site_images.local_db_id AS merged_db_id,
    tbl_site_images.local_db_id,
    tbl_site_images.public_db_id,
    tbl_site_images.site_image_id,
    tbl_site_images.contact_id,
    tbl_site_images.credit,
    tbl_site_images.date_taken,
    tbl_site_images.date_updated,
    tbl_site_images.description,
    tbl_site_images.image_location,
    tbl_site_images.image_name,
    tbl_site_images.image_type_id,
    tbl_site_images.site_id
   FROM tbl_site_images
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_site_images.site_image_id AS merged_db_id,
    0 AS local_db_id,
    tbl_site_images.site_image_id AS public_db_id,
    tbl_site_images.site_image_id,
    tbl_site_images.contact_id,
    tbl_site_images.credit,
    tbl_site_images.date_taken,
    tbl_site_images.date_updated,
    tbl_site_images.description,
    tbl_site_images.image_location,
    tbl_site_images.image_name,
    tbl_site_images.image_type_id,
    tbl_site_images.site_id
   FROM public.tbl_site_images;


SET search_path = public, pg_catalog;

--
-- TOC entry 666 (class 1259 OID 19054)
-- Name: tbl_site_locations; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_site_locations (
    site_location_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    location_id integer NOT NULL,
    site_id integer NOT NULL
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 667 (class 1259 OID 19058)
-- Name: view_site_locations; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_site_locations AS
 SELECT tbl_site_locations.submission_id,
    tbl_site_locations.source_id,
    tbl_site_locations.local_db_id AS merged_db_id,
    tbl_site_locations.local_db_id,
    tbl_site_locations.public_db_id,
    tbl_site_locations.site_location_id,
    tbl_site_locations.date_updated,
    tbl_site_locations.location_id,
    tbl_site_locations.site_id
   FROM tbl_site_locations
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_site_locations.site_location_id AS merged_db_id,
    0 AS local_db_id,
    tbl_site_locations.site_location_id AS public_db_id,
    tbl_site_locations.site_location_id,
    tbl_site_locations.date_updated,
    tbl_site_locations.location_id,
    tbl_site_locations.site_id
   FROM public.tbl_site_locations;


SET search_path = public, pg_catalog;

--
-- TOC entry 668 (class 1259 OID 19062)
-- Name: tbl_site_natgridrefs; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_site_natgridrefs (
    site_natgridref_id integer NOT NULL,
    site_id integer NOT NULL,
    method_id integer NOT NULL,
    natgridref character varying NOT NULL,
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 7124 (class 0 OID 0)
-- Dependencies: 668
-- Name: TABLE tbl_site_natgridrefs; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE tbl_site_natgridrefs IS '20120507pib: removed tbl_national_grids and trasfered storage of coordinate systems to tbl_methods';


--
-- TOC entry 7125 (class 0 OID 0)
-- Dependencies: 668
-- Name: COLUMN tbl_site_natgridrefs.method_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_site_natgridrefs.method_id IS 'points to coordinate system.';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 669 (class 1259 OID 19069)
-- Name: view_site_natgridrefs; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_site_natgridrefs AS
 SELECT tbl_site_natgridrefs.submission_id,
    tbl_site_natgridrefs.source_id,
    tbl_site_natgridrefs.local_db_id AS merged_db_id,
    tbl_site_natgridrefs.local_db_id,
    tbl_site_natgridrefs.public_db_id,
    tbl_site_natgridrefs.site_natgridref_id,
    tbl_site_natgridrefs.site_id,
    tbl_site_natgridrefs.method_id,
    tbl_site_natgridrefs.natgridref,
    tbl_site_natgridrefs.date_updated
   FROM tbl_site_natgridrefs
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_site_natgridrefs.site_natgridref_id AS merged_db_id,
    0 AS local_db_id,
    tbl_site_natgridrefs.site_natgridref_id AS public_db_id,
    tbl_site_natgridrefs.site_natgridref_id,
    tbl_site_natgridrefs.site_id,
    tbl_site_natgridrefs.method_id,
    tbl_site_natgridrefs.natgridref,
    tbl_site_natgridrefs.date_updated
   FROM public.tbl_site_natgridrefs;


SET search_path = public, pg_catalog;

--
-- TOC entry 670 (class 1259 OID 19074)
-- Name: tbl_site_other_records; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_site_other_records (
    site_other_records_id integer NOT NULL,
    site_id integer,
    biblio_id integer,
    record_type_id integer,
    description text,
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 7126 (class 0 OID 0)
-- Dependencies: 670
-- Name: COLUMN tbl_site_other_records.biblio_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_site_other_records.biblio_id IS 'reference to publication containing data';


--
-- TOC entry 7127 (class 0 OID 0)
-- Dependencies: 670
-- Name: COLUMN tbl_site_other_records.record_type_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_site_other_records.record_type_id IS 'reference to type of data (proxy)';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 671 (class 1259 OID 19081)
-- Name: view_site_other_records; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_site_other_records AS
 SELECT tbl_site_other_records.submission_id,
    tbl_site_other_records.source_id,
    tbl_site_other_records.local_db_id AS merged_db_id,
    tbl_site_other_records.local_db_id,
    tbl_site_other_records.public_db_id,
    tbl_site_other_records.site_other_records_id,
    tbl_site_other_records.site_id,
    tbl_site_other_records.biblio_id,
    tbl_site_other_records.record_type_id,
    tbl_site_other_records.description,
    tbl_site_other_records.date_updated
   FROM tbl_site_other_records
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_site_other_records.site_other_records_id AS merged_db_id,
    0 AS local_db_id,
    tbl_site_other_records.site_other_records_id AS public_db_id,
    tbl_site_other_records.site_other_records_id,
    tbl_site_other_records.site_id,
    tbl_site_other_records.biblio_id,
    tbl_site_other_records.record_type_id,
    tbl_site_other_records.description,
    tbl_site_other_records.date_updated
   FROM public.tbl_site_other_records;


SET search_path = public, pg_catalog;

--
-- TOC entry 672 (class 1259 OID 19086)
-- Name: tbl_site_preservation_status; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_site_preservation_status (
    site_preservation_status_id integer NOT NULL,
    site_id integer,
    preservation_status_or_threat character varying,
    description text,
    assessment_type character varying,
    assessment_author_contact_id integer,
    date_updated timestamp with time zone DEFAULT now(),
    "Evaluation_date" date
);


--
-- TOC entry 7128 (class 0 OID 0)
-- Dependencies: 672
-- Name: COLUMN tbl_site_preservation_status.site_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_site_preservation_status.site_id IS 'allows multiple preservation/threat records per site';


--
-- TOC entry 7129 (class 0 OID 0)
-- Dependencies: 672
-- Name: COLUMN tbl_site_preservation_status.preservation_status_or_threat; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_site_preservation_status.preservation_status_or_threat IS 'descriptive name for:
preservation status, e.g. (e.g. lost, damaged, threatened) or
main reason for potential or real risk to site (e.g. hydroelectric, oil exploitation, mining, forestry, climate change, erosion)';


--
-- TOC entry 7130 (class 0 OID 0)
-- Dependencies: 672
-- Name: COLUMN tbl_site_preservation_status.description; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_site_preservation_status.description IS 'brief description of site preservation status or threat to site preservation. include data here that does not fit in the other fields (for now - we may expand these features later if demand exists)';


--
-- TOC entry 7131 (class 0 OID 0)
-- Dependencies: 672
-- Name: COLUMN tbl_site_preservation_status.assessment_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_site_preservation_status.assessment_type IS 'type of assessment giving information on preservation status and threat, e.g. unesco report, archaeological survey';


--
-- TOC entry 7132 (class 0 OID 0)
-- Dependencies: 672
-- Name: COLUMN tbl_site_preservation_status.assessment_author_contact_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_site_preservation_status.assessment_author_contact_id IS 'person or authority in tbl_contacts responsible for the assessment of preservation status and threat';


--
-- TOC entry 7133 (class 0 OID 0)
-- Dependencies: 672
-- Name: COLUMN tbl_site_preservation_status."Evaluation_date"; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_site_preservation_status."Evaluation_date" IS 'Date of assessment, either formal or informal';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 673 (class 1259 OID 19093)
-- Name: view_site_preservation_status; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_site_preservation_status AS
 SELECT tbl_site_preservation_status.submission_id,
    tbl_site_preservation_status.source_id,
    tbl_site_preservation_status.local_db_id AS merged_db_id,
    tbl_site_preservation_status.local_db_id,
    tbl_site_preservation_status.public_db_id,
    tbl_site_preservation_status.site_preservation_status_id,
    tbl_site_preservation_status.site_id,
    tbl_site_preservation_status.preservation_status_or_threat,
    tbl_site_preservation_status.description,
    tbl_site_preservation_status.assessment_type,
    tbl_site_preservation_status.assessment_author_contact_id,
    tbl_site_preservation_status.date_updated
   FROM tbl_site_preservation_status
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_site_preservation_status.site_preservation_status_id AS merged_db_id,
    0 AS local_db_id,
    tbl_site_preservation_status.site_preservation_status_id AS public_db_id,
    tbl_site_preservation_status.site_preservation_status_id,
    tbl_site_preservation_status.site_id,
    tbl_site_preservation_status.preservation_status_or_threat,
    tbl_site_preservation_status.description,
    tbl_site_preservation_status.assessment_type,
    tbl_site_preservation_status.assessment_author_contact_id,
    tbl_site_preservation_status.date_updated
   FROM public.tbl_site_preservation_status;


SET search_path = public, pg_catalog;

--
-- TOC entry 674 (class 1259 OID 19098)
-- Name: tbl_site_references; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_site_references (
    site_reference_id integer NOT NULL,
    site_id integer DEFAULT 0,
    biblio_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now()
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 675 (class 1259 OID 19103)
-- Name: view_site_references; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_site_references AS
 SELECT tbl_site_references.submission_id,
    tbl_site_references.source_id,
    tbl_site_references.local_db_id AS merged_db_id,
    tbl_site_references.local_db_id,
    tbl_site_references.public_db_id,
    tbl_site_references.site_reference_id,
    tbl_site_references.site_id,
    tbl_site_references.biblio_id,
    tbl_site_references.date_updated
   FROM tbl_site_references
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_site_references.site_reference_id AS merged_db_id,
    0 AS local_db_id,
    tbl_site_references.site_reference_id AS public_db_id,
    tbl_site_references.site_reference_id,
    tbl_site_references.site_id,
    tbl_site_references.biblio_id,
    tbl_site_references.date_updated
   FROM public.tbl_site_references;


SET search_path = public, pg_catalog;

--
-- TOC entry 676 (class 1259 OID 19107)
-- Name: tbl_sites; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_sites (
    site_id integer NOT NULL,
    altitude numeric(18,10),
    latitude_dd numeric(18,10),
    longitude_dd numeric(18,10),
    national_site_identifier character varying(255),
    site_description text DEFAULT NULL::character varying,
    site_name character varying(50) DEFAULT NULL::character varying,
    site_preservation_status_id integer,
    date_updated timestamp with time zone DEFAULT now()
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 677 (class 1259 OID 19116)
-- Name: view_sites; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_sites AS
 SELECT tbl_sites.submission_id,
    tbl_sites.source_id,
    tbl_sites.local_db_id AS merged_db_id,
    tbl_sites.local_db_id,
    tbl_sites.public_db_id,
    tbl_sites.site_id,
    tbl_sites.altitude,
    tbl_sites.latitude_dd,
    tbl_sites.longitude_dd,
    tbl_sites.national_site_identifier,
    tbl_sites.site_description,
    tbl_sites.site_name,
    tbl_sites.site_preservation_status_id,
    tbl_sites.date_updated
   FROM tbl_sites
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_sites.site_id AS merged_db_id,
    0 AS local_db_id,
    tbl_sites.site_id AS public_db_id,
    tbl_sites.site_id,
    tbl_sites.altitude,
    tbl_sites.latitude_dd,
    tbl_sites.longitude_dd,
    tbl_sites.national_site_identifier,
    tbl_sites.site_description,
    tbl_sites.site_name,
    tbl_sites.site_preservation_status_id,
    tbl_sites.date_updated
   FROM public.tbl_sites;


SET search_path = public, pg_catalog;

--
-- TOC entry 678 (class 1259 OID 19121)
-- Name: tbl_species_association_types; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_species_association_types (
    association_type_id integer NOT NULL,
    association_type_name character varying(255),
    association_description text,
    date_updated timestamp with time zone DEFAULT now()
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 679 (class 1259 OID 19128)
-- Name: view_species_association_types; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_species_association_types AS
 SELECT tbl_species_association_types.submission_id,
    tbl_species_association_types.source_id,
    tbl_species_association_types.local_db_id AS merged_db_id,
    tbl_species_association_types.local_db_id,
    tbl_species_association_types.public_db_id,
    tbl_species_association_types.association_type_id,
    tbl_species_association_types.association_type_name,
    tbl_species_association_types.association_description,
    tbl_species_association_types.date_updated
   FROM tbl_species_association_types
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_species_association_types.association_type_id AS merged_db_id,
    0 AS local_db_id,
    tbl_species_association_types.association_type_id AS public_db_id,
    tbl_species_association_types.association_type_id,
    tbl_species_association_types.association_type_name,
    tbl_species_association_types.association_description,
    tbl_species_association_types.date_updated
   FROM public.tbl_species_association_types;


SET search_path = public, pg_catalog;

--
-- TOC entry 680 (class 1259 OID 19132)
-- Name: tbl_species_associations; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_species_associations (
    species_association_id integer NOT NULL,
    associated_taxon_id integer NOT NULL,
    biblio_id integer,
    date_updated timestamp with time zone DEFAULT now(),
    taxon_id integer NOT NULL,
    association_type_id integer,
    referencing_type text
);


--
-- TOC entry 7134 (class 0 OID 0)
-- Dependencies: 680
-- Name: COLUMN tbl_species_associations.associated_taxon_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_species_associations.associated_taxon_id IS 'Taxon with which the primary taxon (taxon_id) is associated. ';


--
-- TOC entry 7135 (class 0 OID 0)
-- Dependencies: 680
-- Name: COLUMN tbl_species_associations.biblio_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_species_associations.biblio_id IS 'Reference where relationship between taxa is described or mentioned';


--
-- TOC entry 7136 (class 0 OID 0)
-- Dependencies: 680
-- Name: COLUMN tbl_species_associations.taxon_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_species_associations.taxon_id IS 'Primary taxon in relationship, i.e. this taxon has x relationship with the associated taxon';


--
-- TOC entry 7137 (class 0 OID 0)
-- Dependencies: 680
-- Name: COLUMN tbl_species_associations.association_type_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_species_associations.association_type_id IS 'Type of association between primary taxon (taxon_id) and associated taxon. Note that the direction of the association is important in most cases (e.g. x predates on y)';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 681 (class 1259 OID 19139)
-- Name: view_species_associations; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_species_associations AS
 SELECT tbl_species_associations.submission_id,
    tbl_species_associations.source_id,
    tbl_species_associations.local_db_id AS merged_db_id,
    tbl_species_associations.local_db_id,
    tbl_species_associations.public_db_id,
    tbl_species_associations.species_association_id,
    tbl_species_associations.associated_taxon_id,
    tbl_species_associations.biblio_id,
    tbl_species_associations.date_updated,
    tbl_species_associations.taxon_id,
    tbl_species_associations.association_type_id,
    tbl_species_associations.referencing_type
   FROM tbl_species_associations
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_species_associations.species_association_id AS merged_db_id,
    0 AS local_db_id,
    tbl_species_associations.species_association_id AS public_db_id,
    tbl_species_associations.species_association_id,
    tbl_species_associations.associated_taxon_id,
    tbl_species_associations.biblio_id,
    tbl_species_associations.date_updated,
    tbl_species_associations.taxon_id,
    tbl_species_associations.association_type_id,
    tbl_species_associations.referencing_type
   FROM public.tbl_species_associations;


SET search_path = public, pg_catalog;

--
-- TOC entry 682 (class 1259 OID 19144)
-- Name: tbl_taxa_common_names; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_taxa_common_names (
    taxon_common_name_id integer NOT NULL,
    common_name character varying(255) DEFAULT NULL::character varying,
    date_updated timestamp with time zone DEFAULT now(),
    language_id integer DEFAULT 0,
    taxon_id integer DEFAULT 0
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 683 (class 1259 OID 19151)
-- Name: view_taxa_common_names; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_taxa_common_names AS
 SELECT tbl_taxa_common_names.submission_id,
    tbl_taxa_common_names.source_id,
    tbl_taxa_common_names.local_db_id AS merged_db_id,
    tbl_taxa_common_names.local_db_id,
    tbl_taxa_common_names.public_db_id,
    tbl_taxa_common_names.taxon_common_name_id,
    tbl_taxa_common_names.common_name,
    tbl_taxa_common_names.date_updated,
    tbl_taxa_common_names.language_id,
    tbl_taxa_common_names.taxon_id
   FROM tbl_taxa_common_names
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_taxa_common_names.taxon_common_name_id AS merged_db_id,
    0 AS local_db_id,
    tbl_taxa_common_names.taxon_common_name_id AS public_db_id,
    tbl_taxa_common_names.taxon_common_name_id,
    tbl_taxa_common_names.common_name,
    tbl_taxa_common_names.date_updated,
    tbl_taxa_common_names.language_id,
    tbl_taxa_common_names.taxon_id
   FROM public.tbl_taxa_common_names;


SET search_path = public, pg_catalog;

--
-- TOC entry 684 (class 1259 OID 19157)
-- Name: tbl_taxa_measured_attributes; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_taxa_measured_attributes (
    measured_attribute_id integer NOT NULL,
    attribute_measure character varying(20) DEFAULT NULL::character varying,
    attribute_type character varying(25) DEFAULT NULL::character varying,
    attribute_units character varying(10) DEFAULT NULL::character varying,
    data numeric(18,10) DEFAULT 0,
    date_updated timestamp with time zone DEFAULT now(),
    taxon_id integer NOT NULL
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 685 (class 1259 OID 19165)
-- Name: view_taxa_measured_attributes; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_taxa_measured_attributes AS
 SELECT tbl_taxa_measured_attributes.submission_id,
    tbl_taxa_measured_attributes.source_id,
    tbl_taxa_measured_attributes.local_db_id AS merged_db_id,
    tbl_taxa_measured_attributes.local_db_id,
    tbl_taxa_measured_attributes.public_db_id,
    tbl_taxa_measured_attributes.measured_attribute_id,
    tbl_taxa_measured_attributes.attribute_measure,
    tbl_taxa_measured_attributes.attribute_type,
    tbl_taxa_measured_attributes.attribute_units,
    tbl_taxa_measured_attributes.data,
    tbl_taxa_measured_attributes.date_updated,
    tbl_taxa_measured_attributes.taxon_id
   FROM tbl_taxa_measured_attributes
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_taxa_measured_attributes.measured_attribute_id AS merged_db_id,
    0 AS local_db_id,
    tbl_taxa_measured_attributes.measured_attribute_id AS public_db_id,
    tbl_taxa_measured_attributes.measured_attribute_id,
    tbl_taxa_measured_attributes.attribute_measure,
    tbl_taxa_measured_attributes.attribute_type,
    tbl_taxa_measured_attributes.attribute_units,
    tbl_taxa_measured_attributes.data,
    tbl_taxa_measured_attributes.date_updated,
    tbl_taxa_measured_attributes.taxon_id
   FROM public.tbl_taxa_measured_attributes;


SET search_path = public, pg_catalog;

--
-- TOC entry 686 (class 1259 OID 19170)
-- Name: tbl_taxa_seasonality; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_taxa_seasonality (
    seasonality_id integer NOT NULL,
    activity_type_id integer NOT NULL,
    season_id integer DEFAULT 0,
    taxon_id integer NOT NULL,
    location_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 7138 (class 0 OID 0)
-- Dependencies: 686
-- Name: COLUMN tbl_taxa_seasonality.location_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_taxa_seasonality.location_id IS 'geographical relevance of seasonality data';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 687 (class 1259 OID 19175)
-- Name: view_taxa_seasonality; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_taxa_seasonality AS
 SELECT tbl_taxa_seasonality.submission_id,
    tbl_taxa_seasonality.source_id,
    tbl_taxa_seasonality.local_db_id AS merged_db_id,
    tbl_taxa_seasonality.local_db_id,
    tbl_taxa_seasonality.public_db_id,
    tbl_taxa_seasonality.seasonality_id,
    tbl_taxa_seasonality.activity_type_id,
    tbl_taxa_seasonality.season_id,
    tbl_taxa_seasonality.taxon_id,
    tbl_taxa_seasonality.location_id,
    tbl_taxa_seasonality.date_updated
   FROM tbl_taxa_seasonality
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_taxa_seasonality.seasonality_id AS merged_db_id,
    0 AS local_db_id,
    tbl_taxa_seasonality.seasonality_id AS public_db_id,
    tbl_taxa_seasonality.seasonality_id,
    tbl_taxa_seasonality.activity_type_id,
    tbl_taxa_seasonality.season_id,
    tbl_taxa_seasonality.taxon_id,
    tbl_taxa_seasonality.location_id,
    tbl_taxa_seasonality.date_updated
   FROM public.tbl_taxa_seasonality;


SET search_path = public, pg_catalog;

--
-- TOC entry 688 (class 1259 OID 19180)
-- Name: tbl_taxa_synonyms; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_taxa_synonyms (
    synonym_id integer NOT NULL,
    biblio_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    family_id integer,
    genus_id integer,
    notes text DEFAULT NULL::character varying,
    taxon_id integer,
    author_id integer,
    synonym character varying(255),
    reference_type character varying
);


--
-- TOC entry 7139 (class 0 OID 0)
-- Dependencies: 688
-- Name: COLUMN tbl_taxa_synonyms.notes; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_taxa_synonyms.notes IS 'Any information useful to the history or usage of the synonym.';


--
-- TOC entry 7140 (class 0 OID 0)
-- Dependencies: 688
-- Name: COLUMN tbl_taxa_synonyms.synonym; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_taxa_synonyms.synonym IS 'Synonym at level defined by id level. I.e. if synonym is at genus level, then only the genus synonym is included here. Another synonym record is used for the species level synonym for the same taxon only if the name is different to that used in the master list.';


--
-- TOC entry 7141 (class 0 OID 0)
-- Dependencies: 688
-- Name: COLUMN tbl_taxa_synonyms.reference_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_taxa_synonyms.reference_type IS 'Form of information relating to the synonym in the given bibliographic link, e.g. by use, definition, incorrect usage.';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 689 (class 1259 OID 19188)
-- Name: view_taxa_synonyms; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_taxa_synonyms AS
 SELECT tbl_taxa_synonyms.submission_id,
    tbl_taxa_synonyms.source_id,
    tbl_taxa_synonyms.local_db_id AS merged_db_id,
    tbl_taxa_synonyms.local_db_id,
    tbl_taxa_synonyms.public_db_id,
    tbl_taxa_synonyms.synonym_id,
    tbl_taxa_synonyms.biblio_id,
    tbl_taxa_synonyms.date_updated,
    tbl_taxa_synonyms.family_id,
    tbl_taxa_synonyms.genus_id,
    tbl_taxa_synonyms.notes,
    tbl_taxa_synonyms.taxon_id,
    tbl_taxa_synonyms.author_id,
    tbl_taxa_synonyms.synonym,
    tbl_taxa_synonyms.reference_type
   FROM tbl_taxa_synonyms
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_taxa_synonyms.synonym_id AS merged_db_id,
    0 AS local_db_id,
    tbl_taxa_synonyms.synonym_id AS public_db_id,
    tbl_taxa_synonyms.synonym_id,
    tbl_taxa_synonyms.biblio_id,
    tbl_taxa_synonyms.date_updated,
    tbl_taxa_synonyms.family_id,
    tbl_taxa_synonyms.genus_id,
    tbl_taxa_synonyms.notes,
    tbl_taxa_synonyms.taxon_id,
    tbl_taxa_synonyms.author_id,
    tbl_taxa_synonyms.synonym,
    tbl_taxa_synonyms.reference_type
   FROM public.tbl_taxa_synonyms;


SET search_path = public, pg_catalog;

--
-- TOC entry 690 (class 1259 OID 19193)
-- Name: tbl_taxa_tree_families; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_taxa_tree_families (
    family_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    family_name character varying(100) DEFAULT NULL::character varying,
    order_id integer NOT NULL
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 691 (class 1259 OID 19198)
-- Name: view_taxa_tree_families; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_taxa_tree_families AS
 SELECT tbl_taxa_tree_families.submission_id,
    tbl_taxa_tree_families.source_id,
    tbl_taxa_tree_families.local_db_id AS merged_db_id,
    tbl_taxa_tree_families.local_db_id,
    tbl_taxa_tree_families.public_db_id,
    tbl_taxa_tree_families.family_id,
    tbl_taxa_tree_families.date_updated,
    tbl_taxa_tree_families.family_name,
    tbl_taxa_tree_families.order_id
   FROM tbl_taxa_tree_families
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_taxa_tree_families.family_id AS merged_db_id,
    0 AS local_db_id,
    tbl_taxa_tree_families.family_id AS public_db_id,
    tbl_taxa_tree_families.family_id,
    tbl_taxa_tree_families.date_updated,
    tbl_taxa_tree_families.family_name,
    tbl_taxa_tree_families.order_id
   FROM public.tbl_taxa_tree_families;


SET search_path = public, pg_catalog;

--
-- TOC entry 692 (class 1259 OID 19202)
-- Name: tbl_taxa_tree_orders; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_taxa_tree_orders (
    order_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    order_name character varying(50) DEFAULT NULL::character varying,
    record_type_id integer,
    sort_order integer
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 693 (class 1259 OID 19207)
-- Name: view_taxa_tree_orders; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_taxa_tree_orders AS
 SELECT tbl_taxa_tree_orders.submission_id,
    tbl_taxa_tree_orders.source_id,
    tbl_taxa_tree_orders.local_db_id AS merged_db_id,
    tbl_taxa_tree_orders.local_db_id,
    tbl_taxa_tree_orders.public_db_id,
    tbl_taxa_tree_orders.order_id,
    tbl_taxa_tree_orders.date_updated,
    tbl_taxa_tree_orders.order_name,
    tbl_taxa_tree_orders.record_type_id,
    tbl_taxa_tree_orders.sort_order
   FROM tbl_taxa_tree_orders
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_taxa_tree_orders.order_id AS merged_db_id,
    0 AS local_db_id,
    tbl_taxa_tree_orders.order_id AS public_db_id,
    tbl_taxa_tree_orders.order_id,
    tbl_taxa_tree_orders.date_updated,
    tbl_taxa_tree_orders.order_name,
    tbl_taxa_tree_orders.record_type_id,
    tbl_taxa_tree_orders.sort_order
   FROM public.tbl_taxa_tree_orders;


SET search_path = public, pg_catalog;

--
-- TOC entry 694 (class 1259 OID 19212)
-- Name: tbl_taxonomic_order; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_taxonomic_order (
    taxonomic_order_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    taxon_id integer DEFAULT 0,
    taxonomic_code numeric(18,10) DEFAULT 0,
    taxonomic_order_system_id integer DEFAULT 0
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 695 (class 1259 OID 19219)
-- Name: view_taxonomic_order; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_taxonomic_order AS
 SELECT tbl_taxonomic_order.submission_id,
    tbl_taxonomic_order.source_id,
    tbl_taxonomic_order.local_db_id AS merged_db_id,
    tbl_taxonomic_order.local_db_id,
    tbl_taxonomic_order.public_db_id,
    tbl_taxonomic_order.taxonomic_order_id,
    tbl_taxonomic_order.date_updated,
    tbl_taxonomic_order.taxon_id,
    tbl_taxonomic_order.taxonomic_code,
    tbl_taxonomic_order.taxonomic_order_system_id
   FROM tbl_taxonomic_order
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_taxonomic_order.taxonomic_order_id AS merged_db_id,
    0 AS local_db_id,
    tbl_taxonomic_order.taxonomic_order_id AS public_db_id,
    tbl_taxonomic_order.taxonomic_order_id,
    tbl_taxonomic_order.date_updated,
    tbl_taxonomic_order.taxon_id,
    tbl_taxonomic_order.taxonomic_code,
    tbl_taxonomic_order.taxonomic_order_system_id
   FROM public.tbl_taxonomic_order;


SET search_path = public, pg_catalog;

--
-- TOC entry 696 (class 1259 OID 19224)
-- Name: tbl_taxonomic_order_biblio; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_taxonomic_order_biblio (
    taxonomic_order_biblio_id integer NOT NULL,
    biblio_id integer DEFAULT 0,
    date_updated timestamp with time zone DEFAULT now(),
    taxonomic_order_system_id integer DEFAULT 0
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 697 (class 1259 OID 19230)
-- Name: view_taxonomic_order_biblio; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_taxonomic_order_biblio AS
 SELECT tbl_taxonomic_order_biblio.submission_id,
    tbl_taxonomic_order_biblio.source_id,
    tbl_taxonomic_order_biblio.local_db_id AS merged_db_id,
    tbl_taxonomic_order_biblio.local_db_id,
    tbl_taxonomic_order_biblio.public_db_id,
    tbl_taxonomic_order_biblio.taxonomic_order_biblio_id,
    tbl_taxonomic_order_biblio.biblio_id,
    tbl_taxonomic_order_biblio.date_updated,
    tbl_taxonomic_order_biblio.taxonomic_order_system_id
   FROM tbl_taxonomic_order_biblio
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_taxonomic_order_biblio.taxonomic_order_biblio_id AS merged_db_id,
    0 AS local_db_id,
    tbl_taxonomic_order_biblio.taxonomic_order_biblio_id AS public_db_id,
    tbl_taxonomic_order_biblio.taxonomic_order_biblio_id,
    tbl_taxonomic_order_biblio.biblio_id,
    tbl_taxonomic_order_biblio.date_updated,
    tbl_taxonomic_order_biblio.taxonomic_order_system_id
   FROM public.tbl_taxonomic_order_biblio;


SET search_path = public, pg_catalog;

--
-- TOC entry 698 (class 1259 OID 19234)
-- Name: tbl_taxonomic_order_systems; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_taxonomic_order_systems (
    taxonomic_order_system_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    system_description text,
    system_name character varying(50) DEFAULT NULL::character varying
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 699 (class 1259 OID 19242)
-- Name: view_taxonomic_order_systems; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_taxonomic_order_systems AS
 SELECT tbl_taxonomic_order_systems.submission_id,
    tbl_taxonomic_order_systems.source_id,
    tbl_taxonomic_order_systems.local_db_id AS merged_db_id,
    tbl_taxonomic_order_systems.local_db_id,
    tbl_taxonomic_order_systems.public_db_id,
    tbl_taxonomic_order_systems.taxonomic_order_system_id,
    tbl_taxonomic_order_systems.date_updated,
    tbl_taxonomic_order_systems.system_description,
    tbl_taxonomic_order_systems.system_name
   FROM tbl_taxonomic_order_systems
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_taxonomic_order_systems.taxonomic_order_system_id AS merged_db_id,
    0 AS local_db_id,
    tbl_taxonomic_order_systems.taxonomic_order_system_id AS public_db_id,
    tbl_taxonomic_order_systems.taxonomic_order_system_id,
    tbl_taxonomic_order_systems.date_updated,
    tbl_taxonomic_order_systems.system_description,
    tbl_taxonomic_order_systems.system_name
   FROM public.tbl_taxonomic_order_systems;


SET search_path = public, pg_catalog;

--
-- TOC entry 700 (class 1259 OID 19246)
-- Name: tbl_taxonomy_notes; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_taxonomy_notes (
    taxonomy_notes_id integer NOT NULL,
    biblio_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    taxon_id integer NOT NULL,
    taxonomy_notes text
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 701 (class 1259 OID 19253)
-- Name: view_taxonomy_notes; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_taxonomy_notes AS
 SELECT tbl_taxonomy_notes.submission_id,
    tbl_taxonomy_notes.source_id,
    tbl_taxonomy_notes.local_db_id AS merged_db_id,
    tbl_taxonomy_notes.local_db_id,
    tbl_taxonomy_notes.public_db_id,
    tbl_taxonomy_notes.taxonomy_notes_id,
    tbl_taxonomy_notes.biblio_id,
    tbl_taxonomy_notes.date_updated,
    tbl_taxonomy_notes.taxon_id,
    tbl_taxonomy_notes.taxonomy_notes
   FROM tbl_taxonomy_notes
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_taxonomy_notes.taxonomy_notes_id AS merged_db_id,
    0 AS local_db_id,
    tbl_taxonomy_notes.taxonomy_notes_id AS public_db_id,
    tbl_taxonomy_notes.taxonomy_notes_id,
    tbl_taxonomy_notes.biblio_id,
    tbl_taxonomy_notes.date_updated,
    tbl_taxonomy_notes.taxon_id,
    tbl_taxonomy_notes.taxonomy_notes
   FROM public.tbl_taxonomy_notes;


SET search_path = public, pg_catalog;

--
-- TOC entry 702 (class 1259 OID 19258)
-- Name: tbl_tephra_dates; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_tephra_dates (
    tephra_date_id integer NOT NULL,
    analysis_entity_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    notes text,
    tephra_id integer NOT NULL,
    dating_uncertainty_id integer
);


--
-- TOC entry 7142 (class 0 OID 0)
-- Dependencies: 702
-- Name: TABLE tbl_tephra_dates; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE tbl_tephra_dates IS '20130722PIB: Added field dating_uncertainty_id to cater for >< etc.';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 703 (class 1259 OID 19265)
-- Name: view_tephra_dates; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_tephra_dates AS
 SELECT tbl_tephra_dates.submission_id,
    tbl_tephra_dates.source_id,
    tbl_tephra_dates.local_db_id AS merged_db_id,
    tbl_tephra_dates.local_db_id,
    tbl_tephra_dates.public_db_id,
    tbl_tephra_dates.tephra_date_id,
    tbl_tephra_dates.analysis_entity_id,
    tbl_tephra_dates.date_updated,
    tbl_tephra_dates.notes,
    tbl_tephra_dates.tephra_id,
    tbl_tephra_dates.dating_uncertainty_id
   FROM tbl_tephra_dates
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_tephra_dates.tephra_date_id AS merged_db_id,
    0 AS local_db_id,
    tbl_tephra_dates.tephra_date_id AS public_db_id,
    tbl_tephra_dates.tephra_date_id,
    tbl_tephra_dates.analysis_entity_id,
    tbl_tephra_dates.date_updated,
    tbl_tephra_dates.notes,
    tbl_tephra_dates.tephra_id,
    tbl_tephra_dates.dating_uncertainty_id
   FROM public.tbl_tephra_dates;


SET search_path = public, pg_catalog;

--
-- TOC entry 704 (class 1259 OID 19270)
-- Name: tbl_tephra_refs; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_tephra_refs (
    tephra_ref_id integer NOT NULL,
    biblio_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    tephra_id integer NOT NULL
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 705 (class 1259 OID 19274)
-- Name: view_tephra_refs; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_tephra_refs AS
 SELECT tbl_tephra_refs.submission_id,
    tbl_tephra_refs.source_id,
    tbl_tephra_refs.local_db_id AS merged_db_id,
    tbl_tephra_refs.local_db_id,
    tbl_tephra_refs.public_db_id,
    tbl_tephra_refs.tephra_ref_id,
    tbl_tephra_refs.biblio_id,
    tbl_tephra_refs.date_updated,
    tbl_tephra_refs.tephra_id
   FROM tbl_tephra_refs
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_tephra_refs.tephra_ref_id AS merged_db_id,
    0 AS local_db_id,
    tbl_tephra_refs.tephra_ref_id AS public_db_id,
    tbl_tephra_refs.tephra_ref_id,
    tbl_tephra_refs.biblio_id,
    tbl_tephra_refs.date_updated,
    tbl_tephra_refs.tephra_id
   FROM public.tbl_tephra_refs;


SET search_path = public, pg_catalog;

--
-- TOC entry 706 (class 1259 OID 19278)
-- Name: tbl_tephras; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_tephras (
    tephra_id integer NOT NULL,
    c14_age numeric(20,5),
    c14_age_older numeric(20,5),
    c14_age_younger numeric(20,5),
    cal_age numeric(20,5),
    cal_age_older numeric(20,5),
    cal_age_younger numeric(20,5),
    date_updated timestamp with time zone DEFAULT now(),
    notes text,
    tephra_name character varying(80)
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 707 (class 1259 OID 19285)
-- Name: view_tephras; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_tephras AS
 SELECT tbl_tephras.submission_id,
    tbl_tephras.source_id,
    tbl_tephras.local_db_id AS merged_db_id,
    tbl_tephras.local_db_id,
    tbl_tephras.public_db_id,
    tbl_tephras.tephra_id,
    tbl_tephras.c14_age,
    tbl_tephras.c14_age_older,
    tbl_tephras.c14_age_younger,
    tbl_tephras.cal_age,
    tbl_tephras.cal_age_older,
    tbl_tephras.cal_age_younger,
    tbl_tephras.date_updated,
    tbl_tephras.notes,
    tbl_tephras.tephra_name
   FROM tbl_tephras
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_tephras.tephra_id AS merged_db_id,
    0 AS local_db_id,
    tbl_tephras.tephra_id AS public_db_id,
    tbl_tephras.tephra_id,
    tbl_tephras.c14_age,
    tbl_tephras.c14_age_older,
    tbl_tephras.c14_age_younger,
    tbl_tephras.cal_age,
    tbl_tephras.cal_age_older,
    tbl_tephras.cal_age_younger,
    tbl_tephras.date_updated,
    tbl_tephras.notes,
    tbl_tephras.tephra_name
   FROM public.tbl_tephras;


SET search_path = public, pg_catalog;

--
-- TOC entry 708 (class 1259 OID 19290)
-- Name: tbl_text_biology; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_text_biology (
    biology_id integer NOT NULL,
    biblio_id integer NOT NULL,
    biology_text text,
    date_updated timestamp with time zone DEFAULT now(),
    taxon_id integer NOT NULL
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 709 (class 1259 OID 19297)
-- Name: view_text_biology; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_text_biology AS
 SELECT tbl_text_biology.submission_id,
    tbl_text_biology.source_id,
    tbl_text_biology.local_db_id AS merged_db_id,
    tbl_text_biology.local_db_id,
    tbl_text_biology.public_db_id,
    tbl_text_biology.biology_id,
    tbl_text_biology.biblio_id,
    tbl_text_biology.biology_text,
    tbl_text_biology.date_updated,
    tbl_text_biology.taxon_id
   FROM tbl_text_biology
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_text_biology.biology_id AS merged_db_id,
    0 AS local_db_id,
    tbl_text_biology.biology_id AS public_db_id,
    tbl_text_biology.biology_id,
    tbl_text_biology.biblio_id,
    tbl_text_biology.biology_text,
    tbl_text_biology.date_updated,
    tbl_text_biology.taxon_id
   FROM public.tbl_text_biology;


SET search_path = public, pg_catalog;

--
-- TOC entry 710 (class 1259 OID 19302)
-- Name: tbl_text_distribution; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_text_distribution (
    distribution_id integer NOT NULL,
    biblio_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    distribution_text text,
    taxon_id integer NOT NULL
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 711 (class 1259 OID 19309)
-- Name: view_text_distribution; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_text_distribution AS
 SELECT tbl_text_distribution.submission_id,
    tbl_text_distribution.source_id,
    tbl_text_distribution.local_db_id AS merged_db_id,
    tbl_text_distribution.local_db_id,
    tbl_text_distribution.public_db_id,
    tbl_text_distribution.distribution_id,
    tbl_text_distribution.biblio_id,
    tbl_text_distribution.date_updated,
    tbl_text_distribution.distribution_text,
    tbl_text_distribution.taxon_id
   FROM tbl_text_distribution
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_text_distribution.distribution_id AS merged_db_id,
    0 AS local_db_id,
    tbl_text_distribution.distribution_id AS public_db_id,
    tbl_text_distribution.distribution_id,
    tbl_text_distribution.biblio_id,
    tbl_text_distribution.date_updated,
    tbl_text_distribution.distribution_text,
    tbl_text_distribution.taxon_id
   FROM public.tbl_text_distribution;


SET search_path = public, pg_catalog;

--
-- TOC entry 712 (class 1259 OID 19314)
-- Name: tbl_text_identification_keys; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_text_identification_keys (
    key_id integer NOT NULL,
    biblio_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    key_text text,
    taxon_id integer NOT NULL
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 713 (class 1259 OID 19321)
-- Name: view_text_identification_keys; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_text_identification_keys AS
 SELECT tbl_text_identification_keys.submission_id,
    tbl_text_identification_keys.source_id,
    tbl_text_identification_keys.local_db_id AS merged_db_id,
    tbl_text_identification_keys.local_db_id,
    tbl_text_identification_keys.public_db_id,
    tbl_text_identification_keys.key_id,
    tbl_text_identification_keys.biblio_id,
    tbl_text_identification_keys.date_updated,
    tbl_text_identification_keys.key_text,
    tbl_text_identification_keys.taxon_id
   FROM tbl_text_identification_keys
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_text_identification_keys.key_id AS merged_db_id,
    0 AS local_db_id,
    tbl_text_identification_keys.key_id AS public_db_id,
    tbl_text_identification_keys.key_id,
    tbl_text_identification_keys.biblio_id,
    tbl_text_identification_keys.date_updated,
    tbl_text_identification_keys.key_text,
    tbl_text_identification_keys.taxon_id
   FROM public.tbl_text_identification_keys;


SET search_path = public, pg_catalog;

--
-- TOC entry 714 (class 1259 OID 19326)
-- Name: tbl_units; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_units (
    unit_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now(),
    description text,
    unit_abbrev character varying(15),
    unit_name character varying(50) NOT NULL
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 715 (class 1259 OID 19333)
-- Name: view_units; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_units AS
 SELECT tbl_units.submission_id,
    tbl_units.source_id,
    tbl_units.local_db_id AS merged_db_id,
    tbl_units.local_db_id,
    tbl_units.public_db_id,
    tbl_units.unit_id,
    tbl_units.date_updated,
    tbl_units.description,
    tbl_units.unit_abbrev,
    tbl_units.unit_name
   FROM tbl_units
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_units.unit_id AS merged_db_id,
    0 AS local_db_id,
    tbl_units.unit_id AS public_db_id,
    tbl_units.unit_id,
    tbl_units.date_updated,
    tbl_units.description,
    tbl_units.unit_abbrev,
    tbl_units.unit_name
   FROM public.tbl_units;


SET search_path = public, pg_catalog;

--
-- TOC entry 716 (class 1259 OID 19338)
-- Name: tbl_updates_log; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_updates_log (
    updates_log_id integer NOT NULL,
    table_name character varying(150) NOT NULL,
    last_updated date NOT NULL
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 717 (class 1259 OID 19341)
-- Name: view_updates_log; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_updates_log AS
 SELECT tbl_updates_log.submission_id,
    tbl_updates_log.source_id,
    tbl_updates_log.local_db_id AS merged_db_id,
    tbl_updates_log.local_db_id,
    tbl_updates_log.public_db_id,
    tbl_updates_log.updates_log_id,
    tbl_updates_log.table_name,
    tbl_updates_log.last_updated
   FROM tbl_updates_log
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_updates_log.updates_log_id AS merged_db_id,
    0 AS local_db_id,
    tbl_updates_log.updates_log_id AS public_db_id,
    tbl_updates_log.updates_log_id,
    tbl_updates_log.table_name,
    tbl_updates_log.last_updated
   FROM public.tbl_updates_log;


SET search_path = public, pg_catalog;

--
-- TOC entry 718 (class 1259 OID 19345)
-- Name: tbl_years_types; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_years_types (
    years_type_id integer NOT NULL,
    name character varying NOT NULL,
    description text,
    date_updated timestamp with time zone DEFAULT now()
);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 719 (class 1259 OID 19352)
-- Name: view_years_types; Type: VIEW; Schema: clearing_house; Owner: -
--

CREATE VIEW view_years_types AS
 SELECT tbl_years_types.submission_id,
    tbl_years_types.source_id,
    tbl_years_types.local_db_id AS merged_db_id,
    tbl_years_types.local_db_id,
    tbl_years_types.public_db_id,
    tbl_years_types.years_type_id,
    tbl_years_types.name,
    tbl_years_types.description,
    tbl_years_types.date_updated
   FROM tbl_years_types
UNION
 SELECT 0 AS submission_id,
    2 AS source_id,
    tbl_years_types.years_type_id AS merged_db_id,
    0 AS local_db_id,
    tbl_years_types.years_type_id AS public_db_id,
    tbl_years_types.years_type_id,
    tbl_years_types.name,
    tbl_years_types.description,
    tbl_years_types.date_updated
   FROM public.tbl_years_types;


SET search_path = metainformation, pg_catalog;

--
-- TOC entry 720 (class 1259 OID 19356)
-- Name: file_name_data_download_seq; Type: SEQUENCE; Schema: metainformation; Owner: -
--

CREATE SEQUENCE file_name_data_download_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 721 (class 1259 OID 19358)
-- Name: language_definitions; Type: TABLE; Schema: metainformation; Owner: -
--

CREATE TABLE language_definitions (
    id integer NOT NULL,
    language character varying(8),
    language_name character varying(32),
    active boolean DEFAULT true
);


--
-- TOC entry 722 (class 1259 OID 19362)
-- Name: language_definitions_id_seq; Type: SEQUENCE; Schema: metainformation; Owner: -
--

CREATE SEQUENCE language_definitions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7143 (class 0 OID 0)
-- Dependencies: 722
-- Name: language_definitions_id_seq; Type: SEQUENCE OWNED BY; Schema: metainformation; Owner: -
--

ALTER SEQUENCE language_definitions_id_seq OWNED BY language_definitions.id;


--
-- TOC entry 723 (class 1259 OID 19364)
-- Name: measured_values_by_physical_sample; Type: VIEW; Schema: metainformation; Owner: -
--

CREATE VIEW measured_values_by_physical_sample AS
 SELECT tbl_physical_samples.physical_sample_id,
    max(values_8_0.measured_value) AS max_value_8_0,
    min(values_8_0.measured_value) AS min_value_8_0,
    avg(values_8_0.measured_value) AS value_8_0,
    count(values_8_0.*) AS count_8_0,
    max(values_32_124.measured_value) AS max_value_32_124,
    min(values_32_124.measured_value) AS min_value_32_124,
    avg(values_32_124.measured_value) AS value_32_124,
    count(values_32_124.*) AS count_32_124,
    max(values_32_0.measured_value) AS max_value_32_0,
    min(values_32_0.measured_value) AS min_value_32_0,
    avg(values_32_0.measured_value) AS value_32_0,
    count(values_32_0.*) AS count_32_0,
    max(values_32_112.measured_value) AS max_value_32_112,
    min(values_32_112.measured_value) AS min_value_32_112,
    avg(values_32_112.measured_value) AS value_32_112,
    count(values_32_112.*) AS count_32_112,
    max(values_32_82.measured_value) AS max_value_32_82,
    min(values_32_82.measured_value) AS min_value_32_82,
    avg(values_32_82.measured_value) AS value_32_82,
    count(values_32_82.*) AS count_32_82,
    max(values_33_112.measured_value) AS max_value_33_112,
    min(values_33_112.measured_value) AS min_value_33_112,
    avg(values_33_112.measured_value) AS value_33_112,
    count(values_33_112.*) AS count_33_112,
    max(values_33_82.measured_value) AS max_value_33_82,
    min(values_33_82.measured_value) AS min_value_33_82,
    avg(values_33_82.measured_value) AS value_33_82,
    count(values_33_82.*) AS count_33_82,
    max(values_33_0.measured_value) AS max_value_33_0,
    min(values_33_0.measured_value) AS min_value_33_0,
    avg(values_33_0.measured_value) AS value_33_0,
    count(values_33_0.*) AS count_33_0,
    max(values_33_87.measured_value) AS max_value_33_87,
    min(values_33_87.measured_value) AS min_value_33_87,
    avg(values_33_87.measured_value) AS value_33_87,
    count(values_33_87.*) AS count_33_87,
    max(values_35_124.measured_value) AS max_value_35_124,
    min(values_35_124.measured_value) AS min_value_35_124,
    avg(values_35_124.measured_value) AS value_35_124,
    count(values_35_124.*) AS count_35_124,
    max(values_35_0.measured_value) AS max_value_35_0,
    min(values_35_0.measured_value) AS min_value_35_0,
    avg(values_35_0.measured_value) AS value_35_0,
    count(values_35_0.*) AS count_35_0,
    max(values_35_82.measured_value) AS max_value_35_82,
    min(values_35_82.measured_value) AS min_value_35_82,
    avg(values_35_82.measured_value) AS value_35_82,
    count(values_35_82.*) AS count_35_82,
    max(values_36_0.measured_value) AS max_value_36_0,
    min(values_36_0.measured_value) AS min_value_36_0,
    avg(values_36_0.measured_value) AS value_36_0,
    count(values_36_0.*) AS count_36_0,
    max(values_36_82.measured_value) AS max_value_36_82,
    min(values_36_82.measured_value) AS min_value_36_82,
    avg(values_36_82.measured_value) AS value_36_82,
    count(values_36_82.*) AS count_36_82,
    max(values_37_112.measured_value) AS max_value_37_112,
    min(values_37_112.measured_value) AS min_value_37_112,
    avg(values_37_112.measured_value) AS value_37_112,
    count(values_37_112.*) AS count_37_112,
    max(values_37_124.measured_value) AS max_value_37_124,
    min(values_37_124.measured_value) AS min_value_37_124,
    avg(values_37_124.measured_value) AS value_37_124,
    count(values_37_124.*) AS count_37_124,
    max(values_37_0.measured_value) AS max_value_37_0,
    min(values_37_0.measured_value) AS min_value_37_0,
    avg(values_37_0.measured_value) AS value_37_0,
    count(values_37_0.*) AS count_37_0,
    max(values_74_124.measured_value) AS max_value_74_124,
    min(values_74_124.measured_value) AS min_value_74_124,
    avg(values_74_124.measured_value) AS value_74_124,
    count(values_74_124.*) AS count_74_124,
    max(values_74_82.measured_value) AS max_value_74_82,
    min(values_74_82.measured_value) AS min_value_74_82,
    avg(values_74_82.measured_value) AS value_74_82,
    count(values_74_82.*) AS count_74_82,
    max(values_74_112.measured_value) AS max_value_74_112,
    min(values_74_112.measured_value) AS min_value_74_112,
    avg(values_74_112.measured_value) AS value_74_112,
    count(values_74_112.*) AS count_74_112,
    max(values_74_0.measured_value) AS max_value_74_0,
    min(values_74_0.measured_value) AS min_value_74_0,
    avg(values_74_0.measured_value) AS value_74_0,
    count(values_74_0.*) AS count_74_0,
    max(values_94_0.measured_value) AS max_value_94_0,
    min(values_94_0.measured_value) AS min_value_94_0,
    avg(values_94_0.measured_value) AS value_94_0,
    count(values_94_0.*) AS count_94_0,
    max(values_94_82.measured_value) AS max_value_94_82,
    min(values_94_82.measured_value) AS min_value_94_82,
    avg(values_94_82.measured_value) AS value_94_82,
    count(values_94_82.*) AS count_94_82,
    max(values_106_0.measured_value) AS max_value_106_0,
    min(values_106_0.measured_value) AS min_value_106_0,
    avg(values_106_0.measured_value) AS value_106_0,
    count(values_106_0.*) AS count_106_0,
    max(values_107_0.measured_value) AS max_value_107_0,
    min(values_107_0.measured_value) AS min_value_107_0,
    avg(values_107_0.measured_value) AS value_107_0,
    count(values_107_0.*) AS count_107_0,
    max(values_109_0.measured_value) AS max_value_109_0,
    min(values_109_0.measured_value) AS min_value_109_0,
    avg(values_109_0.measured_value) AS value_109_0,
    count(values_109_0.*) AS count_109_0,
    max(values_110_0.measured_value) AS max_value_110_0,
    min(values_110_0.measured_value) AS min_value_110_0,
    avg(values_110_0.measured_value) AS value_110_0,
    count(values_110_0.*) AS count_110_0,
    max(values_111_0.measured_value) AS max_value_111_0,
    min(values_111_0.measured_value) AS min_value_111_0,
    avg(values_111_0.measured_value) AS value_111_0,
    count(values_111_0.*) AS count_111_0,
    max(values_117_0.measured_value) AS max_value_117_0,
    min(values_117_0.measured_value) AS min_value_117_0,
    avg(values_117_0.measured_value) AS value_117_0,
    count(values_117_0.*) AS count_117_0,
    max(values_118_0.measured_value) AS max_value_118_0,
    min(values_118_0.measured_value) AS min_value_118_0,
    avg(values_118_0.measured_value) AS value_118_0,
    count(values_118_0.*) AS count_118_0,
    max(values_119_0.measured_value) AS max_value_119_0,
    min(values_119_0.measured_value) AS min_value_119_0,
    avg(values_119_0.measured_value) AS value_119_0,
    count(values_119_0.*) AS count_119_0
   FROM ((((((((((((((((((((((((((((((((public.tbl_analysis_entities
     JOIN public.tbl_physical_samples ON ((tbl_physical_samples.physical_sample_id = tbl_analysis_entities.physical_sample_id)))
     LEFT JOIN ( SELECT tbl_measured_values.measured_value,
            tbl_measured_values.analysis_entity_id
           FROM ((public.tbl_measured_values
             JOIN public.tbl_analysis_entities tbl_analysis_entities_1 ON ((tbl_measured_values.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
             JOIN public.tbl_datasets ON ((tbl_datasets.dataset_id = tbl_analysis_entities_1.dataset_id)))
          WHERE (tbl_datasets.method_id = 8)) values_8_0 ON ((tbl_analysis_entities.analysis_entity_id = values_8_0.analysis_entity_id)))
     LEFT JOIN ( SELECT tbl_measured_values.measured_value,
            tbl_measured_values.analysis_entity_id
           FROM (((public.tbl_measured_values
             JOIN public.tbl_analysis_entities tbl_analysis_entities_1 ON ((tbl_measured_values.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
             JOIN public.tbl_datasets ON ((tbl_datasets.dataset_id = tbl_analysis_entities_1.dataset_id)))
             LEFT JOIN public.tbl_analysis_entity_prep_methods ON ((tbl_analysis_entity_prep_methods.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
          WHERE ((tbl_datasets.method_id = 32) AND (COALESCE(tbl_analysis_entity_prep_methods.method_id, 0) = 124))) values_32_124 ON ((tbl_analysis_entities.analysis_entity_id = values_32_124.analysis_entity_id)))
     LEFT JOIN ( SELECT tbl_measured_values.measured_value,
            tbl_measured_values.analysis_entity_id
           FROM ((public.tbl_measured_values
             JOIN public.tbl_analysis_entities tbl_analysis_entities_1 ON ((tbl_measured_values.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
             JOIN public.tbl_datasets ON ((tbl_datasets.dataset_id = tbl_analysis_entities_1.dataset_id)))
          WHERE (tbl_datasets.method_id = 32)) values_32_0 ON ((tbl_analysis_entities.analysis_entity_id = values_32_0.analysis_entity_id)))
     LEFT JOIN ( SELECT tbl_measured_values.measured_value,
            tbl_measured_values.analysis_entity_id
           FROM (((public.tbl_measured_values
             JOIN public.tbl_analysis_entities tbl_analysis_entities_1 ON ((tbl_measured_values.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
             JOIN public.tbl_datasets ON ((tbl_datasets.dataset_id = tbl_analysis_entities_1.dataset_id)))
             LEFT JOIN public.tbl_analysis_entity_prep_methods ON ((tbl_analysis_entity_prep_methods.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
          WHERE ((tbl_datasets.method_id = 32) AND (COALESCE(tbl_analysis_entity_prep_methods.method_id, 0) = 112))) values_32_112 ON ((tbl_analysis_entities.analysis_entity_id = values_32_112.analysis_entity_id)))
     LEFT JOIN ( SELECT tbl_measured_values.measured_value,
            tbl_measured_values.analysis_entity_id
           FROM (((public.tbl_measured_values
             JOIN public.tbl_analysis_entities tbl_analysis_entities_1 ON ((tbl_measured_values.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
             JOIN public.tbl_datasets ON ((tbl_datasets.dataset_id = tbl_analysis_entities_1.dataset_id)))
             LEFT JOIN public.tbl_analysis_entity_prep_methods ON ((tbl_analysis_entity_prep_methods.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
          WHERE ((tbl_datasets.method_id = 32) AND (COALESCE(tbl_analysis_entity_prep_methods.method_id, 0) = 82))) values_32_82 ON ((tbl_analysis_entities.analysis_entity_id = values_32_82.analysis_entity_id)))
     LEFT JOIN ( SELECT tbl_measured_values.measured_value,
            tbl_measured_values.analysis_entity_id
           FROM (((public.tbl_measured_values
             JOIN public.tbl_analysis_entities tbl_analysis_entities_1 ON ((tbl_measured_values.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
             JOIN public.tbl_datasets ON ((tbl_datasets.dataset_id = tbl_analysis_entities_1.dataset_id)))
             LEFT JOIN public.tbl_analysis_entity_prep_methods ON ((tbl_analysis_entity_prep_methods.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
          WHERE ((tbl_datasets.method_id = 33) AND (COALESCE(tbl_analysis_entity_prep_methods.method_id, 0) = 112))) values_33_112 ON ((tbl_analysis_entities.analysis_entity_id = values_33_112.analysis_entity_id)))
     LEFT JOIN ( SELECT tbl_measured_values.measured_value,
            tbl_measured_values.analysis_entity_id
           FROM (((public.tbl_measured_values
             JOIN public.tbl_analysis_entities tbl_analysis_entities_1 ON ((tbl_measured_values.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
             JOIN public.tbl_datasets ON ((tbl_datasets.dataset_id = tbl_analysis_entities_1.dataset_id)))
             LEFT JOIN public.tbl_analysis_entity_prep_methods ON ((tbl_analysis_entity_prep_methods.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
          WHERE ((tbl_datasets.method_id = 33) AND (COALESCE(tbl_analysis_entity_prep_methods.method_id, 0) = 82))) values_33_82 ON ((tbl_analysis_entities.analysis_entity_id = values_33_82.analysis_entity_id)))
     LEFT JOIN ( SELECT tbl_measured_values.measured_value,
            tbl_measured_values.analysis_entity_id
           FROM ((public.tbl_measured_values
             JOIN public.tbl_analysis_entities tbl_analysis_entities_1 ON ((tbl_measured_values.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
             JOIN public.tbl_datasets ON ((tbl_datasets.dataset_id = tbl_analysis_entities_1.dataset_id)))
          WHERE (tbl_datasets.method_id = 33)) values_33_0 ON ((tbl_analysis_entities.analysis_entity_id = values_33_0.analysis_entity_id)))
     LEFT JOIN ( SELECT tbl_measured_values.measured_value,
            tbl_measured_values.analysis_entity_id
           FROM (((public.tbl_measured_values
             JOIN public.tbl_analysis_entities tbl_analysis_entities_1 ON ((tbl_measured_values.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
             JOIN public.tbl_datasets ON ((tbl_datasets.dataset_id = tbl_analysis_entities_1.dataset_id)))
             LEFT JOIN public.tbl_analysis_entity_prep_methods ON ((tbl_analysis_entity_prep_methods.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
          WHERE ((tbl_datasets.method_id = 33) AND (COALESCE(tbl_analysis_entity_prep_methods.method_id, 0) = 87))) values_33_87 ON ((tbl_analysis_entities.analysis_entity_id = values_33_87.analysis_entity_id)))
     LEFT JOIN ( SELECT tbl_measured_values.measured_value,
            tbl_measured_values.analysis_entity_id
           FROM (((public.tbl_measured_values
             JOIN public.tbl_analysis_entities tbl_analysis_entities_1 ON ((tbl_measured_values.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
             JOIN public.tbl_datasets ON ((tbl_datasets.dataset_id = tbl_analysis_entities_1.dataset_id)))
             LEFT JOIN public.tbl_analysis_entity_prep_methods ON ((tbl_analysis_entity_prep_methods.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
          WHERE ((tbl_datasets.method_id = 35) AND (COALESCE(tbl_analysis_entity_prep_methods.method_id, 0) = 124))) values_35_124 ON ((tbl_analysis_entities.analysis_entity_id = values_35_124.analysis_entity_id)))
     LEFT JOIN ( SELECT tbl_measured_values.measured_value,
            tbl_measured_values.analysis_entity_id
           FROM ((public.tbl_measured_values
             JOIN public.tbl_analysis_entities tbl_analysis_entities_1 ON ((tbl_measured_values.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
             JOIN public.tbl_datasets ON ((tbl_datasets.dataset_id = tbl_analysis_entities_1.dataset_id)))
          WHERE (tbl_datasets.method_id = 35)) values_35_0 ON ((tbl_analysis_entities.analysis_entity_id = values_35_0.analysis_entity_id)))
     LEFT JOIN ( SELECT tbl_measured_values.measured_value,
            tbl_measured_values.analysis_entity_id
           FROM (((public.tbl_measured_values
             JOIN public.tbl_analysis_entities tbl_analysis_entities_1 ON ((tbl_measured_values.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
             JOIN public.tbl_datasets ON ((tbl_datasets.dataset_id = tbl_analysis_entities_1.dataset_id)))
             LEFT JOIN public.tbl_analysis_entity_prep_methods ON ((tbl_analysis_entity_prep_methods.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
          WHERE ((tbl_datasets.method_id = 35) AND (COALESCE(tbl_analysis_entity_prep_methods.method_id, 0) = 82))) values_35_82 ON ((tbl_analysis_entities.analysis_entity_id = values_35_82.analysis_entity_id)))
     LEFT JOIN ( SELECT tbl_measured_values.measured_value,
            tbl_measured_values.analysis_entity_id
           FROM ((public.tbl_measured_values
             JOIN public.tbl_analysis_entities tbl_analysis_entities_1 ON ((tbl_measured_values.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
             JOIN public.tbl_datasets ON ((tbl_datasets.dataset_id = tbl_analysis_entities_1.dataset_id)))
          WHERE (tbl_datasets.method_id = 36)) values_36_0 ON ((tbl_analysis_entities.analysis_entity_id = values_36_0.analysis_entity_id)))
     LEFT JOIN ( SELECT tbl_measured_values.measured_value,
            tbl_measured_values.analysis_entity_id
           FROM (((public.tbl_measured_values
             JOIN public.tbl_analysis_entities tbl_analysis_entities_1 ON ((tbl_measured_values.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
             JOIN public.tbl_datasets ON ((tbl_datasets.dataset_id = tbl_analysis_entities_1.dataset_id)))
             LEFT JOIN public.tbl_analysis_entity_prep_methods ON ((tbl_analysis_entity_prep_methods.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
          WHERE ((tbl_datasets.method_id = 36) AND (COALESCE(tbl_analysis_entity_prep_methods.method_id, 0) = 82))) values_36_82 ON ((tbl_analysis_entities.analysis_entity_id = values_36_82.analysis_entity_id)))
     LEFT JOIN ( SELECT tbl_measured_values.measured_value,
            tbl_measured_values.analysis_entity_id
           FROM (((public.tbl_measured_values
             JOIN public.tbl_analysis_entities tbl_analysis_entities_1 ON ((tbl_measured_values.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
             JOIN public.tbl_datasets ON ((tbl_datasets.dataset_id = tbl_analysis_entities_1.dataset_id)))
             LEFT JOIN public.tbl_analysis_entity_prep_methods ON ((tbl_analysis_entity_prep_methods.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
          WHERE ((tbl_datasets.method_id = 37) AND (COALESCE(tbl_analysis_entity_prep_methods.method_id, 0) = 112))) values_37_112 ON ((tbl_analysis_entities.analysis_entity_id = values_37_112.analysis_entity_id)))
     LEFT JOIN ( SELECT tbl_measured_values.measured_value,
            tbl_measured_values.analysis_entity_id
           FROM (((public.tbl_measured_values
             JOIN public.tbl_analysis_entities tbl_analysis_entities_1 ON ((tbl_measured_values.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
             JOIN public.tbl_datasets ON ((tbl_datasets.dataset_id = tbl_analysis_entities_1.dataset_id)))
             LEFT JOIN public.tbl_analysis_entity_prep_methods ON ((tbl_analysis_entity_prep_methods.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
          WHERE ((tbl_datasets.method_id = 37) AND (COALESCE(tbl_analysis_entity_prep_methods.method_id, 0) = 124))) values_37_124 ON ((tbl_analysis_entities.analysis_entity_id = values_37_124.analysis_entity_id)))
     LEFT JOIN ( SELECT tbl_measured_values.measured_value,
            tbl_measured_values.analysis_entity_id
           FROM ((public.tbl_measured_values
             JOIN public.tbl_analysis_entities tbl_analysis_entities_1 ON ((tbl_measured_values.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
             JOIN public.tbl_datasets ON ((tbl_datasets.dataset_id = tbl_analysis_entities_1.dataset_id)))
          WHERE (tbl_datasets.method_id = 37)) values_37_0 ON ((tbl_analysis_entities.analysis_entity_id = values_37_0.analysis_entity_id)))
     LEFT JOIN ( SELECT tbl_measured_values.measured_value,
            tbl_measured_values.analysis_entity_id
           FROM (((public.tbl_measured_values
             JOIN public.tbl_analysis_entities tbl_analysis_entities_1 ON ((tbl_measured_values.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
             JOIN public.tbl_datasets ON ((tbl_datasets.dataset_id = tbl_analysis_entities_1.dataset_id)))
             LEFT JOIN public.tbl_analysis_entity_prep_methods ON ((tbl_analysis_entity_prep_methods.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
          WHERE ((tbl_datasets.method_id = 74) AND (COALESCE(tbl_analysis_entity_prep_methods.method_id, 0) = 124))) values_74_124 ON ((tbl_analysis_entities.analysis_entity_id = values_74_124.analysis_entity_id)))
     LEFT JOIN ( SELECT tbl_measured_values.measured_value,
            tbl_measured_values.analysis_entity_id
           FROM (((public.tbl_measured_values
             JOIN public.tbl_analysis_entities tbl_analysis_entities_1 ON ((tbl_measured_values.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
             JOIN public.tbl_datasets ON ((tbl_datasets.dataset_id = tbl_analysis_entities_1.dataset_id)))
             LEFT JOIN public.tbl_analysis_entity_prep_methods ON ((tbl_analysis_entity_prep_methods.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
          WHERE ((tbl_datasets.method_id = 74) AND (COALESCE(tbl_analysis_entity_prep_methods.method_id, 0) = 82))) values_74_82 ON ((tbl_analysis_entities.analysis_entity_id = values_74_82.analysis_entity_id)))
     LEFT JOIN ( SELECT tbl_measured_values.measured_value,
            tbl_measured_values.analysis_entity_id
           FROM (((public.tbl_measured_values
             JOIN public.tbl_analysis_entities tbl_analysis_entities_1 ON ((tbl_measured_values.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
             JOIN public.tbl_datasets ON ((tbl_datasets.dataset_id = tbl_analysis_entities_1.dataset_id)))
             LEFT JOIN public.tbl_analysis_entity_prep_methods ON ((tbl_analysis_entity_prep_methods.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
          WHERE ((tbl_datasets.method_id = 74) AND (COALESCE(tbl_analysis_entity_prep_methods.method_id, 0) = 112))) values_74_112 ON ((tbl_analysis_entities.analysis_entity_id = values_74_112.analysis_entity_id)))
     LEFT JOIN ( SELECT tbl_measured_values.measured_value,
            tbl_measured_values.analysis_entity_id
           FROM ((public.tbl_measured_values
             JOIN public.tbl_analysis_entities tbl_analysis_entities_1 ON ((tbl_measured_values.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
             JOIN public.tbl_datasets ON ((tbl_datasets.dataset_id = tbl_analysis_entities_1.dataset_id)))
          WHERE (tbl_datasets.method_id = 74)) values_74_0 ON ((tbl_analysis_entities.analysis_entity_id = values_74_0.analysis_entity_id)))
     LEFT JOIN ( SELECT tbl_measured_values.measured_value,
            tbl_measured_values.analysis_entity_id
           FROM ((public.tbl_measured_values
             JOIN public.tbl_analysis_entities tbl_analysis_entities_1 ON ((tbl_measured_values.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
             JOIN public.tbl_datasets ON ((tbl_datasets.dataset_id = tbl_analysis_entities_1.dataset_id)))
          WHERE (tbl_datasets.method_id = 94)) values_94_0 ON ((tbl_analysis_entities.analysis_entity_id = values_94_0.analysis_entity_id)))
     LEFT JOIN ( SELECT tbl_measured_values.measured_value,
            tbl_measured_values.analysis_entity_id
           FROM (((public.tbl_measured_values
             JOIN public.tbl_analysis_entities tbl_analysis_entities_1 ON ((tbl_measured_values.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
             JOIN public.tbl_datasets ON ((tbl_datasets.dataset_id = tbl_analysis_entities_1.dataset_id)))
             LEFT JOIN public.tbl_analysis_entity_prep_methods ON ((tbl_analysis_entity_prep_methods.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
          WHERE ((tbl_datasets.method_id = 94) AND (COALESCE(tbl_analysis_entity_prep_methods.method_id, 0) = 82))) values_94_82 ON ((tbl_analysis_entities.analysis_entity_id = values_94_82.analysis_entity_id)))
     LEFT JOIN ( SELECT tbl_measured_values.measured_value,
            tbl_measured_values.analysis_entity_id
           FROM ((public.tbl_measured_values
             JOIN public.tbl_analysis_entities tbl_analysis_entities_1 ON ((tbl_measured_values.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
             JOIN public.tbl_datasets ON ((tbl_datasets.dataset_id = tbl_analysis_entities_1.dataset_id)))
          WHERE (tbl_datasets.method_id = 106)) values_106_0 ON ((tbl_analysis_entities.analysis_entity_id = values_106_0.analysis_entity_id)))
     LEFT JOIN ( SELECT tbl_measured_values.measured_value,
            tbl_measured_values.analysis_entity_id
           FROM ((public.tbl_measured_values
             JOIN public.tbl_analysis_entities tbl_analysis_entities_1 ON ((tbl_measured_values.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
             JOIN public.tbl_datasets ON ((tbl_datasets.dataset_id = tbl_analysis_entities_1.dataset_id)))
          WHERE (tbl_datasets.method_id = 107)) values_107_0 ON ((tbl_analysis_entities.analysis_entity_id = values_107_0.analysis_entity_id)))
     LEFT JOIN ( SELECT tbl_measured_values.measured_value,
            tbl_measured_values.analysis_entity_id
           FROM ((public.tbl_measured_values
             JOIN public.tbl_analysis_entities tbl_analysis_entities_1 ON ((tbl_measured_values.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
             JOIN public.tbl_datasets ON ((tbl_datasets.dataset_id = tbl_analysis_entities_1.dataset_id)))
          WHERE (tbl_datasets.method_id = 109)) values_109_0 ON ((tbl_analysis_entities.analysis_entity_id = values_109_0.analysis_entity_id)))
     LEFT JOIN ( SELECT tbl_measured_values.measured_value,
            tbl_measured_values.analysis_entity_id
           FROM ((public.tbl_measured_values
             JOIN public.tbl_analysis_entities tbl_analysis_entities_1 ON ((tbl_measured_values.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
             JOIN public.tbl_datasets ON ((tbl_datasets.dataset_id = tbl_analysis_entities_1.dataset_id)))
          WHERE (tbl_datasets.method_id = 110)) values_110_0 ON ((tbl_analysis_entities.analysis_entity_id = values_110_0.analysis_entity_id)))
     LEFT JOIN ( SELECT tbl_measured_values.measured_value,
            tbl_measured_values.analysis_entity_id
           FROM ((public.tbl_measured_values
             JOIN public.tbl_analysis_entities tbl_analysis_entities_1 ON ((tbl_measured_values.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
             JOIN public.tbl_datasets ON ((tbl_datasets.dataset_id = tbl_analysis_entities_1.dataset_id)))
          WHERE (tbl_datasets.method_id = 111)) values_111_0 ON ((tbl_analysis_entities.analysis_entity_id = values_111_0.analysis_entity_id)))
     LEFT JOIN ( SELECT tbl_measured_values.measured_value,
            tbl_measured_values.analysis_entity_id
           FROM ((public.tbl_measured_values
             JOIN public.tbl_analysis_entities tbl_analysis_entities_1 ON ((tbl_measured_values.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
             JOIN public.tbl_datasets ON ((tbl_datasets.dataset_id = tbl_analysis_entities_1.dataset_id)))
          WHERE (tbl_datasets.method_id = 117)) values_117_0 ON ((tbl_analysis_entities.analysis_entity_id = values_117_0.analysis_entity_id)))
     LEFT JOIN ( SELECT tbl_measured_values.measured_value,
            tbl_measured_values.analysis_entity_id
           FROM ((public.tbl_measured_values
             JOIN public.tbl_analysis_entities tbl_analysis_entities_1 ON ((tbl_measured_values.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
             JOIN public.tbl_datasets ON ((tbl_datasets.dataset_id = tbl_analysis_entities_1.dataset_id)))
          WHERE (tbl_datasets.method_id = 118)) values_118_0 ON ((tbl_analysis_entities.analysis_entity_id = values_118_0.analysis_entity_id)))
     LEFT JOIN ( SELECT tbl_measured_values.measured_value,
            tbl_measured_values.analysis_entity_id
           FROM ((public.tbl_measured_values
             JOIN public.tbl_analysis_entities tbl_analysis_entities_1 ON ((tbl_measured_values.analysis_entity_id = tbl_analysis_entities_1.analysis_entity_id)))
             JOIN public.tbl_datasets ON ((tbl_datasets.dataset_id = tbl_analysis_entities_1.dataset_id)))
          WHERE (tbl_datasets.method_id = 119)) values_119_0 ON ((tbl_analysis_entities.analysis_entity_id = values_119_0.analysis_entity_id)))
  GROUP BY tbl_physical_samples.physical_sample_id
  ORDER BY tbl_physical_samples.physical_sample_id;


--
-- TOC entry 724 (class 1259 OID 19369)
-- Name: original_phrases; Type: TABLE; Schema: metainformation; Owner: -
--

CREATE TABLE original_phrases (
    id integer NOT NULL,
    phrase text NOT NULL
);


--
-- TOC entry 725 (class 1259 OID 19375)
-- Name: original_phrases_id_seq; Type: SEQUENCE; Schema: metainformation; Owner: -
--

CREATE SEQUENCE original_phrases_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7144 (class 0 OID 0)
-- Dependencies: 725
-- Name: original_phrases_id_seq; Type: SEQUENCE OWNED BY; Schema: metainformation; Owner: -
--

ALTER SEQUENCE original_phrases_id_seq OWNED BY original_phrases.id;


--
-- TOC entry 726 (class 1259 OID 19377)
-- Name: tbl_denormalized_measured_values; Type: TABLE; Schema: metainformation; Owner: -
--

CREATE TABLE tbl_denormalized_measured_values (
    physical_sample_id integer,
    value_8_0 numeric,
    value_32_124 numeric,
    value_32_0 numeric,
    value_32_112 numeric,
    value_32_82 numeric,
    value_33_112 numeric,
    value_33_82 numeric,
    value_33_0 numeric,
    value_33_87 numeric,
    value_35_124 numeric,
    value_35_0 numeric,
    value_35_82 numeric,
    value_36_0 numeric,
    value_36_82 numeric,
    value_37_112 numeric,
    value_37_124 numeric,
    value_37_0 numeric,
    value_74_124 numeric,
    value_74_82 numeric,
    value_74_112 numeric,
    value_74_0 numeric,
    value_94_0 numeric,
    value_94_82 numeric,
    value_106_0 numeric,
    value_107_0 numeric,
    value_109_0 numeric,
    value_110_0 numeric,
    value_111_0 numeric,
    value_117_0 numeric,
    value_118_0 numeric,
    value_119_0 numeric
);


--
-- TOC entry 727 (class 1259 OID 19383)
-- Name: tbl_foreign_relations; Type: TABLE; Schema: metainformation; Owner: -
--

CREATE TABLE tbl_foreign_relations (
    source_table information_schema.sql_identifier NOT NULL,
    source_column information_schema.sql_identifier NOT NULL,
    target_table information_schema.sql_identifier NOT NULL,
    target_column information_schema.sql_identifier NOT NULL,
    weight integer,
    source_target_logic text,
    target_source_logic text
);


--
-- TOC entry 728 (class 1259 OID 19389)
-- Name: tbl_view_states; Type: TABLE; Schema: metainformation; Owner: -
--

CREATE TABLE tbl_view_states (
    view_state_id integer NOT NULL,
    view_state text,
    creatation_date timestamp with time zone DEFAULT clock_timestamp(),
    session_id character varying(256)
);


--
-- TOC entry 729 (class 1259 OID 19396)
-- Name: tbl_view_states_view_state_id_seq; Type: SEQUENCE; Schema: metainformation; Owner: -
--

CREATE SEQUENCE tbl_view_states_view_state_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7145 (class 0 OID 0)
-- Dependencies: 729
-- Name: tbl_view_states_view_state_id_seq; Type: SEQUENCE OWNED BY; Schema: metainformation; Owner: -
--

ALTER SEQUENCE tbl_view_states_view_state_id_seq OWNED BY tbl_view_states.view_state_id;


--
-- TOC entry 730 (class 1259 OID 19398)
-- Name: translated_phrases; Type: TABLE; Schema: metainformation; Owner: -
--

CREATE TABLE translated_phrases (
    id integer NOT NULL,
    original_phrase_id integer NOT NULL,
    translated_phrase text,
    language character varying(8)
);


--
-- TOC entry 731 (class 1259 OID 19404)
-- Name: translated_phrases_id_seq; Type: SEQUENCE; Schema: metainformation; Owner: -
--

CREATE SEQUENCE translated_phrases_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7146 (class 0 OID 0)
-- Dependencies: 731
-- Name: translated_phrases_id_seq; Type: SEQUENCE OWNED BY; Schema: metainformation; Owner: -
--

ALTER SEQUENCE translated_phrases_id_seq OWNED BY translated_phrases.id;


--
-- TOC entry 732 (class 1259 OID 19406)
-- Name: view_abundance; Type: VIEW; Schema: metainformation; Owner: -
--

CREATE VIEW view_abundance AS
 SELECT tbl_abundances.analysis_entity_id,
    tbl_abundances.taxon_id,
    ((tbl_methods.method_name)::text || COALESCE((' '::text || (tbl_modification_types.modification_type_name)::text), ''::text)) AS elements_part_mod,
    tbl_abundances.abundance
   FROM ((((public.tbl_abundances
     JOIN ((public.tbl_analysis_entities
     JOIN public.tbl_datasets ON ((tbl_datasets.dataset_id = tbl_analysis_entities.dataset_id)))
     JOIN public.tbl_methods ON ((tbl_methods.method_id = tbl_datasets.method_id))) ON ((tbl_abundances.analysis_entity_id = tbl_analysis_entities.analysis_entity_id)))
     LEFT JOIN public.tbl_abundance_modifications ON ((tbl_abundances.abundance_id = tbl_abundance_modifications.abundance_id)))
     LEFT JOIN public.tbl_modification_types ON ((tbl_modification_types.modification_type_id = tbl_abundance_modifications.modification_type_id)))
     LEFT JOIN public.tbl_abundance_elements ON ((tbl_abundances.abundance_element_id = tbl_abundance_elements.abundance_element_id)))
  ORDER BY ((tbl_methods.method_name)::text || COALESCE((' '::text || (tbl_modification_types.modification_type_name)::text), ''::text));


--
-- TOC entry 733 (class 1259 OID 19411)
-- Name: view_abundances_by_taxon_analysis_entity; Type: VIEW; Schema: metainformation; Owner: -
--

CREATE VIEW view_abundances_by_taxon_analysis_entity AS
 SELECT DISTINCT tbl_abundances.taxon_id,
    tbl_abundances.analysis_entity_id,
    m3.abundance_m3,
    m8.abundance_m8,
    m111.abundance_m111
   FROM (((public.tbl_abundances
     LEFT JOIN ( SELECT tbl_abundances_1.taxon_id,
            tbl_abundances_1.analysis_entity_id,
            tbl_abundances_1.abundance AS abundance_m3
           FROM ((public.tbl_abundances tbl_abundances_1
             LEFT JOIN public.tbl_analysis_entities ON ((tbl_analysis_entities.analysis_entity_id = tbl_abundances_1.analysis_entity_id)))
             JOIN public.tbl_datasets ON ((tbl_analysis_entities.dataset_id = tbl_datasets.dataset_id)))
          WHERE (tbl_datasets.method_id = 3)) m3 ON (((m3.taxon_id = tbl_abundances.taxon_id) AND (m3.analysis_entity_id = tbl_abundances.analysis_entity_id))))
     LEFT JOIN ( SELECT tbl_abundances_1.taxon_id,
            tbl_abundances_1.analysis_entity_id,
            tbl_abundances_1.abundance AS abundance_m8
           FROM ((public.tbl_abundances tbl_abundances_1
             LEFT JOIN public.tbl_analysis_entities ON ((tbl_analysis_entities.analysis_entity_id = tbl_abundances_1.analysis_entity_id)))
             JOIN public.tbl_datasets ON ((tbl_analysis_entities.dataset_id = tbl_datasets.dataset_id)))
          WHERE (tbl_datasets.method_id = 8)) m8 ON (((m8.taxon_id = tbl_abundances.taxon_id) AND (m8.analysis_entity_id = tbl_abundances.analysis_entity_id))))
     LEFT JOIN ( SELECT tbl_abundances_1.taxon_id,
            tbl_abundances_1.analysis_entity_id,
            tbl_abundances_1.abundance AS abundance_m111
           FROM ((public.tbl_abundances tbl_abundances_1
             LEFT JOIN public.tbl_analysis_entities ON ((tbl_analysis_entities.analysis_entity_id = tbl_abundances_1.analysis_entity_id)))
             JOIN public.tbl_datasets ON ((tbl_analysis_entities.dataset_id = tbl_datasets.dataset_id)))
          WHERE (tbl_datasets.method_id = 111)) m111 ON (((m111.taxon_id = tbl_abundances.taxon_id) AND (m111.analysis_entity_id = tbl_abundances.analysis_entity_id))));


--
-- TOC entry 734 (class 1259 OID 19416)
-- Name: view_sample_group_references; Type: VIEW; Schema: metainformation; Owner: -
--

CREATE VIEW view_sample_group_references AS
 SELECT tbl_sample_group_references.sample_group_id,
    tbl_sample_group_references.biblio_id,
    tbl_sample_group_references.date_updated,
    'sample_group'::text AS biblio_link
   FROM public.tbl_sample_group_references
UNION
 SELECT tbl_sample_groups.sample_group_id,
    tbl_site_references.biblio_id,
    tbl_site_references.date_updated,
    'indirect_via_site'::text AS biblio_link
   FROM ((public.tbl_site_references
     JOIN public.tbl_sites ON ((tbl_site_references.site_id = tbl_sites.site_id)))
     JOIN public.tbl_sample_groups ON ((tbl_sample_groups.site_id = tbl_sites.site_id)))
  ORDER BY 1;


--
-- TOC entry 735 (class 1259 OID 19421)
-- Name: view_site_references; Type: VIEW; Schema: metainformation; Owner: -
--

CREATE VIEW view_site_references AS
 SELECT tbl_site_references.site_id,
    tbl_site_references.biblio_id,
    tbl_site_references.date_updated,
    'site_direct'::text AS biblio_link
   FROM public.tbl_site_references
UNION
 SELECT tbl_sites.site_id,
    tbl_sample_group_references.biblio_id,
    tbl_sample_group_references.date_updated,
    'via_sample_group'::text AS biblio_link
   FROM ((public.tbl_sample_group_references
     JOIN public.tbl_sample_groups ON ((tbl_sample_groups.sample_group_id = tbl_sample_group_references.sample_group_id)))
     JOIN public.tbl_sites ON ((tbl_sample_groups.site_id = tbl_sites.site_id)))
  ORDER BY 1;


--
-- TOC entry 736 (class 1259 OID 19426)
-- Name: view_taxa_biblio; Type: VIEW; Schema: metainformation; Owner: -
--

CREATE VIEW view_taxa_biblio AS
 SELECT tbl_text_distribution.biblio_id,
    tbl_text_distribution.taxon_id
   FROM public.tbl_text_distribution
UNION
 SELECT tbl_text_biology.biblio_id,
    tbl_text_biology.taxon_id
   FROM public.tbl_text_biology
UNION
 SELECT tbl_taxonomy_notes.biblio_id,
    tbl_taxonomy_notes.taxon_id
   FROM public.tbl_taxonomy_notes;


SET search_path = public, pg_catalog;

--
-- TOC entry 737 (class 1259 OID 19430)
-- Name: tbl_abundance_elements_abundance_element_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_abundance_elements_abundance_element_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7147 (class 0 OID 0)
-- Dependencies: 737
-- Name: tbl_abundance_elements_abundance_element_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_abundance_elements_abundance_element_id_seq OWNED BY tbl_abundance_elements.abundance_element_id;


--
-- TOC entry 738 (class 1259 OID 19432)
-- Name: tbl_abundance_ident_levels_abundance_ident_level_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_abundance_ident_levels_abundance_ident_level_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7148 (class 0 OID 0)
-- Dependencies: 738
-- Name: tbl_abundance_ident_levels_abundance_ident_level_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_abundance_ident_levels_abundance_ident_level_id_seq OWNED BY tbl_abundance_ident_levels.abundance_ident_level_id;


--
-- TOC entry 739 (class 1259 OID 19434)
-- Name: tbl_abundance_modifications_abundance_modification_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_abundance_modifications_abundance_modification_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7149 (class 0 OID 0)
-- Dependencies: 739
-- Name: tbl_abundance_modifications_abundance_modification_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_abundance_modifications_abundance_modification_id_seq OWNED BY tbl_abundance_modifications.abundance_modification_id;


--
-- TOC entry 740 (class 1259 OID 19436)
-- Name: tbl_abundances_abundance_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_abundances_abundance_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7150 (class 0 OID 0)
-- Dependencies: 740
-- Name: tbl_abundances_abundance_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_abundances_abundance_id_seq OWNED BY tbl_abundances.abundance_id;


--
-- TOC entry 741 (class 1259 OID 19438)
-- Name: tbl_activity_types_activity_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_activity_types_activity_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7151 (class 0 OID 0)
-- Dependencies: 741
-- Name: tbl_activity_types_activity_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_activity_types_activity_type_id_seq OWNED BY tbl_activity_types.activity_type_id;


--
-- TOC entry 742 (class 1259 OID 19440)
-- Name: tbl_aggregate_datasets_aggregate_dataset_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_aggregate_datasets_aggregate_dataset_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7152 (class 0 OID 0)
-- Dependencies: 742
-- Name: tbl_aggregate_datasets_aggregate_dataset_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_aggregate_datasets_aggregate_dataset_id_seq OWNED BY tbl_aggregate_datasets.aggregate_dataset_id;


--
-- TOC entry 743 (class 1259 OID 19442)
-- Name: tbl_aggregate_order_types_aggregate_order_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_aggregate_order_types_aggregate_order_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7153 (class 0 OID 0)
-- Dependencies: 743
-- Name: tbl_aggregate_order_types_aggregate_order_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_aggregate_order_types_aggregate_order_type_id_seq OWNED BY tbl_aggregate_order_types.aggregate_order_type_id;


--
-- TOC entry 744 (class 1259 OID 19444)
-- Name: tbl_aggregate_sample_ages_aggregate_sample_age_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_aggregate_sample_ages_aggregate_sample_age_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7154 (class 0 OID 0)
-- Dependencies: 744
-- Name: tbl_aggregate_sample_ages_aggregate_sample_age_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_aggregate_sample_ages_aggregate_sample_age_id_seq OWNED BY tbl_aggregate_sample_ages.aggregate_sample_age_id;


--
-- TOC entry 745 (class 1259 OID 19446)
-- Name: tbl_aggregate_samples_aggregate_sample_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_aggregate_samples_aggregate_sample_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7155 (class 0 OID 0)
-- Dependencies: 745
-- Name: tbl_aggregate_samples_aggregate_sample_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_aggregate_samples_aggregate_sample_id_seq OWNED BY tbl_aggregate_samples.aggregate_sample_id;


--
-- TOC entry 746 (class 1259 OID 19448)
-- Name: tbl_alt_ref_types_alt_ref_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_alt_ref_types_alt_ref_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7156 (class 0 OID 0)
-- Dependencies: 746
-- Name: tbl_alt_ref_types_alt_ref_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_alt_ref_types_alt_ref_type_id_seq OWNED BY tbl_alt_ref_types.alt_ref_type_id;


--
-- TOC entry 747 (class 1259 OID 19450)
-- Name: tbl_analysis_entities_analysis_entity_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_analysis_entities_analysis_entity_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7157 (class 0 OID 0)
-- Dependencies: 747
-- Name: tbl_analysis_entities_analysis_entity_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_analysis_entities_analysis_entity_id_seq OWNED BY tbl_analysis_entities.analysis_entity_id;


--
-- TOC entry 748 (class 1259 OID 19452)
-- Name: tbl_analysis_entity_ages_analysis_entity_age_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_analysis_entity_ages_analysis_entity_age_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7158 (class 0 OID 0)
-- Dependencies: 748
-- Name: tbl_analysis_entity_ages_analysis_entity_age_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_analysis_entity_ages_analysis_entity_age_id_seq OWNED BY tbl_analysis_entity_ages.analysis_entity_age_id;


--
-- TOC entry 749 (class 1259 OID 19454)
-- Name: tbl_analysis_entity_dimensions_analysis_entity_dimension_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_analysis_entity_dimensions_analysis_entity_dimension_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7159 (class 0 OID 0)
-- Dependencies: 749
-- Name: tbl_analysis_entity_dimensions_analysis_entity_dimension_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_analysis_entity_dimensions_analysis_entity_dimension_id_seq OWNED BY tbl_analysis_entity_dimensions.analysis_entity_dimension_id;


--
-- TOC entry 750 (class 1259 OID 19456)
-- Name: tbl_analysis_entity_prep_meth_analysis_entity_prep_method_i_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_analysis_entity_prep_meth_analysis_entity_prep_method_i_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7160 (class 0 OID 0)
-- Dependencies: 750
-- Name: tbl_analysis_entity_prep_meth_analysis_entity_prep_method_i_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_analysis_entity_prep_meth_analysis_entity_prep_method_i_seq OWNED BY tbl_analysis_entity_prep_methods.analysis_entity_prep_method_id;


--
-- TOC entry 751 (class 1259 OID 19458)
-- Name: tbl_association_types_association_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_association_types_association_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7161 (class 0 OID 0)
-- Dependencies: 751
-- Name: tbl_association_types_association_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_association_types_association_type_id_seq OWNED BY tbl_species_association_types.association_type_id;


--
-- TOC entry 752 (class 1259 OID 19460)
-- Name: tbl_biblio_biblio_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_biblio_biblio_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7162 (class 0 OID 0)
-- Dependencies: 752
-- Name: tbl_biblio_biblio_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_biblio_biblio_id_seq OWNED BY tbl_biblio.biblio_id;


--
-- TOC entry 753 (class 1259 OID 19462)
-- Name: tbl_biblio_keywords_biblio_keyword_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_biblio_keywords_biblio_keyword_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7163 (class 0 OID 0)
-- Dependencies: 753
-- Name: tbl_biblio_keywords_biblio_keyword_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_biblio_keywords_biblio_keyword_id_seq OWNED BY tbl_biblio_keywords.biblio_keyword_id;


--
-- TOC entry 754 (class 1259 OID 19464)
-- Name: tbl_bugs_abundance_codes_bugs_abundance_code_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_bugs_abundance_codes_bugs_abundance_code_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7164 (class 0 OID 0)
-- Dependencies: 754
-- Name: tbl_bugs_abundance_codes_bugs_abundance_code_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_bugs_abundance_codes_bugs_abundance_code_id_seq OWNED BY tbl_bugs_abundance_codes.bugs_abundance_code_id;


--
-- TOC entry 755 (class 1259 OID 19466)
-- Name: tbl_bugs_biblio_bugs_biblio_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_bugs_biblio_bugs_biblio_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7165 (class 0 OID 0)
-- Dependencies: 755
-- Name: tbl_bugs_biblio_bugs_biblio_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_bugs_biblio_bugs_biblio_id_seq OWNED BY tbl_bugs_biblio.bugs_biblio_id;


--
-- TOC entry 756 (class 1259 OID 19468)
-- Name: tbl_bugs_dates_calendar_bugs_dates_relative_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_bugs_dates_calendar_bugs_dates_relative_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7166 (class 0 OID 0)
-- Dependencies: 756
-- Name: tbl_bugs_dates_calendar_bugs_dates_relative_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_bugs_dates_calendar_bugs_dates_relative_id_seq OWNED BY tbl_bugs_dates_calendar.bugs_dates_calendar_id;


--
-- TOC entry 757 (class 1259 OID 19470)
-- Name: tbl_bugs_dates_period_bugs_dates_period_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_bugs_dates_period_bugs_dates_period_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7167 (class 0 OID 0)
-- Dependencies: 757
-- Name: tbl_bugs_dates_period_bugs_dates_period_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_bugs_dates_period_bugs_dates_period_id_seq OWNED BY tbl_bugs_dates_period.bugs_dates_period_id;


--
-- TOC entry 758 (class 1259 OID 19472)
-- Name: tbl_bugs_dates_radio_bugs_dates_radio_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_bugs_dates_radio_bugs_dates_radio_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7168 (class 0 OID 0)
-- Dependencies: 758
-- Name: tbl_bugs_dates_radio_bugs_dates_radio_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_bugs_dates_radio_bugs_dates_radio_id_seq OWNED BY tbl_bugs_dates_radio.bugs_dates_radio_id;


--
-- TOC entry 759 (class 1259 OID 19474)
-- Name: tbl_bugs_datesmethods_bugs_datesmethods_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_bugs_datesmethods_bugs_datesmethods_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7169 (class 0 OID 0)
-- Dependencies: 759
-- Name: tbl_bugs_datesmethods_bugs_datesmethods_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_bugs_datesmethods_bugs_datesmethods_id_seq OWNED BY tbl_bugs_datesmethods.bugs_datesmethods_id;


--
-- TOC entry 760 (class 1259 OID 19476)
-- Name: tbl_bugs_periods_bugs_dates_relative_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_bugs_periods_bugs_dates_relative_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7170 (class 0 OID 0)
-- Dependencies: 760
-- Name: tbl_bugs_periods_bugs_dates_relative_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_bugs_periods_bugs_dates_relative_id_seq OWNED BY tbl_bugs_periods.bugs_dates_relative_id;


--
-- TOC entry 761 (class 1259 OID 19478)
-- Name: tbl_bugs_physical_samples_bugs_physical_sample_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_bugs_physical_samples_bugs_physical_sample_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7171 (class 0 OID 0)
-- Dependencies: 761
-- Name: tbl_bugs_physical_samples_bugs_physical_sample_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_bugs_physical_samples_bugs_physical_sample_id_seq OWNED BY tbl_bugs_physical_samples.bugs_physical_sample_id;


--
-- TOC entry 762 (class 1259 OID 19480)
-- Name: tbl_bugs_sample_groups_bugs_sample_group_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_bugs_sample_groups_bugs_sample_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7172 (class 0 OID 0)
-- Dependencies: 762
-- Name: tbl_bugs_sample_groups_bugs_sample_group_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_bugs_sample_groups_bugs_sample_group_id_seq OWNED BY tbl_bugs_sample_groups.bugs_sample_group_id;


--
-- TOC entry 763 (class 1259 OID 19482)
-- Name: tbl_bugs_sites_bugs_sites_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_bugs_sites_bugs_sites_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7173 (class 0 OID 0)
-- Dependencies: 763
-- Name: tbl_bugs_sites_bugs_sites_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_bugs_sites_bugs_sites_id_seq OWNED BY tbl_bugs_sites.bugs_sites_id;


--
-- TOC entry 764 (class 1259 OID 19484)
-- Name: tbl_bugs_tattributes; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_tattributes (
    "CODE" character varying(50),
    "AttribType" character varying(25),
    "AttribMeasure" character varying(20),
    "Value" character varying(50),
    "AttribUnits" character varying(10)
);


--
-- TOC entry 765 (class 1259 OID 19487)
-- Name: tbl_bugs_tbiblio; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_tbiblio (
    "REFERENCE" character varying(60),
    "AUTHOR" character varying(255),
    "TITLE" text,
    "Notes" text
);


--
-- TOC entry 766 (class 1259 OID 19493)
-- Name: tbl_bugs_tbiology; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_tbiology (
    "CODE" character varying(50),
    "Ref" character varying(60),
    "Data" text
);


--
-- TOC entry 767 (class 1259 OID 19499)
-- Name: tbl_bugs_tbirmbeetledat; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_tbirmbeetledat (
    "Field1" character varying(255),
    "Field2" character varying(255),
    "Field3" character varying(255),
    "Field4" character varying(255),
    "Field5" character varying(255),
    "Field6" character varying(255),
    "Field7" character varying(255),
    "Field8" character varying(255),
    "Field9" character varying(255),
    "Field10" character varying(255),
    "Field11" character varying(255),
    "Field12" character varying(255),
    "Field13" character varying(255),
    "Field14" character varying(255),
    "Field15" character varying(255),
    "Field16" character varying(255),
    "Field17" character varying(255),
    "Field18" character varying(255),
    "Field19" character varying(255),
    "Field20" character varying(255),
    "Field21" character varying(255),
    "Field22" character varying(255),
    "Field23" character varying(255),
    "Field24" character varying(255),
    "Field25" character varying(255),
    "Field26" character varying(255),
    "Field27" character varying(255),
    "Field28" character varying(255),
    "Field29" character varying(255),
    "Field30" character varying(255),
    "Field31" character varying(255),
    "Field32" character varying(255),
    "Field33" character varying(255),
    "Field34" character varying(255),
    "Field35" character varying(255),
    "Field36" character varying(255),
    "Field37" character varying(255),
    "Field38" character varying(255),
    "Field39" character varying(255),
    "Field40" character varying(255),
    "Field41" character varying(255),
    "Field42" character varying(255),
    "Field43" character varying(255),
    "Field44" character varying(255),
    "Field45" character varying(255),
    "Field46" character varying(255),
    "Field47" character varying(255),
    "Field48" character varying(255),
    "Field49" character varying(255),
    "Field50" character varying(255),
    "Field51" character varying(255),
    "Field52" character varying(255),
    "Field53" character varying(255),
    "Field54" character varying(255),
    "Field55" character varying(255),
    "Field56" character varying(255),
    "Field57" character varying(255),
    "Field58" character varying(255),
    "Field59" character varying(255),
    "Field60" character varying(255),
    "MCRRow" character varying(50),
    "CODE" character varying(50)
);


--
-- TOC entry 768 (class 1259 OID 19505)
-- Name: tbl_bugs_tcountry; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_tcountry (
    "CountryCode" character varying(3),
    "Country" character varying(50)
);


--
-- TOC entry 769 (class 1259 OID 19508)
-- Name: tbl_bugs_tcountsheet; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_tcountsheet (
    "CountsheetCODE" character varying(10),
    "CountsheetName" character varying(100),
    "SiteCODE" character varying(10),
    "SheetContext" character varying(25),
    "SheetType" character varying(25)
);


--
-- TOC entry 770 (class 1259 OID 19511)
-- Name: tbl_bugs_tdatescalendar; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_tdatescalendar (
    "SampleCODE" character varying(10),
    "Uncertainty" character varying(10),
    "CalendarCODE" character varying(10),
    "Date" character varying(50),
    "BCADBP" character varying(10),
    "DatingMethod" character varying(50),
    "Notes" text
);


--
-- TOC entry 771 (class 1259 OID 19517)
-- Name: tbl_bugs_tdatesmethods; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_tdatesmethods (
    "Abbrev" character varying(50),
    "Method" character varying(50),
    "Type" character varying(50),
    "SortOrder" character varying(50)
);


--
-- TOC entry 772 (class 1259 OID 19520)
-- Name: tbl_bugs_tdatesperiod; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_tdatesperiod (
    "PeriodDateCODE" character varying(10),
    "SampleCODE" character varying(10),
    "Uncertainty" character varying(10),
    "PeriodCODE" character varying(20),
    "DatingMethod" character varying(50),
    "Notes" text
);


--
-- TOC entry 773 (class 1259 OID 19526)
-- Name: tbl_bugs_tdatesradio; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_tdatesradio (
    "DateCODE" character varying(10),
    "SampleCODE" character varying(10),
    "LabNr" character varying(20),
    "Uncertainty" character varying(10),
    "Date" character varying(50),
    "AgeErrorOrPlusError" character varying(50),
    "AgeErrorMinus" character varying(50),
    "DatingMethod" character varying(15),
    "MaterialType" character varying(50),
    "LabID" character varying(10),
    "Notes" text
);


--
-- TOC entry 774 (class 1259 OID 19532)
-- Name: tbl_bugs_tdatestypes; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_tdatestypes (
    "Type" character varying(50)
);


--
-- TOC entry 775 (class 1259 OID 19535)
-- Name: tbl_bugs_tdistrib; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_tdistrib (
    "CODE" character varying(50),
    "Ref" character varying(60),
    "Data" text
);


--
-- TOC entry 776 (class 1259 OID 19541)
-- Name: tbl_bugs_tecobugs; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_tecobugs (
    "CODE_OLD" character varying(50),
    "BugsEcoCODE" character varying(7),
    "CODE" numeric(18,10)
);


--
-- TOC entry 777 (class 1259 OID 19544)
-- Name: tbl_bugs_tecodefbugs; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_tecodefbugs (
    "SortOrder_OLD" character varying(50),
    "BugsEcoCODE" character varying(7),
    "Definition" character varying(50),
    "Notes" text,
    "EcoLabel" character varying(50),
    "SortOrder" smallint
);


--
-- TOC entry 778 (class 1259 OID 19550)
-- Name: tbl_bugs_tecodefgroups; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_tecodefgroups (
    "EcoGroupCode" character varying(25),
    "EcoName" character varying(50)
);


--
-- TOC entry 779 (class 1259 OID 19553)
-- Name: tbl_bugs_tecodefkoch; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_tecodefkoch (
    "BugsKochCode" character varying(5),
    "KochCode" character varying(2),
    "FullName" character varying(50),
    "KochGroup" character varying(25),
    "Description" character varying(255),
    "Notes" text
);


--
-- TOC entry 780 (class 1259 OID 19559)
-- Name: tbl_bugs_tecokoch; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_tecokoch (
    "CODE_OLD" character varying(50),
    "BugsKochCode" character varying(5),
    "CODE" numeric(18,10)
);


--
-- TOC entry 781 (class 1259 OID 19562)
-- Name: tbl_bugs_tfossil; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_tfossil (
    "FossilBugsCODE" character varying(10),
    "CODE" character varying(50),
    "SampleCODE" character varying(10),
    "Abundance" character varying(50)
);


--
-- TOC entry 782 (class 1259 OID 19565)
-- Name: tbl_bugs_tfossiluncertainty; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_tfossiluncertainty (
    "FossilBugsCODE" character varying(10),
    "Uncertainty" character varying(255)
);


--
-- TOC entry 783 (class 1259 OID 19568)
-- Name: tbl_bugs_tindex; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_tindex (
    "CODE" character varying(50),
    "FAMILY" character varying(50),
    "GENUS" character varying(50),
    "SPECIES" character varying(35),
    "AUTHORITY" character varying(35)
);


--
-- TOC entry 784 (class 1259 OID 19571)
-- Name: tbl_bugs_tindexreplacements; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_tindexreplacements (
    "CODE" character varying(50),
    "ReplacedName" character varying(100),
    "SiteCODE" character varying(10)
);


--
-- TOC entry 785 (class 1259 OID 19574)
-- Name: tbl_bugs_tkeys; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_tkeys (
    "CODE" character varying(50),
    "Ref" character varying(60),
    "Data" text
);


--
-- TOC entry 786 (class 1259 OID 19580)
-- Name: tbl_bugs_tlab; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_tlab (
    "LabID" character varying(10),
    "Labname" character varying(100),
    "Address" character varying(255),
    "Country" character varying(30),
    "Telephone" character varying(50),
    "Website" text,
    email text
);


--
-- TOC entry 787 (class 1259 OID 19586)
-- Name: tbl_bugs_tlookupcountsheetcontext; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_tlookupcountsheetcontext (
    "SheetContext" character varying(25),
    "SortOrder" character varying(50)
);


--
-- TOC entry 788 (class 1259 OID 19589)
-- Name: tbl_bugs_tlookupcountsheettypes; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_tlookupcountsheettypes (
    "CountsheetType" character varying(25),
    "SortOrder" character varying(50)
);


--
-- TOC entry 789 (class 1259 OID 19592)
-- Name: tbl_bugs_tlookupmonths; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_tlookupmonths (
    "SeasonCode" character varying(3),
    "SeasonName" character varying(50),
    "SortOrder" character varying(50)
);


--
-- TOC entry 790 (class 1259 OID 19595)
-- Name: tbl_bugs_tlookupuncertaintytype; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_tlookupuncertaintytype (
    "Uncertainty" character varying(15),
    "SortOrder" character varying(50)
);


--
-- TOC entry 791 (class 1259 OID 19598)
-- Name: tbl_bugs_tmcrnames; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_tmcrnames (
    "MCRNameTrim" character varying(80),
    "CompareStatus" character varying(255),
    "CODE" character varying(50),
    "tempCODE" character varying(50),
    "MCRNumber" character varying(50),
    "MCRName" character varying(200)
);


--
-- TOC entry 792 (class 1259 OID 19604)
-- Name: tbl_bugs_tmcrsummarydata; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_tmcrsummarydata (
    "CODE" character varying(50),
    "TMaxLo" character varying(50),
    "TMaxHi" character varying(50),
    "TMinLo" character varying(50),
    "TMinHi" character varying(50),
    "TRangeLo" character varying(50),
    "TRangeHi" character varying(50),
    "COGMidTMax" character varying(50),
    "COGMidTRange" character varying(50)
);


--
-- TOC entry 793 (class 1259 OID 19607)
-- Name: tbl_bugs_tperiods; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_tperiods (
    "PeriodCODE" character varying(20),
    "PeriodName" character varying(28),
    "PeriodType" character varying(50),
    "PeriodDesc" character varying(255),
    "PeriodRef" character varying(50),
    "PeriodGeog" character varying(100),
    "Begin_OLD" character varying(50),
    "BeginBCAD" character varying(4),
    "End_OLD" character varying(50),
    "EndBCAD" character varying(4),
    "YearsType" character varying(13),
    "Begin" numeric(18,10),
    "End" numeric(18,10)
);


--
-- TOC entry 794 (class 1259 OID 19613)
-- Name: tbl_bugs_trdb; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_trdb (
    "CODE" character varying(50),
    "CountryCode" character varying(3),
    "RDBCode" character varying(50)
);


--
-- TOC entry 795 (class 1259 OID 19616)
-- Name: tbl_bugs_trdbcodes; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_trdbcodes (
    "RDBCode" character varying(50),
    "Category" character varying(4),
    "RDBDefinition" character varying(200),
    "RDBSystemCode" character varying(50)
);


--
-- TOC entry 796 (class 1259 OID 19619)
-- Name: tbl_bugs_trdbsystems; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_trdbsystems (
    "RDBSystemCode" character varying(50),
    "RDBSystem" character varying(10),
    "RDBVersion" character varying(10),
    "RDBSystemDate" character varying(50),
    "RDBFirstPublished" character varying(50),
    "Ref" character varying(60),
    "CountryCode" character varying(100)
);


--
-- TOC entry 797 (class 1259 OID 19622)
-- Name: tbl_bugs_tsample; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_tsample (
    "SampleCODE" character varying(10),
    "SiteCODE" character varying(10),
    "X" character varying(50),
    "Y" character varying(50),
    "ZorDepthTop" character varying(50),
    "ZorDepthBot" character varying(50),
    "RefNrContext" character varying(50),
    "CountsheetCODE" character varying(10)
);


--
-- TOC entry 798 (class 1259 OID 19625)
-- Name: tbl_bugs_tseasonactiveadult; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_tseasonactiveadult (
    "CODE_OLD" character varying(50),
    "HSeason" character varying(3),
    "CountryCode" character varying(3),
    "CODE" numeric(18,10)
);


--
-- TOC entry 799 (class 1259 OID 19628)
-- Name: tbl_bugs_tsite; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_tsite (
    "SiteCODE" character varying(10),
    "SiteName" character varying(50),
    "Region" character varying(40),
    "Country" character varying(255),
    "NGR" character varying(10),
    "LatDD" character varying(50),
    "LongDD" character varying(50),
    "Alt" character varying(50),
    "IDBy" character varying(255),
    "Interp" character varying(255),
    "Specimens" character varying(255)
);


--
-- TOC entry 800 (class 1259 OID 19634)
-- Name: tbl_bugs_tsiteotherproxies; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_tsiteotherproxies (
    "OtherProxyId" character varying(50),
    "SiteCODE" character varying(10),
    "HasPollen" character(1),
    "HasPlantMacro" character(1),
    "HasDiatoms" character(1),
    "HasChironomids" character(1),
    "HasSoilChemistry" character(1),
    "HasIsotopes" character(1),
    "HasAnimalBones" character(1),
    "HasArchaeology" character(1),
    "HasMolluscs" character(1)
);


--
-- TOC entry 801 (class 1259 OID 19637)
-- Name: tbl_bugs_tsiteref; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_tsiteref (
    "SiteCODE" character varying(10),
    "Ref" character varying(60)
);


--
-- TOC entry 802 (class 1259 OID 19640)
-- Name: tbl_bugs_tspeciesassociations; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_tspeciesassociations (
    "SpeciesAssociationID" character varying(50),
    "CODE_OLD" character varying(50),
    "AssociatedSpeciesCODE_OLD" character varying(50),
    "AssociationType" character varying(50),
    "Ref" character varying(60),
    "CODE" numeric(18,10),
    "AssociatedSpeciesCODE" numeric(18,10)
);


--
-- TOC entry 803 (class 1259 OID 19643)
-- Name: tbl_bugs_tsynonym; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_tsynonym (
    "CODE" character varying(50),
    "SynGenus" character varying(50),
    "SynSpecies" character varying(50),
    "SynAuthority" character varying(50),
    "Ref" character varying(60),
    "Notes" character varying(255)
);


--
-- TOC entry 804 (class 1259 OID 19649)
-- Name: tbl_bugs_tsynonymnotes; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_tsynonymnotes (
    "CODE" character varying(50),
    "Notes" character varying(255)
);


--
-- TOC entry 805 (class 1259 OID 19652)
-- Name: tbl_bugs_ttaxonotes; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugs_ttaxonotes (
    "CODE" character varying(50),
    "Ref" character varying(60),
    "Data" text
);


--
-- TOC entry 806 (class 1259 OID 19658)
-- Name: tbl_bugstransfer_errors; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugstransfer_errors (
    bugs_error_id integer NOT NULL,
    error_type character varying(50),
    sead_table character varying(50),
    bugs_table character varying(50),
    sead_column character varying(50),
    bugs_column character varying(50),
    sead_update_query text,
    bugs_update_query text,
    notes text,
    date_updated timestamp with time zone
);


--
-- TOC entry 807 (class 1259 OID 19664)
-- Name: tbl_bugstransfer_errors_bugs_error_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_bugstransfer_errors_bugs_error_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7174 (class 0 OID 0)
-- Dependencies: 807
-- Name: tbl_bugstransfer_errors_bugs_error_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_bugstransfer_errors_bugs_error_id_seq OWNED BY tbl_bugstransfer_errors.bugs_error_id;


--
-- TOC entry 808 (class 1259 OID 19666)
-- Name: tbl_bugstransfer_log; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_bugstransfer_log (
    bugs_transfer_log_id integer NOT NULL,
    table_name character varying(150) NOT NULL,
    transfer_code character varying(50) NOT NULL,
    id_value integer,
    notes text,
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 809 (class 1259 OID 19673)
-- Name: tbl_bugstransfer_log_bugs_transfer_log_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_bugstransfer_log_bugs_transfer_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7175 (class 0 OID 0)
-- Dependencies: 809
-- Name: tbl_bugstransfer_log_bugs_transfer_log_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_bugstransfer_log_bugs_transfer_log_id_seq OWNED BY tbl_bugstransfer_log.bugs_transfer_log_id;


--
-- TOC entry 810 (class 1259 OID 19675)
-- Name: tbl_ceramics_ceramics_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_ceramics_ceramics_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7176 (class 0 OID 0)
-- Dependencies: 810
-- Name: tbl_ceramics_ceramics_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_ceramics_ceramics_id_seq OWNED BY tbl_ceramics.ceramics_id;


--
-- TOC entry 811 (class 1259 OID 19677)
-- Name: tbl_ceramics_measurement_look_ceramics_measurement_lookup_i_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_ceramics_measurement_look_ceramics_measurement_lookup_i_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7177 (class 0 OID 0)
-- Dependencies: 811
-- Name: tbl_ceramics_measurement_look_ceramics_measurement_lookup_i_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_ceramics_measurement_look_ceramics_measurement_lookup_i_seq OWNED BY tbl_ceramics_measurement_lookup.ceramics_measurement_lookup_id;


--
-- TOC entry 812 (class 1259 OID 19679)
-- Name: tbl_ceramics_measurements_ceramics_measurement_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_ceramics_measurements_ceramics_measurement_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7178 (class 0 OID 0)
-- Dependencies: 812
-- Name: tbl_ceramics_measurements_ceramics_measurement_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_ceramics_measurements_ceramics_measurement_id_seq OWNED BY tbl_ceramics_measurements.ceramics_measurement_id;


--
-- TOC entry 813 (class 1259 OID 19681)
-- Name: tbl_chron_control_types_chron_control_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_chron_control_types_chron_control_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7179 (class 0 OID 0)
-- Dependencies: 813
-- Name: tbl_chron_control_types_chron_control_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_chron_control_types_chron_control_type_id_seq OWNED BY tbl_chron_control_types.chron_control_type_id;


--
-- TOC entry 814 (class 1259 OID 19683)
-- Name: tbl_chron_controls_chron_control_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_chron_controls_chron_control_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7180 (class 0 OID 0)
-- Dependencies: 814
-- Name: tbl_chron_controls_chron_control_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_chron_controls_chron_control_id_seq OWNED BY tbl_chron_controls.chron_control_id;


--
-- TOC entry 815 (class 1259 OID 19685)
-- Name: tbl_chronologies_chronology_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_chronologies_chronology_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7181 (class 0 OID 0)
-- Dependencies: 815
-- Name: tbl_chronologies_chronology_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_chronologies_chronology_id_seq OWNED BY tbl_chronologies.chronology_id;


--
-- TOC entry 816 (class 1259 OID 19687)
-- Name: tbl_collections_or_journals_collection_or_journal_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_collections_or_journals_collection_or_journal_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7182 (class 0 OID 0)
-- Dependencies: 816
-- Name: tbl_collections_or_journals_collection_or_journal_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_collections_or_journals_collection_or_journal_id_seq OWNED BY tbl_collections_or_journals.collection_or_journal_id;


--
-- TOC entry 817 (class 1259 OID 19689)
-- Name: tbl_colours_colour_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_colours_colour_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7183 (class 0 OID 0)
-- Dependencies: 817
-- Name: tbl_colours_colour_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_colours_colour_id_seq OWNED BY tbl_colours.colour_id;


--
-- TOC entry 818 (class 1259 OID 19691)
-- Name: tbl_contact_types_contact_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_contact_types_contact_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7184 (class 0 OID 0)
-- Dependencies: 818
-- Name: tbl_contact_types_contact_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_contact_types_contact_type_id_seq OWNED BY tbl_contact_types.contact_type_id;


--
-- TOC entry 819 (class 1259 OID 19693)
-- Name: tbl_contacts_contact_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_contacts_contact_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7185 (class 0 OID 0)
-- Dependencies: 819
-- Name: tbl_contacts_contact_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_contacts_contact_id_seq OWNED BY tbl_contacts.contact_id;


--
-- TOC entry 820 (class 1259 OID 19695)
-- Name: tbl_coordinate_method_dimensi_coordinate_method_dimension_i_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_coordinate_method_dimensi_coordinate_method_dimension_i_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7186 (class 0 OID 0)
-- Dependencies: 820
-- Name: tbl_coordinate_method_dimensi_coordinate_method_dimension_i_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_coordinate_method_dimensi_coordinate_method_dimension_i_seq OWNED BY tbl_coordinate_method_dimensions.coordinate_method_dimension_id;


--
-- TOC entry 821 (class 1259 OID 19697)
-- Name: tbl_data_type_groups_data_type_group_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_data_type_groups_data_type_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7187 (class 0 OID 0)
-- Dependencies: 821
-- Name: tbl_data_type_groups_data_type_group_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_data_type_groups_data_type_group_id_seq OWNED BY tbl_data_type_groups.data_type_group_id;


--
-- TOC entry 822 (class 1259 OID 19699)
-- Name: tbl_data_types_data_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_data_types_data_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7188 (class 0 OID 0)
-- Dependencies: 822
-- Name: tbl_data_types_data_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_data_types_data_type_id_seq OWNED BY tbl_data_types.data_type_id;


--
-- TOC entry 823 (class 1259 OID 19701)
-- Name: tbl_dataset_contacts_dataset_contact_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_dataset_contacts_dataset_contact_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7189 (class 0 OID 0)
-- Dependencies: 823
-- Name: tbl_dataset_contacts_dataset_contact_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_dataset_contacts_dataset_contact_id_seq OWNED BY tbl_dataset_contacts.dataset_contact_id;


--
-- TOC entry 824 (class 1259 OID 19703)
-- Name: tbl_dataset_masters_master_set_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_dataset_masters_master_set_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7190 (class 0 OID 0)
-- Dependencies: 824
-- Name: tbl_dataset_masters_master_set_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_dataset_masters_master_set_id_seq OWNED BY tbl_dataset_masters.master_set_id;


--
-- TOC entry 825 (class 1259 OID 19705)
-- Name: tbl_dataset_submission_types_submission_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_dataset_submission_types_submission_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7191 (class 0 OID 0)
-- Dependencies: 825
-- Name: tbl_dataset_submission_types_submission_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_dataset_submission_types_submission_type_id_seq OWNED BY tbl_dataset_submission_types.submission_type_id;


--
-- TOC entry 826 (class 1259 OID 19707)
-- Name: tbl_dataset_submissions_dataset_submission_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_dataset_submissions_dataset_submission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7192 (class 0 OID 0)
-- Dependencies: 826
-- Name: tbl_dataset_submissions_dataset_submission_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_dataset_submissions_dataset_submission_id_seq OWNED BY tbl_dataset_submissions.dataset_submission_id;


--
-- TOC entry 827 (class 1259 OID 19709)
-- Name: tbl_datasets_dataset_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_datasets_dataset_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7193 (class 0 OID 0)
-- Dependencies: 827
-- Name: tbl_datasets_dataset_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_datasets_dataset_id_seq OWNED BY tbl_datasets.dataset_id;


--
-- TOC entry 828 (class 1259 OID 19711)
-- Name: tbl_dating_labs_dating_lab_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_dating_labs_dating_lab_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7194 (class 0 OID 0)
-- Dependencies: 828
-- Name: tbl_dating_labs_dating_lab_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_dating_labs_dating_lab_id_seq OWNED BY tbl_dating_labs.dating_lab_id;


--
-- TOC entry 829 (class 1259 OID 19713)
-- Name: tbl_dating_material_dating_material_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_dating_material_dating_material_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7195 (class 0 OID 0)
-- Dependencies: 829
-- Name: tbl_dating_material_dating_material_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_dating_material_dating_material_id_seq OWNED BY tbl_dating_material.dating_material_id;


--
-- TOC entry 830 (class 1259 OID 19715)
-- Name: tbl_dating_uncertainty_dating_uncertainty_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_dating_uncertainty_dating_uncertainty_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7196 (class 0 OID 0)
-- Dependencies: 830
-- Name: tbl_dating_uncertainty_dating_uncertainty_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_dating_uncertainty_dating_uncertainty_id_seq OWNED BY tbl_dating_uncertainty.dating_uncertainty_id;


--
-- TOC entry 831 (class 1259 OID 19717)
-- Name: tbl_dendro_date_notes_dendro_date_note_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_dendro_date_notes_dendro_date_note_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7197 (class 0 OID 0)
-- Dependencies: 831
-- Name: tbl_dendro_date_notes_dendro_date_note_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_dendro_date_notes_dendro_date_note_id_seq OWNED BY tbl_dendro_date_notes.dendro_date_note_id;


--
-- TOC entry 832 (class 1259 OID 19719)
-- Name: tbl_dendro_dates_dendro_date_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_dendro_dates_dendro_date_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7198 (class 0 OID 0)
-- Dependencies: 832
-- Name: tbl_dendro_dates_dendro_date_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_dendro_dates_dendro_date_id_seq OWNED BY tbl_dendro_dates.dendro_date_id;


--
-- TOC entry 833 (class 1259 OID 19721)
-- Name: tbl_dendro_dendro_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_dendro_dendro_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7199 (class 0 OID 0)
-- Dependencies: 833
-- Name: tbl_dendro_dendro_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_dendro_dendro_id_seq OWNED BY tbl_dendro.dendro_id;


--
-- TOC entry 834 (class 1259 OID 19723)
-- Name: tbl_dendro_measurement_lookup_dendro_measurement_lookup_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_dendro_measurement_lookup_dendro_measurement_lookup_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7200 (class 0 OID 0)
-- Dependencies: 834
-- Name: tbl_dendro_measurement_lookup_dendro_measurement_lookup_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_dendro_measurement_lookup_dendro_measurement_lookup_id_seq OWNED BY tbl_dendro_measurement_lookup.dendro_measurement_lookup_id;


--
-- TOC entry 835 (class 1259 OID 19725)
-- Name: tbl_dendro_measurements_dendro_measurement_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_dendro_measurements_dendro_measurement_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7201 (class 0 OID 0)
-- Dependencies: 835
-- Name: tbl_dendro_measurements_dendro_measurement_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_dendro_measurements_dendro_measurement_id_seq OWNED BY tbl_dendro_measurements.dendro_measurement_id;


--
-- TOC entry 836 (class 1259 OID 19727)
-- Name: tbl_dimensions_dimension_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_dimensions_dimension_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7202 (class 0 OID 0)
-- Dependencies: 836
-- Name: tbl_dimensions_dimension_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_dimensions_dimension_id_seq OWNED BY tbl_dimensions.dimension_id;


--
-- TOC entry 837 (class 1259 OID 19729)
-- Name: tbl_ecocode_definitions_ecocode_definition_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_ecocode_definitions_ecocode_definition_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7203 (class 0 OID 0)
-- Dependencies: 837
-- Name: tbl_ecocode_definitions_ecocode_definition_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_ecocode_definitions_ecocode_definition_id_seq OWNED BY tbl_ecocode_definitions.ecocode_definition_id;


--
-- TOC entry 838 (class 1259 OID 19731)
-- Name: tbl_ecocode_groups_ecocode_group_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_ecocode_groups_ecocode_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7204 (class 0 OID 0)
-- Dependencies: 838
-- Name: tbl_ecocode_groups_ecocode_group_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_ecocode_groups_ecocode_group_id_seq OWNED BY tbl_ecocode_groups.ecocode_group_id;


--
-- TOC entry 839 (class 1259 OID 19733)
-- Name: tbl_ecocode_systems_ecocode_system_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_ecocode_systems_ecocode_system_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7205 (class 0 OID 0)
-- Dependencies: 839
-- Name: tbl_ecocode_systems_ecocode_system_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_ecocode_systems_ecocode_system_id_seq OWNED BY tbl_ecocode_systems.ecocode_system_id;


--
-- TOC entry 840 (class 1259 OID 19735)
-- Name: tbl_ecocodes_ecocode_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_ecocodes_ecocode_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7206 (class 0 OID 0)
-- Dependencies: 840
-- Name: tbl_ecocodes_ecocode_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_ecocodes_ecocode_id_seq OWNED BY tbl_ecocodes.ecocode_id;


--
-- TOC entry 841 (class 1259 OID 19737)
-- Name: tbl_feature_types_feature_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_feature_types_feature_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7207 (class 0 OID 0)
-- Dependencies: 841
-- Name: tbl_feature_types_feature_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_feature_types_feature_type_id_seq OWNED BY tbl_feature_types.feature_type_id;


--
-- TOC entry 842 (class 1259 OID 19739)
-- Name: tbl_features_feature_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_features_feature_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7208 (class 0 OID 0)
-- Dependencies: 842
-- Name: tbl_features_feature_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_features_feature_id_seq OWNED BY tbl_features.feature_id;


--
-- TOC entry 843 (class 1259 OID 19741)
-- Name: tbl_geochron_refs_geochron_ref_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_geochron_refs_geochron_ref_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7209 (class 0 OID 0)
-- Dependencies: 843
-- Name: tbl_geochron_refs_geochron_ref_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_geochron_refs_geochron_ref_id_seq OWNED BY tbl_geochron_refs.geochron_ref_id;


--
-- TOC entry 844 (class 1259 OID 19743)
-- Name: tbl_geochronology_geochron_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_geochronology_geochron_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7210 (class 0 OID 0)
-- Dependencies: 844
-- Name: tbl_geochronology_geochron_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_geochronology_geochron_id_seq OWNED BY tbl_geochronology.geochron_id;


--
-- TOC entry 845 (class 1259 OID 19745)
-- Name: tbl_horizons_horizon_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_horizons_horizon_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7211 (class 0 OID 0)
-- Dependencies: 845
-- Name: tbl_horizons_horizon_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_horizons_horizon_id_seq OWNED BY tbl_horizons.horizon_id;


--
-- TOC entry 846 (class 1259 OID 19747)
-- Name: tbl_identification_levels_identification_level_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_identification_levels_identification_level_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7212 (class 0 OID 0)
-- Dependencies: 846
-- Name: tbl_identification_levels_identification_level_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_identification_levels_identification_level_id_seq OWNED BY tbl_identification_levels.identification_level_id;


--
-- TOC entry 847 (class 1259 OID 19749)
-- Name: tbl_image_types_image_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_image_types_image_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7213 (class 0 OID 0)
-- Dependencies: 847
-- Name: tbl_image_types_image_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_image_types_image_type_id_seq OWNED BY tbl_image_types.image_type_id;


--
-- TOC entry 848 (class 1259 OID 19751)
-- Name: tbl_imported_taxa_replacements_imported_taxa_replacement_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_imported_taxa_replacements_imported_taxa_replacement_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7214 (class 0 OID 0)
-- Dependencies: 848
-- Name: tbl_imported_taxa_replacements_imported_taxa_replacement_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_imported_taxa_replacements_imported_taxa_replacement_id_seq OWNED BY tbl_imported_taxa_replacements.imported_taxa_replacement_id;


--
-- TOC entry 849 (class 1259 OID 19753)
-- Name: tbl_keywords_keyword_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_keywords_keyword_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7215 (class 0 OID 0)
-- Dependencies: 849
-- Name: tbl_keywords_keyword_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_keywords_keyword_id_seq OWNED BY tbl_keywords.keyword_id;


--
-- TOC entry 850 (class 1259 OID 19755)
-- Name: tbl_languages_language_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_languages_language_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7216 (class 0 OID 0)
-- Dependencies: 850
-- Name: tbl_languages_language_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_languages_language_id_seq OWNED BY tbl_languages.language_id;


--
-- TOC entry 851 (class 1259 OID 19757)
-- Name: tbl_lithology_lithology_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_lithology_lithology_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7217 (class 0 OID 0)
-- Dependencies: 851
-- Name: tbl_lithology_lithology_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_lithology_lithology_id_seq OWNED BY tbl_lithology.lithology_id;


--
-- TOC entry 852 (class 1259 OID 19759)
-- Name: tbl_location_types_location_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_location_types_location_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7218 (class 0 OID 0)
-- Dependencies: 852
-- Name: tbl_location_types_location_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_location_types_location_type_id_seq OWNED BY tbl_location_types.location_type_id;


--
-- TOC entry 853 (class 1259 OID 19761)
-- Name: tbl_locations_location_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_locations_location_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7219 (class 0 OID 0)
-- Dependencies: 853
-- Name: tbl_locations_location_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_locations_location_id_seq OWNED BY tbl_locations.location_id;


--
-- TOC entry 854 (class 1259 OID 19763)
-- Name: tbl_mcr_names_taxon_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_mcr_names_taxon_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7220 (class 0 OID 0)
-- Dependencies: 854
-- Name: tbl_mcr_names_taxon_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_mcr_names_taxon_id_seq OWNED BY tbl_mcr_names.taxon_id;


--
-- TOC entry 855 (class 1259 OID 19765)
-- Name: tbl_mcr_summary_data_mcr_summary_data_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_mcr_summary_data_mcr_summary_data_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7221 (class 0 OID 0)
-- Dependencies: 855
-- Name: tbl_mcr_summary_data_mcr_summary_data_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_mcr_summary_data_mcr_summary_data_id_seq OWNED BY tbl_mcr_summary_data.mcr_summary_data_id;


--
-- TOC entry 856 (class 1259 OID 19767)
-- Name: tbl_mcrdata_birmbeetledat_mcrdata_birmbeetledat_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_mcrdata_birmbeetledat_mcrdata_birmbeetledat_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7222 (class 0 OID 0)
-- Dependencies: 856
-- Name: tbl_mcrdata_birmbeetledat_mcrdata_birmbeetledat_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_mcrdata_birmbeetledat_mcrdata_birmbeetledat_id_seq OWNED BY tbl_mcrdata_birmbeetledat.mcrdata_birmbeetledat_id;


--
-- TOC entry 857 (class 1259 OID 19769)
-- Name: tbl_measured_value_dimensions_measured_value_dimension_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_measured_value_dimensions_measured_value_dimension_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7223 (class 0 OID 0)
-- Dependencies: 857
-- Name: tbl_measured_value_dimensions_measured_value_dimension_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_measured_value_dimensions_measured_value_dimension_id_seq OWNED BY tbl_measured_value_dimensions.measured_value_dimension_id;


--
-- TOC entry 858 (class 1259 OID 19771)
-- Name: tbl_measured_values_measured_value_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_measured_values_measured_value_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7224 (class 0 OID 0)
-- Dependencies: 858
-- Name: tbl_measured_values_measured_value_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_measured_values_measured_value_id_seq OWNED BY tbl_measured_values.measured_value_id;


--
-- TOC entry 859 (class 1259 OID 19773)
-- Name: tbl_method_groups_method_group_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_method_groups_method_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7225 (class 0 OID 0)
-- Dependencies: 859
-- Name: tbl_method_groups_method_group_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_method_groups_method_group_id_seq OWNED BY tbl_method_groups.method_group_id;


--
-- TOC entry 860 (class 1259 OID 19775)
-- Name: tbl_methods_method_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_methods_method_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7226 (class 0 OID 0)
-- Dependencies: 860
-- Name: tbl_methods_method_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_methods_method_id_seq OWNED BY tbl_methods.method_id;


--
-- TOC entry 861 (class 1259 OID 19777)
-- Name: tbl_modification_types_modification_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_modification_types_modification_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7227 (class 0 OID 0)
-- Dependencies: 861
-- Name: tbl_modification_types_modification_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_modification_types_modification_type_id_seq OWNED BY tbl_modification_types.modification_type_id;


--
-- TOC entry 862 (class 1259 OID 19779)
-- Name: tbl_physical_sample_features_physical_sample_feature_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_physical_sample_features_physical_sample_feature_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7228 (class 0 OID 0)
-- Dependencies: 862
-- Name: tbl_physical_sample_features_physical_sample_feature_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_physical_sample_features_physical_sample_feature_id_seq OWNED BY tbl_physical_sample_features.physical_sample_feature_id;


--
-- TOC entry 863 (class 1259 OID 19781)
-- Name: tbl_physical_samples_physical_sample_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_physical_samples_physical_sample_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7229 (class 0 OID 0)
-- Dependencies: 863
-- Name: tbl_physical_samples_physical_sample_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_physical_samples_physical_sample_id_seq OWNED BY tbl_physical_samples.physical_sample_id;


--
-- TOC entry 864 (class 1259 OID 19783)
-- Name: tbl_project_stage_project_stage_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_project_stage_project_stage_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7230 (class 0 OID 0)
-- Dependencies: 864
-- Name: tbl_project_stage_project_stage_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_project_stage_project_stage_id_seq OWNED BY tbl_project_stages.project_stage_id;


--
-- TOC entry 865 (class 1259 OID 19785)
-- Name: tbl_project_types_project_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_project_types_project_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7231 (class 0 OID 0)
-- Dependencies: 865
-- Name: tbl_project_types_project_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_project_types_project_type_id_seq OWNED BY tbl_project_types.project_type_id;


--
-- TOC entry 866 (class 1259 OID 19787)
-- Name: tbl_projects_project_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_projects_project_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7232 (class 0 OID 0)
-- Dependencies: 866
-- Name: tbl_projects_project_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_projects_project_id_seq OWNED BY tbl_projects.project_id;


--
-- TOC entry 867 (class 1259 OID 19789)
-- Name: tbl_publication_types_publication_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_publication_types_publication_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7233 (class 0 OID 0)
-- Dependencies: 867
-- Name: tbl_publication_types_publication_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_publication_types_publication_type_id_seq OWNED BY tbl_publication_types.publication_type_id;


--
-- TOC entry 868 (class 1259 OID 19791)
-- Name: tbl_publishers_publisher_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_publishers_publisher_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7234 (class 0 OID 0)
-- Dependencies: 868
-- Name: tbl_publishers_publisher_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_publishers_publisher_id_seq OWNED BY tbl_publishers.publisher_id;


--
-- TOC entry 869 (class 1259 OID 19793)
-- Name: tbl_radiocarbon_calibration_radiocarbon_calibration_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_radiocarbon_calibration_radiocarbon_calibration_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7235 (class 0 OID 0)
-- Dependencies: 869
-- Name: tbl_radiocarbon_calibration_radiocarbon_calibration_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_radiocarbon_calibration_radiocarbon_calibration_id_seq OWNED BY tbl_radiocarbon_calibration.radiocarbon_calibration_id;


--
-- TOC entry 870 (class 1259 OID 19795)
-- Name: tbl_rdb_codes_rdb_code_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_rdb_codes_rdb_code_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7236 (class 0 OID 0)
-- Dependencies: 870
-- Name: tbl_rdb_codes_rdb_code_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_rdb_codes_rdb_code_id_seq OWNED BY tbl_rdb_codes.rdb_code_id;


--
-- TOC entry 871 (class 1259 OID 19797)
-- Name: tbl_rdb_rdb_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_rdb_rdb_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7237 (class 0 OID 0)
-- Dependencies: 871
-- Name: tbl_rdb_rdb_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_rdb_rdb_id_seq OWNED BY tbl_rdb.rdb_id;


--
-- TOC entry 872 (class 1259 OID 19799)
-- Name: tbl_rdb_systems_rdb_system_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_rdb_systems_rdb_system_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7238 (class 0 OID 0)
-- Dependencies: 872
-- Name: tbl_rdb_systems_rdb_system_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_rdb_systems_rdb_system_id_seq OWNED BY tbl_rdb_systems.rdb_system_id;


--
-- TOC entry 873 (class 1259 OID 19801)
-- Name: tbl_record_types_record_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_record_types_record_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7239 (class 0 OID 0)
-- Dependencies: 873
-- Name: tbl_record_types_record_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_record_types_record_type_id_seq OWNED BY tbl_record_types.record_type_id;


--
-- TOC entry 874 (class 1259 OID 19803)
-- Name: tbl_relative_age_refs_relative_age_ref_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_relative_age_refs_relative_age_ref_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7240 (class 0 OID 0)
-- Dependencies: 874
-- Name: tbl_relative_age_refs_relative_age_ref_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_relative_age_refs_relative_age_ref_id_seq OWNED BY tbl_relative_age_refs.relative_age_ref_id;


--
-- TOC entry 875 (class 1259 OID 19805)
-- Name: tbl_relative_age_types; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_relative_age_types (
    relative_age_type_id integer NOT NULL,
    age_type character varying,
    description text,
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 7241 (class 0 OID 0)
-- Dependencies: 875
-- Name: TABLE tbl_relative_age_types; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE tbl_relative_age_types IS '20130723PIB: replaced date_updated column with new one with same name but correct data type
20140226EE: replaced date_updated column with correct time data type';


--
-- TOC entry 7242 (class 0 OID 0)
-- Dependencies: 875
-- Name: COLUMN tbl_relative_age_types.age_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_relative_age_types.age_type IS 'name of chronological age type, e.g. archaeological period, single calendar date, calendar age range, blytt-sernander';


--
-- TOC entry 7243 (class 0 OID 0)
-- Dependencies: 875
-- Name: COLUMN tbl_relative_age_types.description; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN tbl_relative_age_types.description IS 'description of chronological age type, e.g. period defined by archaeological and or geological dates representing cultural activity period, climate period defined by palaeo-vegetation records';


--
-- TOC entry 876 (class 1259 OID 19812)
-- Name: tbl_relative_age_types_relative_age_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_relative_age_types_relative_age_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7244 (class 0 OID 0)
-- Dependencies: 876
-- Name: tbl_relative_age_types_relative_age_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_relative_age_types_relative_age_type_id_seq OWNED BY tbl_relative_age_types.relative_age_type_id;


--
-- TOC entry 877 (class 1259 OID 19814)
-- Name: tbl_relative_ages_relative_age_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_relative_ages_relative_age_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7245 (class 0 OID 0)
-- Dependencies: 877
-- Name: tbl_relative_ages_relative_age_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_relative_ages_relative_age_id_seq OWNED BY tbl_relative_ages.relative_age_id;


--
-- TOC entry 878 (class 1259 OID 19816)
-- Name: tbl_relative_dates_relative_date_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_relative_dates_relative_date_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7246 (class 0 OID 0)
-- Dependencies: 878
-- Name: tbl_relative_dates_relative_date_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_relative_dates_relative_date_id_seq OWNED BY tbl_relative_dates.relative_date_id;


--
-- TOC entry 879 (class 1259 OID 19818)
-- Name: tbl_sample_alt_refs_sample_alt_ref_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_sample_alt_refs_sample_alt_ref_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7247 (class 0 OID 0)
-- Dependencies: 879
-- Name: tbl_sample_alt_refs_sample_alt_ref_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_sample_alt_refs_sample_alt_ref_id_seq OWNED BY tbl_sample_alt_refs.sample_alt_ref_id;


--
-- TOC entry 880 (class 1259 OID 19820)
-- Name: tbl_sample_colours_sample_colour_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_sample_colours_sample_colour_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7248 (class 0 OID 0)
-- Dependencies: 880
-- Name: tbl_sample_colours_sample_colour_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_sample_colours_sample_colour_id_seq OWNED BY tbl_sample_colours.sample_colour_id;


--
-- TOC entry 881 (class 1259 OID 19822)
-- Name: tbl_sample_coordinates_sample_coordinates_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_sample_coordinates_sample_coordinates_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7249 (class 0 OID 0)
-- Dependencies: 881
-- Name: tbl_sample_coordinates_sample_coordinates_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_sample_coordinates_sample_coordinates_id_seq OWNED BY tbl_sample_coordinates.sample_coordinate_id;


--
-- TOC entry 882 (class 1259 OID 19824)
-- Name: tbl_sample_description_sample_sample_description_sample_gro_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_sample_description_sample_sample_description_sample_gro_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7250 (class 0 OID 0)
-- Dependencies: 882
-- Name: tbl_sample_description_sample_sample_description_sample_gro_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_sample_description_sample_sample_description_sample_gro_seq OWNED BY tbl_sample_description_sample_group_contexts.sample_description_sample_group_context_id;


--
-- TOC entry 883 (class 1259 OID 19826)
-- Name: tbl_sample_description_types_sample_description_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_sample_description_types_sample_description_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7251 (class 0 OID 0)
-- Dependencies: 883
-- Name: tbl_sample_description_types_sample_description_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_sample_description_types_sample_description_type_id_seq OWNED BY tbl_sample_description_types.sample_description_type_id;


--
-- TOC entry 884 (class 1259 OID 19828)
-- Name: tbl_sample_descriptions_sample_description_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_sample_descriptions_sample_description_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7252 (class 0 OID 0)
-- Dependencies: 884
-- Name: tbl_sample_descriptions_sample_description_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_sample_descriptions_sample_description_id_seq OWNED BY tbl_sample_descriptions.sample_description_id;


--
-- TOC entry 885 (class 1259 OID 19830)
-- Name: tbl_sample_dimensions_sample_dimension_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_sample_dimensions_sample_dimension_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7253 (class 0 OID 0)
-- Dependencies: 885
-- Name: tbl_sample_dimensions_sample_dimension_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_sample_dimensions_sample_dimension_id_seq OWNED BY tbl_sample_dimensions.sample_dimension_id;


--
-- TOC entry 886 (class 1259 OID 19832)
-- Name: tbl_sample_geometry_sample_geometry_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_sample_geometry_sample_geometry_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 887 (class 1259 OID 19834)
-- Name: tbl_sample_group_coordinates_sample_group_position_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_sample_group_coordinates_sample_group_position_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7254 (class 0 OID 0)
-- Dependencies: 887
-- Name: tbl_sample_group_coordinates_sample_group_position_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_sample_group_coordinates_sample_group_position_id_seq OWNED BY tbl_sample_group_coordinates.sample_group_position_id;


--
-- TOC entry 888 (class 1259 OID 19836)
-- Name: tbl_sample_group_description__sample_group_desciption_sampl_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_sample_group_description__sample_group_desciption_sampl_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7255 (class 0 OID 0)
-- Dependencies: 888
-- Name: tbl_sample_group_description__sample_group_desciption_sampl_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_sample_group_description__sample_group_desciption_sampl_seq OWNED BY tbl_sample_group_description_type_sampling_contexts.sample_group_description_type_sampling_context_id;


--
-- TOC entry 889 (class 1259 OID 19838)
-- Name: tbl_sample_group_description__sample_group_description_type_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_sample_group_description__sample_group_description_type_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7256 (class 0 OID 0)
-- Dependencies: 889
-- Name: tbl_sample_group_description__sample_group_description_type_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_sample_group_description__sample_group_description_type_seq OWNED BY tbl_sample_group_description_types.sample_group_description_type_id;


--
-- TOC entry 890 (class 1259 OID 19840)
-- Name: tbl_sample_group_descriptions_sample_group_description_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_sample_group_descriptions_sample_group_description_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7257 (class 0 OID 0)
-- Dependencies: 890
-- Name: tbl_sample_group_descriptions_sample_group_description_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_sample_group_descriptions_sample_group_description_id_seq OWNED BY tbl_sample_group_descriptions.sample_group_description_id;


--
-- TOC entry 891 (class 1259 OID 19842)
-- Name: tbl_sample_group_dimensions_sample_group_dimension_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_sample_group_dimensions_sample_group_dimension_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7258 (class 0 OID 0)
-- Dependencies: 891
-- Name: tbl_sample_group_dimensions_sample_group_dimension_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_sample_group_dimensions_sample_group_dimension_id_seq OWNED BY tbl_sample_group_dimensions.sample_group_dimension_id;


--
-- TOC entry 892 (class 1259 OID 19844)
-- Name: tbl_sample_group_images_sample_group_image_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_sample_group_images_sample_group_image_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7259 (class 0 OID 0)
-- Dependencies: 892
-- Name: tbl_sample_group_images_sample_group_image_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_sample_group_images_sample_group_image_id_seq OWNED BY tbl_sample_group_images.sample_group_image_id;


--
-- TOC entry 893 (class 1259 OID 19846)
-- Name: tbl_sample_group_notes_sample_group_note_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_sample_group_notes_sample_group_note_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7260 (class 0 OID 0)
-- Dependencies: 893
-- Name: tbl_sample_group_notes_sample_group_note_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_sample_group_notes_sample_group_note_id_seq OWNED BY tbl_sample_group_notes.sample_group_note_id;


--
-- TOC entry 894 (class 1259 OID 19848)
-- Name: tbl_sample_group_references_sample_group_reference_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_sample_group_references_sample_group_reference_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7261 (class 0 OID 0)
-- Dependencies: 894
-- Name: tbl_sample_group_references_sample_group_reference_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_sample_group_references_sample_group_reference_id_seq OWNED BY tbl_sample_group_references.sample_group_reference_id;


--
-- TOC entry 895 (class 1259 OID 19850)
-- Name: tbl_sample_group_sampling_contexts_sampling_context_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_sample_group_sampling_contexts_sampling_context_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7262 (class 0 OID 0)
-- Dependencies: 895
-- Name: tbl_sample_group_sampling_contexts_sampling_context_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_sample_group_sampling_contexts_sampling_context_id_seq OWNED BY tbl_sample_group_sampling_contexts.sampling_context_id;


--
-- TOC entry 896 (class 1259 OID 19852)
-- Name: tbl_sample_groups_sample_group_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_sample_groups_sample_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7263 (class 0 OID 0)
-- Dependencies: 896
-- Name: tbl_sample_groups_sample_group_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_sample_groups_sample_group_id_seq OWNED BY tbl_sample_groups.sample_group_id;


--
-- TOC entry 897 (class 1259 OID 19854)
-- Name: tbl_sample_horizons_sample_horizon_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_sample_horizons_sample_horizon_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7264 (class 0 OID 0)
-- Dependencies: 897
-- Name: tbl_sample_horizons_sample_horizon_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_sample_horizons_sample_horizon_id_seq OWNED BY tbl_sample_horizons.sample_horizon_id;


--
-- TOC entry 898 (class 1259 OID 19856)
-- Name: tbl_sample_images_sample_image_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_sample_images_sample_image_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7265 (class 0 OID 0)
-- Dependencies: 898
-- Name: tbl_sample_images_sample_image_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_sample_images_sample_image_id_seq OWNED BY tbl_sample_images.sample_image_id;


--
-- TOC entry 899 (class 1259 OID 19858)
-- Name: tbl_sample_location_sampling__sample_location_type_sampling_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_sample_location_sampling__sample_location_type_sampling_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7266 (class 0 OID 0)
-- Dependencies: 899
-- Name: tbl_sample_location_sampling__sample_location_type_sampling_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_sample_location_sampling__sample_location_type_sampling_seq OWNED BY tbl_sample_location_type_sampling_contexts.sample_location_type_sampling_context_id;


--
-- TOC entry 900 (class 1259 OID 19860)
-- Name: tbl_sample_location_sampling_contex_sample_location_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_sample_location_sampling_contex_sample_location_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7267 (class 0 OID 0)
-- Dependencies: 900
-- Name: tbl_sample_location_sampling_contex_sample_location_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_sample_location_sampling_contex_sample_location_type_id_seq OWNED BY tbl_sample_location_type_sampling_contexts.sample_location_type_id;


--
-- TOC entry 901 (class 1259 OID 19862)
-- Name: tbl_sample_location_types_sample_location_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_sample_location_types_sample_location_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7268 (class 0 OID 0)
-- Dependencies: 901
-- Name: tbl_sample_location_types_sample_location_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_sample_location_types_sample_location_type_id_seq OWNED BY tbl_sample_location_types.sample_location_type_id;


--
-- TOC entry 902 (class 1259 OID 19864)
-- Name: tbl_sample_locations_sample_location_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_sample_locations_sample_location_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7269 (class 0 OID 0)
-- Dependencies: 902
-- Name: tbl_sample_locations_sample_location_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_sample_locations_sample_location_id_seq OWNED BY tbl_sample_locations.sample_location_id;


--
-- TOC entry 903 (class 1259 OID 19866)
-- Name: tbl_sample_notes_sample_note_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_sample_notes_sample_note_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7270 (class 0 OID 0)
-- Dependencies: 903
-- Name: tbl_sample_notes_sample_note_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_sample_notes_sample_note_id_seq OWNED BY tbl_sample_notes.sample_note_id;


--
-- TOC entry 904 (class 1259 OID 19868)
-- Name: tbl_sample_types_sample_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_sample_types_sample_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7271 (class 0 OID 0)
-- Dependencies: 904
-- Name: tbl_sample_types_sample_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_sample_types_sample_type_id_seq OWNED BY tbl_sample_types.sample_type_id;


--
-- TOC entry 905 (class 1259 OID 19870)
-- Name: tbl_season_types_season_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_season_types_season_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7272 (class 0 OID 0)
-- Dependencies: 905
-- Name: tbl_season_types_season_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_season_types_season_type_id_seq OWNED BY tbl_season_types.season_type_id;


--
-- TOC entry 906 (class 1259 OID 19872)
-- Name: tbl_seasons_season_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_seasons_season_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7273 (class 0 OID 0)
-- Dependencies: 906
-- Name: tbl_seasons_season_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_seasons_season_id_seq OWNED BY tbl_seasons.season_id;


--
-- TOC entry 907 (class 1259 OID 19874)
-- Name: tbl_site_images_site_image_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_site_images_site_image_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7274 (class 0 OID 0)
-- Dependencies: 907
-- Name: tbl_site_images_site_image_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_site_images_site_image_id_seq OWNED BY tbl_site_images.site_image_id;


--
-- TOC entry 908 (class 1259 OID 19876)
-- Name: tbl_site_locations_site_location_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_site_locations_site_location_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7275 (class 0 OID 0)
-- Dependencies: 908
-- Name: tbl_site_locations_site_location_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_site_locations_site_location_id_seq OWNED BY tbl_site_locations.site_location_id;


--
-- TOC entry 909 (class 1259 OID 19878)
-- Name: tbl_site_natgridrefs_site_natgridref_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_site_natgridrefs_site_natgridref_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7276 (class 0 OID 0)
-- Dependencies: 909
-- Name: tbl_site_natgridrefs_site_natgridref_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_site_natgridrefs_site_natgridref_id_seq OWNED BY tbl_site_natgridrefs.site_natgridref_id;


--
-- TOC entry 910 (class 1259 OID 19880)
-- Name: tbl_site_other_records_site_other_records_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_site_other_records_site_other_records_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7277 (class 0 OID 0)
-- Dependencies: 910
-- Name: tbl_site_other_records_site_other_records_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_site_other_records_site_other_records_id_seq OWNED BY tbl_site_other_records.site_other_records_id;


--
-- TOC entry 911 (class 1259 OID 19882)
-- Name: tbl_site_preservation_status_site_preservation_status_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_site_preservation_status_site_preservation_status_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7278 (class 0 OID 0)
-- Dependencies: 911
-- Name: tbl_site_preservation_status_site_preservation_status_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_site_preservation_status_site_preservation_status_id_seq OWNED BY tbl_site_preservation_status.site_preservation_status_id;


--
-- TOC entry 912 (class 1259 OID 19884)
-- Name: tbl_site_references_site_reference_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_site_references_site_reference_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7279 (class 0 OID 0)
-- Dependencies: 912
-- Name: tbl_site_references_site_reference_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_site_references_site_reference_id_seq OWNED BY tbl_site_references.site_reference_id;


--
-- TOC entry 913 (class 1259 OID 19886)
-- Name: tbl_sites_site_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_sites_site_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7280 (class 0 OID 0)
-- Dependencies: 913
-- Name: tbl_sites_site_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_sites_site_id_seq OWNED BY tbl_sites.site_id;


--
-- TOC entry 914 (class 1259 OID 19888)
-- Name: tbl_species_associations_species_association_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_species_associations_species_association_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7281 (class 0 OID 0)
-- Dependencies: 914
-- Name: tbl_species_associations_species_association_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_species_associations_species_association_id_seq OWNED BY tbl_species_associations.species_association_id;


--
-- TOC entry 915 (class 1259 OID 19890)
-- Name: tbl_taxa_common_names_taxon_common_name_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_taxa_common_names_taxon_common_name_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7282 (class 0 OID 0)
-- Dependencies: 915
-- Name: tbl_taxa_common_names_taxon_common_name_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_taxa_common_names_taxon_common_name_id_seq OWNED BY tbl_taxa_common_names.taxon_common_name_id;


--
-- TOC entry 916 (class 1259 OID 19892)
-- Name: tbl_taxa_images; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_taxa_images (
    taxa_images_id integer NOT NULL,
    image_name character varying,
    description text,
    image_location text,
    image_type_id integer,
    taxon_id integer NOT NULL,
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 7283 (class 0 OID 0)
-- Dependencies: 916
-- Name: TABLE tbl_taxa_images; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE tbl_taxa_images IS '20140226EE: changed the data type for date_updated';


--
-- TOC entry 917 (class 1259 OID 19899)
-- Name: tbl_taxa_images_taxa_images_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_taxa_images_taxa_images_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7284 (class 0 OID 0)
-- Dependencies: 917
-- Name: tbl_taxa_images_taxa_images_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_taxa_images_taxa_images_id_seq OWNED BY tbl_taxa_images.taxa_images_id;


--
-- TOC entry 918 (class 1259 OID 19901)
-- Name: tbl_taxa_measured_attributes_measured_attribute_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_taxa_measured_attributes_measured_attribute_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7285 (class 0 OID 0)
-- Dependencies: 918
-- Name: tbl_taxa_measured_attributes_measured_attribute_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_taxa_measured_attributes_measured_attribute_id_seq OWNED BY tbl_taxa_measured_attributes.measured_attribute_id;


--
-- TOC entry 919 (class 1259 OID 19903)
-- Name: tbl_taxa_reference_specimens; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE tbl_taxa_reference_specimens (
    taxa_reference_specimen_id integer NOT NULL,
    taxon_id integer NOT NULL,
    contact_id integer NOT NULL,
    notes text,
    date_updated timestamp with time zone DEFAULT now()
);


--
-- TOC entry 7286 (class 0 OID 0)
-- Dependencies: 919
-- Name: TABLE tbl_taxa_reference_specimens; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE tbl_taxa_reference_specimens IS '20140226EE: changed date_updated to correct data type';


--
-- TOC entry 920 (class 1259 OID 19910)
-- Name: tbl_taxa_reference_specimens_taxa_reference_specimen_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_taxa_reference_specimens_taxa_reference_specimen_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7287 (class 0 OID 0)
-- Dependencies: 920
-- Name: tbl_taxa_reference_specimens_taxa_reference_specimen_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_taxa_reference_specimens_taxa_reference_specimen_id_seq OWNED BY tbl_taxa_reference_specimens.taxa_reference_specimen_id;


--
-- TOC entry 921 (class 1259 OID 19912)
-- Name: tbl_taxa_seasonality_seasonality_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_taxa_seasonality_seasonality_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7288 (class 0 OID 0)
-- Dependencies: 921
-- Name: tbl_taxa_seasonality_seasonality_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_taxa_seasonality_seasonality_id_seq OWNED BY tbl_taxa_seasonality.seasonality_id;


--
-- TOC entry 922 (class 1259 OID 19914)
-- Name: tbl_taxa_synonyms_synonym_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_taxa_synonyms_synonym_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7289 (class 0 OID 0)
-- Dependencies: 922
-- Name: tbl_taxa_synonyms_synonym_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_taxa_synonyms_synonym_id_seq OWNED BY tbl_taxa_synonyms.synonym_id;


--
-- TOC entry 923 (class 1259 OID 19916)
-- Name: tbl_taxa_tree_authors_author_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_taxa_tree_authors_author_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7290 (class 0 OID 0)
-- Dependencies: 923
-- Name: tbl_taxa_tree_authors_author_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_taxa_tree_authors_author_id_seq OWNED BY tbl_taxa_tree_authors.author_id;


--
-- TOC entry 924 (class 1259 OID 19918)
-- Name: tbl_taxa_tree_families_family_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_taxa_tree_families_family_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7291 (class 0 OID 0)
-- Dependencies: 924
-- Name: tbl_taxa_tree_families_family_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_taxa_tree_families_family_id_seq OWNED BY tbl_taxa_tree_families.family_id;


--
-- TOC entry 925 (class 1259 OID 19920)
-- Name: tbl_taxa_tree_genera_genus_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_taxa_tree_genera_genus_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7292 (class 0 OID 0)
-- Dependencies: 925
-- Name: tbl_taxa_tree_genera_genus_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_taxa_tree_genera_genus_id_seq OWNED BY tbl_taxa_tree_genera.genus_id;


--
-- TOC entry 926 (class 1259 OID 19922)
-- Name: tbl_taxa_tree_master_taxon_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_taxa_tree_master_taxon_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7293 (class 0 OID 0)
-- Dependencies: 926
-- Name: tbl_taxa_tree_master_taxon_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_taxa_tree_master_taxon_id_seq OWNED BY tbl_taxa_tree_master.taxon_id;


--
-- TOC entry 927 (class 1259 OID 19924)
-- Name: tbl_taxa_tree_orders_order_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_taxa_tree_orders_order_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7294 (class 0 OID 0)
-- Dependencies: 927
-- Name: tbl_taxa_tree_orders_order_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_taxa_tree_orders_order_id_seq OWNED BY tbl_taxa_tree_orders.order_id;


--
-- TOC entry 928 (class 1259 OID 19926)
-- Name: tbl_taxonomic_order_biblio_taxonomic_order_biblio_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_taxonomic_order_biblio_taxonomic_order_biblio_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7295 (class 0 OID 0)
-- Dependencies: 928
-- Name: tbl_taxonomic_order_biblio_taxonomic_order_biblio_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_taxonomic_order_biblio_taxonomic_order_biblio_id_seq OWNED BY tbl_taxonomic_order_biblio.taxonomic_order_biblio_id;


--
-- TOC entry 929 (class 1259 OID 19928)
-- Name: tbl_taxonomic_order_systems_taxonomic_order_system_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_taxonomic_order_systems_taxonomic_order_system_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7296 (class 0 OID 0)
-- Dependencies: 929
-- Name: tbl_taxonomic_order_systems_taxonomic_order_system_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_taxonomic_order_systems_taxonomic_order_system_id_seq OWNED BY tbl_taxonomic_order_systems.taxonomic_order_system_id;


--
-- TOC entry 930 (class 1259 OID 19930)
-- Name: tbl_taxonomic_order_taxonomic_order_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_taxonomic_order_taxonomic_order_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7297 (class 0 OID 0)
-- Dependencies: 930
-- Name: tbl_taxonomic_order_taxonomic_order_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_taxonomic_order_taxonomic_order_id_seq OWNED BY tbl_taxonomic_order.taxonomic_order_id;


--
-- TOC entry 931 (class 1259 OID 19932)
-- Name: tbl_taxonomy_notes_taxonomy_notes_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_taxonomy_notes_taxonomy_notes_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7298 (class 0 OID 0)
-- Dependencies: 931
-- Name: tbl_taxonomy_notes_taxonomy_notes_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_taxonomy_notes_taxonomy_notes_id_seq OWNED BY tbl_taxonomy_notes.taxonomy_notes_id;


--
-- TOC entry 932 (class 1259 OID 19934)
-- Name: tbl_tephra_dates_tephra_date_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_tephra_dates_tephra_date_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7299 (class 0 OID 0)
-- Dependencies: 932
-- Name: tbl_tephra_dates_tephra_date_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_tephra_dates_tephra_date_id_seq OWNED BY tbl_tephra_dates.tephra_date_id;


--
-- TOC entry 933 (class 1259 OID 19936)
-- Name: tbl_tephra_refs_tephra_ref_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_tephra_refs_tephra_ref_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7300 (class 0 OID 0)
-- Dependencies: 933
-- Name: tbl_tephra_refs_tephra_ref_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_tephra_refs_tephra_ref_id_seq OWNED BY tbl_tephra_refs.tephra_ref_id;


--
-- TOC entry 934 (class 1259 OID 19938)
-- Name: tbl_tephras_tephra_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_tephras_tephra_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7301 (class 0 OID 0)
-- Dependencies: 934
-- Name: tbl_tephras_tephra_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_tephras_tephra_id_seq OWNED BY tbl_tephras.tephra_id;


--
-- TOC entry 935 (class 1259 OID 19940)
-- Name: tbl_text_biology_biology_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_text_biology_biology_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7302 (class 0 OID 0)
-- Dependencies: 935
-- Name: tbl_text_biology_biology_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_text_biology_biology_id_seq OWNED BY tbl_text_biology.biology_id;


--
-- TOC entry 936 (class 1259 OID 19942)
-- Name: tbl_text_distribution_distribution_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_text_distribution_distribution_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7303 (class 0 OID 0)
-- Dependencies: 936
-- Name: tbl_text_distribution_distribution_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_text_distribution_distribution_id_seq OWNED BY tbl_text_distribution.distribution_id;


--
-- TOC entry 937 (class 1259 OID 19944)
-- Name: tbl_text_identification_keys_key_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_text_identification_keys_key_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7304 (class 0 OID 0)
-- Dependencies: 937
-- Name: tbl_text_identification_keys_key_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_text_identification_keys_key_id_seq OWNED BY tbl_text_identification_keys.key_id;


--
-- TOC entry 938 (class 1259 OID 19946)
-- Name: tbl_units_unit_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_units_unit_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7305 (class 0 OID 0)
-- Dependencies: 938
-- Name: tbl_units_unit_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_units_unit_id_seq OWNED BY tbl_units.unit_id;


--
-- TOC entry 939 (class 1259 OID 19948)
-- Name: tbl_years_types_years_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE tbl_years_types_years_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 7306 (class 0 OID 0)
-- Dependencies: 939
-- Name: tbl_years_types_years_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE tbl_years_types_years_type_id_seq OWNED BY tbl_years_types.years_type_id;


--
-- TOC entry 943 (class 1259 OID 30608)
-- Name: view_analysis_entity_type; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW view_analysis_entity_type AS
 SELECT DISTINCT tbl_abundances.analysis_entity_id,
    1 AS analysis_entity_type_id,
    'Measured Quantity'::text AS analysis_entity_type_name
   FROM tbl_abundances
UNION
 SELECT DISTINCT tbl_measured_values.analysis_entity_id,
    2 AS analysis_entity_type_id,
    'Measured Values'::text AS analysis_entity_type_name
   FROM tbl_measured_values
UNION
 SELECT DISTINCT tbl_ceramics.analysis_entity_id,
    3 AS analysis_entity_type_id,
    'Measured Ceramic Value'::text AS analysis_entity_type_name
   FROM tbl_ceramics
UNION
 SELECT DISTINCT tbl_dendro.analysis_entity_id,
    4 AS analysis_entity_type_id,
    'Dendro Value'::text AS analysis_entity_type_name
   FROM tbl_dendro
UNION
 SELECT DISTINCT tbl_geochronology.analysis_entity_id,
    6 AS analysis_entity_type_id,
    'Geochronolgy'::text AS analysis_entity_type_name
   FROM tbl_geochronology
UNION
 SELECT DISTINCT tbl_tephra_dates.analysis_entity_id,
    7 AS analysis_entity_type_id,
    'Tephra date'::text AS analysis_entity_type_name
   FROM tbl_tephra_dates
UNION
 SELECT DISTINCT tbl_analysis_entity_ages.analysis_entity_id,
    8 AS analysis_entity_type_id,
    'Age'::text AS analysis_entity_type_name
   FROM tbl_analysis_entity_ages;


--
-- TOC entry 940 (class 1259 OID 19950)
-- Name: view_taxa_alphabetically; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW view_taxa_alphabetically AS
 SELECT o.order_id,
    o.order_name AS "order",
    f.family_id,
    f.family_name AS family,
    g.genus_id,
    g.genus_name AS genus,
    s.taxon_id,
    s.species,
    a.author_id,
    a.author_name AS author
   FROM ((((tbl_taxa_tree_master s
     JOIN tbl_taxa_tree_genera g ON ((s.genus_id = g.genus_id)))
     JOIN tbl_taxa_tree_families f ON ((g.family_id = f.family_id)))
     JOIN tbl_taxa_tree_orders o ON ((f.order_id = o.order_id)))
     LEFT JOIN tbl_taxa_tree_authors a ON ((s.author_id = a.author_id)))
  ORDER BY o.order_name, f.family_name, g.genus_name, s.species;


--
-- TOC entry 7307 (class 0 OID 0)
-- Dependencies: 940
-- Name: VIEW view_taxa_alphabetically; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON VIEW view_taxa_alphabetically IS 'Lists full taxonomic tree in alphabetical order';


--
-- TOC entry 941 (class 1259 OID 19955)
-- Name: view_taxa_tree; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW view_taxa_tree AS
 SELECT tbl_taxa_tree_authors.author_name,
    tbl_taxa_tree_master.species,
    tbl_taxa_tree_genera.genus_name,
    tbl_taxa_tree_families.family_name,
    tbl_taxa_tree_orders.order_name,
    tbl_taxa_tree_orders.sort_order
   FROM tbl_taxa_tree_orders,
    tbl_taxa_tree_master,
    tbl_taxa_tree_genera,
    tbl_taxa_tree_families,
    tbl_taxa_tree_authors
  WHERE ((((tbl_taxa_tree_master.genus_id = tbl_taxa_tree_genera.genus_id) AND (tbl_taxa_tree_genera.family_id = tbl_taxa_tree_families.family_id)) AND (tbl_taxa_tree_families.order_id = tbl_taxa_tree_orders.order_id)) AND (tbl_taxa_tree_authors.author_id = tbl_taxa_tree_master.author_id));


--
-- TOC entry 7308 (class 0 OID 0)
-- Dependencies: 941
-- Name: VIEW view_taxa_tree; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON VIEW view_taxa_tree IS 'Used to view the entire taxanomic tree in one go.';


--
-- TOC entry 942 (class 1259 OID 19959)
-- Name: view_taxa_tree_select; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW view_taxa_tree_select AS
 SELECT a.author_name AS author,
    s.species,
    s.taxon_id,
    g.genus_name AS genus,
    g.genus_id,
    f.family_name AS family,
    f.family_id,
    o.order_name,
    o.order_id
   FROM ((((tbl_taxa_tree_master s
     JOIN tbl_taxa_tree_genera g ON ((s.genus_id = g.genus_id)))
     JOIN tbl_taxa_tree_families f ON ((g.family_id = f.family_id)))
     JOIN tbl_taxa_tree_orders o ON ((f.order_id = o.order_id)))
     LEFT JOIN tbl_taxa_tree_authors a ON ((s.author_id = a.author_id)));


--
-- TOC entry 7309 (class 0 OID 0)
-- Dependencies: 942
-- Name: VIEW view_taxa_tree_select; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON VIEW view_taxa_tree_select IS 'view with all taxa with one row per taxon. Includes the primary ids for each of the included items for easy selections.';


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 5127 (class 2604 OID 19964)
-- Name: tbl_clearinghouse_accepted_submissions accepted_submission_id; Type: DEFAULT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_accepted_submissions ALTER COLUMN accepted_submission_id SET DEFAULT nextval('tbl_clearinghouse_accepted_submissio_accepted_submission_id_seq'::regclass);


--
-- TOC entry 5135 (class 2604 OID 19965)
-- Name: tbl_clearinghouse_activity_log activity_log_id; Type: DEFAULT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_activity_log ALTER COLUMN activity_log_id SET DEFAULT nextval('tbl_clearinghouse_activity_log_activity_log_id_seq'::regclass);


--
-- TOC entry 5136 (class 2604 OID 19966)
-- Name: tbl_clearinghouse_info_references info_reference_id; Type: DEFAULT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_info_references ALTER COLUMN info_reference_id SET DEFAULT nextval('tbl_clearinghouse_info_references_info_reference_id_seq'::regclass);


--
-- TOC entry 5138 (class 2604 OID 19967)
-- Name: tbl_clearinghouse_sessions session_id; Type: DEFAULT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_sessions ALTER COLUMN session_id SET DEFAULT nextval('tbl_clearinghouse_sessions_session_id_seq'::regclass);


--
-- TOC entry 5139 (class 2604 OID 19968)
-- Name: tbl_clearinghouse_settings setting_id; Type: DEFAULT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_settings ALTER COLUMN setting_id SET DEFAULT nextval('tbl_clearinghouse_settings_setting_id_seq'::regclass);


--
-- TOC entry 5140 (class 2604 OID 19969)
-- Name: tbl_clearinghouse_signal_log signal_log_id; Type: DEFAULT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_signal_log ALTER COLUMN signal_log_id SET DEFAULT nextval('tbl_clearinghouse_signal_log_signal_log_id_seq'::regclass);


--
-- TOC entry 5143 (class 2604 OID 19970)
-- Name: tbl_clearinghouse_signals signal_id; Type: DEFAULT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_signals ALTER COLUMN signal_id SET DEFAULT nextval('tbl_clearinghouse_signals_signal_id_seq'::regclass);


--
-- TOC entry 5144 (class 2604 OID 19971)
-- Name: tbl_clearinghouse_submission_reject_entities reject_entity_id; Type: DEFAULT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_submission_reject_entities ALTER COLUMN reject_entity_id SET DEFAULT nextval('tbl_clearinghouse_submission_reject_entiti_reject_entity_id_seq'::regclass);


--
-- TOC entry 5146 (class 2604 OID 19972)
-- Name: tbl_clearinghouse_submission_rejects submission_reject_id; Type: DEFAULT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_submission_rejects ALTER COLUMN submission_reject_id SET DEFAULT nextval('tbl_clearinghouse_submission_rejects_submission_reject_id_seq'::regclass);


--
-- TOC entry 5147 (class 2604 OID 19973)
-- Name: tbl_clearinghouse_submission_tables table_id; Type: DEFAULT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_submission_tables ALTER COLUMN table_id SET DEFAULT nextval('tbl_clearinghouse_submission_tables_table_id_seq'::regclass);


--
-- TOC entry 5148 (class 2604 OID 19974)
-- Name: tbl_clearinghouse_submission_xml_content_columns column_id; Type: DEFAULT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_submission_xml_content_columns ALTER COLUMN column_id SET DEFAULT nextval('tbl_clearinghouse_submission_xml_content_columns_column_id_seq'::regclass);


--
-- TOC entry 5149 (class 2604 OID 19975)
-- Name: tbl_clearinghouse_submission_xml_content_records record_id; Type: DEFAULT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_submission_xml_content_records ALTER COLUMN record_id SET DEFAULT nextval('tbl_clearinghouse_submission_xml_content_records_record_id_seq'::regclass);


--
-- TOC entry 5150 (class 2604 OID 19976)
-- Name: tbl_clearinghouse_submission_xml_content_tables content_table_id; Type: DEFAULT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_submission_xml_content_tables ALTER COLUMN content_table_id SET DEFAULT nextval('tbl_clearinghouse_submission_xml_content_t_content_table_id_seq'::regclass);


--
-- TOC entry 5151 (class 2604 OID 19977)
-- Name: tbl_clearinghouse_submission_xml_content_values value_id; Type: DEFAULT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_submission_xml_content_values ALTER COLUMN value_id SET DEFAULT nextval('tbl_clearinghouse_submission_xml_content_values_value_id_seq'::regclass);


--
-- TOC entry 5153 (class 2604 OID 19978)
-- Name: tbl_clearinghouse_submissions submission_id; Type: DEFAULT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_submissions ALTER COLUMN submission_id SET DEFAULT nextval('tbl_clearinghouse_submissions_submission_id_seq'::regclass);


--
-- TOC entry 5161 (class 2604 OID 19979)
-- Name: tbl_clearinghouse_users user_id; Type: DEFAULT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_users ALTER COLUMN user_id SET DEFAULT nextval('tbl_clearinghouse_users_user_id_seq'::regclass);


SET search_path = metainformation, pg_catalog;

--
-- TOC entry 5540 (class 2604 OID 19980)
-- Name: language_definitions id; Type: DEFAULT; Schema: metainformation; Owner: -
--

ALTER TABLE ONLY language_definitions ALTER COLUMN id SET DEFAULT nextval('language_definitions_id_seq'::regclass);


--
-- TOC entry 5541 (class 2604 OID 19981)
-- Name: original_phrases id; Type: DEFAULT; Schema: metainformation; Owner: -
--

ALTER TABLE ONLY original_phrases ALTER COLUMN id SET DEFAULT nextval('original_phrases_id_seq'::regclass);


--
-- TOC entry 5543 (class 2604 OID 19982)
-- Name: tbl_view_states view_state_id; Type: DEFAULT; Schema: metainformation; Owner: -
--

ALTER TABLE ONLY tbl_view_states ALTER COLUMN view_state_id SET DEFAULT nextval('tbl_view_states_view_state_id_seq'::regclass);


--
-- TOC entry 5544 (class 2604 OID 19983)
-- Name: translated_phrases id; Type: DEFAULT; Schema: metainformation; Owner: -
--

ALTER TABLE ONLY translated_phrases ALTER COLUMN id SET DEFAULT nextval('translated_phrases_id_seq'::regclass);


SET search_path = public, pg_catalog;

--
-- TOC entry 5163 (class 2604 OID 19984)
-- Name: tbl_abundance_elements abundance_element_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_abundance_elements ALTER COLUMN abundance_element_id SET DEFAULT nextval('tbl_abundance_elements_abundance_element_id_seq'::regclass);


--
-- TOC entry 5165 (class 2604 OID 19985)
-- Name: tbl_abundance_ident_levels abundance_ident_level_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_abundance_ident_levels ALTER COLUMN abundance_ident_level_id SET DEFAULT nextval('tbl_abundance_ident_levels_abundance_ident_level_id_seq'::regclass);


--
-- TOC entry 5167 (class 2604 OID 19986)
-- Name: tbl_abundance_modifications abundance_modification_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_abundance_modifications ALTER COLUMN abundance_modification_id SET DEFAULT nextval('tbl_abundance_modifications_abundance_modification_id_seq'::regclass);


--
-- TOC entry 5170 (class 2604 OID 19987)
-- Name: tbl_abundances abundance_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_abundances ALTER COLUMN abundance_id SET DEFAULT nextval('tbl_abundances_abundance_id_seq'::regclass);


--
-- TOC entry 5173 (class 2604 OID 19988)
-- Name: tbl_activity_types activity_type_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_activity_types ALTER COLUMN activity_type_id SET DEFAULT nextval('tbl_activity_types_activity_type_id_seq'::regclass);


--
-- TOC entry 5175 (class 2604 OID 19989)
-- Name: tbl_aggregate_datasets aggregate_dataset_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_aggregate_datasets ALTER COLUMN aggregate_dataset_id SET DEFAULT nextval('tbl_aggregate_datasets_aggregate_dataset_id_seq'::regclass);


--
-- TOC entry 5177 (class 2604 OID 19990)
-- Name: tbl_aggregate_order_types aggregate_order_type_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_aggregate_order_types ALTER COLUMN aggregate_order_type_id SET DEFAULT nextval('tbl_aggregate_order_types_aggregate_order_type_id_seq'::regclass);


--
-- TOC entry 5179 (class 2604 OID 19991)
-- Name: tbl_aggregate_sample_ages aggregate_sample_age_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_aggregate_sample_ages ALTER COLUMN aggregate_sample_age_id SET DEFAULT nextval('tbl_aggregate_sample_ages_aggregate_sample_age_id_seq'::regclass);


--
-- TOC entry 5181 (class 2604 OID 19992)
-- Name: tbl_aggregate_samples aggregate_sample_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_aggregate_samples ALTER COLUMN aggregate_sample_id SET DEFAULT nextval('tbl_aggregate_samples_aggregate_sample_id_seq'::regclass);


--
-- TOC entry 5183 (class 2604 OID 19993)
-- Name: tbl_alt_ref_types alt_ref_type_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_alt_ref_types ALTER COLUMN alt_ref_type_id SET DEFAULT nextval('tbl_alt_ref_types_alt_ref_type_id_seq'::regclass);


--
-- TOC entry 5185 (class 2604 OID 19994)
-- Name: tbl_analysis_entities analysis_entity_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_analysis_entities ALTER COLUMN analysis_entity_id SET DEFAULT nextval('tbl_analysis_entities_analysis_entity_id_seq'::regclass);


--
-- TOC entry 5187 (class 2604 OID 19995)
-- Name: tbl_analysis_entity_ages analysis_entity_age_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_analysis_entity_ages ALTER COLUMN analysis_entity_age_id SET DEFAULT nextval('tbl_analysis_entity_ages_analysis_entity_age_id_seq'::regclass);


--
-- TOC entry 5189 (class 2604 OID 19996)
-- Name: tbl_analysis_entity_dimensions analysis_entity_dimension_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_analysis_entity_dimensions ALTER COLUMN analysis_entity_dimension_id SET DEFAULT nextval('tbl_analysis_entity_dimensions_analysis_entity_dimension_id_seq'::regclass);


--
-- TOC entry 5191 (class 2604 OID 19997)
-- Name: tbl_analysis_entity_prep_methods analysis_entity_prep_method_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_analysis_entity_prep_methods ALTER COLUMN analysis_entity_prep_method_id SET DEFAULT nextval('tbl_analysis_entity_prep_meth_analysis_entity_prep_method_i_seq'::regclass);


--
-- TOC entry 5202 (class 2604 OID 19998)
-- Name: tbl_biblio biblio_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_biblio ALTER COLUMN biblio_id SET DEFAULT nextval('tbl_biblio_biblio_id_seq'::regclass);


--
-- TOC entry 5204 (class 2604 OID 19999)
-- Name: tbl_biblio_keywords biblio_keyword_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_biblio_keywords ALTER COLUMN biblio_keyword_id SET DEFAULT nextval('tbl_biblio_keywords_biblio_keyword_id_seq'::regclass);


--
-- TOC entry 5206 (class 2604 OID 20000)
-- Name: tbl_bugs_abundance_codes bugs_abundance_code_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_bugs_abundance_codes ALTER COLUMN bugs_abundance_code_id SET DEFAULT nextval('tbl_bugs_abundance_codes_bugs_abundance_code_id_seq'::regclass);


--
-- TOC entry 5208 (class 2604 OID 20001)
-- Name: tbl_bugs_biblio bugs_biblio_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_bugs_biblio ALTER COLUMN bugs_biblio_id SET DEFAULT nextval('tbl_bugs_biblio_bugs_biblio_id_seq'::regclass);


--
-- TOC entry 5210 (class 2604 OID 20002)
-- Name: tbl_bugs_dates_calendar bugs_dates_calendar_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_bugs_dates_calendar ALTER COLUMN bugs_dates_calendar_id SET DEFAULT nextval('tbl_bugs_dates_calendar_bugs_dates_relative_id_seq'::regclass);


--
-- TOC entry 5212 (class 2604 OID 20003)
-- Name: tbl_bugs_dates_period bugs_dates_period_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_bugs_dates_period ALTER COLUMN bugs_dates_period_id SET DEFAULT nextval('tbl_bugs_dates_period_bugs_dates_period_id_seq'::regclass);


--
-- TOC entry 5214 (class 2604 OID 20004)
-- Name: tbl_bugs_dates_radio bugs_dates_radio_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_bugs_dates_radio ALTER COLUMN bugs_dates_radio_id SET DEFAULT nextval('tbl_bugs_dates_radio_bugs_dates_radio_id_seq'::regclass);


--
-- TOC entry 5216 (class 2604 OID 20005)
-- Name: tbl_bugs_datesmethods bugs_datesmethods_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_bugs_datesmethods ALTER COLUMN bugs_datesmethods_id SET DEFAULT nextval('tbl_bugs_datesmethods_bugs_datesmethods_id_seq'::regclass);


--
-- TOC entry 5218 (class 2604 OID 20006)
-- Name: tbl_bugs_periods bugs_dates_relative_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_bugs_periods ALTER COLUMN bugs_dates_relative_id SET DEFAULT nextval('tbl_bugs_periods_bugs_dates_relative_id_seq'::regclass);


--
-- TOC entry 5220 (class 2604 OID 20007)
-- Name: tbl_bugs_physical_samples bugs_physical_sample_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_bugs_physical_samples ALTER COLUMN bugs_physical_sample_id SET DEFAULT nextval('tbl_bugs_physical_samples_bugs_physical_sample_id_seq'::regclass);


--
-- TOC entry 5222 (class 2604 OID 20008)
-- Name: tbl_bugs_sample_groups bugs_sample_group_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_bugs_sample_groups ALTER COLUMN bugs_sample_group_id SET DEFAULT nextval('tbl_bugs_sample_groups_bugs_sample_group_id_seq'::regclass);


--
-- TOC entry 5224 (class 2604 OID 20009)
-- Name: tbl_bugs_sites bugs_sites_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_bugs_sites ALTER COLUMN bugs_sites_id SET DEFAULT nextval('tbl_bugs_sites_bugs_sites_id_seq'::regclass);


--
-- TOC entry 5545 (class 2604 OID 20010)
-- Name: tbl_bugstransfer_errors bugs_error_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_bugstransfer_errors ALTER COLUMN bugs_error_id SET DEFAULT nextval('tbl_bugstransfer_errors_bugs_error_id_seq'::regclass);


--
-- TOC entry 5547 (class 2604 OID 20011)
-- Name: tbl_bugstransfer_log bugs_transfer_log_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_bugstransfer_log ALTER COLUMN bugs_transfer_log_id SET DEFAULT nextval('tbl_bugstransfer_log_bugs_transfer_log_id_seq'::regclass);


--
-- TOC entry 5226 (class 2604 OID 20012)
-- Name: tbl_ceramics ceramics_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_ceramics ALTER COLUMN ceramics_id SET DEFAULT nextval('tbl_ceramics_ceramics_id_seq'::regclass);


--
-- TOC entry 5228 (class 2604 OID 20013)
-- Name: tbl_ceramics_measurement_lookup ceramics_measurement_lookup_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_ceramics_measurement_lookup ALTER COLUMN ceramics_measurement_lookup_id SET DEFAULT nextval('tbl_ceramics_measurement_look_ceramics_measurement_lookup_i_seq'::regclass);


--
-- TOC entry 5230 (class 2604 OID 20014)
-- Name: tbl_ceramics_measurements ceramics_measurement_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_ceramics_measurements ALTER COLUMN ceramics_measurement_id SET DEFAULT nextval('tbl_ceramics_measurements_ceramics_measurement_id_seq'::regclass);


--
-- TOC entry 5232 (class 2604 OID 20015)
-- Name: tbl_chron_control_types chron_control_type_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_chron_control_types ALTER COLUMN chron_control_type_id SET DEFAULT nextval('tbl_chron_control_types_chron_control_type_id_seq'::regclass);


--
-- TOC entry 5234 (class 2604 OID 20016)
-- Name: tbl_chron_controls chron_control_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_chron_controls ALTER COLUMN chron_control_id SET DEFAULT nextval('tbl_chron_controls_chron_control_id_seq'::regclass);


--
-- TOC entry 5237 (class 2604 OID 20017)
-- Name: tbl_chronologies chronology_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_chronologies ALTER COLUMN chronology_id SET DEFAULT nextval('tbl_chronologies_chronology_id_seq'::regclass);


--
-- TOC entry 5267 (class 2604 OID 20018)
-- Name: tbl_collections_or_journals collection_or_journal_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_collections_or_journals ALTER COLUMN collection_or_journal_id SET DEFAULT nextval('tbl_collections_or_journals_collection_or_journal_id_seq'::regclass);


--
-- TOC entry 5269 (class 2604 OID 20019)
-- Name: tbl_colours colour_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_colours ALTER COLUMN colour_id SET DEFAULT nextval('tbl_colours_colour_id_seq'::regclass);


--
-- TOC entry 5271 (class 2604 OID 20020)
-- Name: tbl_contact_types contact_type_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_contact_types ALTER COLUMN contact_type_id SET DEFAULT nextval('tbl_contact_types_contact_type_id_seq'::regclass);


--
-- TOC entry 5273 (class 2604 OID 20021)
-- Name: tbl_contacts contact_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_contacts ALTER COLUMN contact_id SET DEFAULT nextval('tbl_contacts_contact_id_seq'::regclass);


--
-- TOC entry 5275 (class 2604 OID 20022)
-- Name: tbl_coordinate_method_dimensions coordinate_method_dimension_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_coordinate_method_dimensions ALTER COLUMN coordinate_method_dimension_id SET DEFAULT nextval('tbl_coordinate_method_dimensi_coordinate_method_dimension_i_seq'::regclass);


--
-- TOC entry 5277 (class 2604 OID 20023)
-- Name: tbl_data_type_groups data_type_group_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_data_type_groups ALTER COLUMN data_type_group_id SET DEFAULT nextval('tbl_data_type_groups_data_type_group_id_seq'::regclass);


--
-- TOC entry 5280 (class 2604 OID 20024)
-- Name: tbl_data_types data_type_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_data_types ALTER COLUMN data_type_id SET DEFAULT nextval('tbl_data_types_data_type_id_seq'::regclass);


--
-- TOC entry 5282 (class 2604 OID 20025)
-- Name: tbl_dataset_contacts dataset_contact_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dataset_contacts ALTER COLUMN dataset_contact_id SET DEFAULT nextval('tbl_dataset_contacts_dataset_contact_id_seq'::regclass);


--
-- TOC entry 5284 (class 2604 OID 20026)
-- Name: tbl_dataset_masters master_set_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dataset_masters ALTER COLUMN master_set_id SET DEFAULT nextval('tbl_dataset_masters_master_set_id_seq'::regclass);


--
-- TOC entry 5286 (class 2604 OID 20027)
-- Name: tbl_dataset_submission_types submission_type_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dataset_submission_types ALTER COLUMN submission_type_id SET DEFAULT nextval('tbl_dataset_submission_types_submission_type_id_seq'::regclass);


--
-- TOC entry 5288 (class 2604 OID 20028)
-- Name: tbl_dataset_submissions dataset_submission_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dataset_submissions ALTER COLUMN dataset_submission_id SET DEFAULT nextval('tbl_dataset_submissions_dataset_submission_id_seq'::regclass);


--
-- TOC entry 5245 (class 2604 OID 20029)
-- Name: tbl_datasets dataset_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_datasets ALTER COLUMN dataset_id SET DEFAULT nextval('tbl_datasets_dataset_id_seq'::regclass);


--
-- TOC entry 5291 (class 2604 OID 20030)
-- Name: tbl_dating_labs dating_lab_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dating_labs ALTER COLUMN dating_lab_id SET DEFAULT nextval('tbl_dating_labs_dating_lab_id_seq'::regclass);


--
-- TOC entry 5293 (class 2604 OID 20031)
-- Name: tbl_dating_material dating_material_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dating_material ALTER COLUMN dating_material_id SET DEFAULT nextval('tbl_dating_material_dating_material_id_seq'::regclass);


--
-- TOC entry 5295 (class 2604 OID 20032)
-- Name: tbl_dating_uncertainty dating_uncertainty_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dating_uncertainty ALTER COLUMN dating_uncertainty_id SET DEFAULT nextval('tbl_dating_uncertainty_dating_uncertainty_id_seq'::regclass);


--
-- TOC entry 5297 (class 2604 OID 20033)
-- Name: tbl_dendro dendro_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dendro ALTER COLUMN dendro_id SET DEFAULT nextval('tbl_dendro_dendro_id_seq'::regclass);


--
-- TOC entry 5299 (class 2604 OID 20034)
-- Name: tbl_dendro_date_notes dendro_date_note_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dendro_date_notes ALTER COLUMN dendro_date_note_id SET DEFAULT nextval('tbl_dendro_date_notes_dendro_date_note_id_seq'::regclass);


--
-- TOC entry 5301 (class 2604 OID 20035)
-- Name: tbl_dendro_dates dendro_date_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dendro_dates ALTER COLUMN dendro_date_id SET DEFAULT nextval('tbl_dendro_dates_dendro_date_id_seq'::regclass);


--
-- TOC entry 5303 (class 2604 OID 20036)
-- Name: tbl_dendro_measurement_lookup dendro_measurement_lookup_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dendro_measurement_lookup ALTER COLUMN dendro_measurement_lookup_id SET DEFAULT nextval('tbl_dendro_measurement_lookup_dendro_measurement_lookup_id_seq'::regclass);


--
-- TOC entry 5305 (class 2604 OID 20037)
-- Name: tbl_dendro_measurements dendro_measurement_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dendro_measurements ALTER COLUMN dendro_measurement_id SET DEFAULT nextval('tbl_dendro_measurements_dendro_measurement_id_seq'::regclass);


--
-- TOC entry 5259 (class 2604 OID 20038)
-- Name: tbl_dimensions dimension_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dimensions ALTER COLUMN dimension_id SET DEFAULT nextval('tbl_dimensions_dimension_id_seq'::regclass);


--
-- TOC entry 5311 (class 2604 OID 20039)
-- Name: tbl_ecocode_definitions ecocode_definition_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_ecocode_definitions ALTER COLUMN ecocode_definition_id SET DEFAULT nextval('tbl_ecocode_definitions_ecocode_definition_id_seq'::regclass);


--
-- TOC entry 5316 (class 2604 OID 20040)
-- Name: tbl_ecocode_groups ecocode_group_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_ecocode_groups ALTER COLUMN ecocode_group_id SET DEFAULT nextval('tbl_ecocode_groups_ecocode_group_id_seq'::regclass);


--
-- TOC entry 5320 (class 2604 OID 20041)
-- Name: tbl_ecocode_systems ecocode_system_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_ecocode_systems ALTER COLUMN ecocode_system_id SET DEFAULT nextval('tbl_ecocode_systems_ecocode_system_id_seq'::regclass);


--
-- TOC entry 5324 (class 2604 OID 20042)
-- Name: tbl_ecocodes ecocode_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_ecocodes ALTER COLUMN ecocode_id SET DEFAULT nextval('tbl_ecocodes_ecocode_id_seq'::regclass);


--
-- TOC entry 5326 (class 2604 OID 20043)
-- Name: tbl_feature_types feature_type_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_feature_types ALTER COLUMN feature_type_id SET DEFAULT nextval('tbl_feature_types_feature_type_id_seq'::regclass);


--
-- TOC entry 5328 (class 2604 OID 20044)
-- Name: tbl_features feature_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_features ALTER COLUMN feature_id SET DEFAULT nextval('tbl_features_feature_id_seq'::regclass);


--
-- TOC entry 5330 (class 2604 OID 20045)
-- Name: tbl_geochron_refs geochron_ref_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_geochron_refs ALTER COLUMN geochron_ref_id SET DEFAULT nextval('tbl_geochron_refs_geochron_ref_id_seq'::regclass);


--
-- TOC entry 5332 (class 2604 OID 20046)
-- Name: tbl_geochronology geochron_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_geochronology ALTER COLUMN geochron_id SET DEFAULT nextval('tbl_geochronology_geochron_id_seq'::regclass);


--
-- TOC entry 5334 (class 2604 OID 20047)
-- Name: tbl_horizons horizon_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_horizons ALTER COLUMN horizon_id SET DEFAULT nextval('tbl_horizons_horizon_id_seq'::regclass);


--
-- TOC entry 5241 (class 2604 OID 20048)
-- Name: tbl_identification_levels identification_level_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_identification_levels ALTER COLUMN identification_level_id SET DEFAULT nextval('tbl_identification_levels_identification_level_id_seq'::regclass);


--
-- TOC entry 5336 (class 2604 OID 20049)
-- Name: tbl_image_types image_type_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_image_types ALTER COLUMN image_type_id SET DEFAULT nextval('tbl_image_types_image_type_id_seq'::regclass);


--
-- TOC entry 5338 (class 2604 OID 20050)
-- Name: tbl_imported_taxa_replacements imported_taxa_replacement_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_imported_taxa_replacements ALTER COLUMN imported_taxa_replacement_id SET DEFAULT nextval('tbl_imported_taxa_replacements_imported_taxa_replacement_id_seq'::regclass);


--
-- TOC entry 5340 (class 2604 OID 20051)
-- Name: tbl_keywords keyword_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_keywords ALTER COLUMN keyword_id SET DEFAULT nextval('tbl_keywords_keyword_id_seq'::regclass);


--
-- TOC entry 5344 (class 2604 OID 20052)
-- Name: tbl_languages language_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_languages ALTER COLUMN language_id SET DEFAULT nextval('tbl_languages_language_id_seq'::regclass);


--
-- TOC entry 5346 (class 2604 OID 20053)
-- Name: tbl_lithology lithology_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_lithology ALTER COLUMN lithology_id SET DEFAULT nextval('tbl_lithology_lithology_id_seq'::regclass);


--
-- TOC entry 5348 (class 2604 OID 20054)
-- Name: tbl_location_types location_type_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_location_types ALTER COLUMN location_type_id SET DEFAULT nextval('tbl_location_types_location_type_id_seq'::regclass);


--
-- TOC entry 5350 (class 2604 OID 20055)
-- Name: tbl_locations location_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_locations ALTER COLUMN location_id SET DEFAULT nextval('tbl_locations_location_id_seq'::regclass);


--
-- TOC entry 5356 (class 2604 OID 20056)
-- Name: tbl_mcr_names taxon_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_mcr_names ALTER COLUMN taxon_id SET DEFAULT nextval('tbl_mcr_names_taxon_id_seq'::regclass);


--
-- TOC entry 5366 (class 2604 OID 20057)
-- Name: tbl_mcr_summary_data mcr_summary_data_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_mcr_summary_data ALTER COLUMN mcr_summary_data_id SET DEFAULT nextval('tbl_mcr_summary_data_mcr_summary_data_id_seq'::regclass);


--
-- TOC entry 5368 (class 2604 OID 20058)
-- Name: tbl_mcrdata_birmbeetledat mcrdata_birmbeetledat_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_mcrdata_birmbeetledat ALTER COLUMN mcrdata_birmbeetledat_id SET DEFAULT nextval('tbl_mcrdata_birmbeetledat_mcrdata_birmbeetledat_id_seq'::regclass);


--
-- TOC entry 5261 (class 2604 OID 20059)
-- Name: tbl_measured_value_dimensions measured_value_dimension_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_measured_value_dimensions ALTER COLUMN measured_value_dimension_id SET DEFAULT nextval('tbl_measured_value_dimensions_measured_value_dimension_id_seq'::regclass);


--
-- TOC entry 5263 (class 2604 OID 20060)
-- Name: tbl_measured_values measured_value_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_measured_values ALTER COLUMN measured_value_id SET DEFAULT nextval('tbl_measured_values_measured_value_id_seq'::regclass);


--
-- TOC entry 5370 (class 2604 OID 20061)
-- Name: tbl_method_groups method_group_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_method_groups ALTER COLUMN method_group_id SET DEFAULT nextval('tbl_method_groups_method_group_id_seq'::regclass);


--
-- TOC entry 5265 (class 2604 OID 20062)
-- Name: tbl_methods method_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_methods ALTER COLUMN method_id SET DEFAULT nextval('tbl_methods_method_id_seq'::regclass);


--
-- TOC entry 5243 (class 2604 OID 20063)
-- Name: tbl_modification_types modification_type_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_modification_types ALTER COLUMN modification_type_id SET DEFAULT nextval('tbl_modification_types_modification_type_id_seq'::regclass);


--
-- TOC entry 5372 (class 2604 OID 20064)
-- Name: tbl_physical_sample_features physical_sample_feature_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_physical_sample_features ALTER COLUMN physical_sample_feature_id SET DEFAULT nextval('tbl_physical_sample_features_physical_sample_feature_id_seq'::regclass);


--
-- TOC entry 5248 (class 2604 OID 20065)
-- Name: tbl_physical_samples physical_sample_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_physical_samples ALTER COLUMN physical_sample_id SET DEFAULT nextval('tbl_physical_samples_physical_sample_id_seq'::regclass);


--
-- TOC entry 5374 (class 2604 OID 20066)
-- Name: tbl_project_stages project_stage_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_project_stages ALTER COLUMN project_stage_id SET DEFAULT nextval('tbl_project_stage_project_stage_id_seq'::regclass);


--
-- TOC entry 5376 (class 2604 OID 20067)
-- Name: tbl_project_types project_type_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_project_types ALTER COLUMN project_type_id SET DEFAULT nextval('tbl_project_types_project_type_id_seq'::regclass);


--
-- TOC entry 5378 (class 2604 OID 20068)
-- Name: tbl_projects project_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_projects ALTER COLUMN project_id SET DEFAULT nextval('tbl_projects_project_id_seq'::regclass);


--
-- TOC entry 5380 (class 2604 OID 20069)
-- Name: tbl_publication_types publication_type_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_publication_types ALTER COLUMN publication_type_id SET DEFAULT nextval('tbl_publication_types_publication_type_id_seq'::regclass);


--
-- TOC entry 5382 (class 2604 OID 20070)
-- Name: tbl_publishers publisher_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_publishers ALTER COLUMN publisher_id SET DEFAULT nextval('tbl_publishers_publisher_id_seq'::regclass);


--
-- TOC entry 5384 (class 2604 OID 20071)
-- Name: tbl_radiocarbon_calibration radiocarbon_calibration_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_radiocarbon_calibration ALTER COLUMN radiocarbon_calibration_id SET DEFAULT nextval('tbl_radiocarbon_calibration_radiocarbon_calibration_id_seq'::regclass);


--
-- TOC entry 5386 (class 2604 OID 20072)
-- Name: tbl_rdb rdb_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_rdb ALTER COLUMN rdb_id SET DEFAULT nextval('tbl_rdb_rdb_id_seq'::regclass);


--
-- TOC entry 5391 (class 2604 OID 20073)
-- Name: tbl_rdb_codes rdb_code_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_rdb_codes ALTER COLUMN rdb_code_id SET DEFAULT nextval('tbl_rdb_codes_rdb_code_id_seq'::regclass);


--
-- TOC entry 5395 (class 2604 OID 20074)
-- Name: tbl_rdb_systems rdb_system_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_rdb_systems ALTER COLUMN rdb_system_id SET DEFAULT nextval('tbl_rdb_systems_rdb_system_id_seq'::regclass);


--
-- TOC entry 5398 (class 2604 OID 20075)
-- Name: tbl_record_types record_type_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_record_types ALTER COLUMN record_type_id SET DEFAULT nextval('tbl_record_types_record_type_id_seq'::regclass);


--
-- TOC entry 5400 (class 2604 OID 20076)
-- Name: tbl_relative_age_refs relative_age_ref_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_relative_age_refs ALTER COLUMN relative_age_ref_id SET DEFAULT nextval('tbl_relative_age_refs_relative_age_ref_id_seq'::regclass);


--
-- TOC entry 5549 (class 2604 OID 20077)
-- Name: tbl_relative_age_types relative_age_type_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_relative_age_types ALTER COLUMN relative_age_type_id SET DEFAULT nextval('tbl_relative_age_types_relative_age_type_id_seq'::regclass);


--
-- TOC entry 5402 (class 2604 OID 20078)
-- Name: tbl_relative_ages relative_age_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_relative_ages ALTER COLUMN relative_age_id SET DEFAULT nextval('tbl_relative_ages_relative_age_id_seq'::regclass);


--
-- TOC entry 5404 (class 2604 OID 20079)
-- Name: tbl_relative_dates relative_date_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_relative_dates ALTER COLUMN relative_date_id SET DEFAULT nextval('tbl_relative_dates_relative_date_id_seq'::regclass);


--
-- TOC entry 5406 (class 2604 OID 20080)
-- Name: tbl_sample_alt_refs sample_alt_ref_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_alt_refs ALTER COLUMN sample_alt_ref_id SET DEFAULT nextval('tbl_sample_alt_refs_sample_alt_ref_id_seq'::regclass);


--
-- TOC entry 5408 (class 2604 OID 20081)
-- Name: tbl_sample_colours sample_colour_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_colours ALTER COLUMN sample_colour_id SET DEFAULT nextval('tbl_sample_colours_sample_colour_id_seq'::regclass);


--
-- TOC entry 5410 (class 2604 OID 20082)
-- Name: tbl_sample_coordinates sample_coordinate_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_coordinates ALTER COLUMN sample_coordinate_id SET DEFAULT nextval('tbl_sample_coordinates_sample_coordinates_id_seq'::regclass);


--
-- TOC entry 5412 (class 2604 OID 20083)
-- Name: tbl_sample_description_sample_group_contexts sample_description_sample_group_context_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_description_sample_group_contexts ALTER COLUMN sample_description_sample_group_context_id SET DEFAULT nextval('tbl_sample_description_sample_sample_description_sample_gro_seq'::regclass);


--
-- TOC entry 5414 (class 2604 OID 20084)
-- Name: tbl_sample_description_types sample_description_type_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_description_types ALTER COLUMN sample_description_type_id SET DEFAULT nextval('tbl_sample_description_types_sample_description_type_id_seq'::regclass);


--
-- TOC entry 5416 (class 2604 OID 20085)
-- Name: tbl_sample_descriptions sample_description_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_descriptions ALTER COLUMN sample_description_id SET DEFAULT nextval('tbl_sample_descriptions_sample_description_id_seq'::regclass);


--
-- TOC entry 5418 (class 2604 OID 20086)
-- Name: tbl_sample_dimensions sample_dimension_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_dimensions ALTER COLUMN sample_dimension_id SET DEFAULT nextval('tbl_sample_dimensions_sample_dimension_id_seq'::regclass);


--
-- TOC entry 5420 (class 2604 OID 20087)
-- Name: tbl_sample_group_coordinates sample_group_position_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_coordinates ALTER COLUMN sample_group_position_id SET DEFAULT nextval('tbl_sample_group_coordinates_sample_group_position_id_seq'::regclass);


--
-- TOC entry 5422 (class 2604 OID 20088)
-- Name: tbl_sample_group_description_type_sampling_contexts sample_group_description_type_sampling_context_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_description_type_sampling_contexts ALTER COLUMN sample_group_description_type_sampling_context_id SET DEFAULT nextval('tbl_sample_group_description__sample_group_desciption_sampl_seq'::regclass);


--
-- TOC entry 5424 (class 2604 OID 20089)
-- Name: tbl_sample_group_description_types sample_group_description_type_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_description_types ALTER COLUMN sample_group_description_type_id SET DEFAULT nextval('tbl_sample_group_description__sample_group_description_type_seq'::regclass);


--
-- TOC entry 5426 (class 2604 OID 20090)
-- Name: tbl_sample_group_descriptions sample_group_description_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_descriptions ALTER COLUMN sample_group_description_id SET DEFAULT nextval('tbl_sample_group_descriptions_sample_group_description_id_seq'::regclass);


--
-- TOC entry 5428 (class 2604 OID 20091)
-- Name: tbl_sample_group_dimensions sample_group_dimension_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_dimensions ALTER COLUMN sample_group_dimension_id SET DEFAULT nextval('tbl_sample_group_dimensions_sample_group_dimension_id_seq'::regclass);


--
-- TOC entry 5430 (class 2604 OID 20092)
-- Name: tbl_sample_group_images sample_group_image_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_images ALTER COLUMN sample_group_image_id SET DEFAULT nextval('tbl_sample_group_images_sample_group_image_id_seq'::regclass);


--
-- TOC entry 5432 (class 2604 OID 20093)
-- Name: tbl_sample_group_notes sample_group_note_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_notes ALTER COLUMN sample_group_note_id SET DEFAULT nextval('tbl_sample_group_notes_sample_group_note_id_seq'::regclass);


--
-- TOC entry 5435 (class 2604 OID 20094)
-- Name: tbl_sample_group_references sample_group_reference_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_references ALTER COLUMN sample_group_reference_id SET DEFAULT nextval('tbl_sample_group_references_sample_group_reference_id_seq'::regclass);


--
-- TOC entry 5438 (class 2604 OID 20095)
-- Name: tbl_sample_group_sampling_contexts sampling_context_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_sampling_contexts ALTER COLUMN sampling_context_id SET DEFAULT nextval('tbl_sample_group_sampling_contexts_sampling_context_id_seq'::regclass);


--
-- TOC entry 5442 (class 2604 OID 20096)
-- Name: tbl_sample_groups sample_group_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_groups ALTER COLUMN sample_group_id SET DEFAULT nextval('tbl_sample_groups_sample_group_id_seq'::regclass);


--
-- TOC entry 5444 (class 2604 OID 20097)
-- Name: tbl_sample_horizons sample_horizon_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_horizons ALTER COLUMN sample_horizon_id SET DEFAULT nextval('tbl_sample_horizons_sample_horizon_id_seq'::regclass);


--
-- TOC entry 5446 (class 2604 OID 20098)
-- Name: tbl_sample_images sample_image_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_images ALTER COLUMN sample_image_id SET DEFAULT nextval('tbl_sample_images_sample_image_id_seq'::regclass);


--
-- TOC entry 5448 (class 2604 OID 20099)
-- Name: tbl_sample_location_type_sampling_contexts sample_location_type_sampling_context_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_location_type_sampling_contexts ALTER COLUMN sample_location_type_sampling_context_id SET DEFAULT nextval('tbl_sample_location_sampling__sample_location_type_sampling_seq'::regclass);


--
-- TOC entry 5449 (class 2604 OID 20100)
-- Name: tbl_sample_location_type_sampling_contexts sample_location_type_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_location_type_sampling_contexts ALTER COLUMN sample_location_type_id SET DEFAULT nextval('tbl_sample_location_sampling_contex_sample_location_type_id_seq'::regclass);


--
-- TOC entry 5451 (class 2604 OID 20101)
-- Name: tbl_sample_location_types sample_location_type_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_location_types ALTER COLUMN sample_location_type_id SET DEFAULT nextval('tbl_sample_location_types_sample_location_type_id_seq'::regclass);


--
-- TOC entry 5453 (class 2604 OID 20102)
-- Name: tbl_sample_locations sample_location_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_locations ALTER COLUMN sample_location_id SET DEFAULT nextval('tbl_sample_locations_sample_location_id_seq'::regclass);


--
-- TOC entry 5455 (class 2604 OID 20103)
-- Name: tbl_sample_notes sample_note_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_notes ALTER COLUMN sample_note_id SET DEFAULT nextval('tbl_sample_notes_sample_note_id_seq'::regclass);


--
-- TOC entry 5457 (class 2604 OID 20104)
-- Name: tbl_sample_types sample_type_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_types ALTER COLUMN sample_type_id SET DEFAULT nextval('tbl_sample_types_sample_type_id_seq'::regclass);


--
-- TOC entry 5459 (class 2604 OID 20105)
-- Name: tbl_season_types season_type_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_season_types ALTER COLUMN season_type_id SET DEFAULT nextval('tbl_season_types_season_type_id_seq'::regclass);


--
-- TOC entry 5464 (class 2604 OID 20106)
-- Name: tbl_seasons season_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_seasons ALTER COLUMN season_id SET DEFAULT nextval('tbl_seasons_season_id_seq'::regclass);


--
-- TOC entry 5466 (class 2604 OID 20107)
-- Name: tbl_site_images site_image_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_site_images ALTER COLUMN site_image_id SET DEFAULT nextval('tbl_site_images_site_image_id_seq'::regclass);


--
-- TOC entry 5468 (class 2604 OID 20108)
-- Name: tbl_site_locations site_location_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_site_locations ALTER COLUMN site_location_id SET DEFAULT nextval('tbl_site_locations_site_location_id_seq'::regclass);


--
-- TOC entry 5470 (class 2604 OID 20109)
-- Name: tbl_site_natgridrefs site_natgridref_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_site_natgridrefs ALTER COLUMN site_natgridref_id SET DEFAULT nextval('tbl_site_natgridrefs_site_natgridref_id_seq'::regclass);


--
-- TOC entry 5472 (class 2604 OID 20110)
-- Name: tbl_site_other_records site_other_records_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_site_other_records ALTER COLUMN site_other_records_id SET DEFAULT nextval('tbl_site_other_records_site_other_records_id_seq'::regclass);


--
-- TOC entry 5474 (class 2604 OID 20111)
-- Name: tbl_site_preservation_status site_preservation_status_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_site_preservation_status ALTER COLUMN site_preservation_status_id SET DEFAULT nextval('tbl_site_preservation_status_site_preservation_status_id_seq'::regclass);


--
-- TOC entry 5477 (class 2604 OID 20112)
-- Name: tbl_site_references site_reference_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_site_references ALTER COLUMN site_reference_id SET DEFAULT nextval('tbl_site_references_site_reference_id_seq'::regclass);


--
-- TOC entry 5481 (class 2604 OID 20113)
-- Name: tbl_sites site_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sites ALTER COLUMN site_id SET DEFAULT nextval('tbl_sites_site_id_seq'::regclass);


--
-- TOC entry 5483 (class 2604 OID 20114)
-- Name: tbl_species_association_types association_type_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_species_association_types ALTER COLUMN association_type_id SET DEFAULT nextval('tbl_association_types_association_type_id_seq'::regclass);


--
-- TOC entry 5485 (class 2604 OID 20115)
-- Name: tbl_species_associations species_association_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_species_associations ALTER COLUMN species_association_id SET DEFAULT nextval('tbl_species_associations_species_association_id_seq'::regclass);


--
-- TOC entry 5490 (class 2604 OID 20116)
-- Name: tbl_taxa_common_names taxon_common_name_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_common_names ALTER COLUMN taxon_common_name_id SET DEFAULT nextval('tbl_taxa_common_names_taxon_common_name_id_seq'::regclass);


--
-- TOC entry 5551 (class 2604 OID 20117)
-- Name: tbl_taxa_images taxa_images_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_images ALTER COLUMN taxa_images_id SET DEFAULT nextval('tbl_taxa_images_taxa_images_id_seq'::regclass);


--
-- TOC entry 5496 (class 2604 OID 20118)
-- Name: tbl_taxa_measured_attributes measured_attribute_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_measured_attributes ALTER COLUMN measured_attribute_id SET DEFAULT nextval('tbl_taxa_measured_attributes_measured_attribute_id_seq'::regclass);


--
-- TOC entry 5553 (class 2604 OID 20119)
-- Name: tbl_taxa_reference_specimens taxa_reference_specimen_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_reference_specimens ALTER COLUMN taxa_reference_specimen_id SET DEFAULT nextval('tbl_taxa_reference_specimens_taxa_reference_specimen_id_seq'::regclass);


--
-- TOC entry 5499 (class 2604 OID 20120)
-- Name: tbl_taxa_seasonality seasonality_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_seasonality ALTER COLUMN seasonality_id SET DEFAULT nextval('tbl_taxa_seasonality_seasonality_id_seq'::regclass);


--
-- TOC entry 5502 (class 2604 OID 20121)
-- Name: tbl_taxa_synonyms synonym_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_synonyms ALTER COLUMN synonym_id SET DEFAULT nextval('tbl_taxa_synonyms_synonym_id_seq'::regclass);


--
-- TOC entry 5251 (class 2604 OID 20122)
-- Name: tbl_taxa_tree_authors author_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_tree_authors ALTER COLUMN author_id SET DEFAULT nextval('tbl_taxa_tree_authors_author_id_seq'::regclass);


--
-- TOC entry 5505 (class 2604 OID 20123)
-- Name: tbl_taxa_tree_families family_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_tree_families ALTER COLUMN family_id SET DEFAULT nextval('tbl_taxa_tree_families_family_id_seq'::regclass);


--
-- TOC entry 5254 (class 2604 OID 20124)
-- Name: tbl_taxa_tree_genera genus_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_tree_genera ALTER COLUMN genus_id SET DEFAULT nextval('tbl_taxa_tree_genera_genus_id_seq'::regclass);


--
-- TOC entry 5257 (class 2604 OID 20125)
-- Name: tbl_taxa_tree_master taxon_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_tree_master ALTER COLUMN taxon_id SET DEFAULT nextval('tbl_taxa_tree_master_taxon_id_seq'::regclass);


--
-- TOC entry 5508 (class 2604 OID 20126)
-- Name: tbl_taxa_tree_orders order_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_tree_orders ALTER COLUMN order_id SET DEFAULT nextval('tbl_taxa_tree_orders_order_id_seq'::regclass);


--
-- TOC entry 5513 (class 2604 OID 20127)
-- Name: tbl_taxonomic_order taxonomic_order_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxonomic_order ALTER COLUMN taxonomic_order_id SET DEFAULT nextval('tbl_taxonomic_order_taxonomic_order_id_seq'::regclass);


--
-- TOC entry 5517 (class 2604 OID 20128)
-- Name: tbl_taxonomic_order_biblio taxonomic_order_biblio_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxonomic_order_biblio ALTER COLUMN taxonomic_order_biblio_id SET DEFAULT nextval('tbl_taxonomic_order_biblio_taxonomic_order_biblio_id_seq'::regclass);


--
-- TOC entry 5520 (class 2604 OID 20129)
-- Name: tbl_taxonomic_order_systems taxonomic_order_system_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxonomic_order_systems ALTER COLUMN taxonomic_order_system_id SET DEFAULT nextval('tbl_taxonomic_order_systems_taxonomic_order_system_id_seq'::regclass);


--
-- TOC entry 5522 (class 2604 OID 20130)
-- Name: tbl_taxonomy_notes taxonomy_notes_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxonomy_notes ALTER COLUMN taxonomy_notes_id SET DEFAULT nextval('tbl_taxonomy_notes_taxonomy_notes_id_seq'::regclass);


--
-- TOC entry 5524 (class 2604 OID 20131)
-- Name: tbl_tephra_dates tephra_date_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_tephra_dates ALTER COLUMN tephra_date_id SET DEFAULT nextval('tbl_tephra_dates_tephra_date_id_seq'::regclass);


--
-- TOC entry 5526 (class 2604 OID 20132)
-- Name: tbl_tephra_refs tephra_ref_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_tephra_refs ALTER COLUMN tephra_ref_id SET DEFAULT nextval('tbl_tephra_refs_tephra_ref_id_seq'::regclass);


--
-- TOC entry 5528 (class 2604 OID 20133)
-- Name: tbl_tephras tephra_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_tephras ALTER COLUMN tephra_id SET DEFAULT nextval('tbl_tephras_tephra_id_seq'::regclass);


--
-- TOC entry 5530 (class 2604 OID 20134)
-- Name: tbl_text_biology biology_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_text_biology ALTER COLUMN biology_id SET DEFAULT nextval('tbl_text_biology_biology_id_seq'::regclass);


--
-- TOC entry 5532 (class 2604 OID 20135)
-- Name: tbl_text_distribution distribution_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_text_distribution ALTER COLUMN distribution_id SET DEFAULT nextval('tbl_text_distribution_distribution_id_seq'::regclass);


--
-- TOC entry 5534 (class 2604 OID 20136)
-- Name: tbl_text_identification_keys key_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_text_identification_keys ALTER COLUMN key_id SET DEFAULT nextval('tbl_text_identification_keys_key_id_seq'::regclass);


--
-- TOC entry 5536 (class 2604 OID 20137)
-- Name: tbl_units unit_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_units ALTER COLUMN unit_id SET DEFAULT nextval('tbl_units_unit_id_seq'::regclass);


--
-- TOC entry 5538 (class 2604 OID 20138)
-- Name: tbl_years_types years_type_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_years_types ALTER COLUMN years_type_id SET DEFAULT nextval('tbl_years_types_years_type_id_seq'::regclass);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 5667 (class 2606 OID 20277)
-- Name: tbl_clearinghouse_activity_log pk_activity_log_id; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_activity_log
    ADD CONSTRAINT pk_activity_log_id PRIMARY KEY (activity_log_id);


--
-- TOC entry 5687 (class 2606 OID 20279)
-- Name: tbl_clearinghouse_signals pk_clearinghouse_signals_signal_id; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_signals
    ADD CONSTRAINT pk_clearinghouse_signals_signal_id PRIMARY KEY (signal_id);


--
-- TOC entry 5669 (class 2606 OID 20281)
-- Name: tbl_clearinghouse_data_provider_grades pk_grade_id; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_data_provider_grades
    ADD CONSTRAINT pk_grade_id PRIMARY KEY (grade_id);


--
-- TOC entry 5718 (class 2606 OID 20283)
-- Name: tbl_clearinghouse_user_roles pk_role_id; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_user_roles
    ADD CONSTRAINT pk_role_id PRIMARY KEY (role_id);


--
-- TOC entry 5685 (class 2606 OID 20285)
-- Name: tbl_clearinghouse_signal_log pk_signal_log_id; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_signal_log
    ADD CONSTRAINT pk_signal_log_id PRIMARY KEY (signal_log_id);


--
-- TOC entry 5714 (class 2606 OID 20287)
-- Name: tbl_clearinghouse_submissions pk_submission_id; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_submissions
    ADD CONSTRAINT pk_submission_id PRIMARY KEY (submission_id);


--
-- TOC entry 5696 (class 2606 OID 20289)
-- Name: tbl_clearinghouse_submission_states pk_submission_state_id; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_submission_states
    ADD CONSTRAINT pk_submission_state_id PRIMARY KEY (submission_state_id);


--
-- TOC entry 5556 (class 2606 OID 20291)
-- Name: tbl_abundance_elements pk_tbl_abundance_elements; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_abundance_elements
    ADD CONSTRAINT pk_tbl_abundance_elements PRIMARY KEY (submission_id, source_id, abundance_element_id);


--
-- TOC entry 5560 (class 2606 OID 20293)
-- Name: tbl_abundance_ident_levels pk_tbl_abundance_ident_levels; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_abundance_ident_levels
    ADD CONSTRAINT pk_tbl_abundance_ident_levels PRIMARY KEY (submission_id, source_id, abundance_ident_level_id);


--
-- TOC entry 5564 (class 2606 OID 20295)
-- Name: tbl_abundance_modifications pk_tbl_abundance_modifications; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_abundance_modifications
    ADD CONSTRAINT pk_tbl_abundance_modifications PRIMARY KEY (submission_id, source_id, abundance_modification_id);


--
-- TOC entry 5569 (class 2606 OID 20297)
-- Name: tbl_abundances pk_tbl_abundances; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_abundances
    ADD CONSTRAINT pk_tbl_abundances PRIMARY KEY (submission_id, source_id, abundance_id);


--
-- TOC entry 5571 (class 2606 OID 20299)
-- Name: tbl_activity_types pk_tbl_activity_types; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_activity_types
    ADD CONSTRAINT pk_tbl_activity_types PRIMARY KEY (submission_id, source_id, activity_type_id);


--
-- TOC entry 5575 (class 2606 OID 20301)
-- Name: tbl_aggregate_datasets pk_tbl_aggregate_datasets; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_aggregate_datasets
    ADD CONSTRAINT pk_tbl_aggregate_datasets PRIMARY KEY (submission_id, source_id, aggregate_dataset_id);


--
-- TOC entry 5577 (class 2606 OID 20303)
-- Name: tbl_aggregate_order_types pk_tbl_aggregate_order_types; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_aggregate_order_types
    ADD CONSTRAINT pk_tbl_aggregate_order_types PRIMARY KEY (submission_id, source_id, aggregate_order_type_id);


--
-- TOC entry 5581 (class 2606 OID 20305)
-- Name: tbl_aggregate_sample_ages pk_tbl_aggregate_sample_ages; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_aggregate_sample_ages
    ADD CONSTRAINT pk_tbl_aggregate_sample_ages PRIMARY KEY (submission_id, source_id, aggregate_sample_age_id);


--
-- TOC entry 5585 (class 2606 OID 20307)
-- Name: tbl_aggregate_samples pk_tbl_aggregate_samples; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_aggregate_samples
    ADD CONSTRAINT pk_tbl_aggregate_samples PRIMARY KEY (submission_id, source_id, aggregate_sample_id);


--
-- TOC entry 5587 (class 2606 OID 20309)
-- Name: tbl_alt_ref_types pk_tbl_alt_ref_types; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_alt_ref_types
    ADD CONSTRAINT pk_tbl_alt_ref_types PRIMARY KEY (submission_id, source_id, alt_ref_type_id);


--
-- TOC entry 5591 (class 2606 OID 20311)
-- Name: tbl_analysis_entities pk_tbl_analysis_entities; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_analysis_entities
    ADD CONSTRAINT pk_tbl_analysis_entities PRIMARY KEY (submission_id, source_id, analysis_entity_id);


--
-- TOC entry 5595 (class 2606 OID 20313)
-- Name: tbl_analysis_entity_ages pk_tbl_analysis_entity_ages; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_analysis_entity_ages
    ADD CONSTRAINT pk_tbl_analysis_entity_ages PRIMARY KEY (submission_id, source_id, analysis_entity_age_id);


--
-- TOC entry 5599 (class 2606 OID 20315)
-- Name: tbl_analysis_entity_dimensions pk_tbl_analysis_entity_dimensions; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_analysis_entity_dimensions
    ADD CONSTRAINT pk_tbl_analysis_entity_dimensions PRIMARY KEY (submission_id, source_id, analysis_entity_dimension_id);


--
-- TOC entry 5603 (class 2606 OID 20317)
-- Name: tbl_analysis_entity_prep_methods pk_tbl_analysis_entity_prep_methods; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_analysis_entity_prep_methods
    ADD CONSTRAINT pk_tbl_analysis_entity_prep_methods PRIMARY KEY (submission_id, source_id, analysis_entity_prep_method_id);


--
-- TOC entry 5608 (class 2606 OID 20319)
-- Name: tbl_biblio pk_tbl_biblio; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_biblio
    ADD CONSTRAINT pk_tbl_biblio PRIMARY KEY (submission_id, source_id, biblio_id);


--
-- TOC entry 5612 (class 2606 OID 20321)
-- Name: tbl_biblio_keywords pk_tbl_biblio_keywords; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_biblio_keywords
    ADD CONSTRAINT pk_tbl_biblio_keywords PRIMARY KEY (submission_id, source_id, biblio_keyword_id);


--
-- TOC entry 5615 (class 2606 OID 20323)
-- Name: tbl_bugs_abundance_codes pk_tbl_bugs_abundance_codes; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_bugs_abundance_codes
    ADD CONSTRAINT pk_tbl_bugs_abundance_codes PRIMARY KEY (submission_id, source_id, bugs_abundance_code_id);


--
-- TOC entry 5618 (class 2606 OID 20325)
-- Name: tbl_bugs_biblio pk_tbl_bugs_biblio; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_bugs_biblio
    ADD CONSTRAINT pk_tbl_bugs_biblio PRIMARY KEY (submission_id, source_id, bugs_biblio_id);


--
-- TOC entry 5621 (class 2606 OID 20327)
-- Name: tbl_bugs_dates_calendar pk_tbl_bugs_dates_calendar; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_bugs_dates_calendar
    ADD CONSTRAINT pk_tbl_bugs_dates_calendar PRIMARY KEY (submission_id, source_id, bugs_dates_calendar_id);


--
-- TOC entry 5624 (class 2606 OID 20329)
-- Name: tbl_bugs_dates_period pk_tbl_bugs_dates_period; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_bugs_dates_period
    ADD CONSTRAINT pk_tbl_bugs_dates_period PRIMARY KEY (submission_id, source_id, bugs_dates_period_id);


--
-- TOC entry 5627 (class 2606 OID 20331)
-- Name: tbl_bugs_dates_radio pk_tbl_bugs_dates_radio; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_bugs_dates_radio
    ADD CONSTRAINT pk_tbl_bugs_dates_radio PRIMARY KEY (submission_id, source_id, bugs_dates_radio_id);


--
-- TOC entry 5630 (class 2606 OID 20333)
-- Name: tbl_bugs_datesmethods pk_tbl_bugs_datesmethods; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_bugs_datesmethods
    ADD CONSTRAINT pk_tbl_bugs_datesmethods PRIMARY KEY (submission_id, source_id, bugs_datesmethods_id);


--
-- TOC entry 5633 (class 2606 OID 20335)
-- Name: tbl_bugs_periods pk_tbl_bugs_periods; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_bugs_periods
    ADD CONSTRAINT pk_tbl_bugs_periods PRIMARY KEY (submission_id, source_id, bugs_dates_relative_id);


--
-- TOC entry 5636 (class 2606 OID 20337)
-- Name: tbl_bugs_physical_samples pk_tbl_bugs_physical_samples; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_bugs_physical_samples
    ADD CONSTRAINT pk_tbl_bugs_physical_samples PRIMARY KEY (submission_id, source_id, bugs_physical_sample_id);


--
-- TOC entry 5639 (class 2606 OID 20339)
-- Name: tbl_bugs_sample_groups pk_tbl_bugs_sample_groups; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_bugs_sample_groups
    ADD CONSTRAINT pk_tbl_bugs_sample_groups PRIMARY KEY (submission_id, source_id, bugs_sample_group_id);


--
-- TOC entry 5642 (class 2606 OID 20341)
-- Name: tbl_bugs_sites pk_tbl_bugs_sites; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_bugs_sites
    ADD CONSTRAINT pk_tbl_bugs_sites PRIMARY KEY (submission_id, source_id, bugs_sites_id);


--
-- TOC entry 5646 (class 2606 OID 20343)
-- Name: tbl_ceramics pk_tbl_ceramics; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_ceramics
    ADD CONSTRAINT pk_tbl_ceramics PRIMARY KEY (submission_id, source_id, ceramics_id);


--
-- TOC entry 5649 (class 2606 OID 20345)
-- Name: tbl_ceramics_measurement_lookup pk_tbl_ceramics_measurement_lookup; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_ceramics_measurement_lookup
    ADD CONSTRAINT pk_tbl_ceramics_measurement_lookup PRIMARY KEY (submission_id, source_id, ceramics_measurement_lookup_id);


--
-- TOC entry 5652 (class 2606 OID 20347)
-- Name: tbl_ceramics_measurements pk_tbl_ceramics_measurements; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_ceramics_measurements
    ADD CONSTRAINT pk_tbl_ceramics_measurements PRIMARY KEY (submission_id, source_id, ceramics_measurement_id);


--
-- TOC entry 5654 (class 2606 OID 20349)
-- Name: tbl_chron_control_types pk_tbl_chron_control_types; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_chron_control_types
    ADD CONSTRAINT pk_tbl_chron_control_types PRIMARY KEY (submission_id, source_id, chron_control_type_id);


--
-- TOC entry 5658 (class 2606 OID 20351)
-- Name: tbl_chron_controls pk_tbl_chron_controls; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_chron_controls
    ADD CONSTRAINT pk_tbl_chron_controls PRIMARY KEY (submission_id, source_id, chron_control_id);


--
-- TOC entry 5662 (class 2606 OID 20353)
-- Name: tbl_chronologies pk_tbl_chronologies; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_chronologies
    ADD CONSTRAINT pk_tbl_chronologies PRIMARY KEY (submission_id, source_id, chronology_id);


--
-- TOC entry 5664 (class 2606 OID 20355)
-- Name: tbl_clearinghouse_accepted_submissions pk_tbl_clearinghouse_accepted_submissions; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_accepted_submissions
    ADD CONSTRAINT pk_tbl_clearinghouse_accepted_submissions PRIMARY KEY (accepted_submission_id);


--
-- TOC entry 5671 (class 2606 OID 20357)
-- Name: tbl_clearinghouse_info_references pk_tbl_clearinghouse_info_references; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_info_references
    ADD CONSTRAINT pk_tbl_clearinghouse_info_references PRIMARY KEY (info_reference_id);


--
-- TOC entry 5674 (class 2606 OID 20359)
-- Name: tbl_clearinghouse_reject_entity_types pk_tbl_clearinghouse_reject_entity_types; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_reject_entity_types
    ADD CONSTRAINT pk_tbl_clearinghouse_reject_entity_types PRIMARY KEY (entity_type_id);


--
-- TOC entry 5676 (class 2606 OID 20361)
-- Name: tbl_clearinghouse_reports pk_tbl_clearinghouse_reports; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_reports
    ADD CONSTRAINT pk_tbl_clearinghouse_reports PRIMARY KEY (report_id);


--
-- TOC entry 5679 (class 2606 OID 20363)
-- Name: tbl_clearinghouse_sessions pk_tbl_clearinghouse_sessions_session_id; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_sessions
    ADD CONSTRAINT pk_tbl_clearinghouse_sessions_session_id PRIMARY KEY (session_id);


--
-- TOC entry 5683 (class 2606 OID 20365)
-- Name: tbl_clearinghouse_settings pk_tbl_clearinghouse_settings; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_settings
    ADD CONSTRAINT pk_tbl_clearinghouse_settings PRIMARY KEY (setting_id);


--
-- TOC entry 5691 (class 2606 OID 20367)
-- Name: tbl_clearinghouse_submission_reject_entities pk_tbl_clearinghouse_submission_reject_entities; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_submission_reject_entities
    ADD CONSTRAINT pk_tbl_clearinghouse_submission_reject_entities PRIMARY KEY (reject_entity_id);


--
-- TOC entry 5694 (class 2606 OID 20369)
-- Name: tbl_clearinghouse_submission_rejects pk_tbl_clearinghouse_submission_rejects; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_submission_rejects
    ADD CONSTRAINT pk_tbl_clearinghouse_submission_rejects PRIMARY KEY (submission_reject_id);


--
-- TOC entry 5700 (class 2606 OID 20371)
-- Name: tbl_clearinghouse_submission_tables pk_tbl_clearinghouse_submission_tables; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_submission_tables
    ADD CONSTRAINT pk_tbl_clearinghouse_submission_tables PRIMARY KEY (table_id);


--
-- TOC entry 5716 (class 2606 OID 20373)
-- Name: tbl_clearinghouse_use_cases pk_tbl_clearinghouse_use_cases; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_use_cases
    ADD CONSTRAINT pk_tbl_clearinghouse_use_cases PRIMARY KEY (use_case_id);


--
-- TOC entry 5723 (class 2606 OID 20375)
-- Name: tbl_collections_or_journals pk_tbl_collections_or_journals; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_collections_or_journals
    ADD CONSTRAINT pk_tbl_collections_or_journals PRIMARY KEY (submission_id, source_id, collection_or_journal_id);


--
-- TOC entry 5726 (class 2606 OID 20377)
-- Name: tbl_colours pk_tbl_colours; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_colours
    ADD CONSTRAINT pk_tbl_colours PRIMARY KEY (submission_id, source_id, colour_id);


--
-- TOC entry 5728 (class 2606 OID 20379)
-- Name: tbl_contact_types pk_tbl_contact_types; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_contact_types
    ADD CONSTRAINT pk_tbl_contact_types PRIMARY KEY (submission_id, source_id, contact_type_id);


--
-- TOC entry 5730 (class 2606 OID 20381)
-- Name: tbl_contacts pk_tbl_contacts; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_contacts
    ADD CONSTRAINT pk_tbl_contacts PRIMARY KEY (submission_id, source_id, contact_id);


--
-- TOC entry 5734 (class 2606 OID 20383)
-- Name: tbl_coordinate_method_dimensions pk_tbl_coordinate_method_dimensions; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_coordinate_method_dimensions
    ADD CONSTRAINT pk_tbl_coordinate_method_dimensions PRIMARY KEY (submission_id, source_id, coordinate_method_dimension_id);


--
-- TOC entry 5736 (class 2606 OID 20385)
-- Name: tbl_data_type_groups pk_tbl_data_type_groups; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_data_type_groups
    ADD CONSTRAINT pk_tbl_data_type_groups PRIMARY KEY (submission_id, source_id, data_type_group_id);


--
-- TOC entry 5739 (class 2606 OID 20387)
-- Name: tbl_data_types pk_tbl_data_types; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_data_types
    ADD CONSTRAINT pk_tbl_data_types PRIMARY KEY (submission_id, source_id, data_type_id);


--
-- TOC entry 5744 (class 2606 OID 20389)
-- Name: tbl_dataset_contacts pk_tbl_dataset_contacts; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_dataset_contacts
    ADD CONSTRAINT pk_tbl_dataset_contacts PRIMARY KEY (submission_id, source_id, dataset_contact_id);


--
-- TOC entry 5748 (class 2606 OID 20391)
-- Name: tbl_dataset_masters pk_tbl_dataset_masters; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_dataset_masters
    ADD CONSTRAINT pk_tbl_dataset_masters PRIMARY KEY (submission_id, source_id, master_set_id);


--
-- TOC entry 5750 (class 2606 OID 20393)
-- Name: tbl_dataset_submission_types pk_tbl_dataset_submission_types; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_dataset_submission_types
    ADD CONSTRAINT pk_tbl_dataset_submission_types PRIMARY KEY (submission_id, source_id, submission_type_id);


--
-- TOC entry 5755 (class 2606 OID 20395)
-- Name: tbl_dataset_submissions pk_tbl_dataset_submissions; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_dataset_submissions
    ADD CONSTRAINT pk_tbl_dataset_submissions PRIMARY KEY (submission_id, source_id, dataset_submission_id);


--
-- TOC entry 5763 (class 2606 OID 20397)
-- Name: tbl_datasets pk_tbl_datasets; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_datasets
    ADD CONSTRAINT pk_tbl_datasets PRIMARY KEY (submission_id, source_id, dataset_id);


--
-- TOC entry 5766 (class 2606 OID 20399)
-- Name: tbl_dating_labs pk_tbl_dating_labs; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_dating_labs
    ADD CONSTRAINT pk_tbl_dating_labs PRIMARY KEY (submission_id, source_id, dating_lab_id);


--
-- TOC entry 5771 (class 2606 OID 20401)
-- Name: tbl_dating_material pk_tbl_dating_material; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_dating_material
    ADD CONSTRAINT pk_tbl_dating_material PRIMARY KEY (submission_id, source_id, dating_material_id);


--
-- TOC entry 5773 (class 2606 OID 20403)
-- Name: tbl_dating_uncertainty pk_tbl_dating_uncertainty; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_dating_uncertainty
    ADD CONSTRAINT pk_tbl_dating_uncertainty PRIMARY KEY (submission_id, source_id, dating_uncertainty_id);


--
-- TOC entry 5777 (class 2606 OID 20405)
-- Name: tbl_dendro pk_tbl_dendro; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_dendro
    ADD CONSTRAINT pk_tbl_dendro PRIMARY KEY (submission_id, source_id, dendro_id);


--
-- TOC entry 5780 (class 2606 OID 20407)
-- Name: tbl_dendro_date_notes pk_tbl_dendro_date_notes; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_dendro_date_notes
    ADD CONSTRAINT pk_tbl_dendro_date_notes PRIMARY KEY (submission_id, source_id, dendro_date_note_id);


--
-- TOC entry 5785 (class 2606 OID 20409)
-- Name: tbl_dendro_dates pk_tbl_dendro_dates; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_dendro_dates
    ADD CONSTRAINT pk_tbl_dendro_dates PRIMARY KEY (submission_id, source_id, dendro_date_id);


--
-- TOC entry 5788 (class 2606 OID 20411)
-- Name: tbl_dendro_measurement_lookup pk_tbl_dendro_measurement_lookup; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_dendro_measurement_lookup
    ADD CONSTRAINT pk_tbl_dendro_measurement_lookup PRIMARY KEY (submission_id, source_id, dendro_measurement_lookup_id);


--
-- TOC entry 5791 (class 2606 OID 20413)
-- Name: tbl_dendro_measurements pk_tbl_dendro_measurements; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_dendro_measurements
    ADD CONSTRAINT pk_tbl_dendro_measurements PRIMARY KEY (submission_id, source_id, dendro_measurement_id);


--
-- TOC entry 5795 (class 2606 OID 20415)
-- Name: tbl_dimensions pk_tbl_dimensions; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_dimensions
    ADD CONSTRAINT pk_tbl_dimensions PRIMARY KEY (submission_id, source_id, dimension_id);


--
-- TOC entry 5798 (class 2606 OID 20417)
-- Name: tbl_ecocode_definitions pk_tbl_ecocode_definitions; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_ecocode_definitions
    ADD CONSTRAINT pk_tbl_ecocode_definitions PRIMARY KEY (submission_id, source_id, ecocode_definition_id);


--
-- TOC entry 5801 (class 2606 OID 20419)
-- Name: tbl_ecocode_groups pk_tbl_ecocode_groups; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_ecocode_groups
    ADD CONSTRAINT pk_tbl_ecocode_groups PRIMARY KEY (submission_id, source_id, ecocode_group_id);


--
-- TOC entry 5804 (class 2606 OID 20421)
-- Name: tbl_ecocode_systems pk_tbl_ecocode_systems; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_ecocode_systems
    ADD CONSTRAINT pk_tbl_ecocode_systems PRIMARY KEY (submission_id, source_id, ecocode_system_id);


--
-- TOC entry 5808 (class 2606 OID 20423)
-- Name: tbl_ecocodes pk_tbl_ecocodes; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_ecocodes
    ADD CONSTRAINT pk_tbl_ecocodes PRIMARY KEY (submission_id, source_id, ecocode_id);


--
-- TOC entry 5810 (class 2606 OID 20425)
-- Name: tbl_feature_types pk_tbl_feature_types; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_feature_types
    ADD CONSTRAINT pk_tbl_feature_types PRIMARY KEY (submission_id, source_id, feature_type_id);


--
-- TOC entry 5813 (class 2606 OID 20427)
-- Name: tbl_features pk_tbl_features; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_features
    ADD CONSTRAINT pk_tbl_features PRIMARY KEY (submission_id, source_id, feature_id);


--
-- TOC entry 5815 (class 2606 OID 20429)
-- Name: tbl_foreign_relations pk_tbl_foreign_relations; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_foreign_relations
    ADD CONSTRAINT pk_tbl_foreign_relations PRIMARY KEY (submission_id, source_id, source_table, source_column, target_table, target_column);


--
-- TOC entry 5819 (class 2606 OID 20431)
-- Name: tbl_geochron_refs pk_tbl_geochron_refs; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_geochron_refs
    ADD CONSTRAINT pk_tbl_geochron_refs PRIMARY KEY (submission_id, source_id, geochron_ref_id);


--
-- TOC entry 5824 (class 2606 OID 20433)
-- Name: tbl_geochronology pk_tbl_geochronology; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_geochronology
    ADD CONSTRAINT pk_tbl_geochronology PRIMARY KEY (submission_id, source_id, geochron_id);


--
-- TOC entry 5827 (class 2606 OID 20435)
-- Name: tbl_horizons pk_tbl_horizons; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_horizons
    ADD CONSTRAINT pk_tbl_horizons PRIMARY KEY (submission_id, source_id, horizon_id);


--
-- TOC entry 5829 (class 2606 OID 20437)
-- Name: tbl_identification_levels pk_tbl_identification_levels; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_identification_levels
    ADD CONSTRAINT pk_tbl_identification_levels PRIMARY KEY (submission_id, source_id, identification_level_id);


--
-- TOC entry 5831 (class 2606 OID 20439)
-- Name: tbl_image_types pk_tbl_image_types; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_image_types
    ADD CONSTRAINT pk_tbl_image_types PRIMARY KEY (submission_id, source_id, image_type_id);


--
-- TOC entry 5834 (class 2606 OID 20441)
-- Name: tbl_imported_taxa_replacements pk_tbl_imported_taxa_replacements; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_imported_taxa_replacements
    ADD CONSTRAINT pk_tbl_imported_taxa_replacements PRIMARY KEY (submission_id, source_id, imported_taxa_replacement_id);


--
-- TOC entry 5836 (class 2606 OID 20443)
-- Name: tbl_keywords pk_tbl_keywords; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_keywords
    ADD CONSTRAINT pk_tbl_keywords PRIMARY KEY (submission_id, source_id, keyword_id);


--
-- TOC entry 5838 (class 2606 OID 20445)
-- Name: tbl_languages pk_tbl_languages; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_languages
    ADD CONSTRAINT pk_tbl_languages PRIMARY KEY (submission_id, source_id, language_id);


--
-- TOC entry 5841 (class 2606 OID 20447)
-- Name: tbl_lithology pk_tbl_lithology; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_lithology
    ADD CONSTRAINT pk_tbl_lithology PRIMARY KEY (submission_id, source_id, lithology_id);


--
-- TOC entry 5843 (class 2606 OID 20449)
-- Name: tbl_location_types pk_tbl_location_types; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_location_types
    ADD CONSTRAINT pk_tbl_location_types PRIMARY KEY (submission_id, source_id, location_type_id);


--
-- TOC entry 5846 (class 2606 OID 20451)
-- Name: tbl_locations pk_tbl_locations; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_locations
    ADD CONSTRAINT pk_tbl_locations PRIMARY KEY (submission_id, source_id, location_id);


--
-- TOC entry 5849 (class 2606 OID 20453)
-- Name: tbl_mcr_names pk_tbl_mcr_names; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_mcr_names
    ADD CONSTRAINT pk_tbl_mcr_names PRIMARY KEY (submission_id, source_id, taxon_id);


--
-- TOC entry 5852 (class 2606 OID 20455)
-- Name: tbl_mcr_summary_data pk_tbl_mcr_summary_data; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_mcr_summary_data
    ADD CONSTRAINT pk_tbl_mcr_summary_data PRIMARY KEY (submission_id, source_id, mcr_summary_data_id);


--
-- TOC entry 5855 (class 2606 OID 20457)
-- Name: tbl_mcrdata_birmbeetledat pk_tbl_mcrdata_birmbeetledat; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_mcrdata_birmbeetledat
    ADD CONSTRAINT pk_tbl_mcrdata_birmbeetledat PRIMARY KEY (submission_id, source_id, mcrdata_birmbeetledat_id);


--
-- TOC entry 5859 (class 2606 OID 20459)
-- Name: tbl_measured_value_dimensions pk_tbl_measured_value_dimensions; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_measured_value_dimensions
    ADD CONSTRAINT pk_tbl_measured_value_dimensions PRIMARY KEY (submission_id, source_id, measured_value_dimension_id);


--
-- TOC entry 5862 (class 2606 OID 20461)
-- Name: tbl_measured_values pk_tbl_measured_values; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_measured_values
    ADD CONSTRAINT pk_tbl_measured_values PRIMARY KEY (submission_id, source_id, measured_value_id);


--
-- TOC entry 5864 (class 2606 OID 20463)
-- Name: tbl_method_groups pk_tbl_method_groups; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_method_groups
    ADD CONSTRAINT pk_tbl_method_groups PRIMARY KEY (submission_id, source_id, method_group_id);


--
-- TOC entry 5870 (class 2606 OID 20465)
-- Name: tbl_methods pk_tbl_methods; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_methods
    ADD CONSTRAINT pk_tbl_methods PRIMARY KEY (submission_id, source_id, method_id);


--
-- TOC entry 5872 (class 2606 OID 20467)
-- Name: tbl_modification_types pk_tbl_modification_types; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_modification_types
    ADD CONSTRAINT pk_tbl_modification_types PRIMARY KEY (submission_id, source_id, modification_type_id);


--
-- TOC entry 5876 (class 2606 OID 20469)
-- Name: tbl_physical_sample_features pk_tbl_physical_sample_features; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_physical_sample_features
    ADD CONSTRAINT pk_tbl_physical_sample_features PRIMARY KEY (submission_id, source_id, physical_sample_feature_id);


--
-- TOC entry 5881 (class 2606 OID 20471)
-- Name: tbl_physical_samples pk_tbl_physical_samples; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_physical_samples
    ADD CONSTRAINT pk_tbl_physical_samples PRIMARY KEY (submission_id, source_id, physical_sample_id);


--
-- TOC entry 5883 (class 2606 OID 20473)
-- Name: tbl_project_stages pk_tbl_project_stages; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_project_stages
    ADD CONSTRAINT pk_tbl_project_stages PRIMARY KEY (submission_id, source_id, project_stage_id);


--
-- TOC entry 5885 (class 2606 OID 20475)
-- Name: tbl_project_types pk_tbl_project_types; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_project_types
    ADD CONSTRAINT pk_tbl_project_types PRIMARY KEY (submission_id, source_id, project_type_id);


--
-- TOC entry 5889 (class 2606 OID 20477)
-- Name: tbl_projects pk_tbl_projects; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_projects
    ADD CONSTRAINT pk_tbl_projects PRIMARY KEY (submission_id, source_id, project_id);


--
-- TOC entry 5891 (class 2606 OID 20479)
-- Name: tbl_publication_types pk_tbl_publication_types; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_publication_types
    ADD CONSTRAINT pk_tbl_publication_types PRIMARY KEY (submission_id, source_id, publication_type_id);


--
-- TOC entry 5893 (class 2606 OID 20481)
-- Name: tbl_publishers pk_tbl_publishers; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_publishers
    ADD CONSTRAINT pk_tbl_publishers PRIMARY KEY (submission_id, source_id, publisher_id);


--
-- TOC entry 5895 (class 2606 OID 20483)
-- Name: tbl_radiocarbon_calibration pk_tbl_radiocarbon_calibration; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_radiocarbon_calibration
    ADD CONSTRAINT pk_tbl_radiocarbon_calibration PRIMARY KEY (submission_id, source_id, radiocarbon_calibration_id);


--
-- TOC entry 5900 (class 2606 OID 20485)
-- Name: tbl_rdb pk_tbl_rdb; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_rdb
    ADD CONSTRAINT pk_tbl_rdb PRIMARY KEY (submission_id, source_id, rdb_id);


--
-- TOC entry 5903 (class 2606 OID 20487)
-- Name: tbl_rdb_codes pk_tbl_rdb_codes; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_rdb_codes
    ADD CONSTRAINT pk_tbl_rdb_codes PRIMARY KEY (submission_id, source_id, rdb_code_id);


--
-- TOC entry 5907 (class 2606 OID 20489)
-- Name: tbl_rdb_systems pk_tbl_rdb_systems; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_rdb_systems
    ADD CONSTRAINT pk_tbl_rdb_systems PRIMARY KEY (submission_id, source_id, rdb_system_id);


--
-- TOC entry 5909 (class 2606 OID 20491)
-- Name: tbl_record_types pk_tbl_record_types; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_record_types
    ADD CONSTRAINT pk_tbl_record_types PRIMARY KEY (submission_id, source_id, record_type_id);


--
-- TOC entry 5913 (class 2606 OID 20493)
-- Name: tbl_relative_age_refs pk_tbl_relative_age_refs; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_relative_age_refs
    ADD CONSTRAINT pk_tbl_relative_age_refs PRIMARY KEY (submission_id, source_id, relative_age_ref_id);


--
-- TOC entry 5915 (class 2606 OID 20495)
-- Name: tbl_relative_age_types pk_tbl_relative_age_types; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_relative_age_types
    ADD CONSTRAINT pk_tbl_relative_age_types PRIMARY KEY (submission_id, source_id, relative_age_type_id);


--
-- TOC entry 5919 (class 2606 OID 20497)
-- Name: tbl_relative_ages pk_tbl_relative_ages; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_relative_ages
    ADD CONSTRAINT pk_tbl_relative_ages PRIMARY KEY (submission_id, source_id, relative_age_id);


--
-- TOC entry 5925 (class 2606 OID 20499)
-- Name: tbl_relative_dates pk_tbl_relative_dates; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_relative_dates
    ADD CONSTRAINT pk_tbl_relative_dates PRIMARY KEY (submission_id, source_id, relative_date_id);


--
-- TOC entry 5929 (class 2606 OID 20501)
-- Name: tbl_sample_alt_refs pk_tbl_sample_alt_refs; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_sample_alt_refs
    ADD CONSTRAINT pk_tbl_sample_alt_refs PRIMARY KEY (submission_id, source_id, sample_alt_ref_id);


--
-- TOC entry 5933 (class 2606 OID 20503)
-- Name: tbl_sample_colours pk_tbl_sample_colours; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_sample_colours
    ADD CONSTRAINT pk_tbl_sample_colours PRIMARY KEY (submission_id, source_id, sample_colour_id);


--
-- TOC entry 5937 (class 2606 OID 20505)
-- Name: tbl_sample_coordinates pk_tbl_sample_coordinates; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_sample_coordinates
    ADD CONSTRAINT pk_tbl_sample_coordinates PRIMARY KEY (submission_id, source_id, sample_coordinate_id);


--
-- TOC entry 5941 (class 2606 OID 20507)
-- Name: tbl_sample_description_sample_group_contexts pk_tbl_sample_description_sample_group_contexts; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_sample_description_sample_group_contexts
    ADD CONSTRAINT pk_tbl_sample_description_sample_group_contexts PRIMARY KEY (submission_id, source_id, sample_description_sample_group_context_id);


--
-- TOC entry 5943 (class 2606 OID 20509)
-- Name: tbl_sample_description_types pk_tbl_sample_description_types; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_sample_description_types
    ADD CONSTRAINT pk_tbl_sample_description_types PRIMARY KEY (submission_id, source_id, sample_description_type_id);


--
-- TOC entry 5947 (class 2606 OID 20511)
-- Name: tbl_sample_descriptions pk_tbl_sample_descriptions; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_sample_descriptions
    ADD CONSTRAINT pk_tbl_sample_descriptions PRIMARY KEY (submission_id, source_id, sample_description_id);


--
-- TOC entry 5952 (class 2606 OID 20513)
-- Name: tbl_sample_dimensions pk_tbl_sample_dimensions; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_sample_dimensions
    ADD CONSTRAINT pk_tbl_sample_dimensions PRIMARY KEY (submission_id, source_id, sample_dimension_id);


--
-- TOC entry 5956 (class 2606 OID 20515)
-- Name: tbl_sample_group_coordinates pk_tbl_sample_group_coordinates; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_coordinates
    ADD CONSTRAINT pk_tbl_sample_group_coordinates PRIMARY KEY (submission_id, source_id, sample_group_position_id);


--
-- TOC entry 5960 (class 2606 OID 20517)
-- Name: tbl_sample_group_description_type_sampling_contexts pk_tbl_sample_group_description_type_sampling_contexts; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_description_type_sampling_contexts
    ADD CONSTRAINT pk_tbl_sample_group_description_type_sampling_contexts PRIMARY KEY (submission_id, source_id, sample_group_description_type_sampling_context_id);


--
-- TOC entry 5962 (class 2606 OID 20519)
-- Name: tbl_sample_group_description_types pk_tbl_sample_group_description_types; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_description_types
    ADD CONSTRAINT pk_tbl_sample_group_description_types PRIMARY KEY (submission_id, source_id, sample_group_description_type_id);


--
-- TOC entry 5966 (class 2606 OID 20521)
-- Name: tbl_sample_group_descriptions pk_tbl_sample_group_descriptions; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_descriptions
    ADD CONSTRAINT pk_tbl_sample_group_descriptions PRIMARY KEY (submission_id, source_id, sample_group_description_id);


--
-- TOC entry 5970 (class 2606 OID 20523)
-- Name: tbl_sample_group_dimensions pk_tbl_sample_group_dimensions; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_dimensions
    ADD CONSTRAINT pk_tbl_sample_group_dimensions PRIMARY KEY (submission_id, source_id, sample_group_dimension_id);


--
-- TOC entry 5974 (class 2606 OID 20525)
-- Name: tbl_sample_group_images pk_tbl_sample_group_images; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_images
    ADD CONSTRAINT pk_tbl_sample_group_images PRIMARY KEY (submission_id, source_id, sample_group_image_id);


--
-- TOC entry 5977 (class 2606 OID 20527)
-- Name: tbl_sample_group_notes pk_tbl_sample_group_notes; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_notes
    ADD CONSTRAINT pk_tbl_sample_group_notes PRIMARY KEY (submission_id, source_id, sample_group_note_id);


--
-- TOC entry 5981 (class 2606 OID 20529)
-- Name: tbl_sample_group_references pk_tbl_sample_group_references; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_references
    ADD CONSTRAINT pk_tbl_sample_group_references PRIMARY KEY (submission_id, source_id, sample_group_reference_id);


--
-- TOC entry 5983 (class 2606 OID 20531)
-- Name: tbl_sample_group_sampling_contexts pk_tbl_sample_group_sampling_contexts; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_sampling_contexts
    ADD CONSTRAINT pk_tbl_sample_group_sampling_contexts PRIMARY KEY (submission_id, source_id, sampling_context_id);


--
-- TOC entry 5988 (class 2606 OID 20533)
-- Name: tbl_sample_groups pk_tbl_sample_groups; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_sample_groups
    ADD CONSTRAINT pk_tbl_sample_groups PRIMARY KEY (submission_id, source_id, sample_group_id);


--
-- TOC entry 5992 (class 2606 OID 20535)
-- Name: tbl_sample_horizons pk_tbl_sample_horizons; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_sample_horizons
    ADD CONSTRAINT pk_tbl_sample_horizons PRIMARY KEY (submission_id, source_id, sample_horizon_id);


--
-- TOC entry 5996 (class 2606 OID 20537)
-- Name: tbl_sample_images pk_tbl_sample_images; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_sample_images
    ADD CONSTRAINT pk_tbl_sample_images PRIMARY KEY (submission_id, source_id, sample_image_id);


--
-- TOC entry 6000 (class 2606 OID 20539)
-- Name: tbl_sample_location_type_sampling_contexts pk_tbl_sample_location_type_sampling_contexts; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_sample_location_type_sampling_contexts
    ADD CONSTRAINT pk_tbl_sample_location_type_sampling_contexts PRIMARY KEY (submission_id, source_id, sample_location_type_sampling_context_id);


--
-- TOC entry 6002 (class 2606 OID 20541)
-- Name: tbl_sample_location_types pk_tbl_sample_location_types; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_sample_location_types
    ADD CONSTRAINT pk_tbl_sample_location_types PRIMARY KEY (submission_id, source_id, sample_location_type_id);


--
-- TOC entry 6006 (class 2606 OID 20543)
-- Name: tbl_sample_locations pk_tbl_sample_locations; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_sample_locations
    ADD CONSTRAINT pk_tbl_sample_locations PRIMARY KEY (submission_id, source_id, sample_location_id);


--
-- TOC entry 6009 (class 2606 OID 20545)
-- Name: tbl_sample_notes pk_tbl_sample_notes; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_sample_notes
    ADD CONSTRAINT pk_tbl_sample_notes PRIMARY KEY (submission_id, source_id, sample_note_id);


--
-- TOC entry 6011 (class 2606 OID 20547)
-- Name: tbl_sample_types pk_tbl_sample_types; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_sample_types
    ADD CONSTRAINT pk_tbl_sample_types PRIMARY KEY (submission_id, source_id, sample_type_id);


--
-- TOC entry 6013 (class 2606 OID 20549)
-- Name: tbl_season_types pk_tbl_season_types; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_season_types
    ADD CONSTRAINT pk_tbl_season_types PRIMARY KEY (submission_id, source_id, season_type_id);


--
-- TOC entry 6016 (class 2606 OID 20551)
-- Name: tbl_seasons pk_tbl_seasons; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_seasons
    ADD CONSTRAINT pk_tbl_seasons PRIMARY KEY (submission_id, source_id, season_id);


--
-- TOC entry 6021 (class 2606 OID 20553)
-- Name: tbl_site_images pk_tbl_site_images; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_site_images
    ADD CONSTRAINT pk_tbl_site_images PRIMARY KEY (submission_id, source_id, site_image_id);


--
-- TOC entry 6025 (class 2606 OID 20555)
-- Name: tbl_site_locations pk_tbl_site_locations; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_site_locations
    ADD CONSTRAINT pk_tbl_site_locations PRIMARY KEY (submission_id, source_id, site_location_id);


--
-- TOC entry 6029 (class 2606 OID 20557)
-- Name: tbl_site_natgridrefs pk_tbl_site_natgridrefs; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_site_natgridrefs
    ADD CONSTRAINT pk_tbl_site_natgridrefs PRIMARY KEY (submission_id, source_id, site_natgridref_id);


--
-- TOC entry 6034 (class 2606 OID 20559)
-- Name: tbl_site_other_records pk_tbl_site_other_records; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_site_other_records
    ADD CONSTRAINT pk_tbl_site_other_records PRIMARY KEY (submission_id, source_id, site_other_records_id);


--
-- TOC entry 6037 (class 2606 OID 20561)
-- Name: tbl_site_preservation_status pk_tbl_site_preservation_status; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_site_preservation_status
    ADD CONSTRAINT pk_tbl_site_preservation_status PRIMARY KEY (submission_id, source_id, site_preservation_status_id);


--
-- TOC entry 6041 (class 2606 OID 20563)
-- Name: tbl_site_references pk_tbl_site_references; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_site_references
    ADD CONSTRAINT pk_tbl_site_references PRIMARY KEY (submission_id, source_id, site_reference_id);


--
-- TOC entry 6043 (class 2606 OID 20565)
-- Name: tbl_sites pk_tbl_sites; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_sites
    ADD CONSTRAINT pk_tbl_sites PRIMARY KEY (submission_id, source_id, site_id);


--
-- TOC entry 6045 (class 2606 OID 20567)
-- Name: tbl_species_association_types pk_tbl_species_association_types; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_species_association_types
    ADD CONSTRAINT pk_tbl_species_association_types PRIMARY KEY (submission_id, source_id, association_type_id);


--
-- TOC entry 6051 (class 2606 OID 20569)
-- Name: tbl_species_associations pk_tbl_species_associations; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_species_associations
    ADD CONSTRAINT pk_tbl_species_associations PRIMARY KEY (submission_id, source_id, species_association_id);


--
-- TOC entry 5703 (class 2606 OID 20571)
-- Name: tbl_clearinghouse_submission_xml_content_columns pk_tbl_submission_xml_content_columns_column_id; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_submission_xml_content_columns
    ADD CONSTRAINT pk_tbl_submission_xml_content_columns_column_id PRIMARY KEY (column_id);


--
-- TOC entry 5709 (class 2606 OID 20573)
-- Name: tbl_clearinghouse_submission_xml_content_tables pk_tbl_submission_xml_content_meta_tables_table_id; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_submission_xml_content_tables
    ADD CONSTRAINT pk_tbl_submission_xml_content_meta_tables_table_id PRIMARY KEY (content_table_id);


--
-- TOC entry 5712 (class 2606 OID 20575)
-- Name: tbl_clearinghouse_submission_xml_content_values pk_tbl_submission_xml_content_record_values_value_id; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_submission_xml_content_values
    ADD CONSTRAINT pk_tbl_submission_xml_content_record_values_value_id PRIMARY KEY (value_id);


--
-- TOC entry 5706 (class 2606 OID 20577)
-- Name: tbl_clearinghouse_submission_xml_content_records pk_tbl_submission_xml_content_records_record_id; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_submission_xml_content_records
    ADD CONSTRAINT pk_tbl_submission_xml_content_records_record_id PRIMARY KEY (record_id);


--
-- TOC entry 6055 (class 2606 OID 20579)
-- Name: tbl_taxa_common_names pk_tbl_taxa_common_names; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_taxa_common_names
    ADD CONSTRAINT pk_tbl_taxa_common_names PRIMARY KEY (submission_id, source_id, taxon_common_name_id);


--
-- TOC entry 6059 (class 2606 OID 20581)
-- Name: tbl_taxa_images pk_tbl_taxa_images; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_taxa_images
    ADD CONSTRAINT pk_tbl_taxa_images PRIMARY KEY (submission_id, source_id, taxa_images_id);


--
-- TOC entry 6062 (class 2606 OID 20583)
-- Name: tbl_taxa_measured_attributes pk_tbl_taxa_measured_attributes; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_taxa_measured_attributes
    ADD CONSTRAINT pk_tbl_taxa_measured_attributes PRIMARY KEY (submission_id, source_id, measured_attribute_id);


--
-- TOC entry 6066 (class 2606 OID 20585)
-- Name: tbl_taxa_reference_specimens pk_tbl_taxa_reference_specimens; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_taxa_reference_specimens
    ADD CONSTRAINT pk_tbl_taxa_reference_specimens PRIMARY KEY (submission_id, source_id, taxa_reference_specimen_id);


--
-- TOC entry 6072 (class 2606 OID 20587)
-- Name: tbl_taxa_seasonality pk_tbl_taxa_seasonality; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_taxa_seasonality
    ADD CONSTRAINT pk_tbl_taxa_seasonality PRIMARY KEY (submission_id, source_id, seasonality_id);


--
-- TOC entry 6079 (class 2606 OID 20589)
-- Name: tbl_taxa_synonyms pk_tbl_taxa_synonyms; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_taxa_synonyms
    ADD CONSTRAINT pk_tbl_taxa_synonyms PRIMARY KEY (submission_id, source_id, synonym_id);


--
-- TOC entry 6081 (class 2606 OID 20591)
-- Name: tbl_taxa_tree_authors pk_tbl_taxa_tree_authors; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_taxa_tree_authors
    ADD CONSTRAINT pk_tbl_taxa_tree_authors PRIMARY KEY (submission_id, source_id, author_id);


--
-- TOC entry 6084 (class 2606 OID 20593)
-- Name: tbl_taxa_tree_families pk_tbl_taxa_tree_families; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_taxa_tree_families
    ADD CONSTRAINT pk_tbl_taxa_tree_families PRIMARY KEY (submission_id, source_id, family_id);


--
-- TOC entry 6087 (class 2606 OID 20595)
-- Name: tbl_taxa_tree_genera pk_tbl_taxa_tree_genera; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_taxa_tree_genera
    ADD CONSTRAINT pk_tbl_taxa_tree_genera PRIMARY KEY (submission_id, source_id, genus_id);


--
-- TOC entry 6091 (class 2606 OID 20597)
-- Name: tbl_taxa_tree_master pk_tbl_taxa_tree_master; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_taxa_tree_master
    ADD CONSTRAINT pk_tbl_taxa_tree_master PRIMARY KEY (submission_id, source_id, taxon_id);


--
-- TOC entry 6094 (class 2606 OID 20599)
-- Name: tbl_taxa_tree_orders pk_tbl_taxa_tree_orders; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_taxa_tree_orders
    ADD CONSTRAINT pk_tbl_taxa_tree_orders PRIMARY KEY (submission_id, source_id, order_id);


--
-- TOC entry 6098 (class 2606 OID 20601)
-- Name: tbl_taxonomic_order pk_tbl_taxonomic_order; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_taxonomic_order
    ADD CONSTRAINT pk_tbl_taxonomic_order PRIMARY KEY (submission_id, source_id, taxonomic_order_id);


--
-- TOC entry 6102 (class 2606 OID 20603)
-- Name: tbl_taxonomic_order_biblio pk_tbl_taxonomic_order_biblio; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_taxonomic_order_biblio
    ADD CONSTRAINT pk_tbl_taxonomic_order_biblio PRIMARY KEY (submission_id, source_id, taxonomic_order_biblio_id);


--
-- TOC entry 6104 (class 2606 OID 20605)
-- Name: tbl_taxonomic_order_systems pk_tbl_taxonomic_order_systems; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_taxonomic_order_systems
    ADD CONSTRAINT pk_tbl_taxonomic_order_systems PRIMARY KEY (submission_id, source_id, taxonomic_order_system_id);


--
-- TOC entry 6108 (class 2606 OID 20607)
-- Name: tbl_taxonomy_notes pk_tbl_taxonomy_notes; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_taxonomy_notes
    ADD CONSTRAINT pk_tbl_taxonomy_notes PRIMARY KEY (submission_id, source_id, taxonomy_notes_id);


--
-- TOC entry 6113 (class 2606 OID 20609)
-- Name: tbl_tephra_dates pk_tbl_tephra_dates; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_tephra_dates
    ADD CONSTRAINT pk_tbl_tephra_dates PRIMARY KEY (submission_id, source_id, tephra_date_id);


--
-- TOC entry 6117 (class 2606 OID 20611)
-- Name: tbl_tephra_refs pk_tbl_tephra_refs; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_tephra_refs
    ADD CONSTRAINT pk_tbl_tephra_refs PRIMARY KEY (submission_id, source_id, tephra_ref_id);


--
-- TOC entry 6119 (class 2606 OID 20613)
-- Name: tbl_tephras pk_tbl_tephras; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_tephras
    ADD CONSTRAINT pk_tbl_tephras PRIMARY KEY (submission_id, source_id, tephra_id);


--
-- TOC entry 6123 (class 2606 OID 20615)
-- Name: tbl_text_biology pk_tbl_text_biology; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_text_biology
    ADD CONSTRAINT pk_tbl_text_biology PRIMARY KEY (submission_id, source_id, biology_id);


--
-- TOC entry 6127 (class 2606 OID 20617)
-- Name: tbl_text_distribution pk_tbl_text_distribution; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_text_distribution
    ADD CONSTRAINT pk_tbl_text_distribution PRIMARY KEY (submission_id, source_id, distribution_id);


--
-- TOC entry 6131 (class 2606 OID 20619)
-- Name: tbl_text_identification_keys pk_tbl_text_identification_keys; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_text_identification_keys
    ADD CONSTRAINT pk_tbl_text_identification_keys PRIMARY KEY (submission_id, source_id, key_id);


--
-- TOC entry 6133 (class 2606 OID 20621)
-- Name: tbl_units pk_tbl_units; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_units
    ADD CONSTRAINT pk_tbl_units PRIMARY KEY (submission_id, source_id, unit_id);


--
-- TOC entry 6135 (class 2606 OID 20623)
-- Name: tbl_updates_log pk_tbl_updates_log; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_updates_log
    ADD CONSTRAINT pk_tbl_updates_log PRIMARY KEY (submission_id, source_id, updates_log_id);


--
-- TOC entry 6137 (class 2606 OID 20625)
-- Name: tbl_years_types pk_tbl_years_types; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_years_types
    ADD CONSTRAINT pk_tbl_years_types PRIMARY KEY (submission_id, source_id, years_type_id);


--
-- TOC entry 5720 (class 2606 OID 20627)
-- Name: tbl_clearinghouse_users pk_user_id; Type: CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_users
    ADD CONSTRAINT pk_user_id PRIMARY KEY (user_id);


SET search_path = metainformation, pg_catalog;

--
-- TOC entry 6467 (class 2606 OID 20629)
-- Name: tbl_foreign_relations foreign_relations_id_pk; Type: CONSTRAINT; Schema: metainformation; Owner: -
--

ALTER TABLE ONLY tbl_foreign_relations
    ADD CONSTRAINT foreign_relations_id_pk PRIMARY KEY (source_table, source_column, target_table, target_column);


--
-- TOC entry 6462 (class 2606 OID 20631)
-- Name: language_definitions language_definitions_pkey; Type: CONSTRAINT; Schema: metainformation; Owner: -
--

ALTER TABLE ONLY language_definitions
    ADD CONSTRAINT language_definitions_pkey PRIMARY KEY (id);


--
-- TOC entry 6464 (class 2606 OID 20633)
-- Name: original_phrases original_phrases_pkey; Type: CONSTRAINT; Schema: metainformation; Owner: -
--

ALTER TABLE ONLY original_phrases
    ADD CONSTRAINT original_phrases_pkey PRIMARY KEY (id);


--
-- TOC entry 6471 (class 2606 OID 20635)
-- Name: translated_phrases translated_phrases_original_phrase_id_key; Type: CONSTRAINT; Schema: metainformation; Owner: -
--

ALTER TABLE ONLY translated_phrases
    ADD CONSTRAINT translated_phrases_original_phrase_id_key UNIQUE (original_phrase_id);


--
-- TOC entry 6473 (class 2606 OID 20637)
-- Name: translated_phrases translated_phrases_pkey; Type: CONSTRAINT; Schema: metainformation; Owner: -
--

ALTER TABLE ONLY translated_phrases
    ADD CONSTRAINT translated_phrases_pkey PRIMARY KEY (id);


--
-- TOC entry 6469 (class 2606 OID 20639)
-- Name: tbl_view_states view_state_pkey; Type: CONSTRAINT; Schema: metainformation; Owner: -
--

ALTER TABLE ONLY tbl_view_states
    ADD CONSTRAINT view_state_pkey PRIMARY KEY (view_state_id);


SET search_path = public, pg_catalog;

--
-- TOC entry 6315 (class 2606 OID 20641)
-- Name: tbl_project_stages dataset_stage_id; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_project_stages
    ADD CONSTRAINT dataset_stage_id PRIMARY KEY (project_stage_id);


--
-- TOC entry 6305 (class 2606 OID 20643)
-- Name: tbl_mcr_summary_data key_mcr_summary_data_taxon_id; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_mcr_summary_data
    ADD CONSTRAINT key_mcr_summary_data_taxon_id UNIQUE (taxon_id);


--
-- TOC entry 6139 (class 2606 OID 20645)
-- Name: tbl_abundance_elements pk_abundance_elements; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_abundance_elements
    ADD CONSTRAINT pk_abundance_elements PRIMARY KEY (abundance_element_id);


--
-- TOC entry 6141 (class 2606 OID 20647)
-- Name: tbl_abundance_ident_levels pk_abundance_ident_levels; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_abundance_ident_levels
    ADD CONSTRAINT pk_abundance_ident_levels PRIMARY KEY (abundance_ident_level_id);


--
-- TOC entry 6143 (class 2606 OID 20649)
-- Name: tbl_abundance_modifications pk_abundance_modifications; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_abundance_modifications
    ADD CONSTRAINT pk_abundance_modifications PRIMARY KEY (abundance_modification_id);


--
-- TOC entry 6145 (class 2606 OID 20651)
-- Name: tbl_abundances pk_abundances; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_abundances
    ADD CONSTRAINT pk_abundances PRIMARY KEY (abundance_id);


--
-- TOC entry 6147 (class 2606 OID 20653)
-- Name: tbl_activity_types pk_activity_types; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_activity_types
    ADD CONSTRAINT pk_activity_types PRIMARY KEY (activity_type_id);


--
-- TOC entry 6149 (class 2606 OID 20655)
-- Name: tbl_aggregate_datasets pk_aggregate_datasets; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_aggregate_datasets
    ADD CONSTRAINT pk_aggregate_datasets PRIMARY KEY (aggregate_dataset_id);


--
-- TOC entry 6151 (class 2606 OID 20657)
-- Name: tbl_aggregate_order_types pk_aggregate_order_types; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_aggregate_order_types
    ADD CONSTRAINT pk_aggregate_order_types PRIMARY KEY (aggregate_order_type_id);


--
-- TOC entry 6153 (class 2606 OID 20659)
-- Name: tbl_aggregate_sample_ages pk_aggregate_sample_ages; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_aggregate_sample_ages
    ADD CONSTRAINT pk_aggregate_sample_ages PRIMARY KEY (aggregate_sample_age_id);


--
-- TOC entry 6155 (class 2606 OID 20661)
-- Name: tbl_aggregate_samples pk_aggregate_samples; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_aggregate_samples
    ADD CONSTRAINT pk_aggregate_samples PRIMARY KEY (aggregate_sample_id);


--
-- TOC entry 6157 (class 2606 OID 20663)
-- Name: tbl_alt_ref_types pk_alt_ref_types; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_alt_ref_types
    ADD CONSTRAINT pk_alt_ref_types PRIMARY KEY (alt_ref_type_id);


--
-- TOC entry 6159 (class 2606 OID 20665)
-- Name: tbl_analysis_entities pk_analysis_entities; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_analysis_entities
    ADD CONSTRAINT pk_analysis_entities PRIMARY KEY (analysis_entity_id);


--
-- TOC entry 6167 (class 2606 OID 20667)
-- Name: tbl_biblio pk_biblio; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_biblio
    ADD CONSTRAINT pk_biblio PRIMARY KEY (biblio_id);


--
-- TOC entry 6171 (class 2606 OID 20669)
-- Name: tbl_bugs_abundance_codes pk_bugs_abundance_codes; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_bugs_abundance_codes
    ADD CONSTRAINT pk_bugs_abundance_codes PRIMARY KEY (bugs_abundance_code_id);


--
-- TOC entry 6173 (class 2606 OID 20671)
-- Name: tbl_bugs_biblio pk_bugs_biblio; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_bugs_biblio
    ADD CONSTRAINT pk_bugs_biblio PRIMARY KEY (bugs_biblio_id);


--
-- TOC entry 6185 (class 2606 OID 20673)
-- Name: tbl_bugs_physical_samples pk_bugs_physical_samples; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_bugs_physical_samples
    ADD CONSTRAINT pk_bugs_physical_samples PRIMARY KEY (bugs_physical_sample_id);


--
-- TOC entry 6187 (class 2606 OID 20675)
-- Name: tbl_bugs_sample_groups pk_bugs_sample_groups; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_bugs_sample_groups
    ADD CONSTRAINT pk_bugs_sample_groups PRIMARY KEY (bugs_sample_group_id);


--
-- TOC entry 6189 (class 2606 OID 20677)
-- Name: tbl_bugs_sites pk_bugs_sites; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_bugs_sites
    ADD CONSTRAINT pk_bugs_sites PRIMARY KEY (bugs_sites_id);


--
-- TOC entry 6475 (class 2606 OID 20679)
-- Name: tbl_bugstransfer_errors pk_bugstransfer_errors; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_bugstransfer_errors
    ADD CONSTRAINT pk_bugstransfer_errors PRIMARY KEY (bugs_error_id);


--
-- TOC entry 6477 (class 2606 OID 20681)
-- Name: tbl_bugstransfer_log pk_bugstransfer_log; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_bugstransfer_log
    ADD CONSTRAINT pk_bugstransfer_log PRIMARY KEY (bugs_transfer_log_id);


--
-- TOC entry 6197 (class 2606 OID 20683)
-- Name: tbl_chron_control_types pk_chron_control_types; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_chron_control_types
    ADD CONSTRAINT pk_chron_control_types PRIMARY KEY (chron_control_type_id);


--
-- TOC entry 6199 (class 2606 OID 20685)
-- Name: tbl_chron_controls pk_chron_controls; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_chron_controls
    ADD CONSTRAINT pk_chron_controls PRIMARY KEY (chron_control_id);


--
-- TOC entry 6201 (class 2606 OID 20687)
-- Name: tbl_chronologies pk_chronologies; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_chronologies
    ADD CONSTRAINT pk_chronologies PRIMARY KEY (chronology_id);


--
-- TOC entry 6228 (class 2606 OID 20689)
-- Name: tbl_collections_or_journals pk_collections_or_journals; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_collections_or_journals
    ADD CONSTRAINT pk_collections_or_journals PRIMARY KEY (collection_or_journal_id);


--
-- TOC entry 6230 (class 2606 OID 20691)
-- Name: tbl_colours pk_colours; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_colours
    ADD CONSTRAINT pk_colours PRIMARY KEY (colour_id);


--
-- TOC entry 6232 (class 2606 OID 20693)
-- Name: tbl_contact_types pk_contact_types; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_contact_types
    ADD CONSTRAINT pk_contact_types PRIMARY KEY (contact_type_id);


--
-- TOC entry 6234 (class 2606 OID 20695)
-- Name: tbl_contacts pk_contacts; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_contacts
    ADD CONSTRAINT pk_contacts PRIMARY KEY (contact_id);


--
-- TOC entry 6238 (class 2606 OID 20697)
-- Name: tbl_data_type_groups pk_data_type_groups; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_data_type_groups
    ADD CONSTRAINT pk_data_type_groups PRIMARY KEY (data_type_group_id);


--
-- TOC entry 6242 (class 2606 OID 20699)
-- Name: tbl_dataset_contacts pk_dataset_contacts; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dataset_contacts
    ADD CONSTRAINT pk_dataset_contacts PRIMARY KEY (dataset_contact_id);


--
-- TOC entry 6244 (class 2606 OID 20701)
-- Name: tbl_dataset_masters pk_dataset_masters; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dataset_masters
    ADD CONSTRAINT pk_dataset_masters PRIMARY KEY (master_set_id);


--
-- TOC entry 6246 (class 2606 OID 20703)
-- Name: tbl_dataset_submission_types pk_dataset_submission_types; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dataset_submission_types
    ADD CONSTRAINT pk_dataset_submission_types PRIMARY KEY (submission_type_id);


--
-- TOC entry 6248 (class 2606 OID 20705)
-- Name: tbl_dataset_submissions pk_dataset_submissions; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dataset_submissions
    ADD CONSTRAINT pk_dataset_submissions PRIMARY KEY (dataset_submission_id);


--
-- TOC entry 6207 (class 2606 OID 20707)
-- Name: tbl_datasets pk_datasets; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_datasets
    ADD CONSTRAINT pk_datasets PRIMARY KEY (dataset_id);


--
-- TOC entry 6250 (class 2606 OID 20709)
-- Name: tbl_dating_labs pk_dating_labs; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dating_labs
    ADD CONSTRAINT pk_dating_labs PRIMARY KEY (dating_lab_id);


--
-- TOC entry 6220 (class 2606 OID 20711)
-- Name: tbl_dimensions pk_dimensions; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dimensions
    ADD CONSTRAINT pk_dimensions PRIMARY KEY (dimension_id);


--
-- TOC entry 6266 (class 2606 OID 20713)
-- Name: tbl_ecocode_definitions pk_ecocode_definitions; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_ecocode_definitions
    ADD CONSTRAINT pk_ecocode_definitions PRIMARY KEY (ecocode_definition_id);


--
-- TOC entry 6268 (class 2606 OID 20715)
-- Name: tbl_ecocode_groups pk_ecocode_groups; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_ecocode_groups
    ADD CONSTRAINT pk_ecocode_groups PRIMARY KEY (ecocode_group_id);


--
-- TOC entry 6272 (class 2606 OID 20717)
-- Name: tbl_ecocode_systems pk_ecocode_systems; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_ecocode_systems
    ADD CONSTRAINT pk_ecocode_systems PRIMARY KEY (ecocode_system_id);


--
-- TOC entry 6276 (class 2606 OID 20719)
-- Name: tbl_ecocodes pk_ecocodes; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_ecocodes
    ADD CONSTRAINT pk_ecocodes PRIMARY KEY (ecocode_id);


--
-- TOC entry 6278 (class 2606 OID 20721)
-- Name: tbl_feature_types pk_feature_type_id; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_feature_types
    ADD CONSTRAINT pk_feature_type_id PRIMARY KEY (feature_type_id);


--
-- TOC entry 6280 (class 2606 OID 20723)
-- Name: tbl_features pk_features; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_features
    ADD CONSTRAINT pk_features PRIMARY KEY (feature_id);


--
-- TOC entry 6282 (class 2606 OID 20725)
-- Name: tbl_geochron_refs pk_geochron_refs; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_geochron_refs
    ADD CONSTRAINT pk_geochron_refs PRIMARY KEY (geochron_ref_id);


--
-- TOC entry 6284 (class 2606 OID 20727)
-- Name: tbl_geochronology pk_geochronology; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_geochronology
    ADD CONSTRAINT pk_geochronology PRIMARY KEY (geochron_id);


--
-- TOC entry 6286 (class 2606 OID 20729)
-- Name: tbl_horizons pk_horizons; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_horizons
    ADD CONSTRAINT pk_horizons PRIMARY KEY (horizon_id);


--
-- TOC entry 6203 (class 2606 OID 20731)
-- Name: tbl_identification_levels pk_identification_levels; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_identification_levels
    ADD CONSTRAINT pk_identification_levels PRIMARY KEY (identification_level_id);


--
-- TOC entry 6288 (class 2606 OID 20733)
-- Name: tbl_image_types pk_image_types; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_image_types
    ADD CONSTRAINT pk_image_types PRIMARY KEY (image_type_id);


--
-- TOC entry 6290 (class 2606 OID 20735)
-- Name: tbl_imported_taxa_replacements pk_imported_taxa_replacements; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_imported_taxa_replacements
    ADD CONSTRAINT pk_imported_taxa_replacements PRIMARY KEY (imported_taxa_replacement_id);


--
-- TOC entry 6294 (class 2606 OID 20737)
-- Name: tbl_languages pk_languages; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_languages
    ADD CONSTRAINT pk_languages PRIMARY KEY (language_id);


--
-- TOC entry 6297 (class 2606 OID 20739)
-- Name: tbl_lithology pk_lithologies; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_lithology
    ADD CONSTRAINT pk_lithologies PRIMARY KEY (lithology_id);


--
-- TOC entry 6299 (class 2606 OID 20741)
-- Name: tbl_location_types pk_location_types; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_location_types
    ADD CONSTRAINT pk_location_types PRIMARY KEY (location_type_id);


--
-- TOC entry 6301 (class 2606 OID 20743)
-- Name: tbl_locations pk_locations; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_locations
    ADD CONSTRAINT pk_locations PRIMARY KEY (location_id);


--
-- TOC entry 6303 (class 2606 OID 20745)
-- Name: tbl_mcr_names pk_mcr_names; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_mcr_names
    ADD CONSTRAINT pk_mcr_names PRIMARY KEY (taxon_id);


--
-- TOC entry 6307 (class 2606 OID 20747)
-- Name: tbl_mcr_summary_data pk_mcr_summary_data; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_mcr_summary_data
    ADD CONSTRAINT pk_mcr_summary_data PRIMARY KEY (mcr_summary_data_id);


--
-- TOC entry 6309 (class 2606 OID 20749)
-- Name: tbl_mcrdata_birmbeetledat pk_mcrdata_birmbeetledat; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_mcrdata_birmbeetledat
    ADD CONSTRAINT pk_mcrdata_birmbeetledat PRIMARY KEY (mcrdata_birmbeetledat_id);


--
-- TOC entry 6224 (class 2606 OID 20751)
-- Name: tbl_measured_values pk_measured_values; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_measured_values
    ADD CONSTRAINT pk_measured_values PRIMARY KEY (measured_value_id);


--
-- TOC entry 6222 (class 2606 OID 20753)
-- Name: tbl_measured_value_dimensions pk_measured_weights; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_measured_value_dimensions
    ADD CONSTRAINT pk_measured_weights PRIMARY KEY (measured_value_dimension_id);


--
-- TOC entry 6311 (class 2606 OID 20755)
-- Name: tbl_method_groups pk_method_groups; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_method_groups
    ADD CONSTRAINT pk_method_groups PRIMARY KEY (method_group_id);


--
-- TOC entry 6226 (class 2606 OID 20757)
-- Name: tbl_methods pk_methods; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_methods
    ADD CONSTRAINT pk_methods PRIMARY KEY (method_id);


--
-- TOC entry 6205 (class 2606 OID 20759)
-- Name: tbl_modification_types pk_modification_types; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_modification_types
    ADD CONSTRAINT pk_modification_types PRIMARY KEY (modification_type_id);


--
-- TOC entry 6209 (class 2606 OID 20761)
-- Name: tbl_physical_samples pk_physical_samples; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_physical_samples
    ADD CONSTRAINT pk_physical_samples PRIMARY KEY (physical_sample_id);


--
-- TOC entry 6317 (class 2606 OID 20763)
-- Name: tbl_project_types pk_project_type_id; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_project_types
    ADD CONSTRAINT pk_project_type_id PRIMARY KEY (project_type_id);


--
-- TOC entry 6319 (class 2606 OID 20765)
-- Name: tbl_projects pk_projects; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_projects
    ADD CONSTRAINT pk_projects PRIMARY KEY (project_id);


--
-- TOC entry 6321 (class 2606 OID 20767)
-- Name: tbl_publication_types pk_publication_types; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_publication_types
    ADD CONSTRAINT pk_publication_types PRIMARY KEY (publication_type_id);


--
-- TOC entry 6323 (class 2606 OID 20769)
-- Name: tbl_publishers pk_publishers; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_publishers
    ADD CONSTRAINT pk_publishers PRIMARY KEY (publisher_id);


--
-- TOC entry 6325 (class 2606 OID 20771)
-- Name: tbl_radiocarbon_calibration pk_radiocarbon_calibration; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_radiocarbon_calibration
    ADD CONSTRAINT pk_radiocarbon_calibration PRIMARY KEY (radiocarbon_calibration_id);


--
-- TOC entry 6327 (class 2606 OID 20773)
-- Name: tbl_rdb pk_rdb; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_rdb
    ADD CONSTRAINT pk_rdb PRIMARY KEY (rdb_id);


--
-- TOC entry 6329 (class 2606 OID 20775)
-- Name: tbl_rdb_codes pk_rdb_codes; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_rdb_codes
    ADD CONSTRAINT pk_rdb_codes PRIMARY KEY (rdb_code_id);


--
-- TOC entry 6331 (class 2606 OID 20777)
-- Name: tbl_rdb_systems pk_rdb_systems; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_rdb_systems
    ADD CONSTRAINT pk_rdb_systems PRIMARY KEY (rdb_system_id);


--
-- TOC entry 6333 (class 2606 OID 20779)
-- Name: tbl_record_types pk_record_types; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_record_types
    ADD CONSTRAINT pk_record_types PRIMARY KEY (record_type_id);


--
-- TOC entry 6335 (class 2606 OID 20781)
-- Name: tbl_relative_age_refs pk_relative_age_refs; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_relative_age_refs
    ADD CONSTRAINT pk_relative_age_refs PRIMARY KEY (relative_age_ref_id);


--
-- TOC entry 6337 (class 2606 OID 20783)
-- Name: tbl_relative_ages pk_relative_ages; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_relative_ages
    ADD CONSTRAINT pk_relative_ages PRIMARY KEY (relative_age_id);


--
-- TOC entry 6339 (class 2606 OID 20785)
-- Name: tbl_relative_dates pk_relative_dates; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_relative_dates
    ADD CONSTRAINT pk_relative_dates PRIMARY KEY (relative_date_id);


--
-- TOC entry 6161 (class 2606 OID 20787)
-- Name: tbl_analysis_entity_ages pk_sample_ages; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_analysis_entity_ages
    ADD CONSTRAINT pk_sample_ages PRIMARY KEY (analysis_entity_age_id);


--
-- TOC entry 6341 (class 2606 OID 20789)
-- Name: tbl_sample_alt_refs pk_sample_alt_refs; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_alt_refs
    ADD CONSTRAINT pk_sample_alt_refs PRIMARY KEY (sample_alt_ref_id);


--
-- TOC entry 6343 (class 2606 OID 20791)
-- Name: tbl_sample_colours pk_sample_colours; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_colours
    ADD CONSTRAINT pk_sample_colours PRIMARY KEY (sample_colour_id);


--
-- TOC entry 6353 (class 2606 OID 20793)
-- Name: tbl_sample_dimensions pk_sample_dimensions; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_dimensions
    ADD CONSTRAINT pk_sample_dimensions PRIMARY KEY (sample_dimension_id);


--
-- TOC entry 6361 (class 2606 OID 20795)
-- Name: tbl_sample_group_descriptions pk_sample_group_description_id; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_descriptions
    ADD CONSTRAINT pk_sample_group_description_id PRIMARY KEY (sample_group_description_id);


--
-- TOC entry 6363 (class 2606 OID 20797)
-- Name: tbl_sample_group_dimensions pk_sample_group_dimensions; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_dimensions
    ADD CONSTRAINT pk_sample_group_dimensions PRIMARY KEY (sample_group_dimension_id);


--
-- TOC entry 6365 (class 2606 OID 20799)
-- Name: tbl_sample_group_images pk_sample_group_images; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_images
    ADD CONSTRAINT pk_sample_group_images PRIMARY KEY (sample_group_image_id);


--
-- TOC entry 6367 (class 2606 OID 20801)
-- Name: tbl_sample_group_notes pk_sample_group_note_id; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_notes
    ADD CONSTRAINT pk_sample_group_note_id PRIMARY KEY (sample_group_note_id);


--
-- TOC entry 6371 (class 2606 OID 20803)
-- Name: tbl_sample_group_references pk_sample_group_references; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_references
    ADD CONSTRAINT pk_sample_group_references PRIMARY KEY (sample_group_reference_id);


--
-- TOC entry 6373 (class 2606 OID 20805)
-- Name: tbl_sample_group_sampling_contexts pk_sample_group_sampling_contexts; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_sampling_contexts
    ADD CONSTRAINT pk_sample_group_sampling_contexts PRIMARY KEY (sampling_context_id);


--
-- TOC entry 6375 (class 2606 OID 20807)
-- Name: tbl_sample_groups pk_sample_groups; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_groups
    ADD CONSTRAINT pk_sample_groups PRIMARY KEY (sample_group_id);


--
-- TOC entry 6377 (class 2606 OID 20809)
-- Name: tbl_sample_horizons pk_sample_horizons; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_horizons
    ADD CONSTRAINT pk_sample_horizons PRIMARY KEY (sample_horizon_id);


--
-- TOC entry 6379 (class 2606 OID 20811)
-- Name: tbl_sample_images pk_sample_images; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_images
    ADD CONSTRAINT pk_sample_images PRIMARY KEY (sample_image_id);


--
-- TOC entry 6387 (class 2606 OID 20813)
-- Name: tbl_sample_notes pk_sample_notes; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_notes
    ADD CONSTRAINT pk_sample_notes PRIMARY KEY (sample_note_id);


--
-- TOC entry 6389 (class 2606 OID 20815)
-- Name: tbl_sample_types pk_sample_types; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_types
    ADD CONSTRAINT pk_sample_types PRIMARY KEY (sample_type_id);


--
-- TOC entry 6240 (class 2606 OID 20817)
-- Name: tbl_data_types pk_samplegroup_data_types; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_data_types
    ADD CONSTRAINT pk_samplegroup_data_types PRIMARY KEY (data_type_id);


--
-- TOC entry 6391 (class 2606 OID 20819)
-- Name: tbl_season_types pk_season_types; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_season_types
    ADD CONSTRAINT pk_season_types PRIMARY KEY (season_type_id);


--
-- TOC entry 6393 (class 2606 OID 20821)
-- Name: tbl_seasons pk_seasons; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_seasons
    ADD CONSTRAINT pk_seasons PRIMARY KEY (season_id);


--
-- TOC entry 6395 (class 2606 OID 20823)
-- Name: tbl_site_images pk_site_images; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_site_images
    ADD CONSTRAINT pk_site_images PRIMARY KEY (site_image_id);


--
-- TOC entry 6397 (class 2606 OID 20825)
-- Name: tbl_site_locations pk_site_location; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_site_locations
    ADD CONSTRAINT pk_site_location PRIMARY KEY (site_location_id);


--
-- TOC entry 6401 (class 2606 OID 20827)
-- Name: tbl_site_other_records pk_site_other_records; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_site_other_records
    ADD CONSTRAINT pk_site_other_records PRIMARY KEY (site_other_records_id);


--
-- TOC entry 6403 (class 2606 OID 20829)
-- Name: tbl_site_preservation_status pk_site_preservation_status; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_site_preservation_status
    ADD CONSTRAINT pk_site_preservation_status PRIMARY KEY (site_preservation_status_id);


--
-- TOC entry 6405 (class 2606 OID 20831)
-- Name: tbl_site_references pk_site_references; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_site_references
    ADD CONSTRAINT pk_site_references PRIMARY KEY (site_reference_id);


--
-- TOC entry 6399 (class 2606 OID 20833)
-- Name: tbl_site_natgridrefs pk_sitenatgridrefs; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_site_natgridrefs
    ADD CONSTRAINT pk_sitenatgridrefs PRIMARY KEY (site_natgridref_id);


--
-- TOC entry 6407 (class 2606 OID 20835)
-- Name: tbl_sites pk_sites; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sites
    ADD CONSTRAINT pk_sites PRIMARY KEY (site_id);


--
-- TOC entry 6411 (class 2606 OID 20837)
-- Name: tbl_species_associations pk_species_associations; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_species_associations
    ADD CONSTRAINT pk_species_associations PRIMARY KEY (species_association_id);


--
-- TOC entry 6413 (class 2606 OID 20839)
-- Name: tbl_taxa_common_names pk_taxa_common_names; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_common_names
    ADD CONSTRAINT pk_taxa_common_names PRIMARY KEY (taxon_common_name_id);


--
-- TOC entry 6415 (class 2606 OID 20841)
-- Name: tbl_taxa_measured_attributes pk_taxa_measured_attributes; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_measured_attributes
    ADD CONSTRAINT pk_taxa_measured_attributes PRIMARY KEY (measured_attribute_id);


--
-- TOC entry 6417 (class 2606 OID 20843)
-- Name: tbl_taxa_seasonality pk_taxa_seasonality; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_seasonality
    ADD CONSTRAINT pk_taxa_seasonality PRIMARY KEY (seasonality_id);


--
-- TOC entry 6419 (class 2606 OID 20845)
-- Name: tbl_taxa_synonyms pk_taxa_synonyms; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_synonyms
    ADD CONSTRAINT pk_taxa_synonyms PRIMARY KEY (synonym_id);


--
-- TOC entry 6211 (class 2606 OID 20847)
-- Name: tbl_taxa_tree_authors pk_taxa_tree_authors; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_tree_authors
    ADD CONSTRAINT pk_taxa_tree_authors PRIMARY KEY (author_id);


--
-- TOC entry 6421 (class 2606 OID 20849)
-- Name: tbl_taxa_tree_families pk_taxa_tree_families; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_tree_families
    ADD CONSTRAINT pk_taxa_tree_families PRIMARY KEY (family_id);


--
-- TOC entry 6214 (class 2606 OID 20851)
-- Name: tbl_taxa_tree_genera pk_taxa_tree_genera; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_tree_genera
    ADD CONSTRAINT pk_taxa_tree_genera PRIMARY KEY (genus_id);


--
-- TOC entry 6218 (class 2606 OID 20853)
-- Name: tbl_taxa_tree_master pk_taxa_tree_master; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_tree_master
    ADD CONSTRAINT pk_taxa_tree_master PRIMARY KEY (taxon_id);


--
-- TOC entry 6425 (class 2606 OID 20855)
-- Name: tbl_taxa_tree_orders pk_taxa_tree_orders; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_tree_orders
    ADD CONSTRAINT pk_taxa_tree_orders PRIMARY KEY (order_id);


--
-- TOC entry 6428 (class 2606 OID 20857)
-- Name: tbl_taxonomic_order pk_taxonomic_order; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxonomic_order
    ADD CONSTRAINT pk_taxonomic_order PRIMARY KEY (taxonomic_order_id);


--
-- TOC entry 6434 (class 2606 OID 20859)
-- Name: tbl_taxonomic_order_biblio pk_taxonomic_order_biblio; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxonomic_order_biblio
    ADD CONSTRAINT pk_taxonomic_order_biblio PRIMARY KEY (taxonomic_order_biblio_id);


--
-- TOC entry 6439 (class 2606 OID 20861)
-- Name: tbl_taxonomic_order_systems pk_taxonomic_order_systems; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxonomic_order_systems
    ADD CONSTRAINT pk_taxonomic_order_systems PRIMARY KEY (taxonomic_order_system_id);


--
-- TOC entry 6442 (class 2606 OID 20863)
-- Name: tbl_taxonomy_notes pk_taxonomy_notes; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxonomy_notes
    ADD CONSTRAINT pk_taxonomy_notes PRIMARY KEY (taxonomy_notes_id);


--
-- TOC entry 6444 (class 2606 OID 20865)
-- Name: tbl_tephra_dates pk_tephra_dates; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_tephra_dates
    ADD CONSTRAINT pk_tephra_dates PRIMARY KEY (tephra_date_id);


--
-- TOC entry 6446 (class 2606 OID 20867)
-- Name: tbl_tephra_refs pk_tephra_refs; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_tephra_refs
    ADD CONSTRAINT pk_tephra_refs PRIMARY KEY (tephra_ref_id);


--
-- TOC entry 6448 (class 2606 OID 20869)
-- Name: tbl_tephras pk_tephras; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_tephras
    ADD CONSTRAINT pk_tephras PRIMARY KEY (tephra_id);


--
-- TOC entry 6450 (class 2606 OID 20871)
-- Name: tbl_text_biology pk_text_biology; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_text_biology
    ADD CONSTRAINT pk_text_biology PRIMARY KEY (biology_id);


--
-- TOC entry 6452 (class 2606 OID 20873)
-- Name: tbl_text_distribution pk_text_distribution; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_text_distribution
    ADD CONSTRAINT pk_text_distribution PRIMARY KEY (distribution_id);


--
-- TOC entry 6454 (class 2606 OID 20875)
-- Name: tbl_text_identification_keys pk_text_identification_keys; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_text_identification_keys
    ADD CONSTRAINT pk_text_identification_keys PRIMARY KEY (key_id);


--
-- TOC entry 6456 (class 2606 OID 20877)
-- Name: tbl_units pk_units; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_units
    ADD CONSTRAINT pk_units PRIMARY KEY (unit_id);


--
-- TOC entry 6458 (class 2606 OID 20879)
-- Name: tbl_updates_log pk_updates_log; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_updates_log
    ADD CONSTRAINT pk_updates_log PRIMARY KEY (updates_log_id);


--
-- TOC entry 6163 (class 2606 OID 20881)
-- Name: tbl_analysis_entity_dimensions tbl_analysis_entity_dimensions_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_analysis_entity_dimensions
    ADD CONSTRAINT tbl_analysis_entity_dimensions_pkey PRIMARY KEY (analysis_entity_dimension_id);


--
-- TOC entry 6165 (class 2606 OID 20883)
-- Name: tbl_analysis_entity_prep_methods tbl_analysis_entity_prep_methods_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_analysis_entity_prep_methods
    ADD CONSTRAINT tbl_analysis_entity_prep_methods_pkey PRIMARY KEY (analysis_entity_prep_method_id);


--
-- TOC entry 6409 (class 2606 OID 20885)
-- Name: tbl_species_association_types tbl_association_types_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_species_association_types
    ADD CONSTRAINT tbl_association_types_pkey PRIMARY KEY (association_type_id);


--
-- TOC entry 6169 (class 2606 OID 20887)
-- Name: tbl_biblio_keywords tbl_biblio_keywords_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_biblio_keywords
    ADD CONSTRAINT tbl_biblio_keywords_pkey PRIMARY KEY (biblio_keyword_id);


--
-- TOC entry 6175 (class 2606 OID 20889)
-- Name: tbl_bugs_dates_calendar tbl_bugs_dates_calendar_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_bugs_dates_calendar
    ADD CONSTRAINT tbl_bugs_dates_calendar_pkey PRIMARY KEY (bugs_dates_calendar_id);


--
-- TOC entry 6177 (class 2606 OID 20891)
-- Name: tbl_bugs_dates_period tbl_bugs_dates_period_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_bugs_dates_period
    ADD CONSTRAINT tbl_bugs_dates_period_pkey PRIMARY KEY (bugs_dates_period_id);


--
-- TOC entry 6179 (class 2606 OID 20893)
-- Name: tbl_bugs_dates_radio tbl_bugs_dates_radio_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_bugs_dates_radio
    ADD CONSTRAINT tbl_bugs_dates_radio_pkey PRIMARY KEY (bugs_dates_radio_id);


--
-- TOC entry 6181 (class 2606 OID 20895)
-- Name: tbl_bugs_datesmethods tbl_bugs_datesmethods_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_bugs_datesmethods
    ADD CONSTRAINT tbl_bugs_datesmethods_pkey PRIMARY KEY (bugs_datesmethods_id);


--
-- TOC entry 6183 (class 2606 OID 20897)
-- Name: tbl_bugs_periods tbl_bugs_periods_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_bugs_periods
    ADD CONSTRAINT tbl_bugs_periods_pkey PRIMARY KEY (bugs_dates_relative_id);


--
-- TOC entry 6193 (class 2606 OID 20899)
-- Name: tbl_ceramics_measurement_lookup tbl_ceramics_measurement_lookup_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_ceramics_measurement_lookup
    ADD CONSTRAINT tbl_ceramics_measurement_lookup_pkey PRIMARY KEY (ceramics_measurement_lookup_id);


--
-- TOC entry 6195 (class 2606 OID 20901)
-- Name: tbl_ceramics_measurements tbl_ceramics_measurements_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_ceramics_measurements
    ADD CONSTRAINT tbl_ceramics_measurements_pkey PRIMARY KEY (ceramics_measurement_id);


--
-- TOC entry 6191 (class 2606 OID 20903)
-- Name: tbl_ceramics tbl_ceramics_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_ceramics
    ADD CONSTRAINT tbl_ceramics_pkey PRIMARY KEY (ceramics_id);


--
-- TOC entry 6236 (class 2606 OID 20905)
-- Name: tbl_coordinate_method_dimensions tbl_coordinate_method_dimensions_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_coordinate_method_dimensions
    ADD CONSTRAINT tbl_coordinate_method_dimensions_pkey PRIMARY KEY (coordinate_method_dimension_id);


--
-- TOC entry 6252 (class 2606 OID 20907)
-- Name: tbl_dating_material tbl_dating_material_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dating_material
    ADD CONSTRAINT tbl_dating_material_pkey PRIMARY KEY (dating_material_id);


--
-- TOC entry 6254 (class 2606 OID 20909)
-- Name: tbl_dating_uncertainty tbl_dating_uncertainty_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dating_uncertainty
    ADD CONSTRAINT tbl_dating_uncertainty_pkey PRIMARY KEY (dating_uncertainty_id);


--
-- TOC entry 6258 (class 2606 OID 20911)
-- Name: tbl_dendro_date_notes tbl_dendro_date_notes_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dendro_date_notes
    ADD CONSTRAINT tbl_dendro_date_notes_pkey PRIMARY KEY (dendro_date_note_id);


--
-- TOC entry 6260 (class 2606 OID 20913)
-- Name: tbl_dendro_dates tbl_dendro_dates_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dendro_dates
    ADD CONSTRAINT tbl_dendro_dates_pkey PRIMARY KEY (dendro_date_id);


--
-- TOC entry 6262 (class 2606 OID 20915)
-- Name: tbl_dendro_measurement_lookup tbl_dendro_measurement_lookup_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dendro_measurement_lookup
    ADD CONSTRAINT tbl_dendro_measurement_lookup_pkey PRIMARY KEY (dendro_measurement_lookup_id);


--
-- TOC entry 6264 (class 2606 OID 20917)
-- Name: tbl_dendro_measurements tbl_dendro_measurements_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dendro_measurements
    ADD CONSTRAINT tbl_dendro_measurements_pkey PRIMARY KEY (dendro_measurement_id);


--
-- TOC entry 6256 (class 2606 OID 20919)
-- Name: tbl_dendro tbl_dendro_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dendro
    ADD CONSTRAINT tbl_dendro_pkey PRIMARY KEY (dendro_id);


--
-- TOC entry 6292 (class 2606 OID 20921)
-- Name: tbl_keywords tbl_keywords_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_keywords
    ADD CONSTRAINT tbl_keywords_pkey PRIMARY KEY (keyword_id);


--
-- TOC entry 6313 (class 2606 OID 20923)
-- Name: tbl_physical_sample_features tbl_physical_sample_features_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_physical_sample_features
    ADD CONSTRAINT tbl_physical_sample_features_pkey PRIMARY KEY (physical_sample_feature_id);


--
-- TOC entry 6479 (class 2606 OID 20925)
-- Name: tbl_relative_age_types tbl_relative_age_types_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_relative_age_types
    ADD CONSTRAINT tbl_relative_age_types_pkey PRIMARY KEY (relative_age_type_id);


--
-- TOC entry 6345 (class 2606 OID 20927)
-- Name: tbl_sample_coordinates tbl_sample_coordinates_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_coordinates
    ADD CONSTRAINT tbl_sample_coordinates_pkey PRIMARY KEY (sample_coordinate_id);


--
-- TOC entry 6347 (class 2606 OID 20929)
-- Name: tbl_sample_description_sample_group_contexts tbl_sample_description_sample_group_contexts_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_description_sample_group_contexts
    ADD CONSTRAINT tbl_sample_description_sample_group_contexts_pkey PRIMARY KEY (sample_description_sample_group_context_id);


--
-- TOC entry 6349 (class 2606 OID 20931)
-- Name: tbl_sample_description_types tbl_sample_description_types_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_description_types
    ADD CONSTRAINT tbl_sample_description_types_pkey PRIMARY KEY (sample_description_type_id);


--
-- TOC entry 6351 (class 2606 OID 20933)
-- Name: tbl_sample_descriptions tbl_sample_descriptions_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_descriptions
    ADD CONSTRAINT tbl_sample_descriptions_pkey PRIMARY KEY (sample_description_id);


--
-- TOC entry 6355 (class 2606 OID 20935)
-- Name: tbl_sample_group_coordinates tbl_sample_group_coordinates_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_coordinates
    ADD CONSTRAINT tbl_sample_group_coordinates_pkey PRIMARY KEY (sample_group_position_id);


--
-- TOC entry 6357 (class 2606 OID 20937)
-- Name: tbl_sample_group_description_type_sampling_contexts tbl_sample_group_description_type_sample_contexts_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_description_type_sampling_contexts
    ADD CONSTRAINT tbl_sample_group_description_type_sample_contexts_pkey PRIMARY KEY (sample_group_description_type_sampling_context_id);


--
-- TOC entry 6359 (class 2606 OID 20939)
-- Name: tbl_sample_group_description_types tbl_sample_group_description_types_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_description_types
    ADD CONSTRAINT tbl_sample_group_description_types_pkey PRIMARY KEY (sample_group_description_type_id);


--
-- TOC entry 6381 (class 2606 OID 20941)
-- Name: tbl_sample_location_type_sampling_contexts tbl_sample_location_sampling_contexts_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_location_type_sampling_contexts
    ADD CONSTRAINT tbl_sample_location_sampling_contexts_pkey PRIMARY KEY (sample_location_type_sampling_context_id);


--
-- TOC entry 6383 (class 2606 OID 20943)
-- Name: tbl_sample_location_types tbl_sample_location_types_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_location_types
    ADD CONSTRAINT tbl_sample_location_types_pkey PRIMARY KEY (sample_location_type_id);


--
-- TOC entry 6385 (class 2606 OID 20945)
-- Name: tbl_sample_locations tbl_sample_locations_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_locations
    ADD CONSTRAINT tbl_sample_locations_pkey PRIMARY KEY (sample_location_id);


--
-- TOC entry 6481 (class 2606 OID 20947)
-- Name: tbl_taxa_images tbl_taxa_images_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_images
    ADD CONSTRAINT tbl_taxa_images_pkey PRIMARY KEY (taxa_images_id);


--
-- TOC entry 6483 (class 2606 OID 20949)
-- Name: tbl_taxa_reference_specimens tbl_taxa_reference_specimens_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_reference_specimens
    ADD CONSTRAINT tbl_taxa_reference_specimens_pkey PRIMARY KEY (taxa_reference_specimen_id);


--
-- TOC entry 6460 (class 2606 OID 20951)
-- Name: tbl_years_types tbl_years_types_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_years_types
    ADD CONSTRAINT tbl_years_types_pkey PRIMARY KEY (years_type_id);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 5672 (class 1259 OID 20952)
-- Name: fk_clearinghouse_reject_entity_types; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX fk_clearinghouse_reject_entity_types ON tbl_clearinghouse_reject_entity_types USING btree (table_id);


--
-- TOC entry 5688 (class 1259 OID 20953)
-- Name: fk_clearinghouse_submission_reject_entities_local_db_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX fk_clearinghouse_submission_reject_entities_local_db_id ON tbl_clearinghouse_submission_reject_entities USING btree (local_db_id);


--
-- TOC entry 5689 (class 1259 OID 20954)
-- Name: fk_clearinghouse_submission_reject_entities_submission; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX fk_clearinghouse_submission_reject_entities_submission ON tbl_clearinghouse_submission_reject_entities USING btree (submission_reject_id);


--
-- TOC entry 5692 (class 1259 OID 20955)
-- Name: fk_clearinghouse_submission_rejects; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX fk_clearinghouse_submission_rejects ON tbl_clearinghouse_submission_rejects USING btree (submission_id);


--
-- TOC entry 5707 (class 1259 OID 20956)
-- Name: fk_idx_tbl_submission_xml_content_tables_table_name; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE UNIQUE INDEX fk_idx_tbl_submission_xml_content_tables_table_name ON tbl_clearinghouse_submission_xml_content_tables USING btree (submission_id, table_id);


--
-- TOC entry 5665 (class 1259 OID 20957)
-- Name: idx_clearinghouse_activity_entity_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_clearinghouse_activity_entity_id ON tbl_clearinghouse_activity_log USING btree (entity_type_id, entity_id);


--
-- TOC entry 5554 (class 1259 OID 20958)
-- Name: idx_fk_abundance_elements_record_type_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_abundance_elements_record_type_id ON tbl_abundance_elements USING btree (record_type_id);


--
-- TOC entry 5557 (class 1259 OID 20959)
-- Name: idx_fk_abundance_ident_levels_abundance_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_abundance_ident_levels_abundance_id ON tbl_abundance_ident_levels USING btree (abundance_id);


--
-- TOC entry 5558 (class 1259 OID 20960)
-- Name: idx_fk_abundance_ident_levels_identification_level_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_abundance_ident_levels_identification_level_id ON tbl_abundance_ident_levels USING btree (identification_level_id);


--
-- TOC entry 5561 (class 1259 OID 20961)
-- Name: idx_fk_abundance_modifications_abundance_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_abundance_modifications_abundance_id ON tbl_abundance_modifications USING btree (abundance_id);


--
-- TOC entry 5562 (class 1259 OID 20962)
-- Name: idx_fk_abundance_modifications_modification_type_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_abundance_modifications_modification_type_id ON tbl_abundance_modifications USING btree (modification_type_id);


--
-- TOC entry 5565 (class 1259 OID 20963)
-- Name: idx_fk_abundances_abundance_elements_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_abundances_abundance_elements_id ON tbl_abundances USING btree (abundance_element_id);


--
-- TOC entry 5566 (class 1259 OID 20964)
-- Name: idx_fk_abundances_analysis_entity_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_abundances_analysis_entity_id ON tbl_abundances USING btree (analysis_entity_id);


--
-- TOC entry 5567 (class 1259 OID 20965)
-- Name: idx_fk_abundances_taxon_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_abundances_taxon_id ON tbl_abundances USING btree (taxon_id);


--
-- TOC entry 5582 (class 1259 OID 20966)
-- Name: idx_fk_aggragate_samples_analysis_entity_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_aggragate_samples_analysis_entity_id ON tbl_aggregate_samples USING btree (analysis_entity_id);


--
-- TOC entry 5572 (class 1259 OID 20967)
-- Name: idx_fk_aggregate_datasets_aggregate_order_type_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_aggregate_datasets_aggregate_order_type_id ON tbl_aggregate_datasets USING btree (aggregate_order_type_id);


--
-- TOC entry 5573 (class 1259 OID 20968)
-- Name: idx_fk_aggregate_datasets_biblio_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_aggregate_datasets_biblio_id ON tbl_aggregate_datasets USING btree (biblio_id);


--
-- TOC entry 5578 (class 1259 OID 20969)
-- Name: idx_fk_aggregate_sample_ages_aggregate_dataset_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_aggregate_sample_ages_aggregate_dataset_id ON tbl_aggregate_sample_ages USING btree (aggregate_dataset_id);


--
-- TOC entry 5579 (class 1259 OID 20970)
-- Name: idx_fk_aggregate_sample_ages_analysis_entity_age_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_aggregate_sample_ages_analysis_entity_age_id ON tbl_aggregate_sample_ages USING btree (analysis_entity_age_id);


--
-- TOC entry 5583 (class 1259 OID 20971)
-- Name: idx_fk_aggregate_samples_aggregate_dataset_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_aggregate_samples_aggregate_dataset_id ON tbl_aggregate_samples USING btree (aggregate_dataset_id);


--
-- TOC entry 5588 (class 1259 OID 20972)
-- Name: idx_fk_analysis_entities_dataset_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_analysis_entities_dataset_id ON tbl_analysis_entities USING btree (dataset_id);


--
-- TOC entry 5589 (class 1259 OID 20973)
-- Name: idx_fk_analysis_entities_physical_sample_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_analysis_entities_physical_sample_id ON tbl_analysis_entities USING btree (physical_sample_id);


--
-- TOC entry 5592 (class 1259 OID 20974)
-- Name: idx_fk_analysis_entity_ages_analysis_entity_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_analysis_entity_ages_analysis_entity_id ON tbl_analysis_entity_ages USING btree (analysis_entity_id);


--
-- TOC entry 5593 (class 1259 OID 20975)
-- Name: idx_fk_analysis_entity_ages_chronology_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_analysis_entity_ages_chronology_id ON tbl_analysis_entity_ages USING btree (chronology_id);


--
-- TOC entry 5596 (class 1259 OID 20976)
-- Name: idx_fk_analysis_entity_dimensions_analysis_entity_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_analysis_entity_dimensions_analysis_entity_id ON tbl_analysis_entity_dimensions USING btree (analysis_entity_id);


--
-- TOC entry 5597 (class 1259 OID 20977)
-- Name: idx_fk_analysis_entity_dimensions_dimension_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_analysis_entity_dimensions_dimension_id ON tbl_analysis_entity_dimensions USING btree (dimension_id);


--
-- TOC entry 5600 (class 1259 OID 20978)
-- Name: idx_fk_analysis_entity_prep_methods_analysis_entity_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_analysis_entity_prep_methods_analysis_entity_id ON tbl_analysis_entity_prep_methods USING btree (analysis_entity_id);


--
-- TOC entry 5601 (class 1259 OID 20979)
-- Name: idx_fk_analysis_entity_prep_methods_method_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_analysis_entity_prep_methods_method_id ON tbl_analysis_entity_prep_methods USING btree (method_id);


--
-- TOC entry 5604 (class 1259 OID 20980)
-- Name: idx_fk_biblio_collections_or_journals_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_biblio_collections_or_journals_id ON tbl_biblio USING btree (collection_or_journal_id);


--
-- TOC entry 5609 (class 1259 OID 20981)
-- Name: idx_fk_biblio_keywords_biblio_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_biblio_keywords_biblio_id ON tbl_biblio_keywords USING btree (biblio_id);


--
-- TOC entry 5610 (class 1259 OID 20982)
-- Name: idx_fk_biblio_keywords_keyword_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_biblio_keywords_keyword_id ON tbl_biblio_keywords USING btree (keyword_id);


--
-- TOC entry 5605 (class 1259 OID 20983)
-- Name: idx_fk_biblio_publication_type_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_biblio_publication_type_id ON tbl_biblio USING btree (publication_type_id);


--
-- TOC entry 5606 (class 1259 OID 20984)
-- Name: idx_fk_biblio_publisher_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_biblio_publisher_id ON tbl_biblio USING btree (publisher_id);


--
-- TOC entry 5613 (class 1259 OID 20985)
-- Name: idx_fk_bugs_abundance_codes_abundance_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_bugs_abundance_codes_abundance_id ON tbl_bugs_abundance_codes USING btree (abundance_id);


--
-- TOC entry 5616 (class 1259 OID 20986)
-- Name: idx_fk_bugs_biblio_biblio_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_bugs_biblio_biblio_id ON tbl_bugs_biblio USING btree (biblio_id);


--
-- TOC entry 5619 (class 1259 OID 20987)
-- Name: idx_fk_bugs_dates_calendar_relative_dates_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_bugs_dates_calendar_relative_dates_id ON tbl_bugs_dates_calendar USING btree (relative_date_id);


--
-- TOC entry 5622 (class 1259 OID 20988)
-- Name: idx_fk_bugs_dates_period_relative_date_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_bugs_dates_period_relative_date_id ON tbl_bugs_dates_period USING btree (relative_date_id);


--
-- TOC entry 5625 (class 1259 OID 20989)
-- Name: idx_fk_bugs_dates_radio_geochron_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_bugs_dates_radio_geochron_id ON tbl_bugs_dates_radio USING btree (geochron_id);


--
-- TOC entry 5628 (class 1259 OID 20990)
-- Name: idx_fk_bugs_datesmethods_method_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_bugs_datesmethods_method_id ON tbl_bugs_datesmethods USING btree (method_id);


--
-- TOC entry 5631 (class 1259 OID 20991)
-- Name: idx_fk_bugs_periods_relative_ages_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_bugs_periods_relative_ages_id ON tbl_bugs_periods USING btree (relative_age_id);


--
-- TOC entry 5634 (class 1259 OID 20992)
-- Name: idx_fk_bugs_physical_samples_physical_sample_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_bugs_physical_samples_physical_sample_id ON tbl_bugs_physical_samples USING btree (physical_sample_id);


--
-- TOC entry 5637 (class 1259 OID 20993)
-- Name: idx_fk_bugs_sample_groups_sample_group_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_bugs_sample_groups_sample_group_id ON tbl_bugs_sample_groups USING btree (sample_group_id);


--
-- TOC entry 5640 (class 1259 OID 20994)
-- Name: idx_fk_bugs_sites_site_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_bugs_sites_site_id ON tbl_bugs_sites USING btree (site_id);


--
-- TOC entry 5643 (class 1259 OID 20995)
-- Name: idx_fk_ceramics_analysis_entity_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_ceramics_analysis_entity_id ON tbl_ceramics USING btree (analysis_entity_id);


--
-- TOC entry 5644 (class 1259 OID 20996)
-- Name: idx_fk_ceramics_ceramics_measurement_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_ceramics_ceramics_measurement_id ON tbl_ceramics USING btree (ceramics_measurement_id);


--
-- TOC entry 5647 (class 1259 OID 20997)
-- Name: idx_fk_ceramics_measurement_lookup_ceramics_measurements_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_ceramics_measurement_lookup_ceramics_measurements_id ON tbl_ceramics_measurement_lookup USING btree (ceramics_measurement_id);


--
-- TOC entry 5650 (class 1259 OID 20998)
-- Name: idx_fk_ceramics_measurements_method_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_ceramics_measurements_method_id ON tbl_ceramics_measurements USING btree (method_id);


--
-- TOC entry 5655 (class 1259 OID 20999)
-- Name: idx_fk_chron_controls_chron_control_type_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_chron_controls_chron_control_type_id ON tbl_chron_controls USING btree (chron_control_type_id);


--
-- TOC entry 5656 (class 1259 OID 21000)
-- Name: idx_fk_chron_controls_chronology_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_chron_controls_chronology_id ON tbl_chron_controls USING btree (chronology_id);


--
-- TOC entry 5659 (class 1259 OID 21001)
-- Name: idx_fk_chronologies_contact_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_chronologies_contact_id ON tbl_chronologies USING btree (contact_id);


--
-- TOC entry 5660 (class 1259 OID 21002)
-- Name: idx_fk_chronologies_sample_group_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_chronologies_sample_group_id ON tbl_chronologies USING btree (sample_group_id);


--
-- TOC entry 5721 (class 1259 OID 21003)
-- Name: idx_fk_collections_or_journals_publisher_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_collections_or_journals_publisher_id ON tbl_collections_or_journals USING btree (publisher_id);


--
-- TOC entry 5724 (class 1259 OID 21004)
-- Name: idx_fk_colours_method_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_colours_method_id ON tbl_colours USING btree (method_id);


--
-- TOC entry 5731 (class 1259 OID 21005)
-- Name: idx_fk_coordinate_method_dimensions_dimensions_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_coordinate_method_dimensions_dimensions_id ON tbl_coordinate_method_dimensions USING btree (dimension_id);


--
-- TOC entry 5732 (class 1259 OID 21006)
-- Name: idx_fk_coordinate_method_dimensions_method_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_coordinate_method_dimensions_method_id ON tbl_coordinate_method_dimensions USING btree (method_id);


--
-- TOC entry 5737 (class 1259 OID 21007)
-- Name: idx_fk_data_types_data_type_group_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_data_types_data_type_group_id ON tbl_data_types USING btree (data_type_group_id);


--
-- TOC entry 5740 (class 1259 OID 21008)
-- Name: idx_fk_dataset_contacts_contact_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_dataset_contacts_contact_id ON tbl_dataset_contacts USING btree (contact_id);


--
-- TOC entry 5741 (class 1259 OID 21009)
-- Name: idx_fk_dataset_contacts_contact_type_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_dataset_contacts_contact_type_id ON tbl_dataset_contacts USING btree (contact_type_id);


--
-- TOC entry 5742 (class 1259 OID 21010)
-- Name: idx_fk_dataset_contacts_dataset_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_dataset_contacts_dataset_id ON tbl_dataset_contacts USING btree (dataset_id);


--
-- TOC entry 5745 (class 1259 OID 21011)
-- Name: idx_fk_dataset_masters_biblio_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_dataset_masters_biblio_id ON tbl_dataset_masters USING btree (biblio_id);


--
-- TOC entry 5746 (class 1259 OID 21012)
-- Name: idx_fk_dataset_masters_contact_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_dataset_masters_contact_id ON tbl_dataset_masters USING btree (contact_id);


--
-- TOC entry 5751 (class 1259 OID 21013)
-- Name: idx_fk_dataset_submission_submission_type_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_dataset_submission_submission_type_id ON tbl_dataset_submissions USING btree (submission_type_id);


--
-- TOC entry 5752 (class 1259 OID 21014)
-- Name: idx_fk_dataset_submissions_contact_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_dataset_submissions_contact_id ON tbl_dataset_submissions USING btree (contact_id);


--
-- TOC entry 5753 (class 1259 OID 21015)
-- Name: idx_fk_dataset_submissions_dataset_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_dataset_submissions_dataset_id ON tbl_dataset_submissions USING btree (dataset_id);


--
-- TOC entry 5756 (class 1259 OID 21016)
-- Name: idx_fk_datasets_biblio_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_datasets_biblio_id ON tbl_datasets USING btree (biblio_id);


--
-- TOC entry 5757 (class 1259 OID 21017)
-- Name: idx_fk_datasets_data_type_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_datasets_data_type_id ON tbl_datasets USING btree (data_type_id);


--
-- TOC entry 5758 (class 1259 OID 21018)
-- Name: idx_fk_datasets_master_set_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_datasets_master_set_id ON tbl_datasets USING btree (master_set_id);


--
-- TOC entry 5759 (class 1259 OID 21019)
-- Name: idx_fk_datasets_method_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_datasets_method_id ON tbl_datasets USING btree (method_id);


--
-- TOC entry 5760 (class 1259 OID 21020)
-- Name: idx_fk_datasets_project_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_datasets_project_id ON tbl_datasets USING btree (project_id);


--
-- TOC entry 5761 (class 1259 OID 21021)
-- Name: idx_fk_datasets_updated_dataset_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_datasets_updated_dataset_id ON tbl_datasets USING btree (updated_dataset_id);


--
-- TOC entry 5764 (class 1259 OID 21022)
-- Name: idx_fk_dating_labs_contact_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_dating_labs_contact_id ON tbl_dating_labs USING btree (contact_id);


--
-- TOC entry 5767 (class 1259 OID 21023)
-- Name: idx_fk_dating_material_abundance_elements_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_dating_material_abundance_elements_id ON tbl_dating_material USING btree (abundance_element_id);


--
-- TOC entry 5768 (class 1259 OID 21024)
-- Name: idx_fk_dating_material_geochronology_geochron_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_dating_material_geochronology_geochron_id ON tbl_dating_material USING btree (geochron_id);


--
-- TOC entry 5769 (class 1259 OID 21025)
-- Name: idx_fk_dating_material_taxa_tree_master_taxon_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_dating_material_taxa_tree_master_taxon_id ON tbl_dating_material USING btree (taxon_id);


--
-- TOC entry 5774 (class 1259 OID 21026)
-- Name: idx_fk_dendro_analysis_entity_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_dendro_analysis_entity_id ON tbl_dendro USING btree (analysis_entity_id);


--
-- TOC entry 5778 (class 1259 OID 21027)
-- Name: idx_fk_dendro_date_notes_dendro_date_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_dendro_date_notes_dendro_date_id ON tbl_dendro_date_notes USING btree (dendro_date_id);


--
-- TOC entry 5781 (class 1259 OID 21028)
-- Name: idx_fk_dendro_dates_analysis_entity_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_dendro_dates_analysis_entity_id ON tbl_dendro_dates USING btree (analysis_entity_id);


--
-- TOC entry 5782 (class 1259 OID 21029)
-- Name: idx_fk_dendro_dates_dating_uncertainty_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_dendro_dates_dating_uncertainty_id ON tbl_dendro_dates USING btree (dating_uncertainty_id);


--
-- TOC entry 5783 (class 1259 OID 21030)
-- Name: idx_fk_dendro_dates_years_type_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_dendro_dates_years_type_id ON tbl_dendro_dates USING btree (years_type_id);


--
-- TOC entry 5775 (class 1259 OID 21031)
-- Name: idx_fk_dendro_dendro_measurement_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_dendro_dendro_measurement_id ON tbl_dendro USING btree (dendro_measurement_id);


--
-- TOC entry 5786 (class 1259 OID 21032)
-- Name: idx_fk_dendro_measurement_lookup_dendro_measurement_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_dendro_measurement_lookup_dendro_measurement_id ON tbl_dendro_measurement_lookup USING btree (dendro_measurement_id);


--
-- TOC entry 5789 (class 1259 OID 21033)
-- Name: idx_fk_dendro_measurements_method_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_dendro_measurements_method_id ON tbl_dendro_measurements USING btree (method_id);


--
-- TOC entry 5792 (class 1259 OID 21034)
-- Name: idx_fk_dimensions_method_group_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_dimensions_method_group_id ON tbl_dimensions USING btree (method_group_id);


--
-- TOC entry 5793 (class 1259 OID 21035)
-- Name: idx_fk_dimensions_unit_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_dimensions_unit_id ON tbl_dimensions USING btree (unit_id);


--
-- TOC entry 5796 (class 1259 OID 21036)
-- Name: idx_fk_ecocode_definitions_ecocode_group_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_ecocode_definitions_ecocode_group_id ON tbl_ecocode_definitions USING btree (ecocode_group_id);


--
-- TOC entry 5799 (class 1259 OID 21037)
-- Name: idx_fk_ecocode_groups_ecocode_system_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_ecocode_groups_ecocode_system_id ON tbl_ecocode_groups USING btree (ecocode_system_id);


--
-- TOC entry 5802 (class 1259 OID 21038)
-- Name: idx_fk_ecocode_systems_biblio_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_ecocode_systems_biblio_id ON tbl_ecocode_systems USING btree (biblio_id);


--
-- TOC entry 5805 (class 1259 OID 21039)
-- Name: idx_fk_ecocodes_ecocodedef_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_ecocodes_ecocodedef_id ON tbl_ecocodes USING btree (ecocode_definition_id);


--
-- TOC entry 5806 (class 1259 OID 21040)
-- Name: idx_fk_ecocodes_taxon_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_ecocodes_taxon_id ON tbl_ecocodes USING btree (taxon_id);


--
-- TOC entry 5811 (class 1259 OID 21041)
-- Name: idx_fk_feature_type_id_feature_type_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_feature_type_id_feature_type_id ON tbl_features USING btree (feature_type_id);


--
-- TOC entry 5816 (class 1259 OID 21042)
-- Name: idx_fk_geochron_refs_biblio_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_geochron_refs_biblio_id ON tbl_geochron_refs USING btree (biblio_id);


--
-- TOC entry 5817 (class 1259 OID 21043)
-- Name: idx_fk_geochron_refs_geochron_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_geochron_refs_geochron_id ON tbl_geochron_refs USING btree (geochron_id);


--
-- TOC entry 5820 (class 1259 OID 21044)
-- Name: idx_fk_geochronology_analysis_entity_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_geochronology_analysis_entity_id ON tbl_geochronology USING btree (analysis_entity_id);


--
-- TOC entry 5821 (class 1259 OID 21045)
-- Name: idx_fk_geochronology_dating_labs_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_geochronology_dating_labs_id ON tbl_geochronology USING btree (dating_lab_id);


--
-- TOC entry 5822 (class 1259 OID 21046)
-- Name: idx_fk_geochronology_dating_uncertainty_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_geochronology_dating_uncertainty_id ON tbl_geochronology USING btree (dating_uncertainty_id);


--
-- TOC entry 5825 (class 1259 OID 21047)
-- Name: idx_fk_horizons_method_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_horizons_method_id ON tbl_horizons USING btree (method_id);


--
-- TOC entry 5832 (class 1259 OID 21048)
-- Name: idx_fk_imported_taxa_replacements_taxon_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_imported_taxa_replacements_taxon_id ON tbl_imported_taxa_replacements USING btree (taxon_id);


--
-- TOC entry 5839 (class 1259 OID 21049)
-- Name: idx_fk_lithology_sample_group_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_lithology_sample_group_id ON tbl_lithology USING btree (sample_group_id);


--
-- TOC entry 6022 (class 1259 OID 21050)
-- Name: idx_fk_locations_location_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_locations_location_id ON tbl_site_locations USING btree (location_id);


--
-- TOC entry 5844 (class 1259 OID 21051)
-- Name: idx_fk_locations_location_type_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_locations_location_type_id ON tbl_locations USING btree (location_type_id);


--
-- TOC entry 6023 (class 1259 OID 21052)
-- Name: idx_fk_locations_site_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_locations_site_id ON tbl_site_locations USING btree (site_id);


--
-- TOC entry 5847 (class 1259 OID 21053)
-- Name: idx_fk_mcr_names_taxon_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_mcr_names_taxon_id ON tbl_mcr_names USING btree (taxon_id);


--
-- TOC entry 5850 (class 1259 OID 21054)
-- Name: idx_fk_mcr_summary_data_taxon_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_mcr_summary_data_taxon_id ON tbl_mcr_summary_data USING btree (taxon_id);


--
-- TOC entry 5853 (class 1259 OID 21055)
-- Name: idx_fk_mcrdata_birmbeetledat_taxon_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_mcrdata_birmbeetledat_taxon_id ON tbl_mcrdata_birmbeetledat USING btree (taxon_id);


--
-- TOC entry 5856 (class 1259 OID 21056)
-- Name: idx_fk_measured_value_dimensions_dimension_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_measured_value_dimensions_dimension_id ON tbl_measured_value_dimensions USING btree (dimension_id);


--
-- TOC entry 5860 (class 1259 OID 21057)
-- Name: idx_fk_measured_values_analysis_entity_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_measured_values_analysis_entity_id ON tbl_measured_values USING btree (analysis_entity_id);


--
-- TOC entry 5857 (class 1259 OID 21058)
-- Name: idx_fk_measured_weights_value_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_measured_weights_value_id ON tbl_measured_value_dimensions USING btree (measured_value_id);


--
-- TOC entry 5865 (class 1259 OID 21059)
-- Name: idx_fk_methods_biblio_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_methods_biblio_id ON tbl_methods USING btree (biblio_id);


--
-- TOC entry 5866 (class 1259 OID 21060)
-- Name: idx_fk_methods_method_group_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_methods_method_group_id ON tbl_methods USING btree (method_group_id);


--
-- TOC entry 5867 (class 1259 OID 21061)
-- Name: idx_fk_methods_record_type_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_methods_record_type_id ON tbl_methods USING btree (record_type_id);


--
-- TOC entry 5868 (class 1259 OID 21062)
-- Name: idx_fk_methods_unit_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_methods_unit_id ON tbl_methods USING btree (unit_id);


--
-- TOC entry 5873 (class 1259 OID 21063)
-- Name: idx_fk_physical_sample_features_feature_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_physical_sample_features_feature_id ON tbl_physical_sample_features USING btree (feature_id);


--
-- TOC entry 5874 (class 1259 OID 21064)
-- Name: idx_fk_physical_sample_features_physical_sample_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_physical_sample_features_physical_sample_id ON tbl_physical_sample_features USING btree (physical_sample_id);


--
-- TOC entry 5877 (class 1259 OID 21065)
-- Name: idx_fk_physical_samples_sample_name_type_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_physical_samples_sample_name_type_id ON tbl_physical_samples USING btree (alt_ref_type_id);


--
-- TOC entry 5878 (class 1259 OID 21066)
-- Name: idx_fk_physical_samples_sample_type_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_physical_samples_sample_type_id ON tbl_physical_samples USING btree (sample_type_id);


--
-- TOC entry 5886 (class 1259 OID 21067)
-- Name: idx_fk_projects_project_stage_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_projects_project_stage_id ON tbl_projects USING btree (project_stage_id);


--
-- TOC entry 5887 (class 1259 OID 21068)
-- Name: idx_fk_projects_project_type_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_projects_project_type_id ON tbl_projects USING btree (project_type_id);


--
-- TOC entry 5901 (class 1259 OID 21069)
-- Name: idx_fk_rdb_codes_rdb_system_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_rdb_codes_rdb_system_id ON tbl_rdb_codes USING btree (rdb_system_id);


--
-- TOC entry 5896 (class 1259 OID 21070)
-- Name: idx_fk_rdb_rdb_code_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_rdb_rdb_code_id ON tbl_rdb USING btree (rdb_code_id);


--
-- TOC entry 5904 (class 1259 OID 21071)
-- Name: idx_fk_rdb_systems_biblio_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_rdb_systems_biblio_id ON tbl_rdb_systems USING btree (biblio_id);


--
-- TOC entry 5905 (class 1259 OID 21072)
-- Name: idx_fk_rdb_systems_location_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_rdb_systems_location_id ON tbl_rdb_systems USING btree (location_id);


--
-- TOC entry 5897 (class 1259 OID 21073)
-- Name: idx_fk_rdb_taxon_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_rdb_taxon_id ON tbl_rdb USING btree (taxon_id);


--
-- TOC entry 5910 (class 1259 OID 21074)
-- Name: idx_fk_relative_age_refs_biblio_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_relative_age_refs_biblio_id ON tbl_relative_age_refs USING btree (biblio_id);


--
-- TOC entry 5911 (class 1259 OID 21075)
-- Name: idx_fk_relative_age_refs_relative_age_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_relative_age_refs_relative_age_id ON tbl_relative_age_refs USING btree (relative_age_id);


--
-- TOC entry 5916 (class 1259 OID 21076)
-- Name: idx_fk_relative_ages_location_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_relative_ages_location_id ON tbl_relative_ages USING btree (location_id);


--
-- TOC entry 5917 (class 1259 OID 21077)
-- Name: idx_fk_relative_ages_relative_age_type_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_relative_ages_relative_age_type_id ON tbl_relative_ages USING btree (relative_age_type_id);


--
-- TOC entry 5920 (class 1259 OID 21078)
-- Name: idx_fk_relative_dates_dating_uncertainty_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_relative_dates_dating_uncertainty_id ON tbl_relative_dates USING btree (dating_uncertainty_id);


--
-- TOC entry 5921 (class 1259 OID 21079)
-- Name: idx_fk_relative_dates_method_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_relative_dates_method_id ON tbl_relative_dates USING btree (method_id);


--
-- TOC entry 5922 (class 1259 OID 21080)
-- Name: idx_fk_relative_dates_physical_sample_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_relative_dates_physical_sample_id ON tbl_relative_dates USING btree (physical_sample_id);


--
-- TOC entry 5923 (class 1259 OID 21081)
-- Name: idx_fk_relative_dates_relative_age_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_relative_dates_relative_age_id ON tbl_relative_dates USING btree (relative_age_id);


--
-- TOC entry 5926 (class 1259 OID 21082)
-- Name: idx_fk_sample_alt_refs_alt_ref_type_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_sample_alt_refs_alt_ref_type_id ON tbl_sample_alt_refs USING btree (alt_ref_type_id);


--
-- TOC entry 5927 (class 1259 OID 21083)
-- Name: idx_fk_sample_alt_refs_physical_sample_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_sample_alt_refs_physical_sample_id ON tbl_sample_alt_refs USING btree (physical_sample_id);


--
-- TOC entry 5930 (class 1259 OID 21084)
-- Name: idx_fk_sample_colours_colour_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_sample_colours_colour_id ON tbl_sample_colours USING btree (colour_id);


--
-- TOC entry 5931 (class 1259 OID 21085)
-- Name: idx_fk_sample_colours_physical_sample_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_sample_colours_physical_sample_id ON tbl_sample_colours USING btree (physical_sample_id);


--
-- TOC entry 5934 (class 1259 OID 21086)
-- Name: idx_fk_sample_coordinates_coordinate_method_dimension_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_sample_coordinates_coordinate_method_dimension_id ON tbl_sample_coordinates USING btree (coordinate_method_dimension_id);


--
-- TOC entry 5935 (class 1259 OID 21087)
-- Name: idx_fk_sample_coordinates_physical_sample_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_sample_coordinates_physical_sample_id ON tbl_sample_coordinates USING btree (physical_sample_id);


--
-- TOC entry 5938 (class 1259 OID 21088)
-- Name: idx_fk_sample_description_sample_group_contexts_sampling_contex; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_sample_description_sample_group_contexts_sampling_contex ON tbl_sample_description_sample_group_contexts USING btree (sampling_context_id);


--
-- TOC entry 5939 (class 1259 OID 21089)
-- Name: idx_fk_sample_description_types_sample_group_context_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_sample_description_types_sample_group_context_id ON tbl_sample_description_sample_group_contexts USING btree (sample_description_type_id);


--
-- TOC entry 5944 (class 1259 OID 21090)
-- Name: idx_fk_sample_descriptions_physical_sample_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_sample_descriptions_physical_sample_id ON tbl_sample_descriptions USING btree (physical_sample_id);


--
-- TOC entry 5945 (class 1259 OID 21091)
-- Name: idx_fk_sample_descriptions_sample_description_type_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_sample_descriptions_sample_description_type_id ON tbl_sample_descriptions USING btree (sample_description_type_id);


--
-- TOC entry 5948 (class 1259 OID 21092)
-- Name: idx_fk_sample_dimensions_dimension_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_sample_dimensions_dimension_id ON tbl_sample_dimensions USING btree (dimension_id);


--
-- TOC entry 5949 (class 1259 OID 21093)
-- Name: idx_fk_sample_dimensions_measurement_method_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_sample_dimensions_measurement_method_id ON tbl_sample_dimensions USING btree (method_id);


--
-- TOC entry 5950 (class 1259 OID 21094)
-- Name: idx_fk_sample_dimensions_physical_sample_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_sample_dimensions_physical_sample_id ON tbl_sample_dimensions USING btree (physical_sample_id);


--
-- TOC entry 5957 (class 1259 OID 21095)
-- Name: idx_fk_sample_group_description_type_sampling_context_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_sample_group_description_type_sampling_context_id ON tbl_sample_group_description_type_sampling_contexts USING btree (sample_group_description_type_id);


--
-- TOC entry 5963 (class 1259 OID 21096)
-- Name: idx_fk_sample_group_descriptions_sample_group_description_type_; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_sample_group_descriptions_sample_group_description_type_ ON tbl_sample_group_descriptions USING btree (sample_group_description_type_id);


--
-- TOC entry 5967 (class 1259 OID 21097)
-- Name: idx_fk_sample_group_dimensions_dimension_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_sample_group_dimensions_dimension_id ON tbl_sample_group_dimensions USING btree (dimension_id);


--
-- TOC entry 5968 (class 1259 OID 21098)
-- Name: idx_fk_sample_group_dimensions_sample_group_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_sample_group_dimensions_sample_group_id ON tbl_sample_group_dimensions USING btree (sample_group_id);


--
-- TOC entry 5971 (class 1259 OID 21099)
-- Name: idx_fk_sample_group_images_image_type_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_sample_group_images_image_type_id ON tbl_sample_group_images USING btree (image_type_id);


--
-- TOC entry 5972 (class 1259 OID 21100)
-- Name: idx_fk_sample_group_images_sample_group_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_sample_group_images_sample_group_id ON tbl_sample_group_images USING btree (sample_group_id);


--
-- TOC entry 5953 (class 1259 OID 21101)
-- Name: idx_fk_sample_group_positions_coordinate_method_dimension_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_sample_group_positions_coordinate_method_dimension_id ON tbl_sample_group_coordinates USING btree (coordinate_method_dimension_id);


--
-- TOC entry 5954 (class 1259 OID 21102)
-- Name: idx_fk_sample_group_positions_sample_group_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_sample_group_positions_sample_group_id ON tbl_sample_group_coordinates USING btree (sample_group_id);


--
-- TOC entry 5978 (class 1259 OID 21103)
-- Name: idx_fk_sample_group_references_biblio_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_sample_group_references_biblio_id ON tbl_sample_group_references USING btree (biblio_id);


--
-- TOC entry 5979 (class 1259 OID 21104)
-- Name: idx_fk_sample_group_references_sample_group_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_sample_group_references_sample_group_id ON tbl_sample_group_references USING btree (sample_group_id);


--
-- TOC entry 5984 (class 1259 OID 21105)
-- Name: idx_fk_sample_group_sampling_context_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_sample_group_sampling_context_id ON tbl_sample_groups USING btree (sampling_context_id);


--
-- TOC entry 5958 (class 1259 OID 21106)
-- Name: idx_fk_sample_group_sampling_context_id0; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_sample_group_sampling_context_id0 ON tbl_sample_group_description_type_sampling_contexts USING btree (sampling_context_id);


--
-- TOC entry 5985 (class 1259 OID 21107)
-- Name: idx_fk_sample_groups_method_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_sample_groups_method_id ON tbl_sample_groups USING btree (method_id);


--
-- TOC entry 5964 (class 1259 OID 21108)
-- Name: idx_fk_sample_groups_sample_group_descriptions_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_sample_groups_sample_group_descriptions_id ON tbl_sample_group_descriptions USING btree (sample_group_id);


--
-- TOC entry 5986 (class 1259 OID 21109)
-- Name: idx_fk_sample_groups_site_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_sample_groups_site_id ON tbl_sample_groups USING btree (site_id);


--
-- TOC entry 5989 (class 1259 OID 21110)
-- Name: idx_fk_sample_horizons_horizon_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_sample_horizons_horizon_id ON tbl_sample_horizons USING btree (horizon_id);


--
-- TOC entry 5990 (class 1259 OID 21111)
-- Name: idx_fk_sample_horizons_physical_sample_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_sample_horizons_physical_sample_id ON tbl_sample_horizons USING btree (physical_sample_id);


--
-- TOC entry 5993 (class 1259 OID 21112)
-- Name: idx_fk_sample_images_image_type_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_sample_images_image_type_id ON tbl_sample_images USING btree (image_type_id);


--
-- TOC entry 5994 (class 1259 OID 21113)
-- Name: idx_fk_sample_images_physical_sample_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_sample_images_physical_sample_id ON tbl_sample_images USING btree (physical_sample_id);


--
-- TOC entry 5997 (class 1259 OID 21114)
-- Name: idx_fk_sample_location_sampling_contexts_sampling_context_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_sample_location_sampling_contexts_sampling_context_id ON tbl_sample_location_type_sampling_contexts USING btree (sample_location_type_id);


--
-- TOC entry 5998 (class 1259 OID 21115)
-- Name: idx_fk_sample_location_type_sampling_context_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_sample_location_type_sampling_context_id ON tbl_sample_location_type_sampling_contexts USING btree (sampling_context_id);


--
-- TOC entry 6003 (class 1259 OID 21116)
-- Name: idx_fk_sample_locations_physical_sample_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_sample_locations_physical_sample_id ON tbl_sample_locations USING btree (physical_sample_id);


--
-- TOC entry 6004 (class 1259 OID 21117)
-- Name: idx_fk_sample_locations_sample_location_type_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_sample_locations_sample_location_type_id ON tbl_sample_locations USING btree (sample_location_type_id);


--
-- TOC entry 6007 (class 1259 OID 21118)
-- Name: idx_fk_sample_notes_physical_sample_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_sample_notes_physical_sample_id ON tbl_sample_notes USING btree (physical_sample_id);


--
-- TOC entry 5879 (class 1259 OID 21119)
-- Name: idx_fk_samples_sample_group_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_samples_sample_group_id ON tbl_physical_samples USING btree (sample_group_id);


--
-- TOC entry 6014 (class 1259 OID 21120)
-- Name: idx_fk_seasons_season_type_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_seasons_season_type_id ON tbl_seasons USING btree (season_type_id);


--
-- TOC entry 6017 (class 1259 OID 21121)
-- Name: idx_fk_site_images_contact_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_site_images_contact_id ON tbl_site_images USING btree (contact_id);


--
-- TOC entry 6018 (class 1259 OID 21122)
-- Name: idx_fk_site_images_image_type_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_site_images_image_type_id ON tbl_site_images USING btree (image_type_id);


--
-- TOC entry 6019 (class 1259 OID 21123)
-- Name: idx_fk_site_images_site_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_site_images_site_id ON tbl_site_images USING btree (site_id);


--
-- TOC entry 6026 (class 1259 OID 21124)
-- Name: idx_fk_site_natgridrefs_method_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_site_natgridrefs_method_id ON tbl_site_natgridrefs USING btree (method_id);


--
-- TOC entry 6027 (class 1259 OID 21125)
-- Name: idx_fk_site_natgridrefs_sites_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_site_natgridrefs_sites_id ON tbl_site_natgridrefs USING btree (site_id);


--
-- TOC entry 6030 (class 1259 OID 21126)
-- Name: idx_fk_site_other_records_biblio_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_site_other_records_biblio_id ON tbl_site_other_records USING btree (biblio_id);


--
-- TOC entry 6031 (class 1259 OID 21127)
-- Name: idx_fk_site_other_records_record_type_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_site_other_records_record_type_id ON tbl_site_other_records USING btree (record_type_id);


--
-- TOC entry 6032 (class 1259 OID 21128)
-- Name: idx_fk_site_other_records_site_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_site_other_records_site_id ON tbl_site_other_records USING btree (site_id);


--
-- TOC entry 6035 (class 1259 OID 21129)
-- Name: idx_fk_site_preservation_status_site_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_site_preservation_status_site_id ON tbl_site_preservation_status USING btree (site_id);


--
-- TOC entry 6038 (class 1259 OID 21130)
-- Name: idx_fk_site_references_biblio_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_site_references_biblio_id ON tbl_site_references USING btree (biblio_id);


--
-- TOC entry 6039 (class 1259 OID 21131)
-- Name: idx_fk_site_references_site_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_site_references_site_id ON tbl_site_references USING btree (site_id);


--
-- TOC entry 6046 (class 1259 OID 21132)
-- Name: idx_fk_species_associations_associated_taxon_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_species_associations_associated_taxon_id ON tbl_species_associations USING btree (taxon_id);


--
-- TOC entry 6047 (class 1259 OID 21133)
-- Name: idx_fk_species_associations_association_type_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_species_associations_association_type_id ON tbl_species_associations USING btree (association_type_id);


--
-- TOC entry 6048 (class 1259 OID 21134)
-- Name: idx_fk_species_associations_biblio_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_species_associations_biblio_id ON tbl_species_associations USING btree (biblio_id);


--
-- TOC entry 6049 (class 1259 OID 21135)
-- Name: idx_fk_species_associations_taxon_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_species_associations_taxon_id ON tbl_species_associations USING btree (taxon_id);


--
-- TOC entry 6052 (class 1259 OID 21136)
-- Name: idx_fk_taxa_common_names_language_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_taxa_common_names_language_id ON tbl_taxa_common_names USING btree (language_id);


--
-- TOC entry 6053 (class 1259 OID 21137)
-- Name: idx_fk_taxa_common_names_taxon_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_taxa_common_names_taxon_id ON tbl_taxa_common_names USING btree (taxon_id);


--
-- TOC entry 6056 (class 1259 OID 21138)
-- Name: idx_fk_taxa_images_image_type_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_taxa_images_image_type_id ON tbl_taxa_images USING btree (image_type_id);


--
-- TOC entry 6057 (class 1259 OID 21139)
-- Name: idx_fk_taxa_images_taxa_tree_master_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_taxa_images_taxa_tree_master_id ON tbl_taxa_images USING btree (taxon_id);


--
-- TOC entry 6060 (class 1259 OID 21140)
-- Name: idx_fk_taxa_measured_attributes_taxon_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_taxa_measured_attributes_taxon_id ON tbl_taxa_measured_attributes USING btree (taxon_id);


--
-- TOC entry 6063 (class 1259 OID 21141)
-- Name: idx_fk_taxa_reference_specimens_contact_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_taxa_reference_specimens_contact_id ON tbl_taxa_reference_specimens USING btree (contact_id);


--
-- TOC entry 6064 (class 1259 OID 21142)
-- Name: idx_fk_taxa_reference_specimens_taxon_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_taxa_reference_specimens_taxon_id ON tbl_taxa_reference_specimens USING btree (taxon_id);


--
-- TOC entry 6067 (class 1259 OID 21143)
-- Name: idx_fk_taxa_seasonality_activity_type_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_taxa_seasonality_activity_type_id ON tbl_taxa_seasonality USING btree (activity_type_id);


--
-- TOC entry 6068 (class 1259 OID 21144)
-- Name: idx_fk_taxa_seasonality_location_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_taxa_seasonality_location_id ON tbl_taxa_seasonality USING btree (location_id);


--
-- TOC entry 6069 (class 1259 OID 21145)
-- Name: idx_fk_taxa_seasonality_season_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_taxa_seasonality_season_id ON tbl_taxa_seasonality USING btree (season_id);


--
-- TOC entry 6070 (class 1259 OID 21146)
-- Name: idx_fk_taxa_seasonality_taxon_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_taxa_seasonality_taxon_id ON tbl_taxa_seasonality USING btree (taxon_id);


--
-- TOC entry 6073 (class 1259 OID 21147)
-- Name: idx_fk_taxa_synonyms_biblio_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_taxa_synonyms_biblio_id ON tbl_taxa_synonyms USING btree (biblio_id);


--
-- TOC entry 6074 (class 1259 OID 21148)
-- Name: idx_fk_taxa_synonyms_family_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_taxa_synonyms_family_id ON tbl_taxa_synonyms USING btree (family_id);


--
-- TOC entry 6075 (class 1259 OID 21149)
-- Name: idx_fk_taxa_synonyms_genus_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_taxa_synonyms_genus_id ON tbl_taxa_synonyms USING btree (genus_id);


--
-- TOC entry 6076 (class 1259 OID 21150)
-- Name: idx_fk_taxa_synonyms_taxa_tree_author_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_taxa_synonyms_taxa_tree_author_id ON tbl_taxa_synonyms USING btree (author_id);


--
-- TOC entry 6077 (class 1259 OID 21151)
-- Name: idx_fk_taxa_synonyms_taxon_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_taxa_synonyms_taxon_id ON tbl_taxa_synonyms USING btree (taxon_id);


--
-- TOC entry 6082 (class 1259 OID 21152)
-- Name: idx_fk_taxa_tree_families_order_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_taxa_tree_families_order_id ON tbl_taxa_tree_families USING btree (order_id);


--
-- TOC entry 6085 (class 1259 OID 21153)
-- Name: idx_fk_taxa_tree_genera_family_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_taxa_tree_genera_family_id ON tbl_taxa_tree_genera USING btree (family_id);


--
-- TOC entry 6088 (class 1259 OID 21154)
-- Name: idx_fk_taxa_tree_master_author_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_taxa_tree_master_author_id ON tbl_taxa_tree_master USING btree (author_id);


--
-- TOC entry 6089 (class 1259 OID 21155)
-- Name: idx_fk_taxa_tree_master_genus_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_taxa_tree_master_genus_id ON tbl_taxa_tree_master USING btree (genus_id);


--
-- TOC entry 6092 (class 1259 OID 21156)
-- Name: idx_fk_taxa_tree_orders_record_type_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_taxa_tree_orders_record_type_id ON tbl_taxa_tree_orders USING btree (record_type_id);


--
-- TOC entry 6099 (class 1259 OID 21157)
-- Name: idx_fk_taxonomic_order_biblio_biblio_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_taxonomic_order_biblio_biblio_id ON tbl_taxonomic_order_biblio USING btree (biblio_id);


--
-- TOC entry 6100 (class 1259 OID 21158)
-- Name: idx_fk_taxonomic_order_biblio_taxonomic_order_system_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_taxonomic_order_biblio_taxonomic_order_system_id ON tbl_taxonomic_order_biblio USING btree (taxonomic_order_system_id);


--
-- TOC entry 6095 (class 1259 OID 21159)
-- Name: idx_fk_taxonomic_order_taxon_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_taxonomic_order_taxon_id ON tbl_taxonomic_order USING btree (taxon_id);


--
-- TOC entry 6096 (class 1259 OID 21160)
-- Name: idx_fk_taxonomic_order_taxonomic_order_system_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_taxonomic_order_taxonomic_order_system_id ON tbl_taxonomic_order USING btree (taxonomic_order_system_id);


--
-- TOC entry 6105 (class 1259 OID 21161)
-- Name: idx_fk_taxonomy_notes_biblio_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_taxonomy_notes_biblio_id ON tbl_taxonomy_notes USING btree (biblio_id);


--
-- TOC entry 6106 (class 1259 OID 21162)
-- Name: idx_fk_taxonomy_notes_taxon_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_taxonomy_notes_taxon_id ON tbl_taxonomy_notes USING btree (taxon_id);


--
-- TOC entry 5898 (class 1259 OID 21163)
-- Name: idx_fk_tbl_rdb_tbl_location_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_tbl_rdb_tbl_location_id ON tbl_rdb USING btree (location_id);


--
-- TOC entry 5975 (class 1259 OID 21164)
-- Name: idx_fk_tbl_sample_group_notes_sample_groups; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_tbl_sample_group_notes_sample_groups ON tbl_sample_group_notes USING btree (sample_group_id);


--
-- TOC entry 6109 (class 1259 OID 21165)
-- Name: idx_fk_tephra_dates_analysis_entity_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_tephra_dates_analysis_entity_id ON tbl_tephra_dates USING btree (analysis_entity_id);


--
-- TOC entry 6110 (class 1259 OID 21166)
-- Name: idx_fk_tephra_dates_dating_uncertainty_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_tephra_dates_dating_uncertainty_id ON tbl_tephra_dates USING btree (dating_uncertainty_id);


--
-- TOC entry 6111 (class 1259 OID 21167)
-- Name: idx_fk_tephra_dates_tephra_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_tephra_dates_tephra_id ON tbl_tephra_dates USING btree (tephra_id);


--
-- TOC entry 6114 (class 1259 OID 21168)
-- Name: idx_fk_tephra_refs_biblio_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_tephra_refs_biblio_id ON tbl_tephra_refs USING btree (biblio_id);


--
-- TOC entry 6115 (class 1259 OID 21169)
-- Name: idx_fk_tephra_refs_tephra_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_tephra_refs_tephra_id ON tbl_tephra_refs USING btree (tephra_id);


--
-- TOC entry 6120 (class 1259 OID 21170)
-- Name: idx_fk_text_biology_biblio_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_text_biology_biblio_id ON tbl_text_biology USING btree (biblio_id);


--
-- TOC entry 6121 (class 1259 OID 21171)
-- Name: idx_fk_text_biology_taxon_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_text_biology_taxon_id ON tbl_text_biology USING btree (taxon_id);


--
-- TOC entry 6124 (class 1259 OID 21172)
-- Name: idx_fk_text_distribution_biblio_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_text_distribution_biblio_id ON tbl_text_distribution USING btree (biblio_id);


--
-- TOC entry 6125 (class 1259 OID 21173)
-- Name: idx_fk_text_distribution_taxon_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_text_distribution_taxon_id ON tbl_text_distribution USING btree (taxon_id);


--
-- TOC entry 6128 (class 1259 OID 21174)
-- Name: idx_fk_text_identification_keys_biblio_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_text_identification_keys_biblio_id ON tbl_text_identification_keys USING btree (biblio_id);


--
-- TOC entry 6129 (class 1259 OID 21175)
-- Name: idx_fk_text_identification_keys_taxon_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_fk_text_identification_keys_taxon_id ON tbl_text_identification_keys USING btree (taxon_id);


--
-- TOC entry 5677 (class 1259 OID 21176)
-- Name: idx_sead_rdb_schema; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_sead_rdb_schema ON tbl_clearinghouse_sead_rdb_schema USING btree (table_name, column_name);


--
-- TOC entry 5680 (class 1259 OID 21177)
-- Name: idx_tbl_clearinghouse_settings_group; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE INDEX idx_tbl_clearinghouse_settings_group ON tbl_clearinghouse_settings USING btree (setting_group);


--
-- TOC entry 5681 (class 1259 OID 21178)
-- Name: idx_tbl_clearinghouse_settings_key; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE UNIQUE INDEX idx_tbl_clearinghouse_settings_key ON tbl_clearinghouse_settings USING btree (setting_key);


--
-- TOC entry 5697 (class 1259 OID 21179)
-- Name: idx_tbl_clearinghouse_submission_tables_name1; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE UNIQUE INDEX idx_tbl_clearinghouse_submission_tables_name1 ON tbl_clearinghouse_submission_tables USING btree (table_name);


--
-- TOC entry 5698 (class 1259 OID 21180)
-- Name: idx_tbl_clearinghouse_submission_tables_name2; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE UNIQUE INDEX idx_tbl_clearinghouse_submission_tables_name2 ON tbl_clearinghouse_submission_tables USING btree (table_name_underscored);


--
-- TOC entry 5701 (class 1259 OID 21181)
-- Name: idx_tbl_submission_xml_content_columns_submission_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE UNIQUE INDEX idx_tbl_submission_xml_content_columns_submission_id ON tbl_clearinghouse_submission_xml_content_columns USING btree (submission_id, table_id, column_name);


--
-- TOC entry 5710 (class 1259 OID 21182)
-- Name: idx_tbl_submission_xml_content_record_values_column_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE UNIQUE INDEX idx_tbl_submission_xml_content_record_values_column_id ON tbl_clearinghouse_submission_xml_content_values USING btree (submission_id, table_id, local_db_id, column_id);


--
-- TOC entry 5704 (class 1259 OID 21183)
-- Name: idx_tbl_submission_xml_content_records_submission_id; Type: INDEX; Schema: clearing_house; Owner: -
--

CREATE UNIQUE INDEX idx_tbl_submission_xml_content_records_submission_id ON tbl_clearinghouse_submission_xml_content_records USING btree (submission_id, table_id, local_db_id);


SET search_path = metainformation, pg_catalog;

--
-- TOC entry 6465 (class 1259 OID 21184)
-- Name: physiscal_sample_id_index; Type: INDEX; Schema: metainformation; Owner: -
--

CREATE INDEX physiscal_sample_id_index ON tbl_denormalized_measured_values USING btree (physical_sample_id);


SET search_path = public, pg_catalog;

--
-- TOC entry 6368 (class 1259 OID 21185)
-- Name: idx_biblio_id; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX idx_biblio_id ON tbl_sample_group_references USING btree (biblio_id);


--
-- TOC entry 6369 (class 1259 OID 21186)
-- Name: idx_sample_group_id; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX idx_sample_group_id ON tbl_sample_group_references USING btree (sample_group_id);


--
-- TOC entry 6269 (class 1259 OID 21187)
-- Name: tbl_ecocode_groups_idx_ecocodesystemid; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX tbl_ecocode_groups_idx_ecocodesystemid ON tbl_ecocode_groups USING btree (ecocode_system_id);


--
-- TOC entry 6270 (class 1259 OID 21188)
-- Name: tbl_ecocode_groups_idx_label; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX tbl_ecocode_groups_idx_label ON tbl_ecocode_groups USING btree (label);


--
-- TOC entry 6273 (class 1259 OID 21189)
-- Name: tbl_ecocode_systems_biblioid; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX tbl_ecocode_systems_biblioid ON tbl_ecocode_systems USING btree (biblio_id);


--
-- TOC entry 6274 (class 1259 OID 21190)
-- Name: tbl_ecocode_systems_ecocodegroupid; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX tbl_ecocode_systems_ecocodegroupid ON tbl_ecocode_systems USING btree (name);


--
-- TOC entry 6295 (class 1259 OID 21191)
-- Name: tbl_languages_language_id; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX tbl_languages_language_id ON tbl_languages USING btree (language_id);


--
-- TOC entry 6212 (class 1259 OID 21192)
-- Name: tbl_taxa_tree_authors_name; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX tbl_taxa_tree_authors_name ON tbl_taxa_tree_authors USING btree (author_name);


--
-- TOC entry 6422 (class 1259 OID 21193)
-- Name: tbl_taxa_tree_families_name; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX tbl_taxa_tree_families_name ON tbl_taxa_tree_families USING btree (family_name);


--
-- TOC entry 6423 (class 1259 OID 21194)
-- Name: tbl_taxa_tree_families_order_id; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX tbl_taxa_tree_families_order_id ON tbl_taxa_tree_families USING btree (order_id);


--
-- TOC entry 6215 (class 1259 OID 21195)
-- Name: tbl_taxa_tree_genera_family_id; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX tbl_taxa_tree_genera_family_id ON tbl_taxa_tree_genera USING btree (family_id);


--
-- TOC entry 6216 (class 1259 OID 21196)
-- Name: tbl_taxa_tree_genera_name; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX tbl_taxa_tree_genera_name ON tbl_taxa_tree_genera USING btree (genus_name);


--
-- TOC entry 6426 (class 1259 OID 21197)
-- Name: tbl_taxa_tree_orders_order_id; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX tbl_taxa_tree_orders_order_id ON tbl_taxa_tree_orders USING btree (order_id);


--
-- TOC entry 6435 (class 1259 OID 21198)
-- Name: tbl_taxonomic_order_biblio_biblio_id; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX tbl_taxonomic_order_biblio_biblio_id ON tbl_taxonomic_order_biblio USING btree (biblio_id);


--
-- TOC entry 6436 (class 1259 OID 21199)
-- Name: tbl_taxonomic_order_biblio_taxonomic_order_biblio_id; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX tbl_taxonomic_order_biblio_taxonomic_order_biblio_id ON tbl_taxonomic_order_biblio USING btree (taxonomic_order_biblio_id);


--
-- TOC entry 6437 (class 1259 OID 21200)
-- Name: tbl_taxonomic_order_biblio_taxonomic_order_system_id; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX tbl_taxonomic_order_biblio_taxonomic_order_system_id ON tbl_taxonomic_order_biblio USING btree (taxonomic_order_system_id);


--
-- TOC entry 6440 (class 1259 OID 21201)
-- Name: tbl_taxonomic_order_systems_taxonomic_system_id; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX tbl_taxonomic_order_systems_taxonomic_system_id ON tbl_taxonomic_order_systems USING btree (taxonomic_order_system_id);


--
-- TOC entry 6429 (class 1259 OID 21202)
-- Name: tbl_taxonomic_order_taxon_id; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX tbl_taxonomic_order_taxon_id ON tbl_taxonomic_order USING btree (taxon_id);


--
-- TOC entry 6430 (class 1259 OID 21203)
-- Name: tbl_taxonomic_order_taxonomic_code; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX tbl_taxonomic_order_taxonomic_code ON tbl_taxonomic_order USING btree (taxonomic_code);


--
-- TOC entry 6431 (class 1259 OID 21204)
-- Name: tbl_taxonomic_order_taxonomic_order_id; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX tbl_taxonomic_order_taxonomic_order_id ON tbl_taxonomic_order USING btree (taxonomic_order_id);


--
-- TOC entry 6432 (class 1259 OID 21205)
-- Name: tbl_taxonomic_order_taxonomic_system_id; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX tbl_taxonomic_order_taxonomic_system_id ON tbl_taxonomic_order USING btree (taxonomic_order_system_id);


SET search_path = clearing_house, pg_catalog;

--
-- TOC entry 6484 (class 2606 OID 21206)
-- Name: tbl_clearinghouse_submission_reject_entities fk_tbl_clearinghouse_submission_reject_entities; Type: FK CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_submission_reject_entities
    ADD CONSTRAINT fk_tbl_clearinghouse_submission_reject_entities FOREIGN KEY (submission_reject_id) REFERENCES tbl_clearinghouse_submission_rejects(submission_reject_id) ON DELETE CASCADE;


--
-- TOC entry 6485 (class 2606 OID 21211)
-- Name: tbl_clearinghouse_submission_rejects fk_tbl_clearinghouse_submission_rejects_submission_id; Type: FK CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_submission_rejects
    ADD CONSTRAINT fk_tbl_clearinghouse_submission_rejects_submission_id FOREIGN KEY (submission_id) REFERENCES tbl_clearinghouse_submissions(submission_id) ON DELETE CASCADE;


--
-- TOC entry 6488 (class 2606 OID 21216)
-- Name: tbl_clearinghouse_submission_xml_content_tables fk_tbl_clearinghouse_submission_xml_content_tables; Type: FK CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_submission_xml_content_tables
    ADD CONSTRAINT fk_tbl_clearinghouse_submission_xml_content_tables FOREIGN KEY (table_id) REFERENCES tbl_clearinghouse_submission_tables(table_id) ON DELETE CASCADE;


--
-- TOC entry 6493 (class 2606 OID 21221)
-- Name: tbl_clearinghouse_users fk_tbl_data_provider_grades_grade_id; Type: FK CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_users
    ADD CONSTRAINT fk_tbl_data_provider_grades_grade_id FOREIGN KEY (data_provider_grade_id) REFERENCES tbl_clearinghouse_data_provider_grades(grade_id);


--
-- TOC entry 6486 (class 2606 OID 21226)
-- Name: tbl_clearinghouse_submission_xml_content_columns fk_tbl_submission_xml_content_columns_table_id; Type: FK CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_submission_xml_content_columns
    ADD CONSTRAINT fk_tbl_submission_xml_content_columns_table_id FOREIGN KEY (table_id) REFERENCES tbl_clearinghouse_submission_tables(table_id) ON DELETE CASCADE;


--
-- TOC entry 6489 (class 2606 OID 21231)
-- Name: tbl_clearinghouse_submission_xml_content_values fk_tbl_submission_xml_content_meta_record_values_table_id; Type: FK CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_submission_xml_content_values
    ADD CONSTRAINT fk_tbl_submission_xml_content_meta_record_values_table_id FOREIGN KEY (table_id) REFERENCES tbl_clearinghouse_submission_tables(table_id) ON DELETE CASCADE;


--
-- TOC entry 6487 (class 2606 OID 21236)
-- Name: tbl_clearinghouse_submission_xml_content_records fk_tbl_submission_xml_content_records_table_id; Type: FK CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_submission_xml_content_records
    ADD CONSTRAINT fk_tbl_submission_xml_content_records_table_id FOREIGN KEY (table_id) REFERENCES tbl_clearinghouse_submission_tables(table_id) ON DELETE CASCADE;


--
-- TOC entry 6491 (class 2606 OID 21241)
-- Name: tbl_clearinghouse_submissions fk_tbl_submissions_state_id_state_id; Type: FK CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_submissions
    ADD CONSTRAINT fk_tbl_submissions_state_id_state_id FOREIGN KEY (submission_state_id) REFERENCES tbl_clearinghouse_submission_states(submission_state_id);


--
-- TOC entry 6490 (class 2606 OID 21246)
-- Name: tbl_clearinghouse_submissions fk_tbl_submissions_user_id_user_id; Type: FK CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_submissions
    ADD CONSTRAINT fk_tbl_submissions_user_id_user_id FOREIGN KEY (claim_user_id) REFERENCES tbl_clearinghouse_users(user_id);


--
-- TOC entry 6492 (class 2606 OID 21251)
-- Name: tbl_clearinghouse_users fk_tbl_user_roles_role_id; Type: FK CONSTRAINT; Schema: clearing_house; Owner: -
--

ALTER TABLE ONLY tbl_clearinghouse_users
    ADD CONSTRAINT fk_tbl_user_roles_role_id FOREIGN KEY (role_id) REFERENCES tbl_clearinghouse_user_roles(role_id);


SET search_path = public, pg_catalog;

--
-- TOC entry 6494 (class 2606 OID 21256)
-- Name: tbl_abundance_elements fk_abundance_elements_record_type_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_abundance_elements
    ADD CONSTRAINT fk_abundance_elements_record_type_id FOREIGN KEY (record_type_id) REFERENCES tbl_record_types(record_type_id) ON UPDATE CASCADE;


--
-- TOC entry 6496 (class 2606 OID 21261)
-- Name: tbl_abundance_ident_levels fk_abundance_ident_levels_abundance_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_abundance_ident_levels
    ADD CONSTRAINT fk_abundance_ident_levels_abundance_id FOREIGN KEY (abundance_id) REFERENCES tbl_abundances(abundance_id);


--
-- TOC entry 6495 (class 2606 OID 21266)
-- Name: tbl_abundance_ident_levels fk_abundance_ident_levels_identification_level_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_abundance_ident_levels
    ADD CONSTRAINT fk_abundance_ident_levels_identification_level_id FOREIGN KEY (identification_level_id) REFERENCES tbl_identification_levels(identification_level_id) ON UPDATE CASCADE;


--
-- TOC entry 6498 (class 2606 OID 21271)
-- Name: tbl_abundance_modifications fk_abundance_modifications_abundance_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_abundance_modifications
    ADD CONSTRAINT fk_abundance_modifications_abundance_id FOREIGN KEY (abundance_id) REFERENCES tbl_abundances(abundance_id) ON UPDATE CASCADE;


--
-- TOC entry 6497 (class 2606 OID 21276)
-- Name: tbl_abundance_modifications fk_abundance_modifications_modification_type_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_abundance_modifications
    ADD CONSTRAINT fk_abundance_modifications_modification_type_id FOREIGN KEY (modification_type_id) REFERENCES tbl_modification_types(modification_type_id) ON UPDATE CASCADE;


--
-- TOC entry 6501 (class 2606 OID 21281)
-- Name: tbl_abundances fk_abundances_abundance_elements_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_abundances
    ADD CONSTRAINT fk_abundances_abundance_elements_id FOREIGN KEY (abundance_element_id) REFERENCES tbl_abundance_elements(abundance_element_id) ON UPDATE CASCADE;


--
-- TOC entry 6500 (class 2606 OID 21286)
-- Name: tbl_abundances fk_abundances_analysis_entity_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_abundances
    ADD CONSTRAINT fk_abundances_analysis_entity_id FOREIGN KEY (analysis_entity_id) REFERENCES tbl_analysis_entities(analysis_entity_id) ON UPDATE CASCADE;


--
-- TOC entry 6499 (class 2606 OID 21291)
-- Name: tbl_abundances fk_abundances_taxon_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_abundances
    ADD CONSTRAINT fk_abundances_taxon_id FOREIGN KEY (taxon_id) REFERENCES tbl_taxa_tree_master(taxon_id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 6507 (class 2606 OID 21296)
-- Name: tbl_aggregate_samples fk_aggragate_samples_analysis_entity_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_aggregate_samples
    ADD CONSTRAINT fk_aggragate_samples_analysis_entity_id FOREIGN KEY (analysis_entity_id) REFERENCES tbl_analysis_entities(analysis_entity_id) ON UPDATE CASCADE;


--
-- TOC entry 6503 (class 2606 OID 21301)
-- Name: tbl_aggregate_datasets fk_aggregate_datasets_aggregate_order_type_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_aggregate_datasets
    ADD CONSTRAINT fk_aggregate_datasets_aggregate_order_type_id FOREIGN KEY (aggregate_order_type_id) REFERENCES tbl_aggregate_order_types(aggregate_order_type_id) ON UPDATE CASCADE;


--
-- TOC entry 6502 (class 2606 OID 21306)
-- Name: tbl_aggregate_datasets fk_aggregate_datasets_biblio_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_aggregate_datasets
    ADD CONSTRAINT fk_aggregate_datasets_biblio_id FOREIGN KEY (biblio_id) REFERENCES tbl_biblio(biblio_id) ON UPDATE CASCADE;


--
-- TOC entry 6505 (class 2606 OID 21311)
-- Name: tbl_aggregate_sample_ages fk_aggregate_sample_ages_aggregate_dataset_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_aggregate_sample_ages
    ADD CONSTRAINT fk_aggregate_sample_ages_aggregate_dataset_id FOREIGN KEY (aggregate_dataset_id) REFERENCES tbl_aggregate_datasets(aggregate_dataset_id) ON UPDATE CASCADE;


--
-- TOC entry 6504 (class 2606 OID 21316)
-- Name: tbl_aggregate_sample_ages fk_aggregate_sample_ages_analysis_entity_age_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_aggregate_sample_ages
    ADD CONSTRAINT fk_aggregate_sample_ages_analysis_entity_age_id FOREIGN KEY (analysis_entity_age_id) REFERENCES tbl_analysis_entity_ages(analysis_entity_age_id) ON UPDATE CASCADE;


--
-- TOC entry 6506 (class 2606 OID 21321)
-- Name: tbl_aggregate_samples fk_aggregate_samples_aggregate_dataset_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_aggregate_samples
    ADD CONSTRAINT fk_aggregate_samples_aggregate_dataset_id FOREIGN KEY (aggregate_dataset_id) REFERENCES tbl_aggregate_datasets(aggregate_dataset_id) ON UPDATE CASCADE;


--
-- TOC entry 6509 (class 2606 OID 21326)
-- Name: tbl_analysis_entities fk_analysis_entities_dataset_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_analysis_entities
    ADD CONSTRAINT fk_analysis_entities_dataset_id FOREIGN KEY (dataset_id) REFERENCES tbl_datasets(dataset_id) ON UPDATE CASCADE;


--
-- TOC entry 6508 (class 2606 OID 21331)
-- Name: tbl_analysis_entities fk_analysis_entities_physical_sample_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_analysis_entities
    ADD CONSTRAINT fk_analysis_entities_physical_sample_id FOREIGN KEY (physical_sample_id) REFERENCES tbl_physical_samples(physical_sample_id);


--
-- TOC entry 6511 (class 2606 OID 21336)
-- Name: tbl_analysis_entity_ages fk_analysis_entity_ages_analysis_entity_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_analysis_entity_ages
    ADD CONSTRAINT fk_analysis_entity_ages_analysis_entity_id FOREIGN KEY (analysis_entity_id) REFERENCES tbl_analysis_entities(analysis_entity_id) ON UPDATE CASCADE;


--
-- TOC entry 6510 (class 2606 OID 21341)
-- Name: tbl_analysis_entity_ages fk_analysis_entity_ages_chronology_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_analysis_entity_ages
    ADD CONSTRAINT fk_analysis_entity_ages_chronology_id FOREIGN KEY (chronology_id) REFERENCES tbl_chronologies(chronology_id) ON UPDATE CASCADE;


--
-- TOC entry 6513 (class 2606 OID 21346)
-- Name: tbl_analysis_entity_dimensions fk_analysis_entity_dimensions_analysis_entity_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_analysis_entity_dimensions
    ADD CONSTRAINT fk_analysis_entity_dimensions_analysis_entity_id FOREIGN KEY (analysis_entity_id) REFERENCES tbl_analysis_entities(analysis_entity_id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 6512 (class 2606 OID 21351)
-- Name: tbl_analysis_entity_dimensions fk_analysis_entity_dimensions_dimension_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_analysis_entity_dimensions
    ADD CONSTRAINT fk_analysis_entity_dimensions_dimension_id FOREIGN KEY (dimension_id) REFERENCES tbl_dimensions(dimension_id) ON UPDATE CASCADE;


--
-- TOC entry 6515 (class 2606 OID 21356)
-- Name: tbl_analysis_entity_prep_methods fk_analysis_entity_prep_methods_analysis_entity_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_analysis_entity_prep_methods
    ADD CONSTRAINT fk_analysis_entity_prep_methods_analysis_entity_id FOREIGN KEY (analysis_entity_id) REFERENCES tbl_analysis_entities(analysis_entity_id);


--
-- TOC entry 6514 (class 2606 OID 21361)
-- Name: tbl_analysis_entity_prep_methods fk_analysis_entity_prep_methods_method_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_analysis_entity_prep_methods
    ADD CONSTRAINT fk_analysis_entity_prep_methods_method_id FOREIGN KEY (method_id) REFERENCES tbl_methods(method_id);


--
-- TOC entry 6518 (class 2606 OID 21366)
-- Name: tbl_biblio fk_biblio_collections_or_journals_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_biblio
    ADD CONSTRAINT fk_biblio_collections_or_journals_id FOREIGN KEY (collection_or_journal_id) REFERENCES tbl_collections_or_journals(collection_or_journal_id) ON UPDATE CASCADE;


--
-- TOC entry 6520 (class 2606 OID 21371)
-- Name: tbl_biblio_keywords fk_biblio_keywords_biblio_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_biblio_keywords
    ADD CONSTRAINT fk_biblio_keywords_biblio_id FOREIGN KEY (biblio_id) REFERENCES tbl_biblio(biblio_id) ON UPDATE CASCADE;


--
-- TOC entry 6519 (class 2606 OID 21376)
-- Name: tbl_biblio_keywords fk_biblio_keywords_keyword_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_biblio_keywords
    ADD CONSTRAINT fk_biblio_keywords_keyword_id FOREIGN KEY (keyword_id) REFERENCES tbl_keywords(keyword_id) ON UPDATE CASCADE;


--
-- TOC entry 6517 (class 2606 OID 21381)
-- Name: tbl_biblio fk_biblio_publication_type_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_biblio
    ADD CONSTRAINT fk_biblio_publication_type_id FOREIGN KEY (publication_type_id) REFERENCES tbl_publication_types(publication_type_id) ON UPDATE CASCADE;


--
-- TOC entry 6516 (class 2606 OID 21386)
-- Name: tbl_biblio fk_biblio_publisher_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_biblio
    ADD CONSTRAINT fk_biblio_publisher_id FOREIGN KEY (publisher_id) REFERENCES tbl_publishers(publisher_id) ON UPDATE CASCADE;


--
-- TOC entry 6521 (class 2606 OID 21391)
-- Name: tbl_bugs_abundance_codes fk_bugs_abundance_codes_abundance_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_bugs_abundance_codes
    ADD CONSTRAINT fk_bugs_abundance_codes_abundance_id FOREIGN KEY (abundance_id) REFERENCES tbl_abundances(abundance_id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 6522 (class 2606 OID 21396)
-- Name: tbl_bugs_biblio fk_bugs_biblio_biblio_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_bugs_biblio
    ADD CONSTRAINT fk_bugs_biblio_biblio_id FOREIGN KEY (biblio_id) REFERENCES tbl_biblio(biblio_id);


--
-- TOC entry 6523 (class 2606 OID 21401)
-- Name: tbl_bugs_dates_calendar fk_bugs_dates_calendar_relative_dates_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_bugs_dates_calendar
    ADD CONSTRAINT fk_bugs_dates_calendar_relative_dates_id FOREIGN KEY (relative_date_id) REFERENCES tbl_relative_dates(relative_date_id);


--
-- TOC entry 6524 (class 2606 OID 21406)
-- Name: tbl_bugs_dates_period fk_bugs_dates_period_relative_date_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_bugs_dates_period
    ADD CONSTRAINT fk_bugs_dates_period_relative_date_id FOREIGN KEY (relative_date_id) REFERENCES tbl_relative_dates(relative_date_id);


--
-- TOC entry 6525 (class 2606 OID 21411)
-- Name: tbl_bugs_dates_radio fk_bugs_dates_radio_geochron_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_bugs_dates_radio
    ADD CONSTRAINT fk_bugs_dates_radio_geochron_id FOREIGN KEY (geochron_id) REFERENCES tbl_geochronology(geochron_id);


--
-- TOC entry 6526 (class 2606 OID 21416)
-- Name: tbl_bugs_datesmethods fk_bugs_datesmethods_method_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_bugs_datesmethods
    ADD CONSTRAINT fk_bugs_datesmethods_method_id FOREIGN KEY (method_id) REFERENCES tbl_methods(method_id);


--
-- TOC entry 6527 (class 2606 OID 21421)
-- Name: tbl_bugs_periods fk_bugs_periods_relative_ages_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_bugs_periods
    ADD CONSTRAINT fk_bugs_periods_relative_ages_id FOREIGN KEY (relative_age_id) REFERENCES tbl_relative_ages(relative_age_id);


--
-- TOC entry 6528 (class 2606 OID 21426)
-- Name: tbl_bugs_physical_samples fk_bugs_physical_samples_physical_sample_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_bugs_physical_samples
    ADD CONSTRAINT fk_bugs_physical_samples_physical_sample_id FOREIGN KEY (physical_sample_id) REFERENCES tbl_physical_samples(physical_sample_id) ON UPDATE CASCADE;


--
-- TOC entry 6529 (class 2606 OID 21431)
-- Name: tbl_bugs_sample_groups fk_bugs_sample_groups_sample_group_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_bugs_sample_groups
    ADD CONSTRAINT fk_bugs_sample_groups_sample_group_id FOREIGN KEY (sample_group_id) REFERENCES tbl_sample_groups(sample_group_id) ON UPDATE CASCADE;


--
-- TOC entry 6530 (class 2606 OID 21436)
-- Name: tbl_bugs_sites fk_bugs_sites_site_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_bugs_sites
    ADD CONSTRAINT fk_bugs_sites_site_id FOREIGN KEY (site_id) REFERENCES tbl_sites(site_id) ON UPDATE CASCADE;


--
-- TOC entry 6532 (class 2606 OID 21441)
-- Name: tbl_ceramics fk_ceramics_analysis_entity_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_ceramics
    ADD CONSTRAINT fk_ceramics_analysis_entity_id FOREIGN KEY (analysis_entity_id) REFERENCES tbl_analysis_entities(analysis_entity_id);


--
-- TOC entry 6531 (class 2606 OID 21446)
-- Name: tbl_ceramics fk_ceramics_ceramics_measurement_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_ceramics
    ADD CONSTRAINT fk_ceramics_ceramics_measurement_id FOREIGN KEY (ceramics_measurement_id) REFERENCES tbl_ceramics_measurements(ceramics_measurement_id);


--
-- TOC entry 6533 (class 2606 OID 21451)
-- Name: tbl_ceramics_measurement_lookup fk_ceramics_measurement_lookup_ceramics_measurements_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_ceramics_measurement_lookup
    ADD CONSTRAINT fk_ceramics_measurement_lookup_ceramics_measurements_id FOREIGN KEY (ceramics_measurement_id) REFERENCES tbl_ceramics_measurements(ceramics_measurement_id);


--
-- TOC entry 6534 (class 2606 OID 21456)
-- Name: tbl_ceramics_measurements fk_ceramics_measurements_method_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_ceramics_measurements
    ADD CONSTRAINT fk_ceramics_measurements_method_id FOREIGN KEY (method_id) REFERENCES tbl_methods(method_id);


--
-- TOC entry 6536 (class 2606 OID 21461)
-- Name: tbl_chron_controls fk_chron_controls_chron_control_type_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_chron_controls
    ADD CONSTRAINT fk_chron_controls_chron_control_type_id FOREIGN KEY (chron_control_type_id) REFERENCES tbl_chron_control_types(chron_control_type_id) ON UPDATE CASCADE;


--
-- TOC entry 6535 (class 2606 OID 21466)
-- Name: tbl_chron_controls fk_chron_controls_chronology_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_chron_controls
    ADD CONSTRAINT fk_chron_controls_chronology_id FOREIGN KEY (chronology_id) REFERENCES tbl_chronologies(chronology_id) ON UPDATE CASCADE;


--
-- TOC entry 6538 (class 2606 OID 21471)
-- Name: tbl_chronologies fk_chronologies_contact_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_chronologies
    ADD CONSTRAINT fk_chronologies_contact_id FOREIGN KEY (contact_id) REFERENCES tbl_contacts(contact_id) ON UPDATE CASCADE;


--
-- TOC entry 6537 (class 2606 OID 21476)
-- Name: tbl_chronologies fk_chronologies_sample_group_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_chronologies
    ADD CONSTRAINT fk_chronologies_sample_group_id FOREIGN KEY (sample_group_id) REFERENCES tbl_sample_groups(sample_group_id) ON UPDATE CASCADE;


--
-- TOC entry 6560 (class 2606 OID 21481)
-- Name: tbl_collections_or_journals fk_collections_or_journals_publisher_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_collections_or_journals
    ADD CONSTRAINT fk_collections_or_journals_publisher_id FOREIGN KEY (publisher_id) REFERENCES tbl_publishers(publisher_id) ON UPDATE CASCADE;


--
-- TOC entry 6561 (class 2606 OID 21486)
-- Name: tbl_colours fk_colours_method_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_colours
    ADD CONSTRAINT fk_colours_method_id FOREIGN KEY (method_id) REFERENCES tbl_methods(method_id) ON UPDATE CASCADE;


--
-- TOC entry 6563 (class 2606 OID 21491)
-- Name: tbl_coordinate_method_dimensions fk_coordinate_method_dimensions_dimensions_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_coordinate_method_dimensions
    ADD CONSTRAINT fk_coordinate_method_dimensions_dimensions_id FOREIGN KEY (dimension_id) REFERENCES tbl_dimensions(dimension_id) ON UPDATE CASCADE;


--
-- TOC entry 6562 (class 2606 OID 21496)
-- Name: tbl_coordinate_method_dimensions fk_coordinate_method_dimensions_method_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_coordinate_method_dimensions
    ADD CONSTRAINT fk_coordinate_method_dimensions_method_id FOREIGN KEY (method_id) REFERENCES tbl_methods(method_id) ON UPDATE CASCADE;


--
-- TOC entry 6564 (class 2606 OID 21501)
-- Name: tbl_data_types fk_data_types_data_type_group_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_data_types
    ADD CONSTRAINT fk_data_types_data_type_group_id FOREIGN KEY (data_type_group_id) REFERENCES tbl_data_type_groups(data_type_group_id) ON UPDATE CASCADE;


--
-- TOC entry 6567 (class 2606 OID 21506)
-- Name: tbl_dataset_contacts fk_dataset_contacts_contact_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dataset_contacts
    ADD CONSTRAINT fk_dataset_contacts_contact_id FOREIGN KEY (contact_id) REFERENCES tbl_contacts(contact_id) ON UPDATE CASCADE;


--
-- TOC entry 6566 (class 2606 OID 21511)
-- Name: tbl_dataset_contacts fk_dataset_contacts_contact_type_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dataset_contacts
    ADD CONSTRAINT fk_dataset_contacts_contact_type_id FOREIGN KEY (contact_type_id) REFERENCES tbl_contact_types(contact_type_id) ON UPDATE CASCADE;


--
-- TOC entry 6565 (class 2606 OID 21516)
-- Name: tbl_dataset_contacts fk_dataset_contacts_dataset_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dataset_contacts
    ADD CONSTRAINT fk_dataset_contacts_dataset_id FOREIGN KEY (dataset_id) REFERENCES tbl_datasets(dataset_id) ON UPDATE CASCADE;


--
-- TOC entry 6569 (class 2606 OID 21521)
-- Name: tbl_dataset_masters fk_dataset_masters_biblio_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dataset_masters
    ADD CONSTRAINT fk_dataset_masters_biblio_id FOREIGN KEY (biblio_id) REFERENCES tbl_biblio(biblio_id);


--
-- TOC entry 6568 (class 2606 OID 21526)
-- Name: tbl_dataset_masters fk_dataset_masters_contact_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dataset_masters
    ADD CONSTRAINT fk_dataset_masters_contact_id FOREIGN KEY (contact_id) REFERENCES tbl_contacts(contact_id) ON UPDATE CASCADE;


--
-- TOC entry 6572 (class 2606 OID 21531)
-- Name: tbl_dataset_submissions fk_dataset_submission_submission_type_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dataset_submissions
    ADD CONSTRAINT fk_dataset_submission_submission_type_id FOREIGN KEY (submission_type_id) REFERENCES tbl_dataset_submission_types(submission_type_id) ON UPDATE CASCADE;


--
-- TOC entry 6571 (class 2606 OID 21536)
-- Name: tbl_dataset_submissions fk_dataset_submissions_contact_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dataset_submissions
    ADD CONSTRAINT fk_dataset_submissions_contact_id FOREIGN KEY (contact_id) REFERENCES tbl_contacts(contact_id) ON UPDATE CASCADE;


--
-- TOC entry 6570 (class 2606 OID 21541)
-- Name: tbl_dataset_submissions fk_dataset_submissions_dataset_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dataset_submissions
    ADD CONSTRAINT fk_dataset_submissions_dataset_id FOREIGN KEY (dataset_id) REFERENCES tbl_datasets(dataset_id) ON UPDATE CASCADE;


--
-- TOC entry 6544 (class 2606 OID 21546)
-- Name: tbl_datasets fk_datasets_biblio_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_datasets
    ADD CONSTRAINT fk_datasets_biblio_id FOREIGN KEY (biblio_id) REFERENCES tbl_biblio(biblio_id) ON UPDATE CASCADE;


--
-- TOC entry 6543 (class 2606 OID 21551)
-- Name: tbl_datasets fk_datasets_data_type_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_datasets
    ADD CONSTRAINT fk_datasets_data_type_id FOREIGN KEY (data_type_id) REFERENCES tbl_data_types(data_type_id) ON UPDATE CASCADE;


--
-- TOC entry 6542 (class 2606 OID 21556)
-- Name: tbl_datasets fk_datasets_master_set_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_datasets
    ADD CONSTRAINT fk_datasets_master_set_id FOREIGN KEY (master_set_id) REFERENCES tbl_dataset_masters(master_set_id) ON UPDATE CASCADE;


--
-- TOC entry 6541 (class 2606 OID 21561)
-- Name: tbl_datasets fk_datasets_method_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_datasets
    ADD CONSTRAINT fk_datasets_method_id FOREIGN KEY (method_id) REFERENCES tbl_methods(method_id) ON UPDATE CASCADE;


--
-- TOC entry 6540 (class 2606 OID 21566)
-- Name: tbl_datasets fk_datasets_project_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_datasets
    ADD CONSTRAINT fk_datasets_project_id FOREIGN KEY (project_id) REFERENCES tbl_projects(project_id);


--
-- TOC entry 6539 (class 2606 OID 21571)
-- Name: tbl_datasets fk_datasets_updated_dataset_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_datasets
    ADD CONSTRAINT fk_datasets_updated_dataset_id FOREIGN KEY (updated_dataset_id) REFERENCES tbl_datasets(dataset_id) ON UPDATE CASCADE;


--
-- TOC entry 6573 (class 2606 OID 21576)
-- Name: tbl_dating_labs fk_dating_labs_contact_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dating_labs
    ADD CONSTRAINT fk_dating_labs_contact_id FOREIGN KEY (contact_id) REFERENCES tbl_contacts(contact_id);


--
-- TOC entry 6576 (class 2606 OID 21581)
-- Name: tbl_dating_material fk_dating_material_abundance_elements_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dating_material
    ADD CONSTRAINT fk_dating_material_abundance_elements_id FOREIGN KEY (abundance_element_id) REFERENCES tbl_abundance_elements(abundance_element_id);


--
-- TOC entry 6575 (class 2606 OID 21586)
-- Name: tbl_dating_material fk_dating_material_geochronology_geochron_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dating_material
    ADD CONSTRAINT fk_dating_material_geochronology_geochron_id FOREIGN KEY (geochron_id) REFERENCES tbl_geochronology(geochron_id);


--
-- TOC entry 6574 (class 2606 OID 21591)
-- Name: tbl_dating_material fk_dating_material_taxa_tree_master_taxon_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dating_material
    ADD CONSTRAINT fk_dating_material_taxa_tree_master_taxon_id FOREIGN KEY (taxon_id) REFERENCES tbl_taxa_tree_master(taxon_id);


--
-- TOC entry 6578 (class 2606 OID 21596)
-- Name: tbl_dendro fk_dendro_analysis_entity_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dendro
    ADD CONSTRAINT fk_dendro_analysis_entity_id FOREIGN KEY (analysis_entity_id) REFERENCES tbl_analysis_entities(analysis_entity_id);


--
-- TOC entry 6579 (class 2606 OID 21601)
-- Name: tbl_dendro_date_notes fk_dendro_date_notes_dendro_date_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dendro_date_notes
    ADD CONSTRAINT fk_dendro_date_notes_dendro_date_id FOREIGN KEY (dendro_date_id) REFERENCES tbl_dendro_dates(dendro_date_id);


--
-- TOC entry 6582 (class 2606 OID 21606)
-- Name: tbl_dendro_dates fk_dendro_dates_analysis_entity_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dendro_dates
    ADD CONSTRAINT fk_dendro_dates_analysis_entity_id FOREIGN KEY (analysis_entity_id) REFERENCES tbl_analysis_entities(analysis_entity_id);


--
-- TOC entry 6581 (class 2606 OID 21611)
-- Name: tbl_dendro_dates fk_dendro_dates_dating_uncertainty_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dendro_dates
    ADD CONSTRAINT fk_dendro_dates_dating_uncertainty_id FOREIGN KEY (dating_uncertainty_id) REFERENCES tbl_dating_uncertainty(dating_uncertainty_id);


--
-- TOC entry 6580 (class 2606 OID 21616)
-- Name: tbl_dendro_dates fk_dendro_dates_years_type_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dendro_dates
    ADD CONSTRAINT fk_dendro_dates_years_type_id FOREIGN KEY (years_type_id) REFERENCES tbl_years_types(years_type_id);


--
-- TOC entry 6577 (class 2606 OID 21621)
-- Name: tbl_dendro fk_dendro_dendro_measurement_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dendro
    ADD CONSTRAINT fk_dendro_dendro_measurement_id FOREIGN KEY (dendro_measurement_id) REFERENCES tbl_dendro_measurements(dendro_measurement_id);


--
-- TOC entry 6583 (class 2606 OID 21626)
-- Name: tbl_dendro_measurement_lookup fk_dendro_measurement_lookup_dendro_measurement_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dendro_measurement_lookup
    ADD CONSTRAINT fk_dendro_measurement_lookup_dendro_measurement_id FOREIGN KEY (dendro_measurement_id) REFERENCES tbl_dendro_measurements(dendro_measurement_id);


--
-- TOC entry 6584 (class 2606 OID 21631)
-- Name: tbl_dendro_measurements fk_dendro_measurements_method_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dendro_measurements
    ADD CONSTRAINT fk_dendro_measurements_method_id FOREIGN KEY (method_id) REFERENCES tbl_methods(method_id);


--
-- TOC entry 6552 (class 2606 OID 21636)
-- Name: tbl_dimensions fk_dimensions_method_group_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dimensions
    ADD CONSTRAINT fk_dimensions_method_group_id FOREIGN KEY (method_group_id) REFERENCES tbl_method_groups(method_group_id);


--
-- TOC entry 6551 (class 2606 OID 21641)
-- Name: tbl_dimensions fk_dimensions_unit_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_dimensions
    ADD CONSTRAINT fk_dimensions_unit_id FOREIGN KEY (unit_id) REFERENCES tbl_units(unit_id) ON UPDATE CASCADE;


--
-- TOC entry 6585 (class 2606 OID 21646)
-- Name: tbl_ecocode_definitions fk_ecocode_definitions_ecocode_group_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_ecocode_definitions
    ADD CONSTRAINT fk_ecocode_definitions_ecocode_group_id FOREIGN KEY (ecocode_group_id) REFERENCES tbl_ecocode_groups(ecocode_group_id) ON UPDATE CASCADE;


--
-- TOC entry 6586 (class 2606 OID 21651)
-- Name: tbl_ecocode_groups fk_ecocode_groups_ecocode_system_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_ecocode_groups
    ADD CONSTRAINT fk_ecocode_groups_ecocode_system_id FOREIGN KEY (ecocode_system_id) REFERENCES tbl_ecocode_systems(ecocode_system_id) ON UPDATE CASCADE;


--
-- TOC entry 6587 (class 2606 OID 21656)
-- Name: tbl_ecocode_systems fk_ecocode_systems_biblio_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_ecocode_systems
    ADD CONSTRAINT fk_ecocode_systems_biblio_id FOREIGN KEY (biblio_id) REFERENCES tbl_biblio(biblio_id) ON UPDATE CASCADE;


--
-- TOC entry 6589 (class 2606 OID 21661)
-- Name: tbl_ecocodes fk_ecocodes_ecocodedef_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_ecocodes
    ADD CONSTRAINT fk_ecocodes_ecocodedef_id FOREIGN KEY (ecocode_definition_id) REFERENCES tbl_ecocode_definitions(ecocode_definition_id) ON UPDATE CASCADE;


--
-- TOC entry 6588 (class 2606 OID 21666)
-- Name: tbl_ecocodes fk_ecocodes_taxon_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_ecocodes
    ADD CONSTRAINT fk_ecocodes_taxon_id FOREIGN KEY (taxon_id) REFERENCES tbl_taxa_tree_master(taxon_id) ON UPDATE CASCADE;


--
-- TOC entry 6590 (class 2606 OID 21671)
-- Name: tbl_features fk_feature_type_id_feature_type_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_features
    ADD CONSTRAINT fk_feature_type_id_feature_type_id FOREIGN KEY (feature_type_id) REFERENCES tbl_feature_types(feature_type_id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 6592 (class 2606 OID 21676)
-- Name: tbl_geochron_refs fk_geochron_refs_biblio_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_geochron_refs
    ADD CONSTRAINT fk_geochron_refs_biblio_id FOREIGN KEY (biblio_id) REFERENCES tbl_biblio(biblio_id) ON UPDATE CASCADE;


--
-- TOC entry 6591 (class 2606 OID 21681)
-- Name: tbl_geochron_refs fk_geochron_refs_geochron_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_geochron_refs
    ADD CONSTRAINT fk_geochron_refs_geochron_id FOREIGN KEY (geochron_id) REFERENCES tbl_geochronology(geochron_id) ON UPDATE CASCADE;


--
-- TOC entry 6595 (class 2606 OID 21686)
-- Name: tbl_geochronology fk_geochronology_analysis_entity_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_geochronology
    ADD CONSTRAINT fk_geochronology_analysis_entity_id FOREIGN KEY (analysis_entity_id) REFERENCES tbl_analysis_entities(analysis_entity_id) ON UPDATE CASCADE;


--
-- TOC entry 6594 (class 2606 OID 21691)
-- Name: tbl_geochronology fk_geochronology_dating_labs_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_geochronology
    ADD CONSTRAINT fk_geochronology_dating_labs_id FOREIGN KEY (dating_lab_id) REFERENCES tbl_dating_labs(dating_lab_id) ON UPDATE CASCADE;


--
-- TOC entry 6593 (class 2606 OID 21696)
-- Name: tbl_geochronology fk_geochronology_dating_uncertainty_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_geochronology
    ADD CONSTRAINT fk_geochronology_dating_uncertainty_id FOREIGN KEY (dating_uncertainty_id) REFERENCES tbl_dating_uncertainty(dating_uncertainty_id);


--
-- TOC entry 6596 (class 2606 OID 21701)
-- Name: tbl_horizons fk_horizons_method_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_horizons
    ADD CONSTRAINT fk_horizons_method_id FOREIGN KEY (method_id) REFERENCES tbl_methods(method_id) ON UPDATE CASCADE;


--
-- TOC entry 6597 (class 2606 OID 21706)
-- Name: tbl_imported_taxa_replacements fk_imported_taxa_replacements_taxon_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_imported_taxa_replacements
    ADD CONSTRAINT fk_imported_taxa_replacements_taxon_id FOREIGN KEY (taxon_id) REFERENCES tbl_taxa_tree_master(taxon_id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 6598 (class 2606 OID 21711)
-- Name: tbl_lithology fk_lithology_sample_group_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_lithology
    ADD CONSTRAINT fk_lithology_sample_group_id FOREIGN KEY (sample_group_id) REFERENCES tbl_sample_groups(sample_group_id) ON UPDATE CASCADE;


--
-- TOC entry 6664 (class 2606 OID 21716)
-- Name: tbl_site_locations fk_locations_location_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_site_locations
    ADD CONSTRAINT fk_locations_location_id FOREIGN KEY (location_id) REFERENCES tbl_locations(location_id);


--
-- TOC entry 6599 (class 2606 OID 21721)
-- Name: tbl_locations fk_locations_location_type_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_locations
    ADD CONSTRAINT fk_locations_location_type_id FOREIGN KEY (location_type_id) REFERENCES tbl_location_types(location_type_id) ON UPDATE CASCADE;


--
-- TOC entry 6663 (class 2606 OID 21726)
-- Name: tbl_site_locations fk_locations_site_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_site_locations
    ADD CONSTRAINT fk_locations_site_id FOREIGN KEY (site_id) REFERENCES tbl_sites(site_id);


--
-- TOC entry 6600 (class 2606 OID 21731)
-- Name: tbl_mcr_names fk_mcr_names_taxon_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_mcr_names
    ADD CONSTRAINT fk_mcr_names_taxon_id FOREIGN KEY (taxon_id) REFERENCES tbl_taxa_tree_master(taxon_id) ON UPDATE CASCADE;


--
-- TOC entry 6601 (class 2606 OID 21736)
-- Name: tbl_mcr_summary_data fk_mcr_summary_data_taxon_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_mcr_summary_data
    ADD CONSTRAINT fk_mcr_summary_data_taxon_id FOREIGN KEY (taxon_id) REFERENCES tbl_taxa_tree_master(taxon_id) ON UPDATE CASCADE;


--
-- TOC entry 6602 (class 2606 OID 21741)
-- Name: tbl_mcrdata_birmbeetledat fk_mcrdata_birmbeetledat_taxon_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_mcrdata_birmbeetledat
    ADD CONSTRAINT fk_mcrdata_birmbeetledat_taxon_id FOREIGN KEY (taxon_id) REFERENCES tbl_taxa_tree_master(taxon_id) ON UPDATE CASCADE;


--
-- TOC entry 6554 (class 2606 OID 21746)
-- Name: tbl_measured_value_dimensions fk_measured_value_dimensions_dimension_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_measured_value_dimensions
    ADD CONSTRAINT fk_measured_value_dimensions_dimension_id FOREIGN KEY (dimension_id) REFERENCES tbl_dimensions(dimension_id) ON UPDATE CASCADE;


--
-- TOC entry 6555 (class 2606 OID 21751)
-- Name: tbl_measured_values fk_measured_values_analysis_entity_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_measured_values
    ADD CONSTRAINT fk_measured_values_analysis_entity_id FOREIGN KEY (analysis_entity_id) REFERENCES tbl_analysis_entities(analysis_entity_id);


--
-- TOC entry 6553 (class 2606 OID 21756)
-- Name: tbl_measured_value_dimensions fk_measured_weights_value_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_measured_value_dimensions
    ADD CONSTRAINT fk_measured_weights_value_id FOREIGN KEY (measured_value_id) REFERENCES tbl_measured_values(measured_value_id) ON UPDATE CASCADE;


--
-- TOC entry 6559 (class 2606 OID 21761)
-- Name: tbl_methods fk_methods_biblio_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_methods
    ADD CONSTRAINT fk_methods_biblio_id FOREIGN KEY (biblio_id) REFERENCES tbl_biblio(biblio_id) ON UPDATE CASCADE;


--
-- TOC entry 6558 (class 2606 OID 21766)
-- Name: tbl_methods fk_methods_method_group_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_methods
    ADD CONSTRAINT fk_methods_method_group_id FOREIGN KEY (method_group_id) REFERENCES tbl_method_groups(method_group_id) ON UPDATE CASCADE;


--
-- TOC entry 6557 (class 2606 OID 21771)
-- Name: tbl_methods fk_methods_record_type_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_methods
    ADD CONSTRAINT fk_methods_record_type_id FOREIGN KEY (record_type_id) REFERENCES tbl_record_types(record_type_id) ON UPDATE CASCADE;


--
-- TOC entry 6556 (class 2606 OID 21776)
-- Name: tbl_methods fk_methods_unit_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_methods
    ADD CONSTRAINT fk_methods_unit_id FOREIGN KEY (unit_id) REFERENCES tbl_units(unit_id) ON UPDATE CASCADE;


--
-- TOC entry 6604 (class 2606 OID 21781)
-- Name: tbl_physical_sample_features fk_physical_sample_features_feature_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_physical_sample_features
    ADD CONSTRAINT fk_physical_sample_features_feature_id FOREIGN KEY (feature_id) REFERENCES tbl_features(feature_id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 6603 (class 2606 OID 21786)
-- Name: tbl_physical_sample_features fk_physical_sample_features_physical_sample_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_physical_sample_features
    ADD CONSTRAINT fk_physical_sample_features_physical_sample_id FOREIGN KEY (physical_sample_id) REFERENCES tbl_physical_samples(physical_sample_id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 6547 (class 2606 OID 21791)
-- Name: tbl_physical_samples fk_physical_samples_sample_name_type_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_physical_samples
    ADD CONSTRAINT fk_physical_samples_sample_name_type_id FOREIGN KEY (alt_ref_type_id) REFERENCES tbl_alt_ref_types(alt_ref_type_id) ON UPDATE CASCADE;


--
-- TOC entry 6546 (class 2606 OID 21796)
-- Name: tbl_physical_samples fk_physical_samples_sample_type_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_physical_samples
    ADD CONSTRAINT fk_physical_samples_sample_type_id FOREIGN KEY (sample_type_id) REFERENCES tbl_sample_types(sample_type_id) ON UPDATE CASCADE;


--
-- TOC entry 6606 (class 2606 OID 21801)
-- Name: tbl_projects fk_projects_project_stage_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_projects
    ADD CONSTRAINT fk_projects_project_stage_id FOREIGN KEY (project_stage_id) REFERENCES tbl_project_stages(project_stage_id);


--
-- TOC entry 6605 (class 2606 OID 21806)
-- Name: tbl_projects fk_projects_project_type_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_projects
    ADD CONSTRAINT fk_projects_project_type_id FOREIGN KEY (project_type_id) REFERENCES tbl_project_types(project_type_id);


--
-- TOC entry 6610 (class 2606 OID 21811)
-- Name: tbl_rdb_codes fk_rdb_codes_rdb_system_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_rdb_codes
    ADD CONSTRAINT fk_rdb_codes_rdb_system_id FOREIGN KEY (rdb_system_id) REFERENCES tbl_rdb_systems(rdb_system_id);


--
-- TOC entry 6609 (class 2606 OID 21816)
-- Name: tbl_rdb fk_rdb_rdb_code_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_rdb
    ADD CONSTRAINT fk_rdb_rdb_code_id FOREIGN KEY (rdb_code_id) REFERENCES tbl_rdb_codes(rdb_code_id);


--
-- TOC entry 6612 (class 2606 OID 21821)
-- Name: tbl_rdb_systems fk_rdb_systems_biblio_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_rdb_systems
    ADD CONSTRAINT fk_rdb_systems_biblio_id FOREIGN KEY (biblio_id) REFERENCES tbl_biblio(biblio_id) ON UPDATE CASCADE;


--
-- TOC entry 6611 (class 2606 OID 21826)
-- Name: tbl_rdb_systems fk_rdb_systems_location_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_rdb_systems
    ADD CONSTRAINT fk_rdb_systems_location_id FOREIGN KEY (location_id) REFERENCES tbl_locations(location_id);


--
-- TOC entry 6608 (class 2606 OID 21831)
-- Name: tbl_rdb fk_rdb_taxon_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_rdb
    ADD CONSTRAINT fk_rdb_taxon_id FOREIGN KEY (taxon_id) REFERENCES tbl_taxa_tree_master(taxon_id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 6614 (class 2606 OID 21836)
-- Name: tbl_relative_age_refs fk_relative_age_refs_biblio_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_relative_age_refs
    ADD CONSTRAINT fk_relative_age_refs_biblio_id FOREIGN KEY (biblio_id) REFERENCES tbl_biblio(biblio_id) ON UPDATE CASCADE;


--
-- TOC entry 6613 (class 2606 OID 21841)
-- Name: tbl_relative_age_refs fk_relative_age_refs_relative_age_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_relative_age_refs
    ADD CONSTRAINT fk_relative_age_refs_relative_age_id FOREIGN KEY (relative_age_id) REFERENCES tbl_relative_ages(relative_age_id) ON UPDATE CASCADE;


--
-- TOC entry 6616 (class 2606 OID 21846)
-- Name: tbl_relative_ages fk_relative_ages_location_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_relative_ages
    ADD CONSTRAINT fk_relative_ages_location_id FOREIGN KEY (location_id) REFERENCES tbl_locations(location_id);


--
-- TOC entry 6615 (class 2606 OID 21851)
-- Name: tbl_relative_ages fk_relative_ages_relative_age_type_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_relative_ages
    ADD CONSTRAINT fk_relative_ages_relative_age_type_id FOREIGN KEY (relative_age_type_id) REFERENCES tbl_relative_age_types(relative_age_type_id);


--
-- TOC entry 6620 (class 2606 OID 21856)
-- Name: tbl_relative_dates fk_relative_dates_dating_uncertainty_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_relative_dates
    ADD CONSTRAINT fk_relative_dates_dating_uncertainty_id FOREIGN KEY (dating_uncertainty_id) REFERENCES tbl_dating_uncertainty(dating_uncertainty_id);


--
-- TOC entry 6619 (class 2606 OID 21861)
-- Name: tbl_relative_dates fk_relative_dates_method_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_relative_dates
    ADD CONSTRAINT fk_relative_dates_method_id FOREIGN KEY (method_id) REFERENCES tbl_methods(method_id);


--
-- TOC entry 6618 (class 2606 OID 21866)
-- Name: tbl_relative_dates fk_relative_dates_physical_sample_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_relative_dates
    ADD CONSTRAINT fk_relative_dates_physical_sample_id FOREIGN KEY (physical_sample_id) REFERENCES tbl_physical_samples(physical_sample_id) ON UPDATE CASCADE;


--
-- TOC entry 6617 (class 2606 OID 21871)
-- Name: tbl_relative_dates fk_relative_dates_relative_age_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_relative_dates
    ADD CONSTRAINT fk_relative_dates_relative_age_id FOREIGN KEY (relative_age_id) REFERENCES tbl_relative_ages(relative_age_id) ON UPDATE CASCADE;


--
-- TOC entry 6622 (class 2606 OID 21876)
-- Name: tbl_sample_alt_refs fk_sample_alt_refs_alt_ref_type_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_alt_refs
    ADD CONSTRAINT fk_sample_alt_refs_alt_ref_type_id FOREIGN KEY (alt_ref_type_id) REFERENCES tbl_alt_ref_types(alt_ref_type_id) ON UPDATE CASCADE;


--
-- TOC entry 6621 (class 2606 OID 21881)
-- Name: tbl_sample_alt_refs fk_sample_alt_refs_physical_sample_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_alt_refs
    ADD CONSTRAINT fk_sample_alt_refs_physical_sample_id FOREIGN KEY (physical_sample_id) REFERENCES tbl_physical_samples(physical_sample_id) ON UPDATE CASCADE;


--
-- TOC entry 6624 (class 2606 OID 21886)
-- Name: tbl_sample_colours fk_sample_colours_colour_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_colours
    ADD CONSTRAINT fk_sample_colours_colour_id FOREIGN KEY (colour_id) REFERENCES tbl_colours(colour_id) ON UPDATE CASCADE;


--
-- TOC entry 6623 (class 2606 OID 21891)
-- Name: tbl_sample_colours fk_sample_colours_physical_sample_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_colours
    ADD CONSTRAINT fk_sample_colours_physical_sample_id FOREIGN KEY (physical_sample_id) REFERENCES tbl_physical_samples(physical_sample_id) ON UPDATE CASCADE;


--
-- TOC entry 6626 (class 2606 OID 21896)
-- Name: tbl_sample_coordinates fk_sample_coordinates_coordinate_method_dimension_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_coordinates
    ADD CONSTRAINT fk_sample_coordinates_coordinate_method_dimension_id FOREIGN KEY (coordinate_method_dimension_id) REFERENCES tbl_coordinate_method_dimensions(coordinate_method_dimension_id) ON UPDATE CASCADE;


--
-- TOC entry 6625 (class 2606 OID 21901)
-- Name: tbl_sample_coordinates fk_sample_coordinates_physical_sample_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_coordinates
    ADD CONSTRAINT fk_sample_coordinates_physical_sample_id FOREIGN KEY (physical_sample_id) REFERENCES tbl_physical_samples(physical_sample_id);


--
-- TOC entry 6628 (class 2606 OID 21906)
-- Name: tbl_sample_description_sample_group_contexts fk_sample_description_sample_group_contexts_sampling_context_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_description_sample_group_contexts
    ADD CONSTRAINT fk_sample_description_sample_group_contexts_sampling_context_id FOREIGN KEY (sampling_context_id) REFERENCES tbl_sample_group_sampling_contexts(sampling_context_id);


--
-- TOC entry 6627 (class 2606 OID 21911)
-- Name: tbl_sample_description_sample_group_contexts fk_sample_description_types_sample_group_context_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_description_sample_group_contexts
    ADD CONSTRAINT fk_sample_description_types_sample_group_context_id FOREIGN KEY (sample_description_type_id) REFERENCES tbl_sample_description_types(sample_description_type_id);


--
-- TOC entry 6630 (class 2606 OID 21916)
-- Name: tbl_sample_descriptions fk_sample_descriptions_physical_sample_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_descriptions
    ADD CONSTRAINT fk_sample_descriptions_physical_sample_id FOREIGN KEY (physical_sample_id) REFERENCES tbl_physical_samples(physical_sample_id);


--
-- TOC entry 6629 (class 2606 OID 21921)
-- Name: tbl_sample_descriptions fk_sample_descriptions_sample_description_type_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_descriptions
    ADD CONSTRAINT fk_sample_descriptions_sample_description_type_id FOREIGN KEY (sample_description_type_id) REFERENCES tbl_sample_description_types(sample_description_type_id);


--
-- TOC entry 6633 (class 2606 OID 21926)
-- Name: tbl_sample_dimensions fk_sample_dimensions_dimension_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_dimensions
    ADD CONSTRAINT fk_sample_dimensions_dimension_id FOREIGN KEY (dimension_id) REFERENCES tbl_dimensions(dimension_id) ON UPDATE CASCADE;


--
-- TOC entry 6632 (class 2606 OID 21931)
-- Name: tbl_sample_dimensions fk_sample_dimensions_measurement_method_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_dimensions
    ADD CONSTRAINT fk_sample_dimensions_measurement_method_id FOREIGN KEY (method_id) REFERENCES tbl_methods(method_id) ON UPDATE CASCADE;


--
-- TOC entry 6631 (class 2606 OID 21936)
-- Name: tbl_sample_dimensions fk_sample_dimensions_physical_sample_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_dimensions
    ADD CONSTRAINT fk_sample_dimensions_physical_sample_id FOREIGN KEY (physical_sample_id) REFERENCES tbl_physical_samples(physical_sample_id) ON UPDATE CASCADE;


--
-- TOC entry 6637 (class 2606 OID 21941)
-- Name: tbl_sample_group_description_type_sampling_contexts fk_sample_group_description_type_sampling_context_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_description_type_sampling_contexts
    ADD CONSTRAINT fk_sample_group_description_type_sampling_context_id FOREIGN KEY (sample_group_description_type_id) REFERENCES tbl_sample_group_description_types(sample_group_description_type_id);


--
-- TOC entry 6639 (class 2606 OID 21946)
-- Name: tbl_sample_group_descriptions fk_sample_group_descriptions_sample_group_description_type_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_descriptions
    ADD CONSTRAINT fk_sample_group_descriptions_sample_group_description_type_id FOREIGN KEY (sample_group_description_type_id) REFERENCES tbl_sample_group_description_types(sample_group_description_type_id) ON UPDATE CASCADE;


--
-- TOC entry 6641 (class 2606 OID 21951)
-- Name: tbl_sample_group_dimensions fk_sample_group_dimensions_dimension_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_dimensions
    ADD CONSTRAINT fk_sample_group_dimensions_dimension_id FOREIGN KEY (dimension_id) REFERENCES tbl_dimensions(dimension_id) ON UPDATE CASCADE;


--
-- TOC entry 6640 (class 2606 OID 21956)
-- Name: tbl_sample_group_dimensions fk_sample_group_dimensions_sample_group_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_dimensions
    ADD CONSTRAINT fk_sample_group_dimensions_sample_group_id FOREIGN KEY (sample_group_id) REFERENCES tbl_sample_groups(sample_group_id) ON UPDATE CASCADE;


--
-- TOC entry 6643 (class 2606 OID 21961)
-- Name: tbl_sample_group_images fk_sample_group_images_image_type_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_images
    ADD CONSTRAINT fk_sample_group_images_image_type_id FOREIGN KEY (image_type_id) REFERENCES tbl_image_types(image_type_id) ON UPDATE CASCADE;


--
-- TOC entry 6642 (class 2606 OID 21966)
-- Name: tbl_sample_group_images fk_sample_group_images_sample_group_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_images
    ADD CONSTRAINT fk_sample_group_images_sample_group_id FOREIGN KEY (sample_group_id) REFERENCES tbl_sample_groups(sample_group_id);


--
-- TOC entry 6635 (class 2606 OID 21971)
-- Name: tbl_sample_group_coordinates fk_sample_group_positions_coordinate_method_dimension_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_coordinates
    ADD CONSTRAINT fk_sample_group_positions_coordinate_method_dimension_id FOREIGN KEY (coordinate_method_dimension_id) REFERENCES tbl_coordinate_method_dimensions(coordinate_method_dimension_id) ON UPDATE CASCADE;


--
-- TOC entry 6634 (class 2606 OID 21976)
-- Name: tbl_sample_group_coordinates fk_sample_group_positions_sample_group_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_coordinates
    ADD CONSTRAINT fk_sample_group_positions_sample_group_id FOREIGN KEY (sample_group_id) REFERENCES tbl_sample_groups(sample_group_id);


--
-- TOC entry 6646 (class 2606 OID 21981)
-- Name: tbl_sample_group_references fk_sample_group_references_biblio_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_references
    ADD CONSTRAINT fk_sample_group_references_biblio_id FOREIGN KEY (biblio_id) REFERENCES tbl_biblio(biblio_id) ON UPDATE CASCADE;


--
-- TOC entry 6645 (class 2606 OID 21986)
-- Name: tbl_sample_group_references fk_sample_group_references_sample_group_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_references
    ADD CONSTRAINT fk_sample_group_references_sample_group_id FOREIGN KEY (sample_group_id) REFERENCES tbl_sample_groups(sample_group_id) ON UPDATE CASCADE;


--
-- TOC entry 6649 (class 2606 OID 21991)
-- Name: tbl_sample_groups fk_sample_group_sampling_context_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_groups
    ADD CONSTRAINT fk_sample_group_sampling_context_id FOREIGN KEY (sampling_context_id) REFERENCES tbl_sample_group_sampling_contexts(sampling_context_id) ON UPDATE CASCADE;


--
-- TOC entry 6636 (class 2606 OID 21996)
-- Name: tbl_sample_group_description_type_sampling_contexts fk_sample_group_sampling_context_id0; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_description_type_sampling_contexts
    ADD CONSTRAINT fk_sample_group_sampling_context_id0 FOREIGN KEY (sampling_context_id) REFERENCES tbl_sample_group_sampling_contexts(sampling_context_id);


--
-- TOC entry 6648 (class 2606 OID 22001)
-- Name: tbl_sample_groups fk_sample_groups_method_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_groups
    ADD CONSTRAINT fk_sample_groups_method_id FOREIGN KEY (method_id) REFERENCES tbl_methods(method_id) ON UPDATE CASCADE;


--
-- TOC entry 6638 (class 2606 OID 22006)
-- Name: tbl_sample_group_descriptions fk_sample_groups_sample_group_descriptions_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_descriptions
    ADD CONSTRAINT fk_sample_groups_sample_group_descriptions_id FOREIGN KEY (sample_group_id) REFERENCES tbl_sample_groups(sample_group_id) ON UPDATE CASCADE;


--
-- TOC entry 6647 (class 2606 OID 22011)
-- Name: tbl_sample_groups fk_sample_groups_site_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_groups
    ADD CONSTRAINT fk_sample_groups_site_id FOREIGN KEY (site_id) REFERENCES tbl_sites(site_id) ON UPDATE CASCADE;


--
-- TOC entry 6651 (class 2606 OID 22016)
-- Name: tbl_sample_horizons fk_sample_horizons_horizon_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_horizons
    ADD CONSTRAINT fk_sample_horizons_horizon_id FOREIGN KEY (horizon_id) REFERENCES tbl_horizons(horizon_id) ON UPDATE CASCADE;


--
-- TOC entry 6650 (class 2606 OID 22021)
-- Name: tbl_sample_horizons fk_sample_horizons_physical_sample_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_horizons
    ADD CONSTRAINT fk_sample_horizons_physical_sample_id FOREIGN KEY (physical_sample_id) REFERENCES tbl_physical_samples(physical_sample_id) ON UPDATE CASCADE;


--
-- TOC entry 6653 (class 2606 OID 22026)
-- Name: tbl_sample_images fk_sample_images_image_type_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_images
    ADD CONSTRAINT fk_sample_images_image_type_id FOREIGN KEY (image_type_id) REFERENCES tbl_image_types(image_type_id) ON UPDATE CASCADE;


--
-- TOC entry 6652 (class 2606 OID 22031)
-- Name: tbl_sample_images fk_sample_images_physical_sample_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_images
    ADD CONSTRAINT fk_sample_images_physical_sample_id FOREIGN KEY (physical_sample_id) REFERENCES tbl_physical_samples(physical_sample_id) ON UPDATE CASCADE;


--
-- TOC entry 6655 (class 2606 OID 22036)
-- Name: tbl_sample_location_type_sampling_contexts fk_sample_location_sampling_contexts_sampling_context_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_location_type_sampling_contexts
    ADD CONSTRAINT fk_sample_location_sampling_contexts_sampling_context_id FOREIGN KEY (sample_location_type_id) REFERENCES tbl_sample_location_types(sample_location_type_id);


--
-- TOC entry 6654 (class 2606 OID 22041)
-- Name: tbl_sample_location_type_sampling_contexts fk_sample_location_type_sampling_context_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_location_type_sampling_contexts
    ADD CONSTRAINT fk_sample_location_type_sampling_context_id FOREIGN KEY (sampling_context_id) REFERENCES tbl_sample_group_sampling_contexts(sampling_context_id);


--
-- TOC entry 6657 (class 2606 OID 22046)
-- Name: tbl_sample_locations fk_sample_locations_physical_sample_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_locations
    ADD CONSTRAINT fk_sample_locations_physical_sample_id FOREIGN KEY (physical_sample_id) REFERENCES tbl_physical_samples(physical_sample_id);


--
-- TOC entry 6656 (class 2606 OID 22051)
-- Name: tbl_sample_locations fk_sample_locations_sample_location_type_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_locations
    ADD CONSTRAINT fk_sample_locations_sample_location_type_id FOREIGN KEY (sample_location_type_id) REFERENCES tbl_sample_location_types(sample_location_type_id);


--
-- TOC entry 6658 (class 2606 OID 22056)
-- Name: tbl_sample_notes fk_sample_notes_physical_sample_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_notes
    ADD CONSTRAINT fk_sample_notes_physical_sample_id FOREIGN KEY (physical_sample_id) REFERENCES tbl_physical_samples(physical_sample_id) ON UPDATE CASCADE;


--
-- TOC entry 6545 (class 2606 OID 22061)
-- Name: tbl_physical_samples fk_samples_sample_group_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_physical_samples
    ADD CONSTRAINT fk_samples_sample_group_id FOREIGN KEY (sample_group_id) REFERENCES tbl_sample_groups(sample_group_id) ON UPDATE CASCADE;


--
-- TOC entry 6659 (class 2606 OID 22066)
-- Name: tbl_seasons fk_seasons_season_type_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_seasons
    ADD CONSTRAINT fk_seasons_season_type_id FOREIGN KEY (season_type_id) REFERENCES tbl_season_types(season_type_id) ON UPDATE CASCADE;


--
-- TOC entry 6662 (class 2606 OID 22071)
-- Name: tbl_site_images fk_site_images_contact_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_site_images
    ADD CONSTRAINT fk_site_images_contact_id FOREIGN KEY (contact_id) REFERENCES tbl_contacts(contact_id) ON UPDATE CASCADE;


--
-- TOC entry 6661 (class 2606 OID 22076)
-- Name: tbl_site_images fk_site_images_image_type_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_site_images
    ADD CONSTRAINT fk_site_images_image_type_id FOREIGN KEY (image_type_id) REFERENCES tbl_image_types(image_type_id) ON UPDATE CASCADE;


--
-- TOC entry 6660 (class 2606 OID 22081)
-- Name: tbl_site_images fk_site_images_site_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_site_images
    ADD CONSTRAINT fk_site_images_site_id FOREIGN KEY (site_id) REFERENCES tbl_sites(site_id);


--
-- TOC entry 6666 (class 2606 OID 22086)
-- Name: tbl_site_natgridrefs fk_site_natgridrefs_method_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_site_natgridrefs
    ADD CONSTRAINT fk_site_natgridrefs_method_id FOREIGN KEY (method_id) REFERENCES tbl_methods(method_id);


--
-- TOC entry 6665 (class 2606 OID 22091)
-- Name: tbl_site_natgridrefs fk_site_natgridrefs_sites_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_site_natgridrefs
    ADD CONSTRAINT fk_site_natgridrefs_sites_id FOREIGN KEY (site_id) REFERENCES tbl_sites(site_id);


--
-- TOC entry 6669 (class 2606 OID 22096)
-- Name: tbl_site_other_records fk_site_other_records_biblio_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_site_other_records
    ADD CONSTRAINT fk_site_other_records_biblio_id FOREIGN KEY (biblio_id) REFERENCES tbl_biblio(biblio_id) ON UPDATE CASCADE;


--
-- TOC entry 6668 (class 2606 OID 22101)
-- Name: tbl_site_other_records fk_site_other_records_record_type_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_site_other_records
    ADD CONSTRAINT fk_site_other_records_record_type_id FOREIGN KEY (record_type_id) REFERENCES tbl_record_types(record_type_id) ON UPDATE CASCADE;


--
-- TOC entry 6667 (class 2606 OID 22106)
-- Name: tbl_site_other_records fk_site_other_records_site_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_site_other_records
    ADD CONSTRAINT fk_site_other_records_site_id FOREIGN KEY (site_id) REFERENCES tbl_sites(site_id) ON UPDATE CASCADE;


--
-- TOC entry 6670 (class 2606 OID 22111)
-- Name: tbl_site_preservation_status fk_site_preservation_status_site_id ; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_site_preservation_status
    ADD CONSTRAINT "fk_site_preservation_status_site_id " FOREIGN KEY (site_id) REFERENCES tbl_sites(site_id) ON UPDATE CASCADE;


--
-- TOC entry 6672 (class 2606 OID 22116)
-- Name: tbl_site_references fk_site_references_biblio_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_site_references
    ADD CONSTRAINT fk_site_references_biblio_id FOREIGN KEY (biblio_id) REFERENCES tbl_biblio(biblio_id) ON UPDATE CASCADE;


--
-- TOC entry 6671 (class 2606 OID 22121)
-- Name: tbl_site_references fk_site_references_site_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_site_references
    ADD CONSTRAINT fk_site_references_site_id FOREIGN KEY (site_id) REFERENCES tbl_sites(site_id) ON UPDATE CASCADE;


--
-- TOC entry 6676 (class 2606 OID 22126)
-- Name: tbl_species_associations fk_species_associations_associated_taxon_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_species_associations
    ADD CONSTRAINT fk_species_associations_associated_taxon_id FOREIGN KEY (taxon_id) REFERENCES tbl_taxa_tree_master(taxon_id) ON UPDATE CASCADE;


--
-- TOC entry 6675 (class 2606 OID 22131)
-- Name: tbl_species_associations fk_species_associations_association_type_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_species_associations
    ADD CONSTRAINT fk_species_associations_association_type_id FOREIGN KEY (association_type_id) REFERENCES tbl_species_association_types(association_type_id);


--
-- TOC entry 6674 (class 2606 OID 22136)
-- Name: tbl_species_associations fk_species_associations_biblio_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_species_associations
    ADD CONSTRAINT fk_species_associations_biblio_id FOREIGN KEY (biblio_id) REFERENCES tbl_biblio(biblio_id) ON UPDATE CASCADE;


--
-- TOC entry 6673 (class 2606 OID 22141)
-- Name: tbl_species_associations fk_species_associations_taxon_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_species_associations
    ADD CONSTRAINT fk_species_associations_taxon_id FOREIGN KEY (taxon_id) REFERENCES tbl_taxa_tree_master(taxon_id);


--
-- TOC entry 6678 (class 2606 OID 22146)
-- Name: tbl_taxa_common_names fk_taxa_common_names_language_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_common_names
    ADD CONSTRAINT fk_taxa_common_names_language_id FOREIGN KEY (language_id) REFERENCES tbl_languages(language_id) ON UPDATE CASCADE;


--
-- TOC entry 6677 (class 2606 OID 22151)
-- Name: tbl_taxa_common_names fk_taxa_common_names_taxon_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_common_names
    ADD CONSTRAINT fk_taxa_common_names_taxon_id FOREIGN KEY (taxon_id) REFERENCES tbl_taxa_tree_master(taxon_id) ON UPDATE CASCADE;


--
-- TOC entry 6709 (class 2606 OID 22156)
-- Name: tbl_taxa_images fk_taxa_images_image_type_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_images
    ADD CONSTRAINT fk_taxa_images_image_type_id FOREIGN KEY (image_type_id) REFERENCES tbl_image_types(image_type_id);


--
-- TOC entry 6708 (class 2606 OID 22161)
-- Name: tbl_taxa_images fk_taxa_images_taxa_tree_master_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_images
    ADD CONSTRAINT fk_taxa_images_taxa_tree_master_id FOREIGN KEY (taxon_id) REFERENCES tbl_taxa_tree_master(taxon_id);


--
-- TOC entry 6679 (class 2606 OID 22166)
-- Name: tbl_taxa_measured_attributes fk_taxa_measured_attributes_taxon_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_measured_attributes
    ADD CONSTRAINT fk_taxa_measured_attributes_taxon_id FOREIGN KEY (taxon_id) REFERENCES tbl_taxa_tree_master(taxon_id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 6711 (class 2606 OID 22171)
-- Name: tbl_taxa_reference_specimens fk_taxa_reference_specimens_contact_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_reference_specimens
    ADD CONSTRAINT fk_taxa_reference_specimens_contact_id FOREIGN KEY (contact_id) REFERENCES tbl_contacts(contact_id);


--
-- TOC entry 6710 (class 2606 OID 22176)
-- Name: tbl_taxa_reference_specimens fk_taxa_reference_specimens_taxon_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_reference_specimens
    ADD CONSTRAINT fk_taxa_reference_specimens_taxon_id FOREIGN KEY (taxon_id) REFERENCES tbl_taxa_tree_master(taxon_id);


--
-- TOC entry 6683 (class 2606 OID 22181)
-- Name: tbl_taxa_seasonality fk_taxa_seasonality_activity_type_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_seasonality
    ADD CONSTRAINT fk_taxa_seasonality_activity_type_id FOREIGN KEY (activity_type_id) REFERENCES tbl_activity_types(activity_type_id) ON UPDATE CASCADE;


--
-- TOC entry 6682 (class 2606 OID 22186)
-- Name: tbl_taxa_seasonality fk_taxa_seasonality_location_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_seasonality
    ADD CONSTRAINT fk_taxa_seasonality_location_id FOREIGN KEY (location_id) REFERENCES tbl_locations(location_id);


--
-- TOC entry 6681 (class 2606 OID 22191)
-- Name: tbl_taxa_seasonality fk_taxa_seasonality_season_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_seasonality
    ADD CONSTRAINT fk_taxa_seasonality_season_id FOREIGN KEY (season_id) REFERENCES tbl_seasons(season_id) ON UPDATE CASCADE;


--
-- TOC entry 6680 (class 2606 OID 22196)
-- Name: tbl_taxa_seasonality fk_taxa_seasonality_taxon_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_seasonality
    ADD CONSTRAINT fk_taxa_seasonality_taxon_id FOREIGN KEY (taxon_id) REFERENCES tbl_taxa_tree_master(taxon_id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 6688 (class 2606 OID 22201)
-- Name: tbl_taxa_synonyms fk_taxa_synonyms_biblio_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_synonyms
    ADD CONSTRAINT fk_taxa_synonyms_biblio_id FOREIGN KEY (biblio_id) REFERENCES tbl_biblio(biblio_id) ON UPDATE CASCADE;


--
-- TOC entry 6687 (class 2606 OID 22206)
-- Name: tbl_taxa_synonyms fk_taxa_synonyms_family_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_synonyms
    ADD CONSTRAINT fk_taxa_synonyms_family_id FOREIGN KEY (family_id) REFERENCES tbl_taxa_tree_families(family_id) ON UPDATE CASCADE;


--
-- TOC entry 6686 (class 2606 OID 22211)
-- Name: tbl_taxa_synonyms fk_taxa_synonyms_genus_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_synonyms
    ADD CONSTRAINT fk_taxa_synonyms_genus_id FOREIGN KEY (genus_id) REFERENCES tbl_taxa_tree_genera(genus_id) ON UPDATE CASCADE;


--
-- TOC entry 6685 (class 2606 OID 22216)
-- Name: tbl_taxa_synonyms fk_taxa_synonyms_taxa_tree_author_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_synonyms
    ADD CONSTRAINT fk_taxa_synonyms_taxa_tree_author_id FOREIGN KEY (author_id) REFERENCES tbl_taxa_tree_authors(author_id);


--
-- TOC entry 6684 (class 2606 OID 22221)
-- Name: tbl_taxa_synonyms fk_taxa_synonyms_taxon_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_synonyms
    ADD CONSTRAINT fk_taxa_synonyms_taxon_id FOREIGN KEY (taxon_id) REFERENCES tbl_taxa_tree_master(taxon_id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 6689 (class 2606 OID 22226)
-- Name: tbl_taxa_tree_families fk_taxa_tree_families_order_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_tree_families
    ADD CONSTRAINT fk_taxa_tree_families_order_id FOREIGN KEY (order_id) REFERENCES tbl_taxa_tree_orders(order_id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 6548 (class 2606 OID 22231)
-- Name: tbl_taxa_tree_genera fk_taxa_tree_genera_family_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_tree_genera
    ADD CONSTRAINT fk_taxa_tree_genera_family_id FOREIGN KEY (family_id) REFERENCES tbl_taxa_tree_families(family_id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 6550 (class 2606 OID 22236)
-- Name: tbl_taxa_tree_master fk_taxa_tree_master_author_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_tree_master
    ADD CONSTRAINT fk_taxa_tree_master_author_id FOREIGN KEY (author_id) REFERENCES tbl_taxa_tree_authors(author_id) ON UPDATE CASCADE;


--
-- TOC entry 6549 (class 2606 OID 22241)
-- Name: tbl_taxa_tree_master fk_taxa_tree_master_genus_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_tree_master
    ADD CONSTRAINT fk_taxa_tree_master_genus_id FOREIGN KEY (genus_id) REFERENCES tbl_taxa_tree_genera(genus_id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 6690 (class 2606 OID 22246)
-- Name: tbl_taxa_tree_orders fk_taxa_tree_orders_record_type_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxa_tree_orders
    ADD CONSTRAINT fk_taxa_tree_orders_record_type_id FOREIGN KEY (record_type_id) REFERENCES tbl_record_types(record_type_id) ON UPDATE CASCADE;


--
-- TOC entry 6694 (class 2606 OID 22251)
-- Name: tbl_taxonomic_order_biblio fk_taxonomic_order_biblio_biblio_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxonomic_order_biblio
    ADD CONSTRAINT fk_taxonomic_order_biblio_biblio_id FOREIGN KEY (biblio_id) REFERENCES tbl_biblio(biblio_id) ON UPDATE CASCADE;


--
-- TOC entry 6693 (class 2606 OID 22256)
-- Name: tbl_taxonomic_order_biblio fk_taxonomic_order_biblio_taxonomic_order_system_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxonomic_order_biblio
    ADD CONSTRAINT fk_taxonomic_order_biblio_taxonomic_order_system_id FOREIGN KEY (taxonomic_order_system_id) REFERENCES tbl_taxonomic_order_systems(taxonomic_order_system_id) ON UPDATE CASCADE;


--
-- TOC entry 6692 (class 2606 OID 22261)
-- Name: tbl_taxonomic_order fk_taxonomic_order_taxon_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxonomic_order
    ADD CONSTRAINT fk_taxonomic_order_taxon_id FOREIGN KEY (taxon_id) REFERENCES tbl_taxa_tree_master(taxon_id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 6691 (class 2606 OID 22266)
-- Name: tbl_taxonomic_order fk_taxonomic_order_taxonomic_order_system_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxonomic_order
    ADD CONSTRAINT fk_taxonomic_order_taxonomic_order_system_id FOREIGN KEY (taxonomic_order_system_id) REFERENCES tbl_taxonomic_order_systems(taxonomic_order_system_id) ON UPDATE CASCADE;


--
-- TOC entry 6696 (class 2606 OID 22271)
-- Name: tbl_taxonomy_notes fk_taxonomy_notes_biblio_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxonomy_notes
    ADD CONSTRAINT fk_taxonomy_notes_biblio_id FOREIGN KEY (biblio_id) REFERENCES tbl_biblio(biblio_id) ON UPDATE CASCADE;


--
-- TOC entry 6695 (class 2606 OID 22276)
-- Name: tbl_taxonomy_notes fk_taxonomy_notes_taxon_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_taxonomy_notes
    ADD CONSTRAINT fk_taxonomy_notes_taxon_id FOREIGN KEY (taxon_id) REFERENCES tbl_taxa_tree_master(taxon_id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 6607 (class 2606 OID 22281)
-- Name: tbl_rdb fk_tbl_rdb_tbl_location_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_rdb
    ADD CONSTRAINT fk_tbl_rdb_tbl_location_id FOREIGN KEY (location_id) REFERENCES tbl_locations(location_id);


--
-- TOC entry 6644 (class 2606 OID 22286)
-- Name: tbl_sample_group_notes fk_tbl_sample_group_notes_sample_groups; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_sample_group_notes
    ADD CONSTRAINT fk_tbl_sample_group_notes_sample_groups FOREIGN KEY (sample_group_id) REFERENCES tbl_sample_groups(sample_group_id) ON UPDATE CASCADE;


--
-- TOC entry 6699 (class 2606 OID 22291)
-- Name: tbl_tephra_dates fk_tephra_dates_analysis_entity_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_tephra_dates
    ADD CONSTRAINT fk_tephra_dates_analysis_entity_id FOREIGN KEY (analysis_entity_id) REFERENCES tbl_analysis_entities(analysis_entity_id) ON UPDATE CASCADE;


--
-- TOC entry 6698 (class 2606 OID 22296)
-- Name: tbl_tephra_dates fk_tephra_dates_dating_uncertainty_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_tephra_dates
    ADD CONSTRAINT fk_tephra_dates_dating_uncertainty_id FOREIGN KEY (dating_uncertainty_id) REFERENCES tbl_dating_uncertainty(dating_uncertainty_id);


--
-- TOC entry 6697 (class 2606 OID 22301)
-- Name: tbl_tephra_dates fk_tephra_dates_tephra_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_tephra_dates
    ADD CONSTRAINT fk_tephra_dates_tephra_id FOREIGN KEY (tephra_id) REFERENCES tbl_tephras(tephra_id) ON UPDATE CASCADE;


--
-- TOC entry 6701 (class 2606 OID 22306)
-- Name: tbl_tephra_refs fk_tephra_refs_biblio_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_tephra_refs
    ADD CONSTRAINT fk_tephra_refs_biblio_id FOREIGN KEY (biblio_id) REFERENCES tbl_biblio(biblio_id) ON UPDATE CASCADE;


--
-- TOC entry 6700 (class 2606 OID 22311)
-- Name: tbl_tephra_refs fk_tephra_refs_tephra_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_tephra_refs
    ADD CONSTRAINT fk_tephra_refs_tephra_id FOREIGN KEY (tephra_id) REFERENCES tbl_tephras(tephra_id) ON UPDATE CASCADE;


--
-- TOC entry 6703 (class 2606 OID 22316)
-- Name: tbl_text_biology fk_text_biology_biblio_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_text_biology
    ADD CONSTRAINT fk_text_biology_biblio_id FOREIGN KEY (biblio_id) REFERENCES tbl_biblio(biblio_id) ON UPDATE CASCADE;


--
-- TOC entry 6702 (class 2606 OID 22321)
-- Name: tbl_text_biology fk_text_biology_taxon_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_text_biology
    ADD CONSTRAINT fk_text_biology_taxon_id FOREIGN KEY (taxon_id) REFERENCES tbl_taxa_tree_master(taxon_id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 6705 (class 2606 OID 22326)
-- Name: tbl_text_distribution fk_text_distribution_biblio_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_text_distribution
    ADD CONSTRAINT fk_text_distribution_biblio_id FOREIGN KEY (biblio_id) REFERENCES tbl_biblio(biblio_id) ON UPDATE CASCADE;


--
-- TOC entry 6704 (class 2606 OID 22331)
-- Name: tbl_text_distribution fk_text_distribution_taxon_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_text_distribution
    ADD CONSTRAINT fk_text_distribution_taxon_id FOREIGN KEY (taxon_id) REFERENCES tbl_taxa_tree_master(taxon_id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 6707 (class 2606 OID 22336)
-- Name: tbl_text_identification_keys fk_text_identification_keys_biblio_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_text_identification_keys
    ADD CONSTRAINT fk_text_identification_keys_biblio_id FOREIGN KEY (biblio_id) REFERENCES tbl_biblio(biblio_id) ON UPDATE CASCADE;


--
-- TOC entry 6706 (class 2606 OID 22341)
-- Name: tbl_text_identification_keys fk_text_identification_keys_taxon_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY tbl_text_identification_keys
    ADD CONSTRAINT fk_text_identification_keys_taxon_id FOREIGN KEY (taxon_id) REFERENCES tbl_taxa_tree_master(taxon_id) ON UPDATE CASCADE ON DELETE CASCADE;


-- Completed on 2017-10-13 21:36:25

--
-- PostgreSQL database dump complete
--

