<?php
namespace Gacela;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-10-18 at 09:02:25.
 */
class CriteriaTest extends \Test\GUnit\TestCase
{
    /**
     * @var Criteria
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Criteria;
    }

    /**
     * @covers Gacela\Criteria::criteria
     * @todo   Implement testCriteria().
     */
    public function testCriteria()
    {
		$criteria = clone $this->object;

		$criteria->isNull('test2');

		$this->object->criteria($criteria);

		$this->assertAttributeSame(array(array($criteria, null, null, false)), '_criteria', $this->object);
    }

    /**
     * @covers Gacela\Criteria::equals
     */
    public function testEquals()
    {
		$this->object->equals('test', 'test');

        $this->assertAttributeSame(array(array('equals', 'test', 'test')), '_criteria', $this->object);
    }

    /**
     * @covers Gacela\Criteria::getIterator
     */
    public function testGetIterator()
    {
		$this->assertInstanceOf('\ArrayObject', $this->object->getIterator());
    }

    /**
     * @covers Gacela\Criteria::greaterThan
     */
    public function testGreaterThan()
    {
		$this->object->greaterThan('test', 53);

		$this->assertAttributeSame(array(array('greaterThan', 'test', 53)), '_criteria', $this->object);
    }

    /**
     * @covers Gacela\Criteria::in
     */
    public function testIn()
    {
		$arr = array(1,2,3);

		$this->object->in('test', $arr);

        $this->assertAttributeSame(array(array('in', 'test', $arr)), '_criteria', $this->object);
    }

    /**
     * @covers Gacela\Criteria::isNull
     */
    public function testIsNull()
    {
        $this->object->isNull('test');

		$this->assertAttributeSame(array(array('null', 'test', false)), '_criteria', $this->object);
    }

    /**
     * @covers Gacela\Criteria::isNotNull
     */
    public function testIsNotNull()
    {
		$this->object->isNotNull('test');

		$this->assertAttributeSame(array(array('notNull', 'test')), '_criteria', $this->object);
    }

    /**
     * @covers Gacela\Criteria::lessThan
     */
    public function testLessThan()
    {
		$this->object->lessThan('test', 53);

		$this->assertAttributeSame(array(array('lessThan', 'test', 53)), '_criteria', $this->object);
    }

    /**
     * @covers Gacela\Criteria::like
     */
    public function testLike()
    {
		$this->object->like('test', 'Harry');

		$this->assertAttributeSame(array(array('like', 'test', 'Harry')), '_criteria', $this->object);
    }

    /**
     * @covers Gacela\Criteria::limit
     */
    public function testLimit()
    {
		$this->object->limit(0,50);

		$this->assertAttributeSame(array(array('limit', 0, 50)), '_criteria', $this->object);
    }

    /**
     * @covers Gacela\Criteria::notEquals
     */
    public function testNotEquals()
    {
		$this->object->notEquals('test', 'test');

		$this->assertAttributeSame(array(array('notEquals', 'test', 'test')), '_criteria', $this->object);
    }

    /**
     * @covers Gacela\Criteria::notIn
     */
    public function testNotIn()
    {
		$arr = array(1,2,3);

		$this->object->notIn('test', $arr);

		$this->assertAttributeSame(array(array('notIn', 'test', $arr)), '_criteria', $this->object);
    }

    /**
     * @covers Gacela\Criteria::notLike
     */
    public function testNotLike()
    {
		$this->object->notLike('test', 'Harry');

		$this->assertAttributeSame(array(array('notLike', 'test', 'Harry')), '_criteria', $this->object);
    }

    /**
     * @covers Gacela\Criteria::sort
     * @todo   Implement testSort().
     */
    public function testSort()
    {
		$this->object->sort('test', 'asc');

		$this->assertAttributeSame(array(array('sort', 'test', 'asc')), '_criteria', $this->object);
    }
}
